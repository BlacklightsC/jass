module.exports = {
  "ConvertRace": {
    "original": "constant native ConvertRace takes integer i returns race",
    "name": "ConvertRace",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "race",
    "insertText": "ConvertRace(i)",
    "documentation": ""
  },
  "ConvertAllianceType": {
    "original": "constant native ConvertAllianceType takes integer i returns alliancetype",
    "name": "ConvertAllianceType",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "alliancetype",
    "insertText": "ConvertAllianceType(i)",
    "documentation": ""
  },
  "ConvertRacePref": {
    "original": "constant native ConvertRacePref takes integer i returns racepreference",
    "name": "ConvertRacePref",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "racepreference",
    "insertText": "ConvertRacePref(i)",
    "documentation": ""
  },
  "ConvertIGameState": {
    "original": "constant native ConvertIGameState takes integer i returns igamestate",
    "name": "ConvertIGameState",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "igamestate",
    "insertText": "ConvertIGameState(i)",
    "documentation": ""
  },
  "ConvertFGameState": {
    "original": "constant native ConvertFGameState takes integer i returns fgamestate",
    "name": "ConvertFGameState",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "fgamestate",
    "insertText": "ConvertFGameState(i)",
    "documentation": ""
  },
  "ConvertPlayerState": {
    "original": "constant native ConvertPlayerState takes integer i returns playerstate",
    "name": "ConvertPlayerState",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "playerstate",
    "insertText": "ConvertPlayerState(i)",
    "documentation": ""
  },
  "ConvertPlayerScore": {
    "original": "constant native ConvertPlayerScore takes integer i returns playerscore",
    "name": "ConvertPlayerScore",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "playerscore",
    "insertText": "ConvertPlayerScore(i)",
    "documentation": ""
  },
  "ConvertPlayerGameResult": {
    "original": "constant native ConvertPlayerGameResult takes integer i returns playergameresult",
    "name": "ConvertPlayerGameResult",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "playergameresult",
    "insertText": "ConvertPlayerGameResult(i)",
    "documentation": ""
  },
  "ConvertUnitState": {
    "original": "constant native ConvertUnitState takes integer i returns unitstate",
    "name": "ConvertUnitState",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "unitstate",
    "insertText": "ConvertUnitState(i)",
    "documentation": ""
  },
  "ConvertAIDifficulty": {
    "original": "constant native ConvertAIDifficulty takes integer i returns aidifficulty",
    "name": "ConvertAIDifficulty",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "aidifficulty",
    "insertText": "ConvertAIDifficulty(i)",
    "documentation": ""
  },
  "ConvertGameEvent": {
    "original": "constant native ConvertGameEvent takes integer i returns gameevent",
    "name": "ConvertGameEvent",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "gameevent",
    "insertText": "ConvertGameEvent(i)",
    "documentation": ""
  },
  "ConvertPlayerEvent": {
    "original": "constant native ConvertPlayerEvent takes integer i returns playerevent",
    "name": "ConvertPlayerEvent",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "playerevent",
    "insertText": "ConvertPlayerEvent(i)",
    "documentation": ""
  },
  "ConvertPlayerUnitEvent": {
    "original": "constant native ConvertPlayerUnitEvent takes integer i returns playerunitevent",
    "name": "ConvertPlayerUnitEvent",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "playerunitevent",
    "insertText": "ConvertPlayerUnitEvent(i)",
    "documentation": ""
  },
  "ConvertWidgetEvent": {
    "original": "constant native ConvertWidgetEvent takes integer i returns widgetevent",
    "name": "ConvertWidgetEvent",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "widgetevent",
    "insertText": "ConvertWidgetEvent(i)",
    "documentation": ""
  },
  "ConvertDialogEvent": {
    "original": "constant native ConvertDialogEvent takes integer i returns dialogevent",
    "name": "ConvertDialogEvent",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "dialogevent",
    "insertText": "ConvertDialogEvent(i)",
    "documentation": ""
  },
  "ConvertUnitEvent": {
    "original": "constant native ConvertUnitEvent takes integer i returns unitevent",
    "name": "ConvertUnitEvent",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "unitevent",
    "insertText": "ConvertUnitEvent(i)",
    "documentation": ""
  },
  "ConvertLimitOp": {
    "original": "constant native ConvertLimitOp takes integer i returns limitop",
    "name": "ConvertLimitOp",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "limitop",
    "insertText": "ConvertLimitOp(i)",
    "documentation": ""
  },
  "ConvertUnitType": {
    "original": "constant native ConvertUnitType takes integer i returns unittype",
    "name": "ConvertUnitType",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "unittype",
    "insertText": "ConvertUnitType(i)",
    "documentation": ""
  },
  "ConvertGameSpeed": {
    "original": "constant native ConvertGameSpeed takes integer i returns gamespeed",
    "name": "ConvertGameSpeed",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "gamespeed",
    "insertText": "ConvertGameSpeed(i)",
    "documentation": ""
  },
  "ConvertPlacement": {
    "original": "constant native ConvertPlacement takes integer i returns placement",
    "name": "ConvertPlacement",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "placement",
    "insertText": "ConvertPlacement(i)",
    "documentation": ""
  },
  "ConvertStartLocPrio": {
    "original": "constant native ConvertStartLocPrio takes integer i returns startlocprio",
    "name": "ConvertStartLocPrio",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "startlocprio",
    "insertText": "ConvertStartLocPrio(i)",
    "documentation": ""
  },
  "ConvertGameDifficulty": {
    "original": "constant native ConvertGameDifficulty takes integer i returns gamedifficulty",
    "name": "ConvertGameDifficulty",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "gamedifficulty",
    "insertText": "ConvertGameDifficulty(i)",
    "documentation": ""
  },
  "ConvertGameType": {
    "original": "constant native ConvertGameType takes integer i returns gametype",
    "name": "ConvertGameType",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "gametype",
    "insertText": "ConvertGameType(i)",
    "documentation": ""
  },
  "ConvertMapFlag": {
    "original": "constant native ConvertMapFlag takes integer i returns mapflag",
    "name": "ConvertMapFlag",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "mapflag",
    "insertText": "ConvertMapFlag(i)",
    "documentation": ""
  },
  "ConvertMapVisibility": {
    "original": "constant native ConvertMapVisibility takes integer i returns mapvisibility",
    "name": "ConvertMapVisibility",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "mapvisibility",
    "insertText": "ConvertMapVisibility(i)",
    "documentation": ""
  },
  "ConvertMapSetting": {
    "original": "constant native ConvertMapSetting takes integer i returns mapsetting",
    "name": "ConvertMapSetting",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "mapsetting",
    "insertText": "ConvertMapSetting(i)",
    "documentation": ""
  },
  "ConvertMapDensity": {
    "original": "constant native ConvertMapDensity takes integer i returns mapdensity",
    "name": "ConvertMapDensity",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "mapdensity",
    "insertText": "ConvertMapDensity(i)",
    "documentation": ""
  },
  "ConvertMapControl": {
    "original": "constant native ConvertMapControl takes integer i returns mapcontrol",
    "name": "ConvertMapControl",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "mapcontrol",
    "insertText": "ConvertMapControl(i)",
    "documentation": ""
  },
  "ConvertPlayerColor": {
    "original": "constant native ConvertPlayerColor takes integer i returns playercolor",
    "name": "ConvertPlayerColor",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "playercolor",
    "insertText": "ConvertPlayerColor(i)",
    "documentation": ""
  },
  "ConvertPlayerSlotState": {
    "original": "constant native ConvertPlayerSlotState takes integer i returns playerslotstate",
    "name": "ConvertPlayerSlotState",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "playerslotstate",
    "insertText": "ConvertPlayerSlotState(i)",
    "documentation": ""
  },
  "ConvertVolumeGroup": {
    "original": "constant native ConvertVolumeGroup takes integer i returns volumegroup",
    "name": "ConvertVolumeGroup",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "volumegroup",
    "insertText": "ConvertVolumeGroup(i)",
    "documentation": ""
  },
  "ConvertCameraField": {
    "original": "constant native ConvertCameraField takes integer i returns camerafield",
    "name": "ConvertCameraField",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "camerafield",
    "insertText": "ConvertCameraField(i)",
    "documentation": ""
  },
  "ConvertBlendMode": {
    "original": "constant native ConvertBlendMode takes integer i returns blendmode",
    "name": "ConvertBlendMode",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "blendmode",
    "insertText": "ConvertBlendMode(i)",
    "documentation": ""
  },
  "ConvertRarityControl": {
    "original": "constant native ConvertRarityControl takes integer i returns raritycontrol",
    "name": "ConvertRarityControl",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "raritycontrol",
    "insertText": "ConvertRarityControl(i)",
    "documentation": ""
  },
  "ConvertTexMapFlags": {
    "original": "constant native ConvertTexMapFlags takes integer i returns texmapflags",
    "name": "ConvertTexMapFlags",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "texmapflags",
    "insertText": "ConvertTexMapFlags(i)",
    "documentation": ""
  },
  "ConvertFogState": {
    "original": "constant native ConvertFogState takes integer i returns fogstate",
    "name": "ConvertFogState",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "fogstate",
    "insertText": "ConvertFogState(i)",
    "documentation": ""
  },
  "ConvertEffectType": {
    "original": "constant native ConvertEffectType takes integer i returns effecttype",
    "name": "ConvertEffectType",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "effecttype",
    "insertText": "ConvertEffectType(i)",
    "documentation": ""
  },
  "ConvertVersion": {
    "original": "constant native ConvertVersion takes integer i returns version",
    "name": "ConvertVersion",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "version",
    "insertText": "ConvertVersion(i)",
    "documentation": ""
  },
  "ConvertItemType": {
    "original": "constant native ConvertItemType takes integer i returns itemtype",
    "name": "ConvertItemType",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "itemtype",
    "insertText": "ConvertItemType(i)",
    "documentation": ""
  },
  "ConvertAttackType": {
    "original": "constant native ConvertAttackType takes integer i returns attacktype",
    "name": "ConvertAttackType",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "attacktype",
    "insertText": "ConvertAttackType(i)",
    "documentation": ""
  },
  "ConvertDamageType": {
    "original": "constant native ConvertDamageType takes integer i returns damagetype",
    "name": "ConvertDamageType",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "damagetype",
    "insertText": "ConvertDamageType(i)",
    "documentation": ""
  },
  "ConvertWeaponType": {
    "original": "constant native ConvertWeaponType takes integer i returns weapontype",
    "name": "ConvertWeaponType",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "weapontype",
    "insertText": "ConvertWeaponType(i)",
    "documentation": ""
  },
  "ConvertSoundType": {
    "original": "constant native ConvertSoundType takes integer i returns soundtype",
    "name": "ConvertSoundType",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "soundtype",
    "insertText": "ConvertSoundType(i)",
    "documentation": ""
  },
  "ConvertPathingType": {
    "original": "constant native ConvertPathingType takes integer i returns pathingtype",
    "name": "ConvertPathingType",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "pathingtype",
    "insertText": "ConvertPathingType(i)",
    "documentation": ""
  },
  "ConvertMouseButtonType": {
    "original": "constant native ConvertMouseButtonType takes integer i returns mousebuttontype",
    "name": "ConvertMouseButtonType",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "mousebuttontype",
    "insertText": "ConvertMouseButtonType(i)",
    "documentation": ""
  },
  "OrderId": {
    "original": "constant native OrderId takes string orderIdString returns integer",
    "name": "OrderId",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "orderIdString",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "OrderId(orderIdString)",
    "documentation": ""
  },
  "OrderId2String": {
    "original": "constant native OrderId2String takes integer orderId returns string",
    "name": "OrderId2String",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "orderId",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "OrderId2String(orderId)",
    "documentation": ""
  },
  "UnitId": {
    "original": "constant native UnitId takes string unitIdString returns integer",
    "name": "UnitId",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "unitIdString",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "UnitId(unitIdString)",
    "documentation": ""
  },
  "UnitId2String": {
    "original": "constant native UnitId2String takes integer unitId returns string",
    "name": "UnitId2String",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "unitId",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "UnitId2String(unitId)",
    "documentation": ""
  },
  "AbilityId": {
    "original": "constant native AbilityId takes string abilityIdString returns integer",
    "name": "AbilityId",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "abilityIdString",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "AbilityId(abilityIdString)",
    "documentation": ""
  },
  "AbilityId2String": {
    "original": "constant native AbilityId2String takes integer abilityId returns string",
    "name": "AbilityId2String",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilityId",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "AbilityId2String(abilityId)",
    "documentation": ""
  },
  "GetObjectName": {
    "original": "constant native GetObjectName takes integer objectId returns string",
    "name": "GetObjectName",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "objectId",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "GetObjectName(objectId)",
    "documentation": "~物体ID, 的名称"
  },
  "GetBJMaxPlayers": {
    "original": "constant native GetBJMaxPlayers takes nothing returns integer",
    "name": "GetBJMaxPlayers",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "GetBJMaxPlayers()",
    "documentation": ""
  },
  "GetBJPlayerNeutralVictim": {
    "original": "constant native GetBJPlayerNeutralVictim takes nothing returns integer",
    "name": "GetBJPlayerNeutralVictim",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "GetBJPlayerNeutralVictim()",
    "documentation": ""
  },
  "GetBJPlayerNeutralExtra": {
    "original": "constant native GetBJPlayerNeutralExtra takes nothing returns integer",
    "name": "GetBJPlayerNeutralExtra",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "GetBJPlayerNeutralExtra()",
    "documentation": ""
  },
  "GetBJMaxPlayerSlots": {
    "original": "constant native GetBJMaxPlayerSlots takes nothing returns integer",
    "name": "GetBJMaxPlayerSlots",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "GetBJMaxPlayerSlots()",
    "documentation": ""
  },
  "GetPlayerNeutralPassive": {
    "original": "constant native GetPlayerNeutralPassive takes nothing returns integer",
    "name": "GetPlayerNeutralPassive",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "GetPlayerNeutralPassive()",
    "documentation": ""
  },
  "GetPlayerNeutralAggressive": {
    "original": "constant native GetPlayerNeutralAggressive takes nothing returns integer",
    "name": "GetPlayerNeutralAggressive",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "GetPlayerNeutralAggressive()",
    "documentation": ""
  },
  "Deg2Rad": {
    "original": "native Deg2Rad takes real degrees returns real",
    "name": "Deg2Rad",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "degrees",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "Deg2Rad(degrees)",
    "documentation": "转换 度 到 弧度"
  },
  "Rad2Deg": {
    "original": "native Rad2Deg takes real radians returns real",
    "name": "Rad2Deg",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "radians",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "Rad2Deg(radians)",
    "documentation": "转换 弧度 到 度"
  },
  "Sin": {
    "original": "native Sin takes real radians returns real",
    "name": "Sin",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "radians",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "Sin(radians)",
    "documentation": "Sin(,~Angle,)"
  },
  "Cos": {
    "original": "native Cos takes real radians returns real",
    "name": "Cos",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "radians",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "Cos(radians)",
    "documentation": "Cos(,~Angle,)"
  },
  "Tan": {
    "original": "native Tan takes real radians returns real",
    "name": "Tan",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "radians",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "Tan(radians)",
    "documentation": "Tan(,~Angle,)"
  },
  "Asin": {
    "original": "native Asin takes real y returns real",
    "name": "Asin",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "Asin(y)",
    "documentation": "Asin(,~数值,)"
  },
  "Acos": {
    "original": "native Acos takes real x returns real",
    "name": "Acos",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "Acos(x)",
    "documentation": "Acos(,~数值,)"
  },
  "Atan": {
    "original": "native Atan takes real x returns real",
    "name": "Atan",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "Atan(x)",
    "documentation": "Atan(,~数值,)"
  },
  "Atan2": {
    "original": "native Atan2 takes real y, real x returns real",
    "name": "Atan2",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "Atan2(y, x)",
    "documentation": "Atan(,~Y, : ,~X,)"
  },
  "SquareRoot": {
    "original": "native SquareRoot takes real x returns real",
    "name": "SquareRoot",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "SquareRoot(x)",
    "documentation": "平方根"
  },
  "Pow": {
    "original": "native Pow takes real x, real power returns real",
    "name": "Pow",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "power",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "Pow(x, power)",
    "documentation": "求幂"
  },
  "I2R": {
    "original": "native I2R takes integer i returns real",
    "name": "I2R",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "I2R(i)",
    "documentation": "转换整数变量为实数"
  },
  "R2I": {
    "original": "native R2I takes real r returns integer",
    "name": "R2I",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "r",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "R2I(r)",
    "documentation": "转换实数为整数"
  },
  "I2S": {
    "original": "native I2S takes integer i returns string",
    "name": "I2S",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "I2S(i)",
    "documentation": "将整数转换为字符串"
  },
  "R2S": {
    "original": "native R2S takes real r returns string",
    "name": "R2S",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "r",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "R2S(r)",
    "documentation": "将实数转换为字符串"
  },
  "R2SW": {
    "original": "native R2SW takes real r, integer width, integer precision returns string",
    "name": "R2SW",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "r",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "width",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "precision",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "R2SW(r, width, precision)",
    "documentation": "将实数转换为格式化字符串"
  },
  "S2I": {
    "original": "native S2I takes string s returns integer",
    "name": "S2I",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "s",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "S2I(s)",
    "documentation": "转换字串符为整数"
  },
  "S2R": {
    "original": "native S2R takes string s returns real",
    "name": "S2R",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "s",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "S2R(s)",
    "documentation": "转换字符串为实数"
  },
  "GetHandleId": {
    "original": "native GetHandleId takes handle h returns integer",
    "name": "GetHandleId",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "handle",
      "name": "h",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetHandleId(h)",
    "documentation": "转换 ,~Handle, 为整数"
  },
  "SubString": {
    "original": "native SubString takes string source, integer start, integer end returns string",
    "name": "SubString",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "source",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "start",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "end",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "SubString(source, start, end)",
    "documentation": "截取 ,~字符串, 的 ,~Start, - ,~End, 字节部分(不包括首字节)"
  },
  "StringLength": {
    "original": "native StringLength takes string s returns integer",
    "name": "StringLength",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "s",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "StringLength(s)",
    "documentation": "字串符长度"
  },
  "StringCase": {
    "original": "native StringCase takes string source, boolean upper returns string",
    "name": "StringCase",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "source",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "upper",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "StringCase(source, upper)",
    "documentation": "将字串符转换为大小写字母"
  },
  "StringHash": {
    "original": "native StringHash takes string s returns integer",
    "name": "StringHash",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "s",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "StringHash(s)",
    "documentation": "(,~String,)的哈希值"
  },
  "GetLocalizedString": {
    "original": "native GetLocalizedString takes string source returns string",
    "name": "GetLocalizedString",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "source",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "GetLocalizedString(source)",
    "documentation": "本地字符串: ,~文字"
  },
  "GetLocalizedHotkey": {
    "original": "native GetLocalizedHotkey takes string source returns integer",
    "name": "GetLocalizedHotkey",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "source",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetLocalizedHotkey(source)",
    "documentation": "本地热键: ,~文字"
  },
  "SetMapName": {
    "original": "native SetMapName takes string name returns nothing",
    "name": "SetMapName",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "name",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetMapName(name)",
    "documentation": ""
  },
  "SetMapDescription": {
    "original": "native SetMapDescription takes string description returns nothing",
    "name": "SetMapDescription",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "description",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetMapDescription(description)",
    "documentation": ""
  },
  "SetTeams": {
    "original": "native SetTeams takes integer teamcount returns nothing",
    "name": "SetTeams",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "teamcount",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTeams(teamcount)",
    "documentation": ""
  },
  "SetPlayers": {
    "original": "native SetPlayers takes integer playercount returns nothing",
    "name": "SetPlayers",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "playercount",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayers(playercount)",
    "documentation": ""
  },
  "DefineStartLocation": {
    "original": "native DefineStartLocation takes integer whichStartLoc, real x, real y returns nothing",
    "name": "DefineStartLocation",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "whichStartLoc",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DefineStartLocation(whichStartLoc, x, y)",
    "documentation": ""
  },
  "DefineStartLocationLoc": {
    "original": "native DefineStartLocationLoc takes integer whichStartLoc, location whichLocation returns nothing",
    "name": "DefineStartLocationLoc",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "whichStartLoc",
      "documentation": ""
    }, {
      "type": "location",
      "name": "whichLocation",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DefineStartLocationLoc(whichStartLoc, whichLocation)",
    "documentation": ""
  },
  "SetStartLocPrioCount": {
    "original": "native SetStartLocPrioCount takes integer whichStartLoc, integer prioSlotCount returns nothing",
    "name": "SetStartLocPrioCount",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "whichStartLoc",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "prioSlotCount",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetStartLocPrioCount(whichStartLoc, prioSlotCount)",
    "documentation": ""
  },
  "SetStartLocPrio": {
    "original": "native SetStartLocPrio takes integer whichStartLoc, integer prioSlotIndex, integer otherStartLocIndex, startlocprio priority returns nothing",
    "name": "SetStartLocPrio",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "whichStartLoc",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "prioSlotIndex",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "otherStartLocIndex",
      "documentation": ""
    }, {
      "type": "startlocprio",
      "name": "priority",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetStartLocPrio(whichStartLoc, prioSlotIndex, otherStartLocIndex, priority)",
    "documentation": ""
  },
  "GetStartLocPrioSlot": {
    "original": "native GetStartLocPrioSlot takes integer whichStartLoc, integer prioSlotIndex returns integer",
    "name": "GetStartLocPrioSlot",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "whichStartLoc",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "prioSlotIndex",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetStartLocPrioSlot(whichStartLoc, prioSlotIndex)",
    "documentation": ""
  },
  "GetStartLocPrio": {
    "original": "native GetStartLocPrio takes integer whichStartLoc, integer prioSlotIndex returns startlocprio",
    "name": "GetStartLocPrio",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "whichStartLoc",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "prioSlotIndex",
      "documentation": ""
    }],
    "returnType": "startlocprio",
    "insertText": "GetStartLocPrio(whichStartLoc, prioSlotIndex)",
    "documentation": ""
  },
  "SetGameTypeSupported": {
    "original": "native SetGameTypeSupported takes gametype whichGameType, boolean value returns nothing",
    "name": "SetGameTypeSupported",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gametype",
      "name": "whichGameType",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetGameTypeSupported(whichGameType, value)",
    "documentation": ""
  },
  "SetMapFlag": {
    "original": "native SetMapFlag takes mapflag whichMapFlag, boolean value returns nothing",
    "name": "SetMapFlag",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "mapflag",
      "name": "whichMapFlag",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetMapFlag(whichMapFlag, value)",
    "documentation": "设置地图参数"
  },
  "SetGamePlacement": {
    "original": "native SetGamePlacement takes placement whichPlacementType returns nothing",
    "name": "SetGamePlacement",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "placement",
      "name": "whichPlacementType",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetGamePlacement(whichPlacementType)",
    "documentation": ""
  },
  "SetGameSpeed": {
    "original": "native SetGameSpeed takes gamespeed whichspeed returns nothing",
    "name": "SetGameSpeed",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamespeed",
      "name": "whichspeed",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetGameSpeed(whichspeed)",
    "documentation": "设定游戏速度"
  },
  "SetGameDifficulty": {
    "original": "native SetGameDifficulty takes gamedifficulty whichdifficulty returns nothing",
    "name": "SetGameDifficulty",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamedifficulty",
      "name": "whichdifficulty",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetGameDifficulty(whichdifficulty)",
    "documentation": "设置当前游戏难度为 ,~GameDifficulty"
  },
  "SetResourceDensity": {
    "original": "native SetResourceDensity takes mapdensity whichdensity returns nothing",
    "name": "SetResourceDensity",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "mapdensity",
      "name": "whichdensity",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetResourceDensity(whichdensity)",
    "documentation": ""
  },
  "SetCreatureDensity": {
    "original": "native SetCreatureDensity takes mapdensity whichdensity returns nothing",
    "name": "SetCreatureDensity",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "mapdensity",
      "name": "whichdensity",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCreatureDensity(whichdensity)",
    "documentation": ""
  },
  "GetTeams": {
    "original": "native GetTeams takes nothing returns integer",
    "name": "GetTeams",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "GetTeams()",
    "documentation": "队伍数量"
  },
  "GetPlayers": {
    "original": "native GetPlayers takes nothing returns integer",
    "name": "GetPlayers",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "GetPlayers()",
    "documentation": "玩家数量"
  },
  "IsGameTypeSupported": {
    "original": "native IsGameTypeSupported takes gametype whichGameType returns boolean",
    "name": "IsGameTypeSupported",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gametype",
      "name": "whichGameType",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsGameTypeSupported(whichGameType)",
    "documentation": ""
  },
  "GetGameTypeSelected": {
    "original": "native GetGameTypeSelected takes nothing returns gametype",
    "name": "GetGameTypeSelected",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "gametype",
    "insertText": "GetGameTypeSelected()",
    "documentation": ""
  },
  "IsMapFlagSet": {
    "original": "native IsMapFlagSet takes mapflag whichMapFlag returns boolean",
    "name": "IsMapFlagSet",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "mapflag",
      "name": "whichMapFlag",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsMapFlagSet(whichMapFlag)",
    "documentation": "地图参数"
  },
  "GetGamePlacement": {
    "original": "constant native GetGamePlacement takes nothing returns placement",
    "name": "GetGamePlacement",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "placement",
    "insertText": "GetGamePlacement()",
    "documentation": ""
  },
  "GetGameSpeed": {
    "original": "constant native GetGameSpeed takes nothing returns gamespeed",
    "name": "GetGameSpeed",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "gamespeed",
    "insertText": "GetGameSpeed()",
    "documentation": "当前游戏速度"
  },
  "GetGameDifficulty": {
    "original": "constant native GetGameDifficulty takes nothing returns gamedifficulty",
    "name": "GetGameDifficulty",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "gamedifficulty",
    "insertText": "GetGameDifficulty()",
    "documentation": "难度等级"
  },
  "GetResourceDensity": {
    "original": "constant native GetResourceDensity takes nothing returns mapdensity",
    "name": "GetResourceDensity",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "mapdensity",
    "insertText": "GetResourceDensity()",
    "documentation": ""
  },
  "GetCreatureDensity": {
    "original": "constant native GetCreatureDensity takes nothing returns mapdensity",
    "name": "GetCreatureDensity",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "mapdensity",
    "insertText": "GetCreatureDensity()",
    "documentation": ""
  },
  "GetStartLocationX": {
    "original": "constant native GetStartLocationX takes integer whichStartLocation returns real",
    "name": "GetStartLocationX",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "whichStartLocation",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetStartLocationX(whichStartLocation)",
    "documentation": ""
  },
  "GetStartLocationY": {
    "original": "constant native GetStartLocationY takes integer whichStartLocation returns real",
    "name": "GetStartLocationY",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "whichStartLocation",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetStartLocationY(whichStartLocation)",
    "documentation": ""
  },
  "GetStartLocationLoc": {
    "original": "constant native GetStartLocationLoc takes integer whichStartLocation returns location",
    "name": "GetStartLocationLoc",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "whichStartLocation",
      "documentation": ""
    }],
    "returnType": "location",
    "insertText": "GetStartLocationLoc(whichStartLocation)",
    "documentation": ""
  },
  "SetPlayerTeam": {
    "original": "native SetPlayerTeam takes player whichPlayer, integer whichTeam returns nothing",
    "name": "SetPlayerTeam",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "whichTeam",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerTeam(whichPlayer, whichTeam)",
    "documentation": "设置 ,~Player, 的队伍为 ,~队伍ID"
  },
  "SetPlayerStartLocation": {
    "original": "native SetPlayerStartLocation takes player whichPlayer, integer startLocIndex returns nothing",
    "name": "SetPlayerStartLocation",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "startLocIndex",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerStartLocation(whichPlayer, startLocIndex)",
    "documentation": ""
  },
  "ForcePlayerStartLocation": {
    "original": "native ForcePlayerStartLocation takes player whichPlayer, integer startLocIndex returns nothing ",
    "name": "ForcePlayerStartLocation",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "startLocIndex",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ForcePlayerStartLocation(whichPlayer, startLocIndex)",
    "documentation": ""
  },
  "SetPlayerColor": {
    "original": "native SetPlayerColor takes player whichPlayer, playercolor color returns nothing",
    "name": "SetPlayerColor",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "playercolor",
      "name": "color",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerColor(whichPlayer, color)",
    "documentation": "将 ,~Player, 的玩家颜色改为 ,~Color"
  },
  "SetPlayerAlliance": {
    "original": "native SetPlayerAlliance takes player sourcePlayer, player otherPlayer, alliancetype whichAllianceSetting, boolean value returns nothing",
    "name": "SetPlayerAlliance",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "sourcePlayer",
      "documentation": ""
    }, {
      "type": "player",
      "name": "otherPlayer",
      "documentation": ""
    }, {
      "type": "alliancetype",
      "name": "whichAllianceSetting",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerAlliance(sourcePlayer, otherPlayer, whichAllianceSetting, value)",
    "documentation": "命令 ,~Player, 对 ,~Player, 设置 ,~Alliance Type, ,~On/Off"
  },
  "SetPlayerTaxRate": {
    "original": "native SetPlayerTaxRate takes player sourcePlayer, player otherPlayer, playerstate whichResource, integer rate returns nothing",
    "name": "SetPlayerTaxRate",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "sourcePlayer",
      "documentation": ""
    }, {
      "type": "player",
      "name": "otherPlayer",
      "documentation": ""
    }, {
      "type": "playerstate",
      "name": "whichResource",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "rate",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerTaxRate(sourcePlayer, otherPlayer, whichResource, rate)",
    "documentation": "设置 ,~Player, 交纳给 ,~Player, 的 ,~Resource, 所得税为 ,~Rate, %"
  },
  "SetPlayerRacePreference": {
    "original": "native SetPlayerRacePreference takes player whichPlayer, racepreference whichRacePreference returns nothing",
    "name": "SetPlayerRacePreference",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "racepreference",
      "name": "whichRacePreference",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerRacePreference(whichPlayer, whichRacePreference)",
    "documentation": ""
  },
  "SetPlayerRaceSelectable": {
    "original": "native SetPlayerRaceSelectable takes player whichPlayer, boolean value returns nothing",
    "name": "SetPlayerRaceSelectable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerRaceSelectable(whichPlayer, value)",
    "documentation": ""
  },
  "SetPlayerController": {
    "original": "native SetPlayerController takes player whichPlayer, mapcontrol controlType returns nothing",
    "name": "SetPlayerController",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "mapcontrol",
      "name": "controlType",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerController(whichPlayer, controlType)",
    "documentation": ""
  },
  "SetPlayerName": {
    "original": "native SetPlayerName takes player whichPlayer, string name returns nothing",
    "name": "SetPlayerName",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "name",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerName(whichPlayer, name)",
    "documentation": "设置玩家名字"
  },
  "SetPlayerOnScoreScreen": {
    "original": "native SetPlayerOnScoreScreen takes player whichPlayer, boolean flag returns nothing",
    "name": "SetPlayerOnScoreScreen",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerOnScoreScreen(whichPlayer, flag)",
    "documentation": "设置 ,~Player, ,~Show/Hide, 在计分屏的显示."
  },
  "GetPlayerTeam": {
    "original": "native GetPlayerTeam takes player whichPlayer returns integer",
    "name": "GetPlayerTeam",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetPlayerTeam(whichPlayer)",
    "documentation": "玩家在的队伍"
  },
  "GetPlayerStartLocation": {
    "original": "native GetPlayerStartLocation takes player whichPlayer returns integer",
    "name": "GetPlayerStartLocation",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetPlayerStartLocation(whichPlayer)",
    "documentation": ""
  },
  "GetPlayerColor": {
    "original": "native GetPlayerColor takes player whichPlayer returns playercolor",
    "name": "GetPlayerColor",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "playercolor",
    "insertText": "GetPlayerColor(whichPlayer)",
    "documentation": "玩家的颜色"
  },
  "GetPlayerSelectable": {
    "original": "native GetPlayerSelectable takes player whichPlayer returns boolean",
    "name": "GetPlayerSelectable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "GetPlayerSelectable(whichPlayer)",
    "documentation": ""
  },
  "GetPlayerController": {
    "original": "native GetPlayerController takes player whichPlayer returns mapcontrol",
    "name": "GetPlayerController",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "mapcontrol",
    "insertText": "GetPlayerController(whichPlayer)",
    "documentation": "玩家控制者"
  },
  "GetPlayerSlotState": {
    "original": "native GetPlayerSlotState takes player whichPlayer returns playerslotstate",
    "name": "GetPlayerSlotState",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "playerslotstate",
    "insertText": "GetPlayerSlotState(whichPlayer)",
    "documentation": "玩家游戏属性"
  },
  "GetPlayerTaxRate": {
    "original": "native GetPlayerTaxRate takes player sourcePlayer, player otherPlayer, playerstate whichResource returns integer",
    "name": "GetPlayerTaxRate",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "sourcePlayer",
      "documentation": ""
    }, {
      "type": "player",
      "name": "otherPlayer",
      "documentation": ""
    }, {
      "type": "playerstate",
      "name": "whichResource",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetPlayerTaxRate(sourcePlayer, otherPlayer, whichResource)",
    "documentation": "~Player, 需要交纳给 ,~Player, 的 ,~Resource, 所得税"
  },
  "IsPlayerRacePrefSet": {
    "original": "native IsPlayerRacePrefSet takes player whichPlayer, racepreference pref returns boolean",
    "name": "IsPlayerRacePrefSet",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "racepreference",
      "name": "pref",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsPlayerRacePrefSet(whichPlayer, pref)",
    "documentation": "~Player, 选择了 ,~RacePreference"
  },
  "GetPlayerName": {
    "original": "native GetPlayerName takes player whichPlayer returns string",
    "name": "GetPlayerName",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "GetPlayerName(whichPlayer)",
    "documentation": "玩家名字"
  },
  "CreateTimer": {
    "original": "native CreateTimer takes nothing returns timer",
    "name": "CreateTimer",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "timer",
    "insertText": "CreateTimer()",
    "documentation": "新建的计时器"
  },
  "DestroyTimer": {
    "original": "native DestroyTimer takes timer whichTimer returns nothing",
    "name": "DestroyTimer",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "timer",
      "name": "whichTimer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DestroyTimer(whichTimer)",
    "documentation": "删除 ,~计时器"
  },
  "TimerStart": {
    "original": "native TimerStart takes timer whichTimer, real timeout, boolean periodic, code handlerFunc returns nothing",
    "name": "TimerStart",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "timer",
      "name": "whichTimer",
      "documentation": ""
    }, {
      "type": "real",
      "name": "timeout",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "periodic",
      "documentation": ""
    }, {
      "type": "code",
      "name": "handlerFunc",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TimerStart(whichTimer, timeout, periodic, handlerFunc)",
    "documentation": "立即运行 ,~计时器, 时间设置: ,~Time, 秒,是否循环: ,~false/true, ,运行函数: ,~function name"
  },
  "TimerGetElapsed": {
    "original": "native TimerGetElapsed takes timer whichTimer returns real",
    "name": "TimerGetElapsed",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "timer",
      "name": "whichTimer",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "TimerGetElapsed(whichTimer)",
    "documentation": "计时器经过的时间"
  },
  "TimerGetRemaining": {
    "original": "native TimerGetRemaining takes timer whichTimer returns real",
    "name": "TimerGetRemaining",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "timer",
      "name": "whichTimer",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "TimerGetRemaining(whichTimer)",
    "documentation": "计时器剩余时间"
  },
  "TimerGetTimeout": {
    "original": "native TimerGetTimeout takes timer whichTimer returns real",
    "name": "TimerGetTimeout",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "timer",
      "name": "whichTimer",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "TimerGetTimeout(whichTimer)",
    "documentation": "计时器初始的时间"
  },
  "PauseTimer": {
    "original": "native PauseTimer takes timer whichTimer returns nothing",
    "name": "PauseTimer",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "timer",
      "name": "whichTimer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PauseTimer(whichTimer)",
    "documentation": "暂停 ,~计时器"
  },
  "ResumeTimer": {
    "original": "native ResumeTimer takes timer whichTimer returns nothing",
    "name": "ResumeTimer",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "timer",
      "name": "whichTimer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ResumeTimer(whichTimer)",
    "documentation": "恢复 ,~计时器"
  },
  "GetExpiredTimer": {
    "original": "native GetExpiredTimer takes nothing returns timer",
    "name": "GetExpiredTimer",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "timer",
    "insertText": "GetExpiredTimer()",
    "documentation": "事件响应 - 计时器期满"
  },
  "CreateGroup": {
    "original": "native CreateGroup takes nothing returns group",
    "name": "CreateGroup",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "group",
    "insertText": "CreateGroup()",
    "documentation": "新建的空单位组"
  },
  "DestroyGroup": {
    "original": "native DestroyGroup takes group whichGroup returns nothing",
    "name": "DestroyGroup",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DestroyGroup(whichGroup)",
    "documentation": "删除 ,~单位组"
  },
  "GroupAddUnit": {
    "original": "native GroupAddUnit takes group whichGroup, unit whichUnit returns nothing",
    "name": "GroupAddUnit",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "GroupAddUnit(whichGroup, whichUnit)",
    "documentation": "为 ,~单位组, 添加 ,~单位"
  },
  "GroupRemoveUnit": {
    "original": "native GroupRemoveUnit takes group whichGroup, unit whichUnit returns nothing",
    "name": "GroupRemoveUnit",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "GroupRemoveUnit(whichGroup, whichUnit)",
    "documentation": "为 ,~单位组, 删除 ,~单位"
  },
  "GroupClear": {
    "original": "native GroupClear takes group whichGroup returns nothing",
    "name": "GroupClear",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "GroupClear(whichGroup)",
    "documentation": "清除"
  },
  "GroupEnumUnitsOfType": {
    "original": "native GroupEnumUnitsOfType takes group whichGroup, string unitname, boolexpr filter returns nothing",
    "name": "GroupEnumUnitsOfType",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }, {
      "type": "string",
      "name": "unitname",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "filter",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "GroupEnumUnitsOfType(whichGroup, unitname, filter)",
    "documentation": ""
  },
  "GroupEnumUnitsOfPlayer": {
    "original": "native GroupEnumUnitsOfPlayer takes group whichGroup, player whichPlayer, boolexpr filter returns nothing",
    "name": "GroupEnumUnitsOfPlayer",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "filter",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "GroupEnumUnitsOfPlayer(whichGroup, whichPlayer, filter)",
    "documentation": ""
  },
  "GroupEnumUnitsOfTypeCounted": {
    "original": "native GroupEnumUnitsOfTypeCounted takes group whichGroup, string unitname, boolexpr filter, integer countLimit returns nothing",
    "name": "GroupEnumUnitsOfTypeCounted",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }, {
      "type": "string",
      "name": "unitname",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "filter",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "countLimit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "GroupEnumUnitsOfTypeCounted(whichGroup, unitname, filter, countLimit)",
    "documentation": ""
  },
  "GroupEnumUnitsInRect": {
    "original": "native GroupEnumUnitsInRect takes group whichGroup, rect r, boolexpr filter returns nothing",
    "name": "GroupEnumUnitsInRect",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }, {
      "type": "rect",
      "name": "r",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "filter",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "GroupEnumUnitsInRect(whichGroup, r, filter)",
    "documentation": ""
  },
  "GroupEnumUnitsInRectCounted": {
    "original": "native GroupEnumUnitsInRectCounted takes group whichGroup, rect r, boolexpr filter, integer countLimit returns nothing",
    "name": "GroupEnumUnitsInRectCounted",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }, {
      "type": "rect",
      "name": "r",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "filter",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "countLimit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "GroupEnumUnitsInRectCounted(whichGroup, r, filter, countLimit)",
    "documentation": ""
  },
  "GroupEnumUnitsInRange": {
    "original": "native GroupEnumUnitsInRange takes group whichGroup, real x, real y, real radius, boolexpr filter returns nothing",
    "name": "GroupEnumUnitsInRange",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "radius",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "filter",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "GroupEnumUnitsInRange(whichGroup, x, y, radius, filter)",
    "documentation": "为 ,~单位组, 添加以( ,~坐标X, , ,~坐标Y, )为圆心，,~半径, 为半径的圆范围内，满足 ,~条件, 的单位"
  },
  "GroupEnumUnitsInRangeOfLoc": {
    "original": "native GroupEnumUnitsInRangeOfLoc takes group whichGroup, location whichLocation, real radius, boolexpr filter returns nothing",
    "name": "GroupEnumUnitsInRangeOfLoc",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }, {
      "type": "location",
      "name": "whichLocation",
      "documentation": ""
    }, {
      "type": "real",
      "name": "radius",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "filter",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "GroupEnumUnitsInRangeOfLoc(whichGroup, whichLocation, radius, filter)",
    "documentation": "为 ,~单位组, 添加以 ,~点, 为圆心，,~半径, 为半径的圆范围内，满足 ,~条件, 的单位"
  },
  "GroupEnumUnitsInRangeCounted": {
    "original": "native GroupEnumUnitsInRangeCounted takes group whichGroup, real x, real y, real radius, boolexpr filter, integer countLimit returns nothing",
    "name": "GroupEnumUnitsInRangeCounted",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "radius",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "filter",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "countLimit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "GroupEnumUnitsInRangeCounted(whichGroup, x, y, radius, filter, countLimit)",
    "documentation": "为 ,~单位组, 添加以( ,~坐标X, , ,~坐标Y, )为圆心，,~半径, 为半径的圆范围内，满足 ,~条件, 的单位。无效项( ,~N, )"
  },
  "GroupEnumUnitsInRangeOfLocCounted": {
    "original": "native GroupEnumUnitsInRangeOfLocCounted takes group whichGroup, location whichLocation, real radius, boolexpr filter, integer countLimit returns nothing",
    "name": "GroupEnumUnitsInRangeOfLocCounted",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }, {
      "type": "location",
      "name": "whichLocation",
      "documentation": ""
    }, {
      "type": "real",
      "name": "radius",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "filter",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "countLimit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "GroupEnumUnitsInRangeOfLocCounted(whichGroup, whichLocation, radius, filter, countLimit)",
    "documentation": "为 ,~单位组, 添加以 ,~点, 为圆心，,~半径, 为半径的圆范围内，满足 ,~条件, 的单位。无效项( ,~N, )"
  },
  "GroupEnumUnitsSelected": {
    "original": "native GroupEnumUnitsSelected takes group whichGroup, player whichPlayer, boolexpr filter returns nothing",
    "name": "GroupEnumUnitsSelected",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "filter",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "GroupEnumUnitsSelected(whichGroup, whichPlayer, filter)",
    "documentation": ""
  },
  "GroupImmediateOrder": {
    "original": "native GroupImmediateOrder takes group whichGroup, string order returns boolean",
    "name": "GroupImmediateOrder",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }, {
      "type": "string",
      "name": "order",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "GroupImmediateOrder(whichGroup, order)",
    "documentation": "发送单位组命令到 没有目标"
  },
  "GroupImmediateOrderById": {
    "original": "native GroupImmediateOrderById takes group whichGroup, integer order returns boolean",
    "name": "GroupImmediateOrderById",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "order",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "GroupImmediateOrderById(whichGroup, order)",
    "documentation": "对 ,~单位组,发布 ,~Order"
  },
  "GroupPointOrder": {
    "original": "native GroupPointOrder takes group whichGroup, string order, real x, real y returns boolean",
    "name": "GroupPointOrder",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }, {
      "type": "string",
      "name": "order",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "GroupPointOrder(whichGroup, order, x, y)",
    "documentation": "对 ,~单位组,发布 ,~Order, 命令,目标点:(,~X,,,~Y,)"
  },
  "GroupPointOrderLoc": {
    "original": "native GroupPointOrderLoc takes group whichGroup, string order, location whichLocation returns boolean",
    "name": "GroupPointOrderLoc",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }, {
      "type": "string",
      "name": "order",
      "documentation": ""
    }, {
      "type": "location",
      "name": "whichLocation",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "GroupPointOrderLoc(whichGroup, order, whichLocation)",
    "documentation": "发送单位组命令到 点"
  },
  "GroupPointOrderById": {
    "original": "native GroupPointOrderById takes group whichGroup, integer order, real x, real y returns boolean",
    "name": "GroupPointOrderById",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "order",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "GroupPointOrderById(whichGroup, order, x, y)",
    "documentation": "对 ,~单位组,发布 ,~Order, 命令,目标点:(,~X,,,~Y,)"
  },
  "GroupPointOrderByIdLoc": {
    "original": "native GroupPointOrderByIdLoc takes group whichGroup, integer order, location whichLocation returns boolean",
    "name": "GroupPointOrderByIdLoc",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "order",
      "documentation": ""
    }, {
      "type": "location",
      "name": "whichLocation",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "GroupPointOrderByIdLoc(whichGroup, order, whichLocation)",
    "documentation": "对 ,~单位组,发布 ,~Order, 命令,目标: ,~指定点"
  },
  "GroupTargetOrder": {
    "original": "native GroupTargetOrder takes group whichGroup, string order, widget targetWidget returns boolean",
    "name": "GroupTargetOrder",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }, {
      "type": "string",
      "name": "order",
      "documentation": ""
    }, {
      "type": "widget",
      "name": "targetWidget",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "GroupTargetOrder(whichGroup, order, targetWidget)",
    "documentation": "发送单位组命令到 单位"
  },
  "GroupTargetOrderById": {
    "original": "native GroupTargetOrderById takes group whichGroup, integer order, widget targetWidget returns boolean",
    "name": "GroupTargetOrderById",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "order",
      "documentation": ""
    }, {
      "type": "widget",
      "name": "targetWidget",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "GroupTargetOrderById(whichGroup, order, targetWidget)",
    "documentation": "对 ,~单位组, 发布 ,~Order, 命令,目标: ,~单位"
  },
  "ForGroup": {
    "original": "native ForGroup takes group whichGroup, code callback returns nothing",
    "name": "ForGroup",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }, {
      "type": "code",
      "name": "callback",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ForGroup(whichGroup, callback)",
    "documentation": "选取所有单位在单位组做 多动作"
  },
  "FirstOfGroup": {
    "original": "native FirstOfGroup takes group whichGroup returns unit",
    "name": "FirstOfGroup",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }],
    "returnType": "unit",
    "insertText": "FirstOfGroup(whichGroup)",
    "documentation": "~单位组, 中第一个单位"
  },
  "CreateForce": {
    "original": "native CreateForce takes nothing returns force",
    "name": "CreateForce",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "force",
    "insertText": "CreateForce()",
    "documentation": "新建空玩家组"
  },
  "DestroyForce": {
    "original": "native DestroyForce takes force whichForce returns nothing",
    "name": "DestroyForce",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "force",
      "name": "whichForce",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DestroyForce(whichForce)",
    "documentation": "删除 ,~玩家组"
  },
  "ForceAddPlayer": {
    "original": "native ForceAddPlayer takes force whichForce, player whichPlayer returns nothing",
    "name": "ForceAddPlayer",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "force",
      "name": "whichForce",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ForceAddPlayer(whichForce, whichPlayer)",
    "documentation": " ,~玩家组, 添加 ,~玩家"
  },
  "ForceRemovePlayer": {
    "original": "native ForceRemovePlayer takes force whichForce, player whichPlayer returns nothing",
    "name": "ForceRemovePlayer",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "force",
      "name": "whichForce",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ForceRemovePlayer(whichForce, whichPlayer)",
    "documentation": "从 ,~玩家组, 中移除 ,~玩家"
  },
  "ForceClear": {
    "original": "native ForceClear takes force whichForce returns nothing",
    "name": "ForceClear",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "force",
      "name": "whichForce",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ForceClear(whichForce)",
    "documentation": "清除玩家"
  },
  "ForceEnumPlayers": {
    "original": "native ForceEnumPlayers takes force whichForce, boolexpr filter returns nothing",
    "name": "ForceEnumPlayers",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "force",
      "name": "whichForce",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "filter",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ForceEnumPlayers(whichForce, filter)",
    "documentation": ""
  },
  "ForceEnumPlayersCounted": {
    "original": "native ForceEnumPlayersCounted takes force whichForce, boolexpr filter, integer countLimit returns nothing",
    "name": "ForceEnumPlayersCounted",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "force",
      "name": "whichForce",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "filter",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "countLimit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ForceEnumPlayersCounted(whichForce, filter, countLimit)",
    "documentation": ""
  },
  "ForceEnumAllies": {
    "original": "native ForceEnumAllies takes force whichForce, player whichPlayer, boolexpr filter returns nothing",
    "name": "ForceEnumAllies",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "force",
      "name": "whichForce",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "filter",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ForceEnumAllies(whichForce, whichPlayer, filter)",
    "documentation": ""
  },
  "ForceEnumEnemies": {
    "original": "native ForceEnumEnemies takes force whichForce, player whichPlayer, boolexpr filter returns nothing",
    "name": "ForceEnumEnemies",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "force",
      "name": "whichForce",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "filter",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ForceEnumEnemies(whichForce, whichPlayer, filter)",
    "documentation": ""
  },
  "ForForce": {
    "original": "native ForForce takes force whichForce, code callback returns nothing",
    "name": "ForForce",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "force",
      "name": "whichForce",
      "documentation": ""
    }, {
      "type": "code",
      "name": "callback",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ForForce(whichForce, callback)",
    "documentation": "选取所有玩家在玩家组做动作(单一的)"
  },
  "Rect": {
    "original": "native Rect takes real minx, real miny, real maxx, real maxy returns rect",
    "name": "Rect",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "minx",
      "documentation": ""
    }, {
      "type": "real",
      "name": "miny",
      "documentation": ""
    }, {
      "type": "real",
      "name": "maxx",
      "documentation": ""
    }, {
      "type": "real",
      "name": "maxy",
      "documentation": ""
    }],
    "returnType": "rect",
    "insertText": "Rect(minx, miny, maxx, maxy)",
    "documentation": "将坐标转换为区域"
  },
  "RectFromLoc": {
    "original": "native RectFromLoc takes location min, location max returns rect",
    "name": "RectFromLoc",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "location",
      "name": "min",
      "documentation": ""
    }, {
      "type": "location",
      "name": "max",
      "documentation": ""
    }],
    "returnType": "rect",
    "insertText": "RectFromLoc(min, max)",
    "documentation": "将点转换为区域"
  },
  "RemoveRect": {
    "original": "native RemoveRect takes rect whichRect returns nothing",
    "name": "RemoveRect",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "rect",
      "name": "whichRect",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RemoveRect(whichRect)",
    "documentation": "删除 ,~矩形区域"
  },
  "SetRect": {
    "original": "native SetRect takes rect whichRect, real minx, real miny, real maxx, real maxy returns nothing",
    "name": "SetRect",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "rect",
      "name": "whichRect",
      "documentation": ""
    }, {
      "type": "real",
      "name": "minx",
      "documentation": ""
    }, {
      "type": "real",
      "name": "miny",
      "documentation": ""
    }, {
      "type": "real",
      "name": "maxx",
      "documentation": ""
    }, {
      "type": "real",
      "name": "maxy",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetRect(whichRect, minx, miny, maxx, maxy)",
    "documentation": "重新设置 ,~矩形区域, ,左下角坐标为(,~X,,,~Y,), 右上角坐标为(,~X,,,~Y,)"
  },
  "SetRectFromLoc": {
    "original": "native SetRectFromLoc takes rect whichRect, location min, location max returns nothing",
    "name": "SetRectFromLoc",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "rect",
      "name": "whichRect",
      "documentation": ""
    }, {
      "type": "location",
      "name": "min",
      "documentation": ""
    }, {
      "type": "location",
      "name": "max",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetRectFromLoc(whichRect, min, max)",
    "documentation": "重新设置 ,~矩形区域, ,左下角点为 ,~点, 右上角点为 ,~点"
  },
  "MoveRectTo": {
    "original": "native MoveRectTo takes rect whichRect, real newCenterX, real newCenterY returns nothing",
    "name": "MoveRectTo",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "rect",
      "name": "whichRect",
      "documentation": ""
    }, {
      "type": "real",
      "name": "newCenterX",
      "documentation": ""
    }, {
      "type": "real",
      "name": "newCenterY",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MoveRectTo(whichRect, newCenterX, newCenterY)",
    "documentation": "移动 ,~矩形区域, 到(,~X,,,~Y,)"
  },
  "MoveRectToLoc": {
    "original": "native MoveRectToLoc takes rect whichRect, location newCenterLoc returns nothing",
    "name": "MoveRectToLoc",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "rect",
      "name": "whichRect",
      "documentation": ""
    }, {
      "type": "location",
      "name": "newCenterLoc",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MoveRectToLoc(whichRect, newCenterLoc)",
    "documentation": "移动区域"
  },
  "GetRectCenterX": {
    "original": "native GetRectCenterX takes rect whichRect returns real",
    "name": "GetRectCenterX",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "rect",
      "name": "whichRect",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetRectCenterX(whichRect)",
    "documentation": "区域中心的 X 坐标"
  },
  "GetRectCenterY": {
    "original": "native GetRectCenterY takes rect whichRect returns real",
    "name": "GetRectCenterY",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "rect",
      "name": "whichRect",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetRectCenterY(whichRect)",
    "documentation": "区域中心的 Y 坐标"
  },
  "GetRectMinX": {
    "original": "native GetRectMinX takes rect whichRect returns real",
    "name": "GetRectMinX",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "rect",
      "name": "whichRect",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetRectMinX(whichRect)",
    "documentation": "区域最小 X 坐标"
  },
  "GetRectMinY": {
    "original": "native GetRectMinY takes rect whichRect returns real",
    "name": "GetRectMinY",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "rect",
      "name": "whichRect",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetRectMinY(whichRect)",
    "documentation": "区域最小 Y 坐标"
  },
  "GetRectMaxX": {
    "original": "native GetRectMaxX takes rect whichRect returns real",
    "name": "GetRectMaxX",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "rect",
      "name": "whichRect",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetRectMaxX(whichRect)",
    "documentation": "区域最大 X 坐标"
  },
  "GetRectMaxY": {
    "original": "native GetRectMaxY takes rect whichRect returns real",
    "name": "GetRectMaxY",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "rect",
      "name": "whichRect",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetRectMaxY(whichRect)",
    "documentation": "区域最大 Y 坐标"
  },
  "CreateRegion": {
    "original": "native CreateRegion takes nothing returns region",
    "name": "CreateRegion",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "region",
    "insertText": "CreateRegion()",
    "documentation": "新建区域"
  },
  "RemoveRegion": {
    "original": "native RemoveRegion takes region whichRegion returns nothing",
    "name": "RemoveRegion",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "region",
      "name": "whichRegion",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RemoveRegion(whichRegion)",
    "documentation": "删除 ,~不规则区域"
  },
  "RegionAddRect": {
    "original": "native RegionAddRect takes region whichRegion, rect r returns nothing",
    "name": "RegionAddRect",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "region",
      "name": "whichRegion",
      "documentation": ""
    }, {
      "type": "rect",
      "name": "r",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RegionAddRect(whichRegion, r)",
    "documentation": "对 ,~不规则区域, 添加 ,~矩形区域"
  },
  "RegionClearRect": {
    "original": "native RegionClearRect takes region whichRegion, rect r returns nothing",
    "name": "RegionClearRect",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "region",
      "name": "whichRegion",
      "documentation": ""
    }, {
      "type": "rect",
      "name": "r",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RegionClearRect(whichRegion, r)",
    "documentation": "在 ,~不规则区域, 中移除 ,~矩形区域"
  },
  "RegionAddCell": {
    "original": "native RegionAddCell takes region whichRegion, real x, real y returns nothing",
    "name": "RegionAddCell",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "region",
      "name": "whichRegion",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RegionAddCell(whichRegion, x, y)",
    "documentation": "对 ,~不规则区域, 添加单元点: (,~X,,,~Y,)"
  },
  "RegionAddCellAtLoc": {
    "original": "native RegionAddCellAtLoc takes region whichRegion, location whichLocation returns nothing",
    "name": "RegionAddCellAtLoc",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "region",
      "name": "whichRegion",
      "documentation": ""
    }, {
      "type": "location",
      "name": "whichLocation",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RegionAddCellAtLoc(whichRegion, whichLocation)",
    "documentation": "对 ,~不规则区域, 添加单元点: ,~点"
  },
  "RegionClearCell": {
    "original": "native RegionClearCell takes region whichRegion, real x, real y returns nothing",
    "name": "RegionClearCell",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "region",
      "name": "whichRegion",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RegionClearCell(whichRegion, x, y)",
    "documentation": "在 ,~不规则区域, 中移除单元点: (,~X,,,~Y,)"
  },
  "RegionClearCellAtLoc": {
    "original": "native RegionClearCellAtLoc takes region whichRegion, location whichLocation returns nothing",
    "name": "RegionClearCellAtLoc",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "region",
      "name": "whichRegion",
      "documentation": ""
    }, {
      "type": "location",
      "name": "whichLocation",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RegionClearCellAtLoc(whichRegion, whichLocation)",
    "documentation": "在 ,~不规则区域, 中移除单元点: ,~点"
  },
  "Location": {
    "original": "native Location takes real x, real y returns location",
    "name": "Location",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": "location",
    "insertText": "Location(x, y)",
    "documentation": "转换坐标到点"
  },
  "RemoveLocation": {
    "original": "native RemoveLocation takes location whichLocation returns nothing",
    "name": "RemoveLocation",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "location",
      "name": "whichLocation",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RemoveLocation(whichLocation)",
    "documentation": "清除 ,~点"
  },
  "MoveLocation": {
    "original": "native MoveLocation takes location whichLocation, real newX, real newY returns nothing",
    "name": "MoveLocation",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "location",
      "name": "whichLocation",
      "documentation": ""
    }, {
      "type": "real",
      "name": "newX",
      "documentation": ""
    }, {
      "type": "real",
      "name": "newY",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MoveLocation(whichLocation, newX, newY)",
    "documentation": "移动 ,~点, 到(,~X,,,~Y,)"
  },
  "GetLocationX": {
    "original": "native GetLocationX takes location whichLocation returns real",
    "name": "GetLocationX",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "location",
      "name": "whichLocation",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetLocationX(whichLocation)",
    "documentation": "X 坐标"
  },
  "GetLocationY": {
    "original": "native GetLocationY takes location whichLocation returns real",
    "name": "GetLocationY",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "location",
      "name": "whichLocation",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetLocationY(whichLocation)",
    "documentation": "Y 坐标"
  },
  "GetLocationZ": {
    "original": "native GetLocationZ takes location whichLocation returns real",
    "name": "GetLocationZ",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "location",
      "name": "whichLocation",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetLocationZ(whichLocation)",
    "documentation": "~点, 的Z轴高度"
  },
  "IsUnitInRegion": {
    "original": "native IsUnitInRegion takes region whichRegion, unit whichUnit returns boolean",
    "name": "IsUnitInRegion",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "region",
      "name": "whichRegion",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitInRegion(whichRegion, whichUnit)",
    "documentation": "~不规则区域, 内存在 ,~单位"
  },
  "IsPointInRegion": {
    "original": "native IsPointInRegion takes region whichRegion, real x, real y returns boolean",
    "name": "IsPointInRegion",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "region",
      "name": "whichRegion",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsPointInRegion(whichRegion, x, y)",
    "documentation": "~不规则区域, 内包含坐标(,~X,,,~Y,)"
  },
  "IsLocationInRegion": {
    "original": "native IsLocationInRegion takes region whichRegion, location whichLocation returns boolean",
    "name": "IsLocationInRegion",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "region",
      "name": "whichRegion",
      "documentation": ""
    }, {
      "type": "location",
      "name": "whichLocation",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsLocationInRegion(whichRegion, whichLocation)",
    "documentation": "~不规则区域, 内包含点: ,~点"
  },
  "GetWorldBounds": {
    "original": "native GetWorldBounds takes nothing returns rect",
    "name": "GetWorldBounds",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "rect",
    "insertText": "GetWorldBounds()",
    "documentation": ""
  },
  "CreateTrigger": {
    "original": "native CreateTrigger takes nothing returns trigger",
    "name": "CreateTrigger",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "trigger",
    "insertText": "CreateTrigger()",
    "documentation": "新建触发"
  },
  "DestroyTrigger": {
    "original": "native DestroyTrigger takes trigger whichTrigger returns nothing",
    "name": "DestroyTrigger",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DestroyTrigger(whichTrigger)",
    "documentation": "删除 ,~触发器"
  },
  "ResetTrigger": {
    "original": "native ResetTrigger takes trigger whichTrigger returns nothing",
    "name": "ResetTrigger",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ResetTrigger(whichTrigger)",
    "documentation": ""
  },
  "EnableTrigger": {
    "original": "native EnableTrigger takes trigger whichTrigger returns nothing",
    "name": "EnableTrigger",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "EnableTrigger(whichTrigger)",
    "documentation": "打开触发器"
  },
  "DisableTrigger": {
    "original": "native DisableTrigger takes trigger whichTrigger returns nothing",
    "name": "DisableTrigger",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DisableTrigger(whichTrigger)",
    "documentation": "关掉触发器"
  },
  "IsTriggerEnabled": {
    "original": "native IsTriggerEnabled takes trigger whichTrigger returns boolean",
    "name": "IsTriggerEnabled",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsTriggerEnabled(whichTrigger)",
    "documentation": "触发器打开"
  },
  "TriggerWaitOnSleeps": {
    "original": "native TriggerWaitOnSleeps takes trigger whichTrigger, boolean flag returns nothing",
    "name": "TriggerWaitOnSleeps",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TriggerWaitOnSleeps(whichTrigger, flag)",
    "documentation": ""
  },
  "IsTriggerWaitOnSleeps": {
    "original": "native IsTriggerWaitOnSleeps takes trigger whichTrigger returns boolean",
    "name": "IsTriggerWaitOnSleeps",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsTriggerWaitOnSleeps(whichTrigger)",
    "documentation": ""
  },
  "GetFilterUnit": {
    "original": "constant native GetFilterUnit takes nothing returns unit",
    "name": "GetFilterUnit",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetFilterUnit()",
    "documentation": "匹配的单位"
  },
  "GetEnumUnit": {
    "original": "constant native GetEnumUnit takes nothing returns unit",
    "name": "GetEnumUnit",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetEnumUnit()",
    "documentation": "选取的单位"
  },
  "GetFilterDestructable": {
    "original": "constant native GetFilterDestructable takes nothing returns destructable",
    "name": "GetFilterDestructable",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "destructable",
    "insertText": "GetFilterDestructable()",
    "documentation": "匹配的可毁坏物"
  },
  "GetEnumDestructable": {
    "original": "constant native GetEnumDestructable takes nothing returns destructable",
    "name": "GetEnumDestructable",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "destructable",
    "insertText": "GetEnumDestructable()",
    "documentation": "选取的可毁坏物"
  },
  "GetFilterItem": {
    "original": "constant native GetFilterItem takes nothing returns item",
    "name": "GetFilterItem",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "item",
    "insertText": "GetFilterItem()",
    "documentation": "匹配的物品"
  },
  "GetEnumItem": {
    "original": "constant native GetEnumItem takes nothing returns item",
    "name": "GetEnumItem",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "item",
    "insertText": "GetEnumItem()",
    "documentation": "选取的物品"
  },
  "GetFilterPlayer": {
    "original": "constant native GetFilterPlayer takes nothing returns player",
    "name": "GetFilterPlayer",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "player",
    "insertText": "GetFilterPlayer()",
    "documentation": "匹配的玩家"
  },
  "GetEnumPlayer": {
    "original": "constant native GetEnumPlayer takes nothing returns player",
    "name": "GetEnumPlayer",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "player",
    "insertText": "GetEnumPlayer()",
    "documentation": "选取的玩家"
  },
  "GetTriggeringTrigger": {
    "original": "constant native GetTriggeringTrigger takes nothing returns trigger",
    "name": "GetTriggeringTrigger",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "trigger",
    "insertText": "GetTriggeringTrigger()",
    "documentation": "当前触发器"
  },
  "GetTriggerEventId": {
    "original": "constant native GetTriggerEventId takes nothing returns eventid",
    "name": "GetTriggerEventId",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "eventid",
    "insertText": "GetTriggerEventId()",
    "documentation": ""
  },
  "GetTriggerEvalCount": {
    "original": "constant native GetTriggerEvalCount takes trigger whichTrigger returns integer",
    "name": "GetTriggerEvalCount",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetTriggerEvalCount(whichTrigger)",
    "documentation": "触发器赋值统计"
  },
  "GetTriggerExecCount": {
    "original": "constant native GetTriggerExecCount takes trigger whichTrigger returns integer",
    "name": "GetTriggerExecCount",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetTriggerExecCount(whichTrigger)",
    "documentation": "触发器运行次数统计"
  },
  "ExecuteFunc": {
    "original": "native ExecuteFunc takes string funcName returns nothing",
    "name": "ExecuteFunc",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "funcName",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ExecuteFunc(funcName)",
    "documentation": "运行: ,~函数名"
  },
  "And": {
    "original": "native And takes boolexpr operandA, boolexpr operandB returns boolexpr",
    "name": "And",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolexpr",
      "name": "operandA",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "operandB",
      "documentation": ""
    }],
    "returnType": "boolexpr",
    "insertText": "And(operandA, operandB)",
    "documentation": ""
  },
  "Or": {
    "original": "native Or takes boolexpr operandA, boolexpr operandB returns boolexpr",
    "name": "Or",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolexpr",
      "name": "operandA",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "operandB",
      "documentation": ""
    }],
    "returnType": "boolexpr",
    "insertText": "Or(operandA, operandB)",
    "documentation": ""
  },
  "Not": {
    "original": "native Not takes boolexpr operand returns boolexpr",
    "name": "Not",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolexpr",
      "name": "operand",
      "documentation": ""
    }],
    "returnType": "boolexpr",
    "insertText": "Not(operand)",
    "documentation": ""
  },
  "Condition": {
    "original": "native Condition takes code func returns conditionfunc",
    "name": "Condition",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "code",
      "name": "func",
      "documentation": ""
    }],
    "returnType": "conditionfunc",
    "insertText": "Condition(func)",
    "documentation": "限制条件为"
  },
  "DestroyCondition": {
    "original": "native DestroyCondition takes conditionfunc c returns nothing",
    "name": "DestroyCondition",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "conditionfunc",
      "name": "c",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DestroyCondition(c)",
    "documentation": ""
  },
  "Filter": {
    "original": "native Filter takes code func returns filterfunc",
    "name": "Filter",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "code",
      "name": "func",
      "documentation": ""
    }],
    "returnType": "filterfunc",
    "insertText": "Filter(func)",
    "documentation": ""
  },
  "DestroyFilter": {
    "original": "native DestroyFilter takes filterfunc f returns nothing",
    "name": "DestroyFilter",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "filterfunc",
      "name": "f",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DestroyFilter(f)",
    "documentation": ""
  },
  "DestroyBoolExpr": {
    "original": "native DestroyBoolExpr takes boolexpr e returns nothing",
    "name": "DestroyBoolExpr",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolexpr",
      "name": "e",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DestroyBoolExpr(e)",
    "documentation": ""
  },
  "TriggerRegisterVariableEvent": {
    "original": "native TriggerRegisterVariableEvent takes trigger whichTrigger, string varName, limitop opcode, real limitval returns event",
    "name": "TriggerRegisterVariableEvent",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }, {
      "type": "string",
      "name": "varName",
      "documentation": ""
    }, {
      "type": "limitop",
      "name": "opcode",
      "documentation": ""
    }, {
      "type": "real",
      "name": "limitval",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterVariableEvent(whichTrigger, varName, opcode, limitval)",
    "documentation": "变量的值"
  },
  "TriggerRegisterTimerEvent": {
    "original": "native TriggerRegisterTimerEvent takes trigger whichTrigger, real timeout, boolean periodic returns event",
    "name": "TriggerRegisterTimerEvent",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }, {
      "type": "real",
      "name": "timeout",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "periodic",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterTimerEvent(whichTrigger, timeout, periodic)",
    "documentation": ""
  },
  "TriggerRegisterTimerExpireEvent": {
    "original": "native TriggerRegisterTimerExpireEvent takes trigger whichTrigger, timer t returns event",
    "name": "TriggerRegisterTimerExpireEvent",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }, {
      "type": "timer",
      "name": "t",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterTimerExpireEvent(whichTrigger, t)",
    "documentation": ""
  },
  "TriggerRegisterGameStateEvent": {
    "original": "native TriggerRegisterGameStateEvent takes trigger whichTrigger, gamestate whichState, limitop opcode, real limitval returns event",
    "name": "TriggerRegisterGameStateEvent",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }, {
      "type": "gamestate",
      "name": "whichState",
      "documentation": ""
    }, {
      "type": "limitop",
      "name": "opcode",
      "documentation": ""
    }, {
      "type": "real",
      "name": "limitval",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterGameStateEvent(whichTrigger, whichState, opcode, limitval)",
    "documentation": ""
  },
  "TriggerRegisterDialogEvent": {
    "original": "native TriggerRegisterDialogEvent takes trigger whichTrigger, dialog whichDialog returns event",
    "name": "TriggerRegisterDialogEvent",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }, {
      "type": "dialog",
      "name": "whichDialog",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterDialogEvent(whichTrigger, whichDialog)",
    "documentation": ""
  },
  "TriggerRegisterDialogButtonEvent": {
    "original": "native TriggerRegisterDialogButtonEvent takes trigger whichTrigger, button whichButton returns event",
    "name": "TriggerRegisterDialogButtonEvent",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }, {
      "type": "button",
      "name": "whichButton",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterDialogButtonEvent(whichTrigger, whichButton)",
    "documentation": "~对话框按钮, 被点击"
  },
  "GetEventGameState": {
    "original": "constant native GetEventGameState takes nothing returns gamestate",
    "name": "GetEventGameState",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "gamestate",
    "insertText": "GetEventGameState()",
    "documentation": ""
  },
  "TriggerRegisterGameEvent": {
    "original": "native TriggerRegisterGameEvent takes trigger whichTrigger, gameevent whichGameEvent returns event",
    "name": "TriggerRegisterGameEvent",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }, {
      "type": "gameevent",
      "name": "whichGameEvent",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterGameEvent(whichTrigger, whichGameEvent)",
    "documentation": "该游戏将在 ,~Event Type, 后结束"
  },
  "GetWinningPlayer": {
    "original": "constant native GetWinningPlayer takes nothing returns player",
    "name": "GetWinningPlayer",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "player",
    "insertText": "GetWinningPlayer()",
    "documentation": ""
  },
  "TriggerRegisterEnterRegion": {
    "original": "native TriggerRegisterEnterRegion takes trigger whichTrigger, region whichRegion, boolexpr filter returns event",
    "name": "TriggerRegisterEnterRegion",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }, {
      "type": "region",
      "name": "whichRegion",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "filter",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterEnterRegion(whichTrigger, whichRegion, filter)",
    "documentation": "单位进入 ,~区域, 并满足 ,~条件"
  },
  "GetTriggeringRegion": {
    "original": "constant native GetTriggeringRegion takes nothing returns region",
    "name": "GetTriggeringRegion",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "region",
    "insertText": "GetTriggeringRegion()",
    "documentation": "触发区域"
  },
  "GetEnteringUnit": {
    "original": "constant native GetEnteringUnit takes nothing returns unit",
    "name": "GetEnteringUnit",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetEnteringUnit()",
    "documentation": "正在进入的单位"
  },
  "TriggerRegisterLeaveRegion": {
    "original": "native TriggerRegisterLeaveRegion takes trigger whichTrigger, region whichRegion, boolexpr filter returns event",
    "name": "TriggerRegisterLeaveRegion",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }, {
      "type": "region",
      "name": "whichRegion",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "filter",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterLeaveRegion(whichTrigger, whichRegion, filter)",
    "documentation": "单位离开 ,~区域, 并满足 ,~条件"
  },
  "GetLeavingUnit": {
    "original": "constant native GetLeavingUnit takes nothing returns unit",
    "name": "GetLeavingUnit",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetLeavingUnit()",
    "documentation": "正在离开的单位"
  },
  "TriggerRegisterTrackableHitEvent": {
    "original": "native TriggerRegisterTrackableHitEvent takes trigger whichTrigger, trackable t returns event",
    "name": "TriggerRegisterTrackableHitEvent",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }, {
      "type": "trackable",
      "name": "t",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterTrackableHitEvent(whichTrigger, t)",
    "documentation": "鼠标点击 ,~可追踪物"
  },
  "TriggerRegisterTrackableTrackEvent": {
    "original": "native TriggerRegisterTrackableTrackEvent takes trigger whichTrigger, trackable t returns event",
    "name": "TriggerRegisterTrackableTrackEvent",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }, {
      "type": "trackable",
      "name": "t",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterTrackableTrackEvent(whichTrigger, t)",
    "documentation": "鼠标移动到 ,~可追踪物"
  },
  "GetTriggeringTrackable": {
    "original": "constant native GetTriggeringTrackable takes nothing returns trackable",
    "name": "GetTriggeringTrackable",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "trackable",
    "insertText": "GetTriggeringTrackable()",
    "documentation": "事件响应 - 触发可追踪物"
  },
  "GetClickedButton": {
    "original": "constant native GetClickedButton takes nothing returns button",
    "name": "GetClickedButton",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "button",
    "insertText": "GetClickedButton()",
    "documentation": ""
  },
  "GetClickedDialog": {
    "original": "constant native GetClickedDialog takes nothing returns dialog",
    "name": "GetClickedDialog",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "dialog",
    "insertText": "GetClickedDialog()",
    "documentation": ""
  },
  "GetTournamentFinishSoonTimeRemaining": {
    "original": "constant native GetTournamentFinishSoonTimeRemaining takes nothing returns real",
    "name": "GetTournamentFinishSoonTimeRemaining",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "real",
    "insertText": "GetTournamentFinishSoonTimeRemaining()",
    "documentation": "比赛剩余时间"
  },
  "GetTournamentFinishNowRule": {
    "original": "constant native GetTournamentFinishNowRule takes nothing returns integer",
    "name": "GetTournamentFinishNowRule",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "GetTournamentFinishNowRule()",
    "documentation": "比赛结束规则"
  },
  "GetTournamentFinishNowPlayer": {
    "original": "constant native GetTournamentFinishNowPlayer takes nothing returns player",
    "name": "GetTournamentFinishNowPlayer",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "player",
    "insertText": "GetTournamentFinishNowPlayer()",
    "documentation": ""
  },
  "GetTournamentScore": {
    "original": "constant native GetTournamentScore takes player whichPlayer returns integer",
    "name": "GetTournamentScore",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetTournamentScore(whichPlayer)",
    "documentation": "~Player, 的当前对战比赛得分"
  },
  "GetSaveBasicFilename": {
    "original": "constant native GetSaveBasicFilename takes nothing returns string",
    "name": "GetSaveBasicFilename",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "string",
    "insertText": "GetSaveBasicFilename()",
    "documentation": "储存游戏文件名"
  },
  "TriggerRegisterPlayerEvent": {
    "original": "native TriggerRegisterPlayerEvent takes trigger whichTrigger, player whichPlayer, playerevent whichPlayerEvent returns event",
    "name": "TriggerRegisterPlayerEvent",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "playerevent",
      "name": "whichPlayerEvent",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterPlayerEvent(whichTrigger, whichPlayer, whichPlayerEvent)",
    "documentation": ""
  },
  "GetTriggerPlayer": {
    "original": "constant native GetTriggerPlayer takes nothing returns player",
    "name": "GetTriggerPlayer",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "player",
    "insertText": "GetTriggerPlayer()",
    "documentation": "触发玩家"
  },
  "TriggerRegisterPlayerUnitEvent": {
    "original": "native TriggerRegisterPlayerUnitEvent takes trigger whichTrigger, player whichPlayer, playerunitevent whichPlayerUnitEvent, boolexpr filter returns event",
    "name": "TriggerRegisterPlayerUnitEvent",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "playerunitevent",
      "name": "whichPlayerUnitEvent",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "filter",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterPlayerUnitEvent(whichTrigger, whichPlayer, whichPlayerUnitEvent, filter)",
    "documentation": ""
  },
  "GetLevelingUnit": {
    "original": "constant native GetLevelingUnit takes nothing returns unit",
    "name": "GetLevelingUnit",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetLevelingUnit()",
    "documentation": "英雄升级"
  },
  "GetLearningUnit": {
    "original": "constant native GetLearningUnit takes nothing returns unit",
    "name": "GetLearningUnit",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetLearningUnit()",
    "documentation": "学习技能的英雄"
  },
  "GetLearnedSkill": {
    "original": "constant native GetLearnedSkill takes nothing returns integer",
    "name": "GetLearnedSkill",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "GetLearnedSkill()",
    "documentation": "学习技能"
  },
  "GetLearnedSkillLevel": {
    "original": "constant native GetLearnedSkillLevel takes nothing returns integer",
    "name": "GetLearnedSkillLevel",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "GetLearnedSkillLevel()",
    "documentation": "学习的技能的等级"
  },
  "GetRevivableUnit": {
    "original": "constant native GetRevivableUnit takes nothing returns unit",
    "name": "GetRevivableUnit",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetRevivableUnit()",
    "documentation": "可复活的英雄"
  },
  "GetRevivingUnit": {
    "original": "constant native GetRevivingUnit takes nothing returns unit",
    "name": "GetRevivingUnit",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetRevivingUnit()",
    "documentation": "复活英雄"
  },
  "GetAttacker": {
    "original": "constant native GetAttacker takes nothing returns unit",
    "name": "GetAttacker",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetAttacker()",
    "documentation": "攻击的单位"
  },
  "GetRescuer": {
    "original": "constant native GetRescuer takes nothing returns unit",
    "name": "GetRescuer",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetRescuer()",
    "documentation": ""
  },
  "GetDyingUnit": {
    "original": "constant native GetDyingUnit takes nothing returns unit",
    "name": "GetDyingUnit",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetDyingUnit()",
    "documentation": "垂死的单位"
  },
  "GetKillingUnit": {
    "original": "constant native GetKillingUnit takes nothing returns unit",
    "name": "GetKillingUnit",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetKillingUnit()",
    "documentation": ""
  },
  "GetDecayingUnit": {
    "original": "constant native GetDecayingUnit takes nothing returns unit",
    "name": "GetDecayingUnit",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetDecayingUnit()",
    "documentation": "尸体腐烂单位"
  },
  "GetConstructingStructure": {
    "original": "constant native GetConstructingStructure takes nothing returns unit",
    "name": "GetConstructingStructure",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetConstructingStructure()",
    "documentation": "正在建造的建筑"
  },
  "GetCancelledStructure": {
    "original": "constant native GetCancelledStructure takes nothing returns unit",
    "name": "GetCancelledStructure",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetCancelledStructure()",
    "documentation": "取消建造中的建筑"
  },
  "GetConstructedStructure": {
    "original": "constant native GetConstructedStructure takes nothing returns unit",
    "name": "GetConstructedStructure",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetConstructedStructure()",
    "documentation": "已建造的建筑"
  },
  "GetResearchingUnit": {
    "original": "constant native GetResearchingUnit takes nothing returns unit",
    "name": "GetResearchingUnit",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetResearchingUnit()",
    "documentation": "研究科技单位"
  },
  "GetResearched": {
    "original": "constant native GetResearched takes nothing returns integer",
    "name": "GetResearched",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "GetResearched()",
    "documentation": "研究的 科技-类型"
  },
  "GetTrainedUnitType": {
    "original": "constant native GetTrainedUnitType takes nothing returns integer",
    "name": "GetTrainedUnitType",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "GetTrainedUnitType()",
    "documentation": "训练的单位类型"
  },
  "GetTrainedUnit": {
    "original": "constant native GetTrainedUnit takes nothing returns unit",
    "name": "GetTrainedUnit",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetTrainedUnit()",
    "documentation": "训练单位"
  },
  "GetDetectedUnit": {
    "original": "constant native GetDetectedUnit takes nothing returns unit",
    "name": "GetDetectedUnit",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetDetectedUnit()",
    "documentation": ""
  },
  "GetSummoningUnit": {
    "original": "constant native GetSummoningUnit takes nothing returns unit",
    "name": "GetSummoningUnit",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetSummoningUnit()",
    "documentation": "正在召唤的单位"
  },
  "GetSummonedUnit": {
    "original": "constant native GetSummonedUnit takes nothing returns unit",
    "name": "GetSummonedUnit",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetSummonedUnit()",
    "documentation": "已召唤单位"
  },
  "GetTransportUnit": {
    "original": "constant native GetTransportUnit takes nothing returns unit",
    "name": "GetTransportUnit",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetTransportUnit()",
    "documentation": ""
  },
  "GetLoadedUnit": {
    "original": "constant native GetLoadedUnit takes nothing returns unit",
    "name": "GetLoadedUnit",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetLoadedUnit()",
    "documentation": ""
  },
  "GetSellingUnit": {
    "original": "constant native GetSellingUnit takes nothing returns unit",
    "name": "GetSellingUnit",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetSellingUnit()",
    "documentation": "出售单位"
  },
  "GetSoldUnit": {
    "original": "constant native GetSoldUnit takes nothing returns unit",
    "name": "GetSoldUnit",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetSoldUnit()",
    "documentation": "被出售单位"
  },
  "GetBuyingUnit": {
    "original": "constant native GetBuyingUnit takes nothing returns unit",
    "name": "GetBuyingUnit",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetBuyingUnit()",
    "documentation": "在购买的单位"
  },
  "GetSoldItem": {
    "original": "constant native GetSoldItem takes nothing returns item",
    "name": "GetSoldItem",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "item",
    "insertText": "GetSoldItem()",
    "documentation": "卖出的物品"
  },
  "GetChangingUnit": {
    "original": "constant native GetChangingUnit takes nothing returns unit",
    "name": "GetChangingUnit",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetChangingUnit()",
    "documentation": "改变了所有者的单位"
  },
  "GetChangingUnitPrevOwner": {
    "original": "constant native GetChangingUnitPrevOwner takes nothing returns player",
    "name": "GetChangingUnitPrevOwner",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "player",
    "insertText": "GetChangingUnitPrevOwner()",
    "documentation": "前一个所有者"
  },
  "GetManipulatingUnit": {
    "original": "constant native GetManipulatingUnit takes nothing returns unit",
    "name": "GetManipulatingUnit",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetManipulatingUnit()",
    "documentation": "英雄操作物品"
  },
  "GetManipulatedItem": {
    "original": "constant native GetManipulatedItem takes nothing returns item",
    "name": "GetManipulatedItem",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "item",
    "insertText": "GetManipulatedItem()",
    "documentation": "物品存在操作"
  },
  "GetOrderedUnit": {
    "original": "constant native GetOrderedUnit takes nothing returns unit",
    "name": "GetOrderedUnit",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetOrderedUnit()",
    "documentation": "收到命令的单位"
  },
  "GetIssuedOrderId": {
    "original": "constant native GetIssuedOrderId takes nothing returns integer",
    "name": "GetIssuedOrderId",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "GetIssuedOrderId()",
    "documentation": ""
  },
  "GetOrderPointX": {
    "original": "constant native GetOrderPointX takes nothing returns real",
    "name": "GetOrderPointX",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "real",
    "insertText": "GetOrderPointX()",
    "documentation": "命令发布点X坐标"
  },
  "GetOrderPointY": {
    "original": "constant native GetOrderPointY takes nothing returns real",
    "name": "GetOrderPointY",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "real",
    "insertText": "GetOrderPointY()",
    "documentation": "命令发布点Y坐标"
  },
  "GetOrderPointLoc": {
    "original": "constant native GetOrderPointLoc takes nothing returns location",
    "name": "GetOrderPointLoc",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "location",
    "insertText": "GetOrderPointLoc()",
    "documentation": "目标的位置"
  },
  "GetOrderTarget": {
    "original": "constant native GetOrderTarget takes nothing returns widget",
    "name": "GetOrderTarget",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "widget",
    "insertText": "GetOrderTarget()",
    "documentation": ""
  },
  "GetOrderTargetDestructable": {
    "original": "constant native GetOrderTargetDestructable takes nothing returns destructable",
    "name": "GetOrderTargetDestructable",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "destructable",
    "insertText": "GetOrderTargetDestructable()",
    "documentation": "目标的可毁坏物"
  },
  "GetOrderTargetItem": {
    "original": "constant native GetOrderTargetItem takes nothing returns item",
    "name": "GetOrderTargetItem",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "item",
    "insertText": "GetOrderTargetItem()",
    "documentation": "目标的物品"
  },
  "GetOrderTargetUnit": {
    "original": "constant native GetOrderTargetUnit takes nothing returns unit",
    "name": "GetOrderTargetUnit",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetOrderTargetUnit()",
    "documentation": "目标的单位"
  },
  "GetSpellAbilityUnit": {
    "original": "constant native GetSpellAbilityUnit takes nothing returns unit",
    "name": "GetSpellAbilityUnit",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetSpellAbilityUnit()",
    "documentation": "技能单位"
  },
  "GetSpellAbilityId": {
    "original": "constant native GetSpellAbilityId takes nothing returns integer",
    "name": "GetSpellAbilityId",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "GetSpellAbilityId()",
    "documentation": "使用的技能"
  },
  "GetSpellAbility": {
    "original": "constant native GetSpellAbility takes nothing returns ability",
    "name": "GetSpellAbility",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "ability",
    "insertText": "GetSpellAbility()",
    "documentation": ""
  },
  "GetSpellTargetLoc": {
    "original": "constant native GetSpellTargetLoc takes nothing returns location",
    "name": "GetSpellTargetLoc",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "location",
    "insertText": "GetSpellTargetLoc()",
    "documentation": "对其使用技能的目标点"
  },
  "GetSpellTargetX": {
    "original": "constant native GetSpellTargetX takes nothing returns real",
    "name": "GetSpellTargetX",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "real",
    "insertText": "GetSpellTargetX()",
    "documentation": "获取技能目标点的X坐标"
  },
  "GetSpellTargetY": {
    "original": "constant native GetSpellTargetY takes nothing returns real",
    "name": "GetSpellTargetY",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "real",
    "insertText": "GetSpellTargetY()",
    "documentation": "获取技能目标点的Y坐标"
  },
  "GetSpellTargetDestructable": {
    "original": "constant native GetSpellTargetDestructable takes nothing returns destructable",
    "name": "GetSpellTargetDestructable",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "destructable",
    "insertText": "GetSpellTargetDestructable()",
    "documentation": "对其使用技能的目标可毁坏物"
  },
  "GetSpellTargetItem": {
    "original": "constant native GetSpellTargetItem takes nothing returns item",
    "name": "GetSpellTargetItem",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "item",
    "insertText": "GetSpellTargetItem()",
    "documentation": "对其使用技能的目标物品"
  },
  "GetSpellTargetUnit": {
    "original": "constant native GetSpellTargetUnit takes nothing returns unit",
    "name": "GetSpellTargetUnit",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetSpellTargetUnit()",
    "documentation": "对其使用技能的目标单位"
  },
  "TriggerRegisterPlayerAllianceChange": {
    "original": "native TriggerRegisterPlayerAllianceChange takes trigger whichTrigger, player whichPlayer, alliancetype whichAlliance returns event",
    "name": "TriggerRegisterPlayerAllianceChange",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "alliancetype",
      "name": "whichAlliance",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterPlayerAllianceChange(whichTrigger, whichPlayer, whichAlliance)",
    "documentation": "联盟状态改变(特殊)"
  },
  "TriggerRegisterPlayerStateEvent": {
    "original": "native TriggerRegisterPlayerStateEvent takes trigger whichTrigger, player whichPlayer, playerstate whichState, limitop opcode, real limitval returns event",
    "name": "TriggerRegisterPlayerStateEvent",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "playerstate",
      "name": "whichState",
      "documentation": ""
    }, {
      "type": "limitop",
      "name": "opcode",
      "documentation": ""
    }, {
      "type": "real",
      "name": "limitval",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterPlayerStateEvent(whichTrigger, whichPlayer, whichState, opcode, limitval)",
    "documentation": "属性"
  },
  "GetEventPlayerState": {
    "original": "constant native GetEventPlayerState takes nothing returns playerstate",
    "name": "GetEventPlayerState",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "playerstate",
    "insertText": "GetEventPlayerState()",
    "documentation": ""
  },
  "TriggerRegisterPlayerChatEvent": {
    "original": "native TriggerRegisterPlayerChatEvent takes trigger whichTrigger, player whichPlayer, string chatMessageToDetect, boolean exactMatchOnly returns event",
    "name": "TriggerRegisterPlayerChatEvent",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "chatMessageToDetect",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "exactMatchOnly",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterPlayerChatEvent(whichTrigger, whichPlayer, chatMessageToDetect, exactMatchOnly)",
    "documentation": "玩家输入聊天信息"
  },
  "GetEventPlayerChatString": {
    "original": "constant native GetEventPlayerChatString takes nothing returns string",
    "name": "GetEventPlayerChatString",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "string",
    "insertText": "GetEventPlayerChatString()",
    "documentation": "输入的聊天字符"
  },
  "GetEventPlayerChatStringMatched": {
    "original": "constant native GetEventPlayerChatStringMatched takes nothing returns string",
    "name": "GetEventPlayerChatStringMatched",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "string",
    "insertText": "GetEventPlayerChatStringMatched()",
    "documentation": "匹配的聊天字符"
  },
  "TriggerRegisterDeathEvent": {
    "original": "native TriggerRegisterDeathEvent takes trigger whichTrigger, widget whichWidget returns event",
    "name": "TriggerRegisterDeathEvent",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }, {
      "type": "widget",
      "name": "whichWidget",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterDeathEvent(whichTrigger, whichWidget)",
    "documentation": "可毁坏物死亡"
  },
  "GetTriggerUnit": {
    "original": "constant native GetTriggerUnit takes nothing returns unit",
    "name": "GetTriggerUnit",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetTriggerUnit()",
    "documentation": "触发单位"
  },
  "TriggerRegisterUnitStateEvent": {
    "original": "native TriggerRegisterUnitStateEvent takes trigger whichTrigger, unit whichUnit, unitstate whichState, limitop opcode, real limitval returns event",
    "name": "TriggerRegisterUnitStateEvent",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "unitstate",
      "name": "whichState",
      "documentation": ""
    }, {
      "type": "limitop",
      "name": "opcode",
      "documentation": ""
    }, {
      "type": "real",
      "name": "limitval",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterUnitStateEvent(whichTrigger, whichUnit, whichState, opcode, limitval)",
    "documentation": ""
  },
  "GetEventUnitState": {
    "original": "constant native GetEventUnitState takes nothing returns unitstate",
    "name": "GetEventUnitState",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unitstate",
    "insertText": "GetEventUnitState()",
    "documentation": ""
  },
  "TriggerRegisterUnitEvent": {
    "original": "native TriggerRegisterUnitEvent takes trigger whichTrigger, unit whichUnit, unitevent whichEvent returns event",
    "name": "TriggerRegisterUnitEvent",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "unitevent",
      "name": "whichEvent",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterUnitEvent(whichTrigger, whichUnit, whichEvent)",
    "documentation": "详细单位的事件"
  },
  "GetEventDamage": {
    "original": "constant native GetEventDamage takes nothing returns real",
    "name": "GetEventDamage",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "real",
    "insertText": "GetEventDamage()",
    "documentation": "被伤害的生命值"
  },
  "GetEventDamageSource": {
    "original": "constant native GetEventDamageSource takes nothing returns unit",
    "name": "GetEventDamageSource",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetEventDamageSource()",
    "documentation": "伤害来源"
  },
  "GetEventDetectingPlayer": {
    "original": "constant native GetEventDetectingPlayer takes nothing returns player",
    "name": "GetEventDetectingPlayer",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "player",
    "insertText": "GetEventDetectingPlayer()",
    "documentation": ""
  },
  "TriggerRegisterFilterUnitEvent": {
    "original": "native TriggerRegisterFilterUnitEvent takes trigger whichTrigger, unit whichUnit, unitevent whichEvent, boolexpr filter returns event",
    "name": "TriggerRegisterFilterUnitEvent",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "unitevent",
      "name": "whichEvent",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "filter",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterFilterUnitEvent(whichTrigger, whichUnit, whichEvent, filter)",
    "documentation": ""
  },
  "GetEventTargetUnit": {
    "original": "constant native GetEventTargetUnit takes nothing returns unit",
    "name": "GetEventTargetUnit",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetEventTargetUnit()",
    "documentation": "目标单位"
  },
  "TriggerRegisterUnitInRange": {
    "original": "native TriggerRegisterUnitInRange takes trigger whichTrigger, unit whichUnit, real range, boolexpr filter returns event",
    "name": "TriggerRegisterUnitInRange",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "range",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "filter",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterUnitInRange(whichTrigger, whichUnit, range, filter)",
    "documentation": ""
  },
  "TriggerAddCondition": {
    "original": "native TriggerAddCondition takes trigger whichTrigger, boolexpr condition returns triggercondition",
    "name": "TriggerAddCondition",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "condition",
      "documentation": ""
    }],
    "returnType": "triggercondition",
    "insertText": "TriggerAddCondition(whichTrigger, condition)",
    "documentation": "添加触发器限制条件"
  },
  "TriggerRemoveCondition": {
    "original": "native TriggerRemoveCondition takes trigger whichTrigger, triggercondition whichCondition returns nothing",
    "name": "TriggerRemoveCondition",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }, {
      "type": "triggercondition",
      "name": "whichCondition",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TriggerRemoveCondition(whichTrigger, whichCondition)",
    "documentation": ""
  },
  "TriggerClearConditions": {
    "original": "native TriggerClearConditions takes trigger whichTrigger returns nothing",
    "name": "TriggerClearConditions",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TriggerClearConditions(whichTrigger)",
    "documentation": ""
  },
  "TriggerAddAction": {
    "original": "native TriggerAddAction takes trigger whichTrigger, code actionFunc returns triggeraction",
    "name": "TriggerAddAction",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }, {
      "type": "code",
      "name": "actionFunc",
      "documentation": ""
    }],
    "returnType": "triggeraction",
    "insertText": "TriggerAddAction(whichTrigger, actionFunc)",
    "documentation": "添加触发器动作"
  },
  "TriggerRemoveAction": {
    "original": "native TriggerRemoveAction takes trigger whichTrigger, triggeraction whichAction returns nothing",
    "name": "TriggerRemoveAction",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }, {
      "type": "triggeraction",
      "name": "whichAction",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TriggerRemoveAction(whichTrigger, whichAction)",
    "documentation": ""
  },
  "TriggerClearActions": {
    "original": "native TriggerClearActions takes trigger whichTrigger returns nothing",
    "name": "TriggerClearActions",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TriggerClearActions(whichTrigger)",
    "documentation": ""
  },
  "TriggerSleepAction": {
    "original": "native TriggerSleepAction takes real timeout returns nothing",
    "name": "TriggerSleepAction",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "timeout",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TriggerSleepAction(timeout)",
    "documentation": "等待"
  },
  "TriggerWaitForSound": {
    "original": "native TriggerWaitForSound takes sound s, real offset returns nothing",
    "name": "TriggerWaitForSound",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "sound",
      "name": "s",
      "documentation": ""
    }, {
      "type": "real",
      "name": "offset",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TriggerWaitForSound(s, offset)",
    "documentation": ""
  },
  "TriggerEvaluate": {
    "original": "native TriggerEvaluate takes trigger whichTrigger returns boolean",
    "name": "TriggerEvaluate",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "TriggerEvaluate(whichTrigger)",
    "documentation": "触发器有条件"
  },
  "TriggerExecute": {
    "original": "native TriggerExecute takes trigger whichTrigger returns nothing",
    "name": "TriggerExecute",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TriggerExecute(whichTrigger)",
    "documentation": "运行触发器 (忽略条件)"
  },
  "TriggerExecuteWait": {
    "original": "native TriggerExecuteWait takes trigger whichTrigger returns nothing",
    "name": "TriggerExecuteWait",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TriggerExecuteWait(whichTrigger)",
    "documentation": ""
  },
  "TriggerSyncStart": {
    "original": "native TriggerSyncStart takes nothing returns nothing",
    "name": "TriggerSyncStart",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "TriggerSyncStart()",
    "documentation": ""
  },
  "TriggerSyncReady": {
    "original": "native TriggerSyncReady takes nothing returns nothing",
    "name": "TriggerSyncReady",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "TriggerSyncReady()",
    "documentation": ""
  },
  "GetWidgetLife": {
    "original": "native GetWidgetLife takes widget whichWidget returns real",
    "name": "GetWidgetLife",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "widget",
      "name": "whichWidget",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetWidgetLife(whichWidget)",
    "documentation": ""
  },
  "SetWidgetLife": {
    "original": "native SetWidgetLife takes widget whichWidget, real newLife returns nothing",
    "name": "SetWidgetLife",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "widget",
      "name": "whichWidget",
      "documentation": ""
    }, {
      "type": "real",
      "name": "newLife",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetWidgetLife(whichWidget, newLife)",
    "documentation": ""
  },
  "GetWidgetX": {
    "original": "native GetWidgetX takes widget whichWidget returns real",
    "name": "GetWidgetX",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "widget",
      "name": "whichWidget",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetWidgetX(whichWidget)",
    "documentation": ""
  },
  "GetWidgetY": {
    "original": "native GetWidgetY takes widget whichWidget returns real",
    "name": "GetWidgetY",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "widget",
      "name": "whichWidget",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetWidgetY(whichWidget)",
    "documentation": ""
  },
  "GetTriggerWidget": {
    "original": "constant native GetTriggerWidget takes nothing returns widget",
    "name": "GetTriggerWidget",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "widget",
    "insertText": "GetTriggerWidget()",
    "documentation": ""
  },
  "CreateDestructable": {
    "original": "native CreateDestructable takes integer objectid, real x, real y, real face, real scale, integer variation returns destructable",
    "name": "CreateDestructable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "objectid",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "face",
      "documentation": ""
    }, {
      "type": "real",
      "name": "scale",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "variation",
      "documentation": ""
    }],
    "returnType": "destructable",
    "insertText": "CreateDestructable(objectid, x, y, face, scale, variation)",
    "documentation": ""
  },
  "CreateDestructableZ": {
    "original": "native CreateDestructableZ takes integer objectid, real x, real y, real z, real face, real scale, integer variation returns destructable",
    "name": "CreateDestructableZ",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "objectid",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "z",
      "documentation": ""
    }, {
      "type": "real",
      "name": "face",
      "documentation": ""
    }, {
      "type": "real",
      "name": "scale",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "variation",
      "documentation": ""
    }],
    "returnType": "destructable",
    "insertText": "CreateDestructableZ(objectid, x, y, z, face, scale, variation)",
    "documentation": "新建的 ,~可破坏物类型, 在(,~X,,,~Y,,,~Z,),面向角度: ,~Direction, 尺寸缩放: ,~Scale, 样式: ,~Variation"
  },
  "CreateDeadDestructable": {
    "original": "native CreateDeadDestructable takes integer objectid, real x, real y, real face, real scale, integer variation returns destructable",
    "name": "CreateDeadDestructable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "objectid",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "face",
      "documentation": ""
    }, {
      "type": "real",
      "name": "scale",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "variation",
      "documentation": ""
    }],
    "returnType": "destructable",
    "insertText": "CreateDeadDestructable(objectid, x, y, face, scale, variation)",
    "documentation": ""
  },
  "CreateDeadDestructableZ": {
    "original": "native CreateDeadDestructableZ takes integer objectid, real x, real y, real z, real face, real scale, integer variation returns destructable",
    "name": "CreateDeadDestructableZ",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "objectid",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "z",
      "documentation": ""
    }, {
      "type": "real",
      "name": "face",
      "documentation": ""
    }, {
      "type": "real",
      "name": "scale",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "variation",
      "documentation": ""
    }],
    "returnType": "destructable",
    "insertText": "CreateDeadDestructableZ(objectid, x, y, z, face, scale, variation)",
    "documentation": "新建死亡的 ,~可破坏物类型, 在(,~X,,,~Y,,,~Z),面向角度: ,~Direction, 尺寸缩放: ,~Scale, 样式: ,~Variation"
  },
  "RemoveDestructable": {
    "original": "native RemoveDestructable takes destructable d returns nothing",
    "name": "RemoveDestructable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RemoveDestructable(d)",
    "documentation": "删除 可毁坏物"
  },
  "KillDestructable": {
    "original": "native KillDestructable takes destructable d returns nothing",
    "name": "KillDestructable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "KillDestructable(d)",
    "documentation": "杀死 可毁坏物"
  },
  "SetDestructableInvulnerable": {
    "original": "native SetDestructableInvulnerable takes destructable d, boolean flag returns nothing",
    "name": "SetDestructableInvulnerable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetDestructableInvulnerable(d, flag)",
    "documentation": ""
  },
  "IsDestructableInvulnerable": {
    "original": "native IsDestructableInvulnerable takes destructable d returns boolean",
    "name": "IsDestructableInvulnerable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsDestructableInvulnerable(d)",
    "documentation": ""
  },
  "EnumDestructablesInRect": {
    "original": "native EnumDestructablesInRect takes rect r, boolexpr filter, code actionFunc returns nothing",
    "name": "EnumDestructablesInRect",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "rect",
      "name": "r",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "filter",
      "documentation": ""
    }, {
      "type": "code",
      "name": "actionFunc",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "EnumDestructablesInRect(r, filter, actionFunc)",
    "documentation": ""
  },
  "GetDestructableTypeId": {
    "original": "native GetDestructableTypeId takes destructable d returns integer",
    "name": "GetDestructableTypeId",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetDestructableTypeId(d)",
    "documentation": "建筑的类型"
  },
  "GetDestructableX": {
    "original": "native GetDestructableX takes destructable d returns real",
    "name": "GetDestructableX",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetDestructableX(d)",
    "documentation": "~可破坏物, 所在X轴坐标"
  },
  "GetDestructableY": {
    "original": "native GetDestructableY takes destructable d returns real",
    "name": "GetDestructableY",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetDestructableY(d)",
    "documentation": "~可破坏物, 所在Y轴坐标"
  },
  "SetDestructableLife": {
    "original": "native SetDestructableLife takes destructable d, real life returns nothing",
    "name": "SetDestructableLife",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }, {
      "type": "real",
      "name": "life",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetDestructableLife(d, life)",
    "documentation": "设置 可毁坏物 生命 (值)"
  },
  "GetDestructableLife": {
    "original": "native GetDestructableLife takes destructable d returns real",
    "name": "GetDestructableLife",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetDestructableLife(d)",
    "documentation": "生命值 (可毁坏物)"
  },
  "SetDestructableMaxLife": {
    "original": "native SetDestructableMaxLife takes destructable d, real max returns nothing",
    "name": "SetDestructableMaxLife",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }, {
      "type": "real",
      "name": "max",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetDestructableMaxLife(d, max)",
    "documentation": ""
  },
  "GetDestructableMaxLife": {
    "original": "native GetDestructableMaxLife takes destructable d returns real",
    "name": "GetDestructableMaxLife",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetDestructableMaxLife(d)",
    "documentation": "最大生命值 (可毁坏物)"
  },
  "DestructableRestoreLife": {
    "original": "native DestructableRestoreLife takes destructable d, real life, boolean birth returns nothing",
    "name": "DestructableRestoreLife",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }, {
      "type": "real",
      "name": "life",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "birth",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DestructableRestoreLife(d, life, birth)",
    "documentation": "复活 可毁坏物"
  },
  "QueueDestructableAnimation": {
    "original": "native QueueDestructableAnimation takes destructable d, string whichAnimation returns nothing",
    "name": "QueueDestructableAnimation",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }, {
      "type": "string",
      "name": "whichAnimation",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "QueueDestructableAnimation(d, whichAnimation)",
    "documentation": ""
  },
  "SetDestructableAnimation": {
    "original": "native SetDestructableAnimation takes destructable d, string whichAnimation returns nothing",
    "name": "SetDestructableAnimation",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }, {
      "type": "string",
      "name": "whichAnimation",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetDestructableAnimation(d, whichAnimation)",
    "documentation": ""
  },
  "SetDestructableAnimationSpeed": {
    "original": "native SetDestructableAnimationSpeed takes destructable d, real speedFactor returns nothing",
    "name": "SetDestructableAnimationSpeed",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }, {
      "type": "real",
      "name": "speedFactor",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetDestructableAnimationSpeed(d, speedFactor)",
    "documentation": "改变 ,~可破坏物, 的动画播放速度为正常的 ,~Percent,倍"
  },
  "ShowDestructable": {
    "original": "native ShowDestructable takes destructable d, boolean flag returns nothing",
    "name": "ShowDestructable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ShowDestructable(d, flag)",
    "documentation": "设置 ,~可破坏物, 的状态为 ,~Show/Hide"
  },
  "GetDestructableOccluderHeight": {
    "original": "native GetDestructableOccluderHeight takes destructable d returns real",
    "name": "GetDestructableOccluderHeight",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetDestructableOccluderHeight(d)",
    "documentation": "闭塞高度 (可毁坏物)"
  },
  "SetDestructableOccluderHeight": {
    "original": "native SetDestructableOccluderHeight takes destructable d, real height returns nothing",
    "name": "SetDestructableOccluderHeight",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }, {
      "type": "real",
      "name": "height",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetDestructableOccluderHeight(d, height)",
    "documentation": "设置闭塞高度"
  },
  "GetDestructableName": {
    "original": "native GetDestructableName takes destructable d returns string",
    "name": "GetDestructableName",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "GetDestructableName(d)",
    "documentation": "可毁坏物的名字"
  },
  "GetTriggerDestructable": {
    "original": "constant native GetTriggerDestructable takes nothing returns destructable",
    "name": "GetTriggerDestructable",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "destructable",
    "insertText": "GetTriggerDestructable()",
    "documentation": ""
  },
  "CreateItem": {
    "original": "native CreateItem takes integer itemid, real x, real y returns item",
    "name": "CreateItem",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "itemid",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": "item",
    "insertText": "CreateItem(itemid, x, y)",
    "documentation": "新建 ,~物品, 在(,~X,,,~Y,)"
  },
  "RemoveItem": {
    "original": "native RemoveItem takes item whichItem returns nothing",
    "name": "RemoveItem",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RemoveItem(whichItem)",
    "documentation": "删除物品"
  },
  "GetItemPlayer": {
    "original": "native GetItemPlayer takes item whichItem returns player",
    "name": "GetItemPlayer",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }],
    "returnType": "player",
    "insertText": "GetItemPlayer(whichItem)",
    "documentation": "物品的所有者"
  },
  "GetItemTypeId": {
    "original": "native GetItemTypeId takes item i returns integer",
    "name": "GetItemTypeId",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetItemTypeId(i)",
    "documentation": "物品的类型"
  },
  "GetItemX": {
    "original": "native GetItemX takes item i returns real",
    "name": "GetItemX",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetItemX(i)",
    "documentation": "~物品, 的X轴坐标"
  },
  "GetItemY": {
    "original": "native GetItemY takes item i returns real",
    "name": "GetItemY",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "i",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetItemY(i)",
    "documentation": "~物品, 的Y轴坐标"
  },
  "SetItemPosition": {
    "original": "native SetItemPosition takes item i, real x, real y returns nothing",
    "name": "SetItemPosition",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "i",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetItemPosition(i, x, y)",
    "documentation": "移动 ,~物品, 到(,~X,,,~Y,)"
  },
  "SetItemDropOnDeath": {
    "original": "native SetItemDropOnDeath takes item whichItem, boolean flag returns nothing",
    "name": "SetItemDropOnDeath",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetItemDropOnDeath(whichItem, flag)",
    "documentation": ""
  },
  "SetItemDroppable": {
    "original": "native SetItemDroppable takes item i, boolean flag returns nothing",
    "name": "SetItemDroppable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "i",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetItemDroppable(i, flag)",
    "documentation": ""
  },
  "SetItemPawnable": {
    "original": "native SetItemPawnable takes item i, boolean flag returns nothing",
    "name": "SetItemPawnable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "i",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetItemPawnable(i, flag)",
    "documentation": "设置物品能否变卖"
  },
  "SetItemPlayer": {
    "original": "native SetItemPlayer takes item whichItem, player whichPlayer, boolean changeColor returns nothing",
    "name": "SetItemPlayer",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "changeColor",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetItemPlayer(whichItem, whichPlayer, changeColor)",
    "documentation": ""
  },
  "SetItemInvulnerable": {
    "original": "native SetItemInvulnerable takes item whichItem, boolean flag returns nothing",
    "name": "SetItemInvulnerable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetItemInvulnerable(whichItem, flag)",
    "documentation": ""
  },
  "IsItemInvulnerable": {
    "original": "native IsItemInvulnerable takes item whichItem returns boolean",
    "name": "IsItemInvulnerable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsItemInvulnerable(whichItem)",
    "documentation": "物品是无敌的"
  },
  "SetItemVisible": {
    "original": "native SetItemVisible takes item whichItem, boolean show returns nothing",
    "name": "SetItemVisible",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "show",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetItemVisible(whichItem, show)",
    "documentation": "设置 ,~物品, 的状态为: ,~Show/Hide"
  },
  "IsItemVisible": {
    "original": "native IsItemVisible takes item whichItem returns boolean",
    "name": "IsItemVisible",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsItemVisible(whichItem)",
    "documentation": "~物品, 是可见的"
  },
  "IsItemOwned": {
    "original": "native IsItemOwned takes item whichItem returns boolean",
    "name": "IsItemOwned",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsItemOwned(whichItem)",
    "documentation": "物品所有者"
  },
  "IsItemPowerup": {
    "original": "native IsItemPowerup takes item whichItem returns boolean",
    "name": "IsItemPowerup",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsItemPowerup(whichItem)",
    "documentation": "~物品, 是拾取时自动使用类物品"
  },
  "IsItemSellable": {
    "original": "native IsItemSellable takes item whichItem returns boolean",
    "name": "IsItemSellable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsItemSellable(whichItem)",
    "documentation": "~物品, 可被市场随机出售"
  },
  "IsItemPawnable": {
    "original": "native IsItemPawnable takes item whichItem returns boolean",
    "name": "IsItemPawnable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsItemPawnable(whichItem)",
    "documentation": "~物品, 可被抵押"
  },
  "IsItemIdPowerup": {
    "original": "native IsItemIdPowerup takes integer itemId returns boolean",
    "name": "IsItemIdPowerup",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "itemId",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsItemIdPowerup(itemId)",
    "documentation": ""
  },
  "IsItemIdSellable": {
    "original": "native IsItemIdSellable takes integer itemId returns boolean",
    "name": "IsItemIdSellable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "itemId",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsItemIdSellable(itemId)",
    "documentation": ""
  },
  "IsItemIdPawnable": {
    "original": "native IsItemIdPawnable takes integer itemId returns boolean",
    "name": "IsItemIdPawnable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "itemId",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsItemIdPawnable(itemId)",
    "documentation": ""
  },
  "EnumItemsInRect": {
    "original": "native EnumItemsInRect takes rect r, boolexpr filter, code actionFunc returns nothing",
    "name": "EnumItemsInRect",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "rect",
      "name": "r",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "filter",
      "documentation": ""
    }, {
      "type": "code",
      "name": "actionFunc",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "EnumItemsInRect(r, filter, actionFunc)",
    "documentation": ""
  },
  "GetItemLevel": {
    "original": "native GetItemLevel takes item whichItem returns integer",
    "name": "GetItemLevel",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetItemLevel(whichItem)",
    "documentation": "物品等级"
  },
  "GetItemType": {
    "original": "native GetItemType takes item whichItem returns itemtype",
    "name": "GetItemType",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }],
    "returnType": "itemtype",
    "insertText": "GetItemType(whichItem)",
    "documentation": "物品的类别"
  },
  "SetItemDropID": {
    "original": "native SetItemDropID takes item whichItem, integer unitId returns nothing",
    "name": "SetItemDropID",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitId",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetItemDropID(whichItem, unitId)",
    "documentation": "设置 ,~物品, 产生 ,~单位类型"
  },
  "GetItemName": {
    "original": "constant native GetItemName takes item whichItem returns string",
    "name": "GetItemName",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "GetItemName(whichItem)",
    "documentation": "物品名"
  },
  "GetItemCharges": {
    "original": "native GetItemCharges takes item whichItem returns integer",
    "name": "GetItemCharges",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetItemCharges(whichItem)",
    "documentation": "物品的数量"
  },
  "SetItemCharges": {
    "original": "native SetItemCharges takes item whichItem, integer charges returns nothing",
    "name": "SetItemCharges",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "charges",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetItemCharges(whichItem, charges)",
    "documentation": "设置物品数量[使用次数]"
  },
  "GetItemUserData": {
    "original": "native GetItemUserData takes item whichItem returns integer",
    "name": "GetItemUserData",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetItemUserData(whichItem)",
    "documentation": "物品自定义值"
  },
  "SetItemUserData": {
    "original": "native SetItemUserData takes item whichItem, integer data returns nothing",
    "name": "SetItemUserData",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "data",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetItemUserData(whichItem, data)",
    "documentation": "设置物品自定义数据"
  },
  "CreateUnit": {
    "original": "native CreateUnit takes player id, integer unitid, real x, real y, real face returns unit",
    "name": "CreateUnit",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "id",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "face",
      "documentation": ""
    }],
    "returnType": "unit",
    "insertText": "CreateUnit(id, unitid, x, y, face)",
    "documentation": "新建 ,~玩家, 的 ,~单位, 在(,~X,,,~Y,),面向角度:,~Face, 度"
  },
  "CreateUnitByName": {
    "original": "native CreateUnitByName takes player whichPlayer, string unitname, real x, real y, real face returns unit",
    "name": "CreateUnitByName",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "unitname",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "face",
      "documentation": ""
    }],
    "returnType": "unit",
    "insertText": "CreateUnitByName(whichPlayer, unitname, x, y, face)",
    "documentation": ""
  },
  "CreateUnitAtLoc": {
    "original": "native CreateUnitAtLoc takes player id, integer unitid, location whichLocation, real face returns unit",
    "name": "CreateUnitAtLoc",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "id",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }, {
      "type": "location",
      "name": "whichLocation",
      "documentation": ""
    }, {
      "type": "real",
      "name": "face",
      "documentation": ""
    }],
    "returnType": "unit",
    "insertText": "CreateUnitAtLoc(id, unitid, whichLocation, face)",
    "documentation": "新建 ,~玩家, 的 ,~单位, 在 ,~点, 面向角度:,~Face, 度"
  },
  "CreateUnitAtLocByName": {
    "original": "native CreateUnitAtLocByName takes player id, string unitname, location whichLocation, real face returns unit",
    "name": "CreateUnitAtLocByName",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "id",
      "documentation": ""
    }, {
      "type": "string",
      "name": "unitname",
      "documentation": ""
    }, {
      "type": "location",
      "name": "whichLocation",
      "documentation": ""
    }, {
      "type": "real",
      "name": "face",
      "documentation": ""
    }],
    "returnType": "unit",
    "insertText": "CreateUnitAtLocByName(id, unitname, whichLocation, face)",
    "documentation": ""
  },
  "CreateCorpse": {
    "original": "native CreateCorpse takes player whichPlayer, integer unitid, real x, real y, real face returns unit",
    "name": "CreateCorpse",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "face",
      "documentation": ""
    }],
    "returnType": "unit",
    "insertText": "CreateCorpse(whichPlayer, unitid, x, y, face)",
    "documentation": "新建 ,~玩家, 的 ,~单位, 的尸体在(,~X,,,~Y,),面向角度:,~Face, 度"
  },
  "KillUnit": {
    "original": "native KillUnit takes unit whichUnit returns nothing",
    "name": "KillUnit",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "KillUnit(whichUnit)",
    "documentation": "杀死单位"
  },
  "RemoveUnit": {
    "original": "native RemoveUnit takes unit whichUnit returns nothing",
    "name": "RemoveUnit",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RemoveUnit(whichUnit)",
    "documentation": "删除单位"
  },
  "ShowUnit": {
    "original": "native ShowUnit takes unit whichUnit, boolean show returns nothing",
    "name": "ShowUnit",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "show",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ShowUnit(whichUnit, show)",
    "documentation": "设置 ,~单位, 的状态为 ,~显示/隐藏"
  },
  "SetUnitState": {
    "original": "native SetUnitState takes unit whichUnit, unitstate whichUnitState, real newVal returns nothing",
    "name": "SetUnitState",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "unitstate",
      "name": "whichUnitState",
      "documentation": ""
    }, {
      "type": "real",
      "name": "newVal",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitState(whichUnit, whichUnitState, newVal)",
    "documentation": "设置 ,~单位, 的 ,~属性, 为 ,~Value"
  },
  "SetUnitX": {
    "original": "native SetUnitX takes unit whichUnit, real newX returns nothing",
    "name": "SetUnitX",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "newX",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitX(whichUnit, newX)",
    "documentation": "设置 ,~单位, 的X坐标为 ,~X"
  },
  "SetUnitY": {
    "original": "native SetUnitY takes unit whichUnit, real newY returns nothing",
    "name": "SetUnitY",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "newY",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitY(whichUnit, newY)",
    "documentation": "设置 ,~单位, 的Y坐标为 ,~Y"
  },
  "SetUnitPosition": {
    "original": "native SetUnitPosition takes unit whichUnit, real newX, real newY returns nothing",
    "name": "SetUnitPosition",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "newX",
      "documentation": ""
    }, {
      "type": "real",
      "name": "newY",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitPosition(whichUnit, newX, newY)",
    "documentation": "立即移动 ,~单位, 到(,~X,,,~Y,)"
  },
  "SetUnitPositionLoc": {
    "original": "native SetUnitPositionLoc takes unit whichUnit, location whichLocation returns nothing",
    "name": "SetUnitPositionLoc",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "location",
      "name": "whichLocation",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitPositionLoc(whichUnit, whichLocation)",
    "documentation": "移动单位 (立刻)"
  },
  "SetUnitFacing": {
    "original": "native SetUnitFacing takes unit whichUnit, real facingAngle returns nothing",
    "name": "SetUnitFacing",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "facingAngle",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitFacing(whichUnit, facingAngle)",
    "documentation": "设置 ,~单位, 的面向角度为 ,~Angle, 度"
  },
  "SetUnitFacingTimed": {
    "original": "native SetUnitFacingTimed takes unit whichUnit, real facingAngle, real duration returns nothing",
    "name": "SetUnitFacingTimed",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "facingAngle",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitFacingTimed(whichUnit, facingAngle, duration)",
    "documentation": "设置单位面对角度"
  },
  "SetUnitMoveSpeed": {
    "original": "native SetUnitMoveSpeed takes unit whichUnit, real newSpeed returns nothing",
    "name": "SetUnitMoveSpeed",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "newSpeed",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitMoveSpeed(whichUnit, newSpeed)",
    "documentation": "设置单位移动速度"
  },
  "SetUnitFlyHeight": {
    "original": "native SetUnitFlyHeight takes unit whichUnit, real newHeight, real rate returns nothing",
    "name": "SetUnitFlyHeight",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "newHeight",
      "documentation": ""
    }, {
      "type": "real",
      "name": "rate",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitFlyHeight(whichUnit, newHeight, rate)",
    "documentation": ""
  },
  "SetUnitTurnSpeed": {
    "original": "native SetUnitTurnSpeed takes unit whichUnit, real newTurnSpeed returns nothing",
    "name": "SetUnitTurnSpeed",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "newTurnSpeed",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitTurnSpeed(whichUnit, newTurnSpeed)",
    "documentation": ""
  },
  "SetUnitPropWindow": {
    "original": "native SetUnitPropWindow takes unit whichUnit, real newPropWindowAngle returns nothing",
    "name": "SetUnitPropWindow",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "newPropWindowAngle",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitPropWindow(whichUnit, newPropWindowAngle)",
    "documentation": "改变 ,~单位, 的转向角度为 ,~数值, (弧度制)"
  },
  "SetUnitAcquireRange": {
    "original": "native SetUnitAcquireRange takes unit whichUnit, real newAcquireRange returns nothing",
    "name": "SetUnitAcquireRange",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "newAcquireRange",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitAcquireRange(whichUnit, newAcquireRange)",
    "documentation": ""
  },
  "SetUnitCreepGuard": {
    "original": "native SetUnitCreepGuard takes unit whichUnit, boolean creepGuard returns nothing",
    "name": "SetUnitCreepGuard",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "creepGuard",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitCreepGuard(whichUnit, creepGuard)",
    "documentation": "设置 ,~单位, 的警戒点: ,~option"
  },
  "GetUnitAcquireRange": {
    "original": "native GetUnitAcquireRange takes unit whichUnit returns real",
    "name": "GetUnitAcquireRange",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetUnitAcquireRange(whichUnit)",
    "documentation": "单位射程 (当前)"
  },
  "GetUnitTurnSpeed": {
    "original": "native GetUnitTurnSpeed takes unit whichUnit returns real",
    "name": "GetUnitTurnSpeed",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetUnitTurnSpeed(whichUnit)",
    "documentation": "转向速度 (当前)"
  },
  "GetUnitPropWindow": {
    "original": "native GetUnitPropWindow takes unit whichUnit returns real",
    "name": "GetUnitPropWindow",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetUnitPropWindow(whichUnit)",
    "documentation": "~单位, 的当前转向角度(弧度制)"
  },
  "GetUnitFlyHeight": {
    "original": "native GetUnitFlyHeight takes unit whichUnit returns real",
    "name": "GetUnitFlyHeight",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetUnitFlyHeight(whichUnit)",
    "documentation": "飞行高度 (当前)"
  },
  "GetUnitDefaultAcquireRange": {
    "original": "native GetUnitDefaultAcquireRange takes unit whichUnit returns real",
    "name": "GetUnitDefaultAcquireRange",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetUnitDefaultAcquireRange(whichUnit)",
    "documentation": "单位射程 (默认)"
  },
  "GetUnitDefaultTurnSpeed": {
    "original": "native GetUnitDefaultTurnSpeed takes unit whichUnit returns real",
    "name": "GetUnitDefaultTurnSpeed",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetUnitDefaultTurnSpeed(whichUnit)",
    "documentation": "转向速度 (默认)"
  },
  "GetUnitDefaultPropWindow": {
    "original": "native GetUnitDefaultPropWindow takes unit whichUnit returns real",
    "name": "GetUnitDefaultPropWindow",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetUnitDefaultPropWindow(whichUnit)",
    "documentation": ""
  },
  "GetUnitDefaultFlyHeight": {
    "original": "native GetUnitDefaultFlyHeight takes unit whichUnit returns real",
    "name": "GetUnitDefaultFlyHeight",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetUnitDefaultFlyHeight(whichUnit)",
    "documentation": "飞行高度 (默认)"
  },
  "SetUnitOwner": {
    "original": "native SetUnitOwner takes unit whichUnit, player whichPlayer, boolean changeColor returns nothing",
    "name": "SetUnitOwner",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "changeColor",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitOwner(whichUnit, whichPlayer, changeColor)",
    "documentation": "改变单位所有者"
  },
  "SetUnitColor": {
    "original": "native SetUnitColor takes unit whichUnit, playercolor whichColor returns nothing",
    "name": "SetUnitColor",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "playercolor",
      "name": "whichColor",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitColor(whichUnit, whichColor)",
    "documentation": "改变单位颜色"
  },
  "SetUnitScale": {
    "original": "native SetUnitScale takes unit whichUnit, real scaleX, real scaleY, real scaleZ returns nothing",
    "name": "SetUnitScale",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "scaleX",
      "documentation": ""
    }, {
      "type": "real",
      "name": "scaleY",
      "documentation": ""
    }, {
      "type": "real",
      "name": "scaleZ",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitScale(whichUnit, scaleX, scaleY, scaleZ)",
    "documentation": "改变 ,~单位, 的尺寸缩放为:(,~X,,,~Y,,,~Z,)"
  },
  "SetUnitTimeScale": {
    "original": "native SetUnitTimeScale takes unit whichUnit, real timeScale returns nothing",
    "name": "SetUnitTimeScale",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "timeScale",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitTimeScale(whichUnit, timeScale)",
    "documentation": "改变 ,~单位, 的动画播放速度为正常速度的 ,~Percent, 倍"
  },
  "SetUnitBlendTime": {
    "original": "native SetUnitBlendTime takes unit whichUnit, real blendTime returns nothing",
    "name": "SetUnitBlendTime",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "blendTime",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitBlendTime(whichUnit, blendTime)",
    "documentation": ""
  },
  "SetUnitVertexColor": {
    "original": "native SetUnitVertexColor takes unit whichUnit, integer red, integer green, integer blue, integer alpha returns nothing",
    "name": "SetUnitVertexColor",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "red",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "green",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "alpha",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitVertexColor(whichUnit, red, green, blue, alpha)",
    "documentation": "改变 ,~单位, 的颜色值: (,~Red,,,~Green,,,~Blue,), 透明值: ,~Transparency"
  },
  "QueueUnitAnimation": {
    "original": "native QueueUnitAnimation takes unit whichUnit, string whichAnimation returns nothing",
    "name": "QueueUnitAnimation",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "string",
      "name": "whichAnimation",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "QueueUnitAnimation(whichUnit, whichAnimation)",
    "documentation": ""
  },
  "SetUnitAnimation": {
    "original": "native SetUnitAnimation takes unit whichUnit, string whichAnimation returns nothing",
    "name": "SetUnitAnimation",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "string",
      "name": "whichAnimation",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitAnimation(whichUnit, whichAnimation)",
    "documentation": "播放单位动作"
  },
  "SetUnitAnimationByIndex": {
    "original": "native SetUnitAnimationByIndex takes unit whichUnit, integer whichAnimation returns nothing",
    "name": "SetUnitAnimationByIndex",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "whichAnimation",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitAnimationByIndex(whichUnit, whichAnimation)",
    "documentation": "播放 ,~单位, 的第,~序号, 号动作"
  },
  "SetUnitAnimationWithRarity": {
    "original": "native SetUnitAnimationWithRarity takes unit whichUnit, string whichAnimation, raritycontrol rarity returns nothing",
    "name": "SetUnitAnimationWithRarity",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "string",
      "name": "whichAnimation",
      "documentation": ""
    }, {
      "type": "raritycontrol",
      "name": "rarity",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitAnimationWithRarity(whichUnit, whichAnimation, rarity)",
    "documentation": "播放单位动作 (指定概率)"
  },
  "AddUnitAnimationProperties": {
    "original": "native AddUnitAnimationProperties takes unit whichUnit, string animProperties, boolean add returns nothing",
    "name": "AddUnitAnimationProperties",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "string",
      "name": "animProperties",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "add",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "AddUnitAnimationProperties(whichUnit, animProperties, add)",
    "documentation": "给 ,~单位, 附加动作 ,~Tag, ,状态为 ,~Add/Remove"
  },
  "SetUnitLookAt": {
    "original": "native SetUnitLookAt takes unit whichUnit, string whichBone, unit lookAtTarget, real offsetX, real offsetY, real offsetZ returns nothing",
    "name": "SetUnitLookAt",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "string",
      "name": "whichBone",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "lookAtTarget",
      "documentation": ""
    }, {
      "type": "real",
      "name": "offsetX",
      "documentation": ""
    }, {
      "type": "real",
      "name": "offsetY",
      "documentation": ""
    }, {
      "type": "real",
      "name": "offsetZ",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitLookAt(whichUnit, whichBone, lookAtTarget, offsetX, offsetY, offsetZ)",
    "documentation": "锁定单位脸面对方向"
  },
  "ResetUnitLookAt": {
    "original": "native ResetUnitLookAt takes unit whichUnit returns nothing",
    "name": "ResetUnitLookAt",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ResetUnitLookAt(whichUnit)",
    "documentation": "重置单位面对方向"
  },
  "SetUnitRescuable": {
    "original": "native SetUnitRescuable takes unit whichUnit, player byWhichPlayer, boolean flag returns nothing",
    "name": "SetUnitRescuable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "player",
      "name": "byWhichPlayer",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitRescuable(whichUnit, byWhichPlayer, flag)",
    "documentation": "设置 ,~单位, 对 ,~玩家,~Rescuable/Unrescuable"
  },
  "SetUnitRescueRange": {
    "original": "native SetUnitRescueRange takes unit whichUnit, real range returns nothing",
    "name": "SetUnitRescueRange",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "range",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitRescueRange(whichUnit, range)",
    "documentation": "设置营救单位的营救距离"
  },
  "SetHeroStr": {
    "original": "native SetHeroStr takes unit whichHero, integer newStr, boolean permanent returns nothing",
    "name": "SetHeroStr",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "newStr",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "permanent",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetHeroStr(whichHero, newStr, permanent)",
    "documentation": "设置 ,~英雄, 的力量为 ,~Value, ,(,~Permanent,永久奖励)"
  },
  "SetHeroAgi": {
    "original": "native SetHeroAgi takes unit whichHero, integer newAgi, boolean permanent returns nothing",
    "name": "SetHeroAgi",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "newAgi",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "permanent",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetHeroAgi(whichHero, newAgi, permanent)",
    "documentation": "设置 ,~英雄, 的敏捷为 ,~Value, ,(,~Permanent,永久奖励)"
  },
  "SetHeroInt": {
    "original": "native SetHeroInt takes unit whichHero, integer newInt, boolean permanent returns nothing",
    "name": "SetHeroInt",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "newInt",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "permanent",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetHeroInt(whichHero, newInt, permanent)",
    "documentation": "设置 ,~英雄, 的智力为 ,~Value, ,(,~Permanent,永久奖励)"
  },
  "GetHeroStr": {
    "original": "native GetHeroStr takes unit whichHero, boolean includeBonuses returns integer",
    "name": "GetHeroStr",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "includeBonuses",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetHeroStr(whichHero, includeBonuses)",
    "documentation": "~英雄, 的力量值(,~Include/Exclude, 加成)"
  },
  "GetHeroAgi": {
    "original": "native GetHeroAgi takes unit whichHero, boolean includeBonuses returns integer",
    "name": "GetHeroAgi",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "includeBonuses",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetHeroAgi(whichHero, includeBonuses)",
    "documentation": "~英雄, 的敏捷值(,~Include/Exclude, 加成)"
  },
  "GetHeroInt": {
    "original": "native GetHeroInt takes unit whichHero, boolean includeBonuses returns integer",
    "name": "GetHeroInt",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "includeBonuses",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetHeroInt(whichHero, includeBonuses)",
    "documentation": "~英雄, 的智力值(,~Include/Exclude, 加成)"
  },
  "UnitStripHeroLevel": {
    "original": "native UnitStripHeroLevel takes unit whichHero, integer howManyLevels returns boolean",
    "name": "UnitStripHeroLevel",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "howManyLevels",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitStripHeroLevel(whichHero, howManyLevels)",
    "documentation": "降低 ,~Hero, ,~Level, 个等级"
  },
  "GetHeroXP": {
    "original": "native GetHeroXP takes unit whichHero returns integer",
    "name": "GetHeroXP",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetHeroXP(whichHero)",
    "documentation": "英雄的经验值"
  },
  "SetHeroXP": {
    "original": "native SetHeroXP takes unit whichHero, integer newXpVal, boolean showEyeCandy returns nothing",
    "name": "SetHeroXP",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "newXpVal",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "showEyeCandy",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetHeroXP(whichHero, newXpVal, showEyeCandy)",
    "documentation": "设置英雄经验值"
  },
  "GetHeroSkillPoints": {
    "original": "native GetHeroSkillPoints takes unit whichHero returns integer",
    "name": "GetHeroSkillPoints",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetHeroSkillPoints(whichHero)",
    "documentation": "未用完的技能点数"
  },
  "UnitModifySkillPoints": {
    "original": "native UnitModifySkillPoints takes unit whichHero, integer skillPointDelta returns boolean",
    "name": "UnitModifySkillPoints",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "skillPointDelta",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitModifySkillPoints(whichHero, skillPointDelta)",
    "documentation": "增加 ,~英雄, ,~Value, 点剩余技能点"
  },
  "AddHeroXP": {
    "original": "native AddHeroXP takes unit whichHero, integer xpToAdd, boolean showEyeCandy returns nothing",
    "name": "AddHeroXP",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "xpToAdd",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "showEyeCandy",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "AddHeroXP(whichHero, xpToAdd, showEyeCandy)",
    "documentation": "增加 ,~Hero, ,~Quantity, 点经验值, ,~Show/Hide, 升级动画"
  },
  "SetHeroLevel": {
    "original": "native SetHeroLevel takes unit whichHero, integer level, boolean showEyeCandy returns nothing",
    "name": "SetHeroLevel",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "level",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "showEyeCandy",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetHeroLevel(whichHero, level, showEyeCandy)",
    "documentation": "设置英雄等级"
  },
  "GetHeroLevel": {
    "original": "constant native GetHeroLevel takes unit whichHero returns integer",
    "name": "GetHeroLevel",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetHeroLevel(whichHero)",
    "documentation": "英雄等级"
  },
  "GetUnitLevel": {
    "original": "constant native GetUnitLevel takes unit whichUnit returns integer",
    "name": "GetUnitLevel",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetUnitLevel(whichUnit)",
    "documentation": "单位等级"
  },
  "GetHeroProperName": {
    "original": "native GetHeroProperName takes unit whichHero returns string",
    "name": "GetHeroProperName",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "GetHeroProperName(whichHero)",
    "documentation": "英雄的姓名"
  },
  "SuspendHeroXP": {
    "original": "native SuspendHeroXP takes unit whichHero, boolean flag returns nothing",
    "name": "SuspendHeroXP",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SuspendHeroXP(whichHero, flag)",
    "documentation": "~Enable/Disable, ,~Hero, 的经验获取"
  },
  "IsSuspendedXP": {
    "original": "native IsSuspendedXP takes unit whichHero returns boolean",
    "name": "IsSuspendedXP",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsSuspendedXP(whichHero)",
    "documentation": "英雄获得经验值"
  },
  "SelectHeroSkill": {
    "original": "native SelectHeroSkill takes unit whichHero, integer abilcode returns nothing",
    "name": "SelectHeroSkill",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "abilcode",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SelectHeroSkill(whichHero, abilcode)",
    "documentation": "英雄学习技能"
  },
  "GetUnitAbilityLevel": {
    "original": "native GetUnitAbilityLevel takes unit whichUnit, integer abilcode returns integer",
    "name": "GetUnitAbilityLevel",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "abilcode",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetUnitAbilityLevel(whichUnit, abilcode)",
    "documentation": "~单位, 的 ,~技能, 技能等级"
  },
  "DecUnitAbilityLevel": {
    "original": "native DecUnitAbilityLevel takes unit whichUnit, integer abilcode returns integer",
    "name": "DecUnitAbilityLevel",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "abilcode",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "DecUnitAbilityLevel(whichUnit, abilcode)",
    "documentation": "使 ,~单位, 的 ,~技能, 等级降低1级"
  },
  "IncUnitAbilityLevel": {
    "original": "native IncUnitAbilityLevel takes unit whichUnit, integer abilcode returns integer",
    "name": "IncUnitAbilityLevel",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "abilcode",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "IncUnitAbilityLevel(whichUnit, abilcode)",
    "documentation": "使 ,~单位, 的 ,~技能, 等级提升1级"
  },
  "SetUnitAbilityLevel": {
    "original": "native SetUnitAbilityLevel takes unit whichUnit, integer abilcode, integer level returns integer",
    "name": "SetUnitAbilityLevel",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "abilcode",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "level",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "SetUnitAbilityLevel(whichUnit, abilcode, level)",
    "documentation": "设置 ,~单位, 的 ,~技能, 等级为 ,~Level"
  },
  "ReviveHero": {
    "original": "native ReviveHero takes unit whichHero, real x, real y, boolean doEyecandy returns boolean",
    "name": "ReviveHero",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "doEyecandy",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "ReviveHero(whichHero, x, y, doEyecandy)",
    "documentation": "立即复活 ,~英雄, 在(,~X,,,~Y,), ,~Show/Hide, 复活动画"
  },
  "ReviveHeroLoc": {
    "original": "native ReviveHeroLoc takes unit whichHero, location loc, boolean doEyecandy returns boolean",
    "name": "ReviveHeroLoc",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "doEyecandy",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "ReviveHeroLoc(whichHero, loc, doEyecandy)",
    "documentation": "复活英雄（立即）"
  },
  "SetUnitExploded": {
    "original": "native SetUnitExploded takes unit whichUnit, boolean exploded returns nothing",
    "name": "SetUnitExploded",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "exploded",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitExploded(whichUnit, exploded)",
    "documentation": ""
  },
  "SetUnitInvulnerable": {
    "original": "native SetUnitInvulnerable takes unit whichUnit, boolean flag returns nothing",
    "name": "SetUnitInvulnerable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitInvulnerable(whichUnit, flag)",
    "documentation": "设置单位 无敌/可攻击"
  },
  "PauseUnit": {
    "original": "native PauseUnit takes unit whichUnit, boolean flag returns nothing",
    "name": "PauseUnit",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PauseUnit(whichUnit, flag)",
    "documentation": "设置 ,~单位, ,~Pause/Unpause"
  },
  "IsUnitPaused": {
    "original": "native IsUnitPaused takes unit whichHero returns boolean",
    "name": "IsUnitPaused",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitPaused(whichHero)",
    "documentation": ""
  },
  "SetUnitPathing": {
    "original": "native SetUnitPathing takes unit whichUnit, boolean flag returns nothing",
    "name": "SetUnitPathing",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitPathing(whichUnit, flag)",
    "documentation": "设置碰撞 打开/关闭"
  },
  "ClearSelection": {
    "original": "native ClearSelection takes nothing returns nothing",
    "name": "ClearSelection",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "ClearSelection()",
    "documentation": "清除所有选定"
  },
  "SelectUnit": {
    "original": "native SelectUnit takes unit whichUnit, boolean flag returns nothing",
    "name": "SelectUnit",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SelectUnit(whichUnit, flag)",
    "documentation": ""
  },
  "GetUnitPointValue": {
    "original": "native GetUnitPointValue takes unit whichUnit returns integer",
    "name": "GetUnitPointValue",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetUnitPointValue(whichUnit)",
    "documentation": "单位的 附加值"
  },
  "GetUnitPointValueByType": {
    "original": "native GetUnitPointValueByType takes integer unitType returns integer",
    "name": "GetUnitPointValueByType",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "unitType",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetUnitPointValueByType(unitType)",
    "documentation": "单位-类型的 附加值"
  },
  "UnitAddItem": {
    "original": "native UnitAddItem takes unit whichUnit, item whichItem returns boolean",
    "name": "UnitAddItem",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitAddItem(whichUnit, whichItem)",
    "documentation": "给予 ,~单位, ,~物品"
  },
  "UnitAddItemById": {
    "original": "native UnitAddItemById takes unit whichUnit, integer itemId returns item",
    "name": "UnitAddItemById",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "itemId",
      "documentation": ""
    }],
    "returnType": "item",
    "insertText": "UnitAddItemById(whichUnit, itemId)",
    "documentation": ""
  },
  "UnitAddItemToSlotById": {
    "original": "native UnitAddItemToSlotById takes unit whichUnit, integer itemId, integer itemSlot returns boolean",
    "name": "UnitAddItemToSlotById",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "itemId",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "itemSlot",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitAddItemToSlotById(whichUnit, itemId, itemSlot)",
    "documentation": "给予 ,~单位, ,~物品类型, 并放在物品栏# ,~数值"
  },
  "UnitRemoveItem": {
    "original": "native UnitRemoveItem takes unit whichUnit, item whichItem returns nothing",
    "name": "UnitRemoveItem",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UnitRemoveItem(whichUnit, whichItem)",
    "documentation": ""
  },
  "UnitRemoveItemFromSlot": {
    "original": "native UnitRemoveItemFromSlot takes unit whichUnit, integer itemSlot returns item",
    "name": "UnitRemoveItemFromSlot",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "itemSlot",
      "documentation": ""
    }],
    "returnType": "item",
    "insertText": "UnitRemoveItemFromSlot(whichUnit, itemSlot)",
    "documentation": ""
  },
  "UnitHasItem": {
    "original": "native UnitHasItem takes unit whichUnit, item whichItem returns boolean",
    "name": "UnitHasItem",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitHasItem(whichUnit, whichItem)",
    "documentation": "英雄已有物品"
  },
  "UnitItemInSlot": {
    "original": "native UnitItemInSlot takes unit whichUnit, integer itemSlot returns item",
    "name": "UnitItemInSlot",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "itemSlot",
      "documentation": ""
    }],
    "returnType": "item",
    "insertText": "UnitItemInSlot(whichUnit, itemSlot)",
    "documentation": "~单位, 物品栏第 ,~Index, 格的物品"
  },
  "UnitInventorySize": {
    "original": "native UnitInventorySize takes unit whichUnit returns integer",
    "name": "UnitInventorySize",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "UnitInventorySize(whichUnit)",
    "documentation": ""
  },
  "UnitDropItemPoint": {
    "original": "native UnitDropItemPoint takes unit whichUnit, item whichItem, real x, real y returns boolean",
    "name": "UnitDropItemPoint",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitDropItemPoint(whichUnit, whichItem, x, y)",
    "documentation": "命令 ,~单位, 丢弃物品 ,~物品, 到坐标:(,~X,,,~Y,)"
  },
  "UnitDropItemSlot": {
    "original": "native UnitDropItemSlot takes unit whichUnit, item whichItem, integer slot returns boolean",
    "name": "UnitDropItemSlot",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "slot",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitDropItemSlot(whichUnit, whichItem, slot)",
    "documentation": "命令 ,~单位, 移动 ,~物品, 到物品栏# ,~Index"
  },
  "UnitDropItemTarget": {
    "original": "native UnitDropItemTarget takes unit whichUnit, item whichItem, widget target returns boolean",
    "name": "UnitDropItemTarget",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "widget",
      "name": "target",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitDropItemTarget(whichUnit, whichItem, target)",
    "documentation": ""
  },
  "UnitUseItem": {
    "original": "native UnitUseItem takes unit whichUnit, item whichItem returns boolean",
    "name": "UnitUseItem",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitUseItem(whichUnit, whichItem)",
    "documentation": "使用物品"
  },
  "UnitUseItemPoint": {
    "original": "native UnitUseItemPoint takes unit whichUnit, item whichItem, real x, real y returns boolean",
    "name": "UnitUseItemPoint",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitUseItemPoint(whichUnit, whichItem, x, y)",
    "documentation": "命令 ,~单位, 使用 ,~物品, ,目标坐标:(,~X,,,~Y,)"
  },
  "UnitUseItemTarget": {
    "original": "native UnitUseItemTarget takes unit whichUnit, item whichItem, widget target returns boolean",
    "name": "UnitUseItemTarget",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "widget",
      "name": "target",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitUseItemTarget(whichUnit, whichItem, target)",
    "documentation": "对单位使用物品"
  },
  "GetUnitX": {
    "original": "constant native GetUnitX takes unit whichUnit returns real",
    "name": "GetUnitX",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetUnitX(whichUnit)",
    "documentation": "~单位, 所在X轴坐标"
  },
  "GetUnitY": {
    "original": "constant native GetUnitY takes unit whichUnit returns real",
    "name": "GetUnitY",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetUnitY(whichUnit)",
    "documentation": "~单位, 所在Y轴坐标"
  },
  "GetUnitLoc": {
    "original": "constant native GetUnitLoc takes unit whichUnit returns location",
    "name": "GetUnitLoc",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "location",
    "insertText": "GetUnitLoc(whichUnit)",
    "documentation": "单位的位置"
  },
  "GetUnitFacing": {
    "original": "constant native GetUnitFacing takes unit whichUnit returns real",
    "name": "GetUnitFacing",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetUnitFacing(whichUnit)",
    "documentation": "单位面向角度"
  },
  "GetUnitMoveSpeed": {
    "original": "constant native GetUnitMoveSpeed takes unit whichUnit returns real",
    "name": "GetUnitMoveSpeed",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetUnitMoveSpeed(whichUnit)",
    "documentation": "单位移动速度 (当前)"
  },
  "GetUnitDefaultMoveSpeed": {
    "original": "constant native GetUnitDefaultMoveSpeed takes unit whichUnit returns real",
    "name": "GetUnitDefaultMoveSpeed",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetUnitDefaultMoveSpeed(whichUnit)",
    "documentation": "单位移动速度 (默认)"
  },
  "GetUnitState": {
    "original": "constant native GetUnitState takes unit whichUnit, unitstate whichUnitState returns real",
    "name": "GetUnitState",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "unitstate",
      "name": "whichUnitState",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetUnitState(whichUnit, whichUnitState)",
    "documentation": "~单位, 的 ,~Property"
  },
  "GetOwningPlayer": {
    "original": "constant native GetOwningPlayer takes unit whichUnit returns player",
    "name": "GetOwningPlayer",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "player",
    "insertText": "GetOwningPlayer(whichUnit)",
    "documentation": "单位的所有者"
  },
  "GetUnitTypeId": {
    "original": "constant native GetUnitTypeId takes unit whichUnit returns integer",
    "name": "GetUnitTypeId",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetUnitTypeId(whichUnit)",
    "documentation": "单位的类型"
  },
  "GetUnitRace": {
    "original": "constant native GetUnitRace takes unit whichUnit returns race",
    "name": "GetUnitRace",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "race",
    "insertText": "GetUnitRace(whichUnit)",
    "documentation": "单位的种族"
  },
  "GetUnitName": {
    "original": "constant native GetUnitName takes unit whichUnit returns string",
    "name": "GetUnitName",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "GetUnitName(whichUnit)",
    "documentation": "单位名字"
  },
  "GetUnitFoodUsed": {
    "original": "constant native GetUnitFoodUsed takes unit whichUnit returns integer",
    "name": "GetUnitFoodUsed",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetUnitFoodUsed(whichUnit)",
    "documentation": "~单位, 使用的人口数量"
  },
  "GetUnitFoodMade": {
    "original": "constant native GetUnitFoodMade takes unit whichUnit returns integer",
    "name": "GetUnitFoodMade",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetUnitFoodMade(whichUnit)",
    "documentation": "单位提供的人口"
  },
  "GetFoodMade": {
    "original": "constant native GetFoodMade takes integer unitId returns integer",
    "name": "GetFoodMade",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "unitId",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetFoodMade(unitId)",
    "documentation": "单位-类型 提供的人口"
  },
  "GetFoodUsed": {
    "original": "constant native GetFoodUsed takes integer unitId returns integer",
    "name": "GetFoodUsed",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "unitId",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetFoodUsed(unitId)",
    "documentation": "单位-类型 使用的人口"
  },
  "SetUnitUseFood": {
    "original": "native SetUnitUseFood takes unit whichUnit, boolean useFood returns nothing",
    "name": "SetUnitUseFood",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "useFood",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitUseFood(whichUnit, useFood)",
    "documentation": "设置 ,~单位, : ,~Enable/Disable, 其人口占用"
  },
  "GetUnitRallyPoint": {
    "original": "constant native GetUnitRallyPoint takes unit whichUnit returns location",
    "name": "GetUnitRallyPoint",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "location",
    "insertText": "GetUnitRallyPoint(whichUnit)",
    "documentation": "聚集点"
  },
  "GetUnitRallyUnit": {
    "original": "constant native GetUnitRallyUnit takes unit whichUnit returns unit",
    "name": "GetUnitRallyUnit",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "unit",
    "insertText": "GetUnitRallyUnit(whichUnit)",
    "documentation": "拥有源聚集点单位"
  },
  "GetUnitRallyDestructable": {
    "original": "constant native GetUnitRallyDestructable takes unit whichUnit returns destructable",
    "name": "GetUnitRallyDestructable",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "destructable",
    "insertText": "GetUnitRallyDestructable(whichUnit)",
    "documentation": "单位 聚集点"
  },
  "IsUnitInGroup": {
    "original": "constant native IsUnitInGroup takes unit whichUnit, group whichGroup returns boolean",
    "name": "IsUnitInGroup",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitInGroup(whichUnit, whichGroup)",
    "documentation": "单位在 单位组"
  },
  "IsUnitInForce": {
    "original": "constant native IsUnitInForce takes unit whichUnit, force whichForce returns boolean",
    "name": "IsUnitInForce",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "force",
      "name": "whichForce",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitInForce(whichUnit, whichForce)",
    "documentation": "~单位, 属于 ,~玩家组, 里的玩家"
  },
  "IsUnitOwnedByPlayer": {
    "original": "constant native IsUnitOwnedByPlayer takes unit whichUnit, player whichPlayer returns boolean",
    "name": "IsUnitOwnedByPlayer",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitOwnedByPlayer(whichUnit, whichPlayer)",
    "documentation": "~单位, 属于 ,~Player"
  },
  "IsUnitAlly": {
    "original": "constant native IsUnitAlly takes unit whichUnit, player whichPlayer returns boolean",
    "name": "IsUnitAlly",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitAlly(whichUnit, whichPlayer)",
    "documentation": "单位所属玩家的同盟玩家"
  },
  "IsUnitEnemy": {
    "original": "constant native IsUnitEnemy takes unit whichUnit, player whichPlayer returns boolean",
    "name": "IsUnitEnemy",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitEnemy(whichUnit, whichPlayer)",
    "documentation": "单位所属玩家的敌对玩家"
  },
  "IsUnitVisible": {
    "original": "constant native IsUnitVisible takes unit whichUnit, player whichPlayer returns boolean",
    "name": "IsUnitVisible",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitVisible(whichUnit, whichPlayer)",
    "documentation": "单位对于玩家可见"
  },
  "IsUnitDetected": {
    "original": "constant native IsUnitDetected takes unit whichUnit, player whichPlayer returns boolean",
    "name": "IsUnitDetected",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitDetected(whichUnit, whichPlayer)",
    "documentation": "~单位, 处在 ,~玩家, 的真实视野范围内"
  },
  "IsUnitInvisible": {
    "original": "constant native IsUnitInvisible takes unit whichUnit, player whichPlayer returns boolean",
    "name": "IsUnitInvisible",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitInvisible(whichUnit, whichPlayer)",
    "documentation": "单位对于玩家不可见"
  },
  "IsUnitFogged": {
    "original": "constant native IsUnitFogged takes unit whichUnit, player whichPlayer returns boolean",
    "name": "IsUnitFogged",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitFogged(whichUnit, whichPlayer)",
    "documentation": "单位被战争迷雾遮挡"
  },
  "IsUnitMasked": {
    "original": "constant native IsUnitMasked takes unit whichUnit, player whichPlayer returns boolean",
    "name": "IsUnitMasked",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitMasked(whichUnit, whichPlayer)",
    "documentation": "单位被黑色阴影遮挡"
  },
  "IsUnitSelected": {
    "original": "constant native IsUnitSelected takes unit whichUnit, player whichPlayer returns boolean",
    "name": "IsUnitSelected",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitSelected(whichUnit, whichPlayer)",
    "documentation": "玩家已选定单位"
  },
  "IsUnitRace": {
    "original": "constant native IsUnitRace takes unit whichUnit, race whichRace returns boolean",
    "name": "IsUnitRace",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "race",
      "name": "whichRace",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitRace(whichUnit, whichRace)",
    "documentation": "~单位, 是 ,~Race"
  },
  "IsUnitType": {
    "original": "constant native IsUnitType takes unit whichUnit, unittype whichUnitType returns boolean",
    "name": "IsUnitType",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "unittype",
      "name": "whichUnitType",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitType(whichUnit, whichUnitType)",
    "documentation": "检查单位 分类"
  },
  "IsUnit": {
    "original": "constant native IsUnit takes unit whichUnit, unit whichSpecifiedUnit returns boolean",
    "name": "IsUnit",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichSpecifiedUnit",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnit(whichUnit, whichSpecifiedUnit)",
    "documentation": "~单位, 与 ,~单位,相同"
  },
  "IsUnitInRange": {
    "original": "constant native IsUnitInRange takes unit whichUnit, unit otherUnit, real distance returns boolean",
    "name": "IsUnitInRange",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "otherUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "distance",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitInRange(whichUnit, otherUnit, distance)",
    "documentation": "~单位, 在距离 ,~指定单位, ,~范围, 范围内"
  },
  "IsUnitInRangeXY": {
    "original": "constant native IsUnitInRangeXY takes unit whichUnit, real x, real y, real distance returns boolean",
    "name": "IsUnitInRangeXY",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "distance",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitInRangeXY(whichUnit, x, y, distance)",
    "documentation": "~单位, 在距离坐标(,~X,,,~Y,) ,~范围, 范围内"
  },
  "IsUnitInRangeLoc": {
    "original": "constant native IsUnitInRangeLoc takes unit whichUnit, location whichLocation, real distance returns boolean",
    "name": "IsUnitInRangeLoc",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "location",
      "name": "whichLocation",
      "documentation": ""
    }, {
      "type": "real",
      "name": "distance",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitInRangeLoc(whichUnit, whichLocation, distance)",
    "documentation": "~单位, 在距离 ,~指定点, ,~范围, 范围内"
  },
  "IsUnitHidden": {
    "original": "constant native IsUnitHidden takes unit whichUnit returns boolean",
    "name": "IsUnitHidden",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitHidden(whichUnit)",
    "documentation": ""
  },
  "IsUnitIllusion": {
    "original": "constant native IsUnitIllusion takes unit whichUnit returns boolean",
    "name": "IsUnitIllusion",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitIllusion(whichUnit)",
    "documentation": ""
  },
  "IsUnitInTransport": {
    "original": "constant native IsUnitInTransport takes unit whichUnit, unit whichTransport returns boolean",
    "name": "IsUnitInTransport",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichTransport",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitInTransport(whichUnit, whichTransport)",
    "documentation": ""
  },
  "IsUnitLoaded": {
    "original": "constant native IsUnitLoaded takes unit whichUnit returns boolean",
    "name": "IsUnitLoaded",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitLoaded(whichUnit)",
    "documentation": ""
  },
  "IsHeroUnitId": {
    "original": "constant native IsHeroUnitId takes integer unitId returns boolean",
    "name": "IsHeroUnitId",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "unitId",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsHeroUnitId(unitId)",
    "documentation": "~UnitType, 是英雄单位"
  },
  "IsUnitIdType": {
    "original": "constant native IsUnitIdType takes integer unitId, unittype whichUnitType returns boolean",
    "name": "IsUnitIdType",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "unitId",
      "documentation": ""
    }, {
      "type": "unittype",
      "name": "whichUnitType",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitIdType(unitId, whichUnitType)",
    "documentation": "检查单位-类型 分类"
  },
  "UnitShareVision": {
    "original": "native UnitShareVision takes unit whichUnit, player whichPlayer, boolean share returns nothing",
    "name": "UnitShareVision",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "share",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UnitShareVision(whichUnit, whichPlayer, share)",
    "documentation": "设置 ,~单位, 的视野对 ,~Player, ,~on/off"
  },
  "UnitSuspendDecay": {
    "original": "native UnitSuspendDecay takes unit whichUnit, boolean suspend returns nothing",
    "name": "UnitSuspendDecay",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "suspend",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UnitSuspendDecay(whichUnit, suspend)",
    "documentation": " 设置 ,~单位, 的尸体腐烂状态: ,~Suspend/Resume"
  },
  "UnitAddType": {
    "original": "native UnitAddType takes unit whichUnit, unittype whichUnitType returns boolean",
    "name": "UnitAddType",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "unittype",
      "name": "whichUnitType",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitAddType(whichUnit, whichUnitType)",
    "documentation": "为 ,~单位, 添加 ,~Classification, 类别"
  },
  "UnitRemoveType": {
    "original": "native UnitRemoveType takes unit whichUnit, unittype whichUnitType returns boolean",
    "name": "UnitRemoveType",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "unittype",
      "name": "whichUnitType",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitRemoveType(whichUnit, whichUnitType)",
    "documentation": "为 ,~单位, 删除 ,~Classification, 类别"
  },
  "UnitAddAbility": {
    "original": "native UnitAddAbility takes unit whichUnit, integer abilityId returns boolean",
    "name": "UnitAddAbility",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "abilityId",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitAddAbility(whichUnit, abilityId)",
    "documentation": "为 ,~单位, 添加 ,~技能"
  },
  "UnitRemoveAbility": {
    "original": "native UnitRemoveAbility takes unit whichUnit, integer abilityId returns boolean",
    "name": "UnitRemoveAbility",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "abilityId",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitRemoveAbility(whichUnit, abilityId)",
    "documentation": "为 ,~单位, 删除 ,~技能"
  },
  "UnitMakeAbilityPermanent": {
    "original": "native UnitMakeAbilityPermanent takes unit whichUnit, boolean permanent, integer abilityId returns boolean",
    "name": "UnitMakeAbilityPermanent",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "permanent",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "abilityId",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitMakeAbilityPermanent(whichUnit, permanent, abilityId)",
    "documentation": "设置 ,~单位, ,~是否, ,~技能, 永久性"
  },
  "UnitRemoveBuffs": {
    "original": "native UnitRemoveBuffs takes unit whichUnit, boolean removePositive, boolean removeNegative returns nothing",
    "name": "UnitRemoveBuffs",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "removePositive",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "removeNegative",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UnitRemoveBuffs(whichUnit, removePositive, removeNegative)",
    "documentation": "删除 ,~单位, 的附带Buff,(,~Include/Exclude, 正面Buff, ,~Include/Exclude, 负面Buff)"
  },
  "UnitRemoveBuffsEx": {
    "original": "native UnitRemoveBuffsEx takes unit whichUnit, boolean removePositive, boolean removeNegative, boolean magic, boolean physical, boolean timedLife, boolean aura, boolean autoDispel returns nothing",
    "name": "UnitRemoveBuffsEx",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "removePositive",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "removeNegative",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "magic",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "physical",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "timedLife",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "aura",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "autoDispel",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UnitRemoveBuffsEx(whichUnit, removePositive, removeNegative, magic, physical, timedLife, aura, autoDispel)",
    "documentation": "删除 ,~单位, 的附带Buff,(,~Include/Exclude, 正面Buff, ,~Include/Exclude, 负面Buff,~Include/Exclude, 魔法Buff, ,~Include/Exclude, 物理Buff,~Include/Exclude, 生命周期, ,~Include/Exclude, 光环效果,~Include/Exclude, 不可驱散Buff)"
  },
  "UnitHasBuffsEx": {
    "original": "native UnitHasBuffsEx takes unit whichUnit, boolean removePositive, boolean removeNegative, boolean magic, boolean physical, boolean timedLife, boolean aura, boolean autoDispel returns boolean",
    "name": "UnitHasBuffsEx",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "removePositive",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "removeNegative",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "magic",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "physical",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "timedLife",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "aura",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "autoDispel",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitHasBuffsEx(whichUnit, removePositive, removeNegative, magic, physical, timedLife, aura, autoDispel)",
    "documentation": ""
  },
  "UnitCountBuffsEx": {
    "original": "native UnitCountBuffsEx takes unit whichUnit, boolean removePositive, boolean removeNegative, boolean magic, boolean physical, boolean timedLife, boolean aura, boolean autoDispel returns integer",
    "name": "UnitCountBuffsEx",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "removePositive",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "removeNegative",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "magic",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "physical",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "timedLife",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "aura",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "autoDispel",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "UnitCountBuffsEx(whichUnit, removePositive, removeNegative, magic, physical, timedLife, aura, autoDispel)",
    "documentation": "~单位, 的附带Buff数量,(,~Include/Exclude, 正面Buff, ,~Include/Exclude, 负面Buff,~Include/Exclude, 魔法Buff, ,~Include/Exclude, 物理Buff,~Include/Exclude, 生命周期, ,~Include/Exclude, 光环效果,~Include/Exclude, 不可驱散Buff)"
  },
  "UnitAddSleep": {
    "original": "native UnitAddSleep takes unit whichUnit, boolean add returns nothing",
    "name": "UnitAddSleep",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "add",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UnitAddSleep(whichUnit, add)",
    "documentation": ""
  },
  "UnitCanSleep": {
    "original": "native UnitCanSleep takes unit whichUnit returns boolean",
    "name": "UnitCanSleep",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitCanSleep(whichUnit)",
    "documentation": ""
  },
  "UnitAddSleepPerm": {
    "original": "native UnitAddSleepPerm takes unit whichUnit, boolean add returns nothing",
    "name": "UnitAddSleepPerm",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "add",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UnitAddSleepPerm(whichUnit, add)",
    "documentation": "设置单位睡眠(无论何时)"
  },
  "UnitCanSleepPerm": {
    "original": "native UnitCanSleepPerm takes unit whichUnit returns boolean",
    "name": "UnitCanSleepPerm",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitCanSleepPerm(whichUnit)",
    "documentation": "单位在睡觉"
  },
  "UnitIsSleeping": {
    "original": "native UnitIsSleeping takes unit whichUnit returns boolean",
    "name": "UnitIsSleeping",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitIsSleeping(whichUnit)",
    "documentation": ""
  },
  "UnitWakeUp": {
    "original": "native UnitWakeUp takes unit whichUnit returns nothing",
    "name": "UnitWakeUp",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UnitWakeUp(whichUnit)",
    "documentation": ""
  },
  "UnitApplyTimedLife": {
    "original": "native UnitApplyTimedLife takes unit whichUnit, integer buffId, real duration returns nothing",
    "name": "UnitApplyTimedLife",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "buffId",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UnitApplyTimedLife(whichUnit, buffId, duration)",
    "documentation": "为 ,~单位, 设置 ,~Buff Type, 类型的生命周期,持续时间为 ,~Duration, 秒"
  },
  "UnitIgnoreAlarm": {
    "original": "native UnitIgnoreAlarm takes unit whichUnit, boolean flag returns boolean",
    "name": "UnitIgnoreAlarm",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitIgnoreAlarm(whichUnit, flag)",
    "documentation": ""
  },
  "UnitIgnoreAlarmToggled": {
    "original": "native UnitIgnoreAlarmToggled takes unit whichUnit returns boolean",
    "name": "UnitIgnoreAlarmToggled",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitIgnoreAlarmToggled(whichUnit)",
    "documentation": ""
  },
  "UnitResetCooldown": {
    "original": "native UnitResetCooldown takes unit whichUnit returns nothing",
    "name": "UnitResetCooldown",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UnitResetCooldown(whichUnit)",
    "documentation": "重设单位技能Cooldown"
  },
  "UnitSetConstructionProgress": {
    "original": "native UnitSetConstructionProgress takes unit whichUnit, integer constructionPercentage returns nothing",
    "name": "UnitSetConstructionProgress",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "constructionPercentage",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UnitSetConstructionProgress(whichUnit, constructionPercentage)",
    "documentation": "设置建筑物 建筑升级比"
  },
  "UnitSetUpgradeProgress": {
    "original": "native UnitSetUpgradeProgress takes unit whichUnit, integer upgradePercentage returns nothing",
    "name": "UnitSetUpgradeProgress",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "upgradePercentage",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UnitSetUpgradeProgress(whichUnit, upgradePercentage)",
    "documentation": "设置建筑物 科技升级比"
  },
  "UnitPauseTimedLife": {
    "original": "native UnitPauseTimedLife takes unit whichUnit, boolean flag returns nothing",
    "name": "UnitPauseTimedLife",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UnitPauseTimedLife(whichUnit, flag)",
    "documentation": "使 ,~单位, ,~Pause/Unpause, 生命周期"
  },
  "UnitSetUsesAltIcon": {
    "original": "native UnitSetUsesAltIcon takes unit whichUnit, boolean flag returns nothing",
    "name": "UnitSetUsesAltIcon",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UnitSetUsesAltIcon(whichUnit, flag)",
    "documentation": ""
  },
  "UnitDamagePoint": {
    "original": "native UnitDamagePoint takes unit whichUnit, real delay, real radius, real x, real y, real amount, boolean attack, boolean ranged, attacktype attackType, damagetype damageType, weapontype weaponType returns boolean",
    "name": "UnitDamagePoint",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "delay",
      "documentation": ""
    }, {
      "type": "real",
      "name": "radius",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "amount",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "attack",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "ranged",
      "documentation": ""
    }, {
      "type": "attacktype",
      "name": "attackType",
      "documentation": ""
    }, {
      "type": "damagetype",
      "name": "damageType",
      "documentation": ""
    }, {
      "type": "weapontype",
      "name": "weaponType",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitDamagePoint(whichUnit, delay, radius, x, y, amount, attack, ranged, attackType, damageType, weaponType)",
    "documentation": "命令 ,~单位, 在 ,~Seconds, 秒后对半径为 ,~Size, 圆心为(,~X,,,~Y,)的范围造成 ,~Amount, 点伤害(,~是, 攻击伤害, ,~是,远程攻击) 攻击类型: ,~AttackType, 伤害类型: ,~DamageType, 装甲类型: ,~WeaponType"
  },
  "UnitDamageTarget": {
    "original": "native UnitDamageTarget takes unit whichUnit, widget target, real amount, boolean attack, boolean ranged, attacktype attackType, damagetype damageType, weapontype weaponType returns boolean",
    "name": "UnitDamageTarget",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "widget",
      "name": "target",
      "documentation": ""
    }, {
      "type": "real",
      "name": "amount",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "attack",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "ranged",
      "documentation": ""
    }, {
      "type": "attacktype",
      "name": "attackType",
      "documentation": ""
    }, {
      "type": "damagetype",
      "name": "damageType",
      "documentation": ""
    }, {
      "type": "weapontype",
      "name": "weaponType",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitDamageTarget(whichUnit, target, amount, attack, ranged, attackType, damageType, weaponType)",
    "documentation": "命令 ,~单位, 对 ,~Target, 造成 ,~Amount, 点伤害(,~是, 攻击伤害, ,~是,远程攻击) 攻击类型: ,~AttackType, 伤害类型: ,~DamageType, 武器类型: ,~WeaponType"
  },
  "IssueImmediateOrder": {
    "original": "native IssueImmediateOrder takes unit whichUnit, string order returns boolean",
    "name": "IssueImmediateOrder",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "string",
      "name": "order",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IssueImmediateOrder(whichUnit, order)",
    "documentation": "给单位发送命令到 没有目标"
  },
  "IssueImmediateOrderById": {
    "original": "native IssueImmediateOrderById takes unit whichUnit, integer order returns boolean",
    "name": "IssueImmediateOrderById",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "order",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IssueImmediateOrderById(whichUnit, order)",
    "documentation": "对 ,~单位, 发布 ,~Order, 命令"
  },
  "IssuePointOrder": {
    "original": "native IssuePointOrder takes unit whichUnit, string order, real x, real y returns boolean",
    "name": "IssuePointOrder",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "string",
      "name": "order",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IssuePointOrder(whichUnit, order, x, y)",
    "documentation": "对 ,~单位, 发布 ,~Order, 命令到坐标:(,~X,,,~Y,)"
  },
  "IssuePointOrderLoc": {
    "original": "native IssuePointOrderLoc takes unit whichUnit, string order, location whichLocation returns boolean",
    "name": "IssuePointOrderLoc",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "string",
      "name": "order",
      "documentation": ""
    }, {
      "type": "location",
      "name": "whichLocation",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IssuePointOrderLoc(whichUnit, order, whichLocation)",
    "documentation": "给单位发送命令到 点"
  },
  "IssuePointOrderById": {
    "original": "native IssuePointOrderById takes unit whichUnit, integer order, real x, real y returns boolean",
    "name": "IssuePointOrderById",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "order",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IssuePointOrderById(whichUnit, order, x, y)",
    "documentation": "对 ,~单位, 发布 ,~Order, 命令到坐标:(,~X,,,~Y,)"
  },
  "IssuePointOrderByIdLoc": {
    "original": "native IssuePointOrderByIdLoc takes unit whichUnit, integer order, location whichLocation returns boolean",
    "name": "IssuePointOrderByIdLoc",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "order",
      "documentation": ""
    }, {
      "type": "location",
      "name": "whichLocation",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IssuePointOrderByIdLoc(whichUnit, order, whichLocation)",
    "documentation": "对 ,~单位, 发布 ,~Order, 命令到目标点: ,~指定点"
  },
  "IssueTargetOrder": {
    "original": "native IssueTargetOrder takes unit whichUnit, string order, widget targetWidget returns boolean",
    "name": "IssueTargetOrder",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "string",
      "name": "order",
      "documentation": ""
    }, {
      "type": "widget",
      "name": "targetWidget",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IssueTargetOrder(whichUnit, order, targetWidget)",
    "documentation": "给单位发送命令到 单位"
  },
  "IssueTargetOrderById": {
    "original": "native IssueTargetOrderById takes unit whichUnit, integer order, widget targetWidget returns boolean",
    "name": "IssueTargetOrderById",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "order",
      "documentation": ""
    }, {
      "type": "widget",
      "name": "targetWidget",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IssueTargetOrderById(whichUnit, order, targetWidget)",
    "documentation": "对 ,~单位, 发布 ,~Order, 命令到目标: ,~单位"
  },
  "IssueInstantPointOrder": {
    "original": "native IssueInstantPointOrder takes unit whichUnit, string order, real x, real y, widget instantTargetWidget returns boolean",
    "name": "IssueInstantPointOrder",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "string",
      "name": "order",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "widget",
      "name": "instantTargetWidget",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IssueInstantPointOrder(whichUnit, order, x, y, instantTargetWidget)",
    "documentation": ""
  },
  "IssueInstantPointOrderById": {
    "original": "native IssueInstantPointOrderById takes unit whichUnit, integer order, real x, real y, widget instantTargetWidget returns boolean",
    "name": "IssueInstantPointOrderById",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "order",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "widget",
      "name": "instantTargetWidget",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IssueInstantPointOrderById(whichUnit, order, x, y, instantTargetWidget)",
    "documentation": ""
  },
  "IssueInstantTargetOrder": {
    "original": "native IssueInstantTargetOrder takes unit whichUnit, string order, widget targetWidget, widget instantTargetWidget returns boolean",
    "name": "IssueInstantTargetOrder",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "string",
      "name": "order",
      "documentation": ""
    }, {
      "type": "widget",
      "name": "targetWidget",
      "documentation": ""
    }, {
      "type": "widget",
      "name": "instantTargetWidget",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IssueInstantTargetOrder(whichUnit, order, targetWidget, instantTargetWidget)",
    "documentation": ""
  },
  "IssueInstantTargetOrderById": {
    "original": "native IssueInstantTargetOrderById takes unit whichUnit, integer order, widget targetWidget, widget instantTargetWidget returns boolean",
    "name": "IssueInstantTargetOrderById",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "order",
      "documentation": ""
    }, {
      "type": "widget",
      "name": "targetWidget",
      "documentation": ""
    }, {
      "type": "widget",
      "name": "instantTargetWidget",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IssueInstantTargetOrderById(whichUnit, order, targetWidget, instantTargetWidget)",
    "documentation": ""
  },
  "IssueBuildOrder": {
    "original": "native IssueBuildOrder takes unit whichPeon, string unitToBuild, real x, real y returns boolean",
    "name": "IssueBuildOrder",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichPeon",
      "documentation": ""
    }, {
      "type": "string",
      "name": "unitToBuild",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IssueBuildOrder(whichPeon, unitToBuild, x, y)",
    "documentation": ""
  },
  "IssueBuildOrderById": {
    "original": "native IssueBuildOrderById takes unit whichPeon, integer unitId, real x, real y returns boolean",
    "name": "IssueBuildOrderById",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichPeon",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitId",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IssueBuildOrderById(whichPeon, unitId, x, y)",
    "documentation": "命令 ,~单位, 建造 ,~单位类型, 在坐标:(,~X,,,~Y,)"
  },
  "IssueNeutralImmediateOrder": {
    "original": "native IssueNeutralImmediateOrder takes player forWhichPlayer, unit neutralStructure, string unitToBuild returns boolean",
    "name": "IssueNeutralImmediateOrder",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "forWhichPlayer",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "neutralStructure",
      "documentation": ""
    }, {
      "type": "string",
      "name": "unitToBuild",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IssueNeutralImmediateOrder(forWhichPlayer, neutralStructure, unitToBuild)",
    "documentation": "使 ,~玩家, 对 ,~单位, 发布 ,~Order, 命令"
  },
  "IssueNeutralImmediateOrderById": {
    "original": "native IssueNeutralImmediateOrderById takes player forWhichPlayer,unit neutralStructure, integer unitId returns boolean",
    "name": "IssueNeutralImmediateOrderById",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "forWhichPlayer",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "neutralStructure",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitId",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IssueNeutralImmediateOrderById(forWhichPlayer, neutralStructure, unitId)",
    "documentation": "使 ,~玩家, 对 ,~单位, 发布 ,~Order, 命令"
  },
  "IssueNeutralPointOrder": {
    "original": "native IssueNeutralPointOrder takes player forWhichPlayer,unit neutralStructure, string unitToBuild, real x, real y returns boolean",
    "name": "IssueNeutralPointOrder",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "forWhichPlayer",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "neutralStructure",
      "documentation": ""
    }, {
      "type": "string",
      "name": "unitToBuild",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IssueNeutralPointOrder(forWhichPlayer, neutralStructure, unitToBuild, x, y)",
    "documentation": "使 ,~玩家, 对 ,~单位, 发布 ,~Order, 命令到坐标:(,~X,,,~Y,)"
  },
  "IssueNeutralPointOrderById": {
    "original": "native IssueNeutralPointOrderById takes player forWhichPlayer,unit neutralStructure, integer unitId, real x, real y returns boolean",
    "name": "IssueNeutralPointOrderById",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "forWhichPlayer",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "neutralStructure",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitId",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IssueNeutralPointOrderById(forWhichPlayer, neutralStructure, unitId, x, y)",
    "documentation": "使 ,~玩家, 对 ,~单位, 发布 ,~Order, 命令到坐标:(,~X,,,~Y,)"
  },
  "IssueNeutralTargetOrder": {
    "original": "native IssueNeutralTargetOrder takes player forWhichPlayer,unit neutralStructure, string unitToBuild, widget target returns boolean",
    "name": "IssueNeutralTargetOrder",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "forWhichPlayer",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "neutralStructure",
      "documentation": ""
    }, {
      "type": "string",
      "name": "unitToBuild",
      "documentation": ""
    }, {
      "type": "widget",
      "name": "target",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IssueNeutralTargetOrder(forWhichPlayer, neutralStructure, unitToBuild, target)",
    "documentation": "使 ,~玩家, 对 ,~单位, 发布 ,~Order, 命令到目标: ,~单位"
  },
  "IssueNeutralTargetOrderById": {
    "original": "native IssueNeutralTargetOrderById takes player forWhichPlayer,unit neutralStructure, integer unitId, widget target returns boolean",
    "name": "IssueNeutralTargetOrderById",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "forWhichPlayer",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "neutralStructure",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitId",
      "documentation": ""
    }, {
      "type": "widget",
      "name": "target",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IssueNeutralTargetOrderById(forWhichPlayer, neutralStructure, unitId, target)",
    "documentation": "使 ,~玩家, 对 ,~单位, 发布 ,~Order, 命令到目标: ,~单位"
  },
  "GetUnitCurrentOrder": {
    "original": "native GetUnitCurrentOrder takes unit whichUnit returns integer",
    "name": "GetUnitCurrentOrder",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetUnitCurrentOrder(whichUnit)",
    "documentation": "单位当前的命令"
  },
  "SetResourceAmount": {
    "original": "native SetResourceAmount takes unit whichUnit, integer amount returns nothing",
    "name": "SetResourceAmount",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "amount",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetResourceAmount(whichUnit, amount)",
    "documentation": "设置金矿资源"
  },
  "AddResourceAmount": {
    "original": "native AddResourceAmount takes unit whichUnit, integer amount returns nothing",
    "name": "AddResourceAmount",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "amount",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "AddResourceAmount(whichUnit, amount)",
    "documentation": ""
  },
  "GetResourceAmount": {
    "original": "native GetResourceAmount takes unit whichUnit returns integer",
    "name": "GetResourceAmount",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetResourceAmount(whichUnit)",
    "documentation": "黄金资源数量"
  },
  "WaygateGetDestinationX": {
    "original": "native WaygateGetDestinationX takes unit waygate returns real",
    "name": "WaygateGetDestinationX",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "waygate",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "WaygateGetDestinationX(waygate)",
    "documentation": "~传送门, 的目的地X坐标"
  },
  "WaygateGetDestinationY": {
    "original": "native WaygateGetDestinationY takes unit waygate returns real",
    "name": "WaygateGetDestinationY",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "waygate",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "WaygateGetDestinationY(waygate)",
    "documentation": "~传送门, 的目的地Y坐标"
  },
  "WaygateSetDestination": {
    "original": "native WaygateSetDestination takes unit waygate, real x, real y returns nothing",
    "name": "WaygateSetDestination",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "waygate",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "WaygateSetDestination(waygate, x, y)",
    "documentation": "设置 ,~传送门, 的目的地为(,~X,,,~Y,)"
  },
  "WaygateActivate": {
    "original": "native WaygateActivate takes unit waygate, boolean activate returns nothing",
    "name": "WaygateActivate",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "waygate",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "activate",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "WaygateActivate(waygate, activate)",
    "documentation": ""
  },
  "WaygateIsActive": {
    "original": "native WaygateIsActive takes unit waygate returns boolean",
    "name": "WaygateIsActive",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "waygate",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "WaygateIsActive(waygate)",
    "documentation": ""
  },
  "AddItemToAllStock": {
    "original": "native AddItemToAllStock takes integer itemId, integer currentStock, integer stockMax returns nothing",
    "name": "AddItemToAllStock",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "itemId",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "currentStock",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "stockMax",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "AddItemToAllStock(itemId, currentStock, stockMax)",
    "documentation": "增加 物品-类型 (到所有商店)"
  },
  "AddItemToStock": {
    "original": "native AddItemToStock takes unit whichUnit, integer itemId, integer currentStock, integer stockMax returns nothing",
    "name": "AddItemToStock",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "itemId",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "currentStock",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "stockMax",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "AddItemToStock(whichUnit, itemId, currentStock, stockMax)",
    "documentation": ""
  },
  "AddUnitToAllStock": {
    "original": "native AddUnitToAllStock takes integer unitId, integer currentStock, integer stockMax returns nothing",
    "name": "AddUnitToAllStock",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "unitId",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "currentStock",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "stockMax",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "AddUnitToAllStock(unitId, currentStock, stockMax)",
    "documentation": "增加 单位-类型 (到所有商店)"
  },
  "AddUnitToStock": {
    "original": "native AddUnitToStock takes unit whichUnit, integer unitId, integer currentStock, integer stockMax returns nothing",
    "name": "AddUnitToStock",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitId",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "currentStock",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "stockMax",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "AddUnitToStock(whichUnit, unitId, currentStock, stockMax)",
    "documentation": ""
  },
  "RemoveItemFromAllStock": {
    "original": "native RemoveItemFromAllStock takes integer itemId returns nothing",
    "name": "RemoveItemFromAllStock",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "itemId",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RemoveItemFromAllStock(itemId)",
    "documentation": "删除 物品-类型 (从所有商店)"
  },
  "RemoveItemFromStock": {
    "original": "native RemoveItemFromStock takes unit whichUnit, integer itemId returns nothing",
    "name": "RemoveItemFromStock",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "itemId",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RemoveItemFromStock(whichUnit, itemId)",
    "documentation": ""
  },
  "RemoveUnitFromAllStock": {
    "original": "native RemoveUnitFromAllStock takes integer unitId returns nothing",
    "name": "RemoveUnitFromAllStock",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "unitId",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RemoveUnitFromAllStock(unitId)",
    "documentation": "删除 单位-类型 (从所有商店)"
  },
  "RemoveUnitFromStock": {
    "original": "native RemoveUnitFromStock takes unit whichUnit, integer unitId returns nothing",
    "name": "RemoveUnitFromStock",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitId",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RemoveUnitFromStock(whichUnit, unitId)",
    "documentation": ""
  },
  "SetAllItemTypeSlots": {
    "original": "native SetAllItemTypeSlots takes integer slots returns nothing",
    "name": "SetAllItemTypeSlots",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "slots",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetAllItemTypeSlots(slots)",
    "documentation": "限制物品的位置 (从所有商店)"
  },
  "SetAllUnitTypeSlots": {
    "original": "native SetAllUnitTypeSlots takes integer slots returns nothing",
    "name": "SetAllUnitTypeSlots",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "slots",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetAllUnitTypeSlots(slots)",
    "documentation": "限制单位的位置 (从所有商店)"
  },
  "SetItemTypeSlots": {
    "original": "native SetItemTypeSlots takes unit whichUnit, integer slots returns nothing",
    "name": "SetItemTypeSlots",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "slots",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetItemTypeSlots(whichUnit, slots)",
    "documentation": "限制物品的位置 (从商店)"
  },
  "SetUnitTypeSlots": {
    "original": "native SetUnitTypeSlots takes unit whichUnit, integer slots returns nothing",
    "name": "SetUnitTypeSlots",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "slots",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitTypeSlots(whichUnit, slots)",
    "documentation": "限制单位的位置 (从商店)"
  },
  "GetUnitUserData": {
    "original": "native GetUnitUserData takes unit whichUnit returns integer",
    "name": "GetUnitUserData",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetUnitUserData(whichUnit)",
    "documentation": "单位自定义值"
  },
  "SetUnitUserData": {
    "original": "native SetUnitUserData takes unit whichUnit, integer data returns nothing",
    "name": "SetUnitUserData",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "data",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitUserData(whichUnit, data)",
    "documentation": "设置单位自定义数据"
  },
  "Player": {
    "original": "constant native Player takes integer number returns player",
    "name": "Player",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "number",
      "documentation": ""
    }],
    "returnType": "player",
    "insertText": "Player(number)",
    "documentation": ""
  },
  "GetLocalPlayer": {
    "original": "constant native GetLocalPlayer takes nothing returns player",
    "name": "GetLocalPlayer",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "player",
    "insertText": "GetLocalPlayer()",
    "documentation": "本地玩家"
  },
  "IsPlayerAlly": {
    "original": "constant native IsPlayerAlly takes player whichPlayer, player otherPlayer returns boolean",
    "name": "IsPlayerAlly",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "player",
      "name": "otherPlayer",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsPlayerAlly(whichPlayer, otherPlayer)",
    "documentation": "玩家是玩家的同盟"
  },
  "IsPlayerEnemy": {
    "original": "constant native IsPlayerEnemy takes player whichPlayer, player otherPlayer returns boolean",
    "name": "IsPlayerEnemy",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "player",
      "name": "otherPlayer",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsPlayerEnemy(whichPlayer, otherPlayer)",
    "documentation": "玩家是玩家的敌人"
  },
  "IsPlayerInForce": {
    "original": "constant native IsPlayerInForce takes player whichPlayer, force whichForce returns boolean",
    "name": "IsPlayerInForce",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "force",
      "name": "whichForce",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsPlayerInForce(whichPlayer, whichForce)",
    "documentation": "玩家在玩家组"
  },
  "IsPlayerObserver": {
    "original": "constant native IsPlayerObserver takes player whichPlayer returns boolean",
    "name": "IsPlayerObserver",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsPlayerObserver(whichPlayer)",
    "documentation": "~Player,是裁判或观察者"
  },
  "IsVisibleToPlayer": {
    "original": "constant native IsVisibleToPlayer takes real x, real y, player whichPlayer returns boolean",
    "name": "IsVisibleToPlayer",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsVisibleToPlayer(x, y, whichPlayer)",
    "documentation": "坐标(,~x,,,~y,) 对 ,~玩家, 可见"
  },
  "IsLocationVisibleToPlayer": {
    "original": "constant native IsLocationVisibleToPlayer takes location whichLocation, player whichPlayer returns boolean",
    "name": "IsLocationVisibleToPlayer",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "location",
      "name": "whichLocation",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsLocationVisibleToPlayer(whichLocation, whichPlayer)",
    "documentation": "点对于玩家可见"
  },
  "IsFoggedToPlayer": {
    "original": "constant native IsFoggedToPlayer takes real x, real y, player whichPlayer returns boolean",
    "name": "IsFoggedToPlayer",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsFoggedToPlayer(x, y, whichPlayer)",
    "documentation": "坐标(,~x,,,~y,) 在 ,~玩家, 的迷雾范围内"
  },
  "IsLocationFoggedToPlayer": {
    "original": "constant native IsLocationFoggedToPlayer takes location whichLocation, player whichPlayer returns boolean",
    "name": "IsLocationFoggedToPlayer",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "location",
      "name": "whichLocation",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsLocationFoggedToPlayer(whichLocation, whichPlayer)",
    "documentation": "点被迷雾遮挡"
  },
  "IsMaskedToPlayer": {
    "original": "constant native IsMaskedToPlayer takes real x, real y, player whichPlayer returns boolean",
    "name": "IsMaskedToPlayer",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsMaskedToPlayer(x, y, whichPlayer)",
    "documentation": "坐标(,~x,,,~y,) 在 ,~玩家, 的黑色阴影内"
  },
  "IsLocationMaskedToPlayer": {
    "original": "constant native IsLocationMaskedToPlayer takes location whichLocation, player whichPlayer returns boolean",
    "name": "IsLocationMaskedToPlayer",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "location",
      "name": "whichLocation",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsLocationMaskedToPlayer(whichLocation, whichPlayer)",
    "documentation": "点被黑色阴影遮挡"
  },
  "GetPlayerRace": {
    "original": "constant native GetPlayerRace takes player whichPlayer returns race",
    "name": "GetPlayerRace",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "race",
    "insertText": "GetPlayerRace(whichPlayer)",
    "documentation": "玩家的种族"
  },
  "GetPlayerId": {
    "original": "constant native GetPlayerId takes player whichPlayer returns integer",
    "name": "GetPlayerId",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetPlayerId(whichPlayer)",
    "documentation": "~Player, 的玩家索引号"
  },
  "GetPlayerUnitCount": {
    "original": "constant native GetPlayerUnitCount takes player whichPlayer, boolean includeIncomplete returns integer",
    "name": "GetPlayerUnitCount",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "includeIncomplete",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetPlayerUnitCount(whichPlayer, includeIncomplete)",
    "documentation": "单位数量"
  },
  "GetPlayerTypedUnitCount": {
    "original": "constant native GetPlayerTypedUnitCount takes player whichPlayer, string unitName, boolean includeIncomplete, boolean includeUpgrades returns integer",
    "name": "GetPlayerTypedUnitCount",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "unitName",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "includeIncomplete",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "includeUpgrades",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetPlayerTypedUnitCount(whichPlayer, unitName, includeIncomplete, includeUpgrades)",
    "documentation": ""
  },
  "GetPlayerStructureCount": {
    "original": "constant native GetPlayerStructureCount takes player whichPlayer, boolean includeIncomplete returns integer",
    "name": "GetPlayerStructureCount",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "includeIncomplete",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetPlayerStructureCount(whichPlayer, includeIncomplete)",
    "documentation": "获得建筑数量"
  },
  "GetPlayerState": {
    "original": "constant native GetPlayerState takes player whichPlayer, playerstate whichPlayerState returns integer",
    "name": "GetPlayerState",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "playerstate",
      "name": "whichPlayerState",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetPlayerState(whichPlayer, whichPlayerState)",
    "documentation": "获得玩家属性"
  },
  "GetPlayerScore": {
    "original": "constant native GetPlayerScore takes player whichPlayer, playerscore whichPlayerScore returns integer",
    "name": "GetPlayerScore",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "playerscore",
      "name": "whichPlayerScore",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetPlayerScore(whichPlayer, whichPlayerScore)",
    "documentation": "获得玩家得分"
  },
  "GetPlayerAlliance": {
    "original": "constant native GetPlayerAlliance takes player sourcePlayer, player otherPlayer, alliancetype whichAllianceSetting returns boolean",
    "name": "GetPlayerAlliance",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "sourcePlayer",
      "documentation": ""
    }, {
      "type": "player",
      "name": "otherPlayer",
      "documentation": ""
    }, {
      "type": "alliancetype",
      "name": "whichAllianceSetting",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "GetPlayerAlliance(sourcePlayer, otherPlayer, whichAllianceSetting)",
    "documentation": "玩家与玩家结盟"
  },
  "GetPlayerHandicap": {
    "original": "constant native GetPlayerHandicap takes player whichPlayer returns real",
    "name": "GetPlayerHandicap",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetPlayerHandicap(whichPlayer)",
    "documentation": ""
  },
  "GetPlayerHandicapXP": {
    "original": "constant native GetPlayerHandicapXP takes player whichPlayer returns real",
    "name": "GetPlayerHandicapXP",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetPlayerHandicapXP(whichPlayer)",
    "documentation": ""
  },
  "SetPlayerHandicap": {
    "original": "constant native SetPlayerHandicap takes player whichPlayer, real handicap returns nothing",
    "name": "SetPlayerHandicap",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "real",
      "name": "handicap",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerHandicap(whichPlayer, handicap)",
    "documentation": "设置 ,~Player, 的生命障碍为正常的 ,~Percent,倍"
  },
  "SetPlayerHandicapXP": {
    "original": "constant native SetPlayerHandicapXP takes player whichPlayer, real handicap returns nothing",
    "name": "SetPlayerHandicapXP",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "real",
      "name": "handicap",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerHandicapXP(whichPlayer, handicap)",
    "documentation": "设置 ,~Player, 的经验获得率为正常的 ,~Value, 倍"
  },
  "SetPlayerTechMaxAllowed": {
    "original": "constant native SetPlayerTechMaxAllowed takes player whichPlayer, integer techid, integer maximum returns nothing",
    "name": "SetPlayerTechMaxAllowed",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "techid",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "maximum",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerTechMaxAllowed(whichPlayer, techid, maximum)",
    "documentation": ""
  },
  "GetPlayerTechMaxAllowed": {
    "original": "constant native GetPlayerTechMaxAllowed takes player whichPlayer, integer techid returns integer",
    "name": "GetPlayerTechMaxAllowed",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "techid",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetPlayerTechMaxAllowed(whichPlayer, techid)",
    "documentation": ""
  },
  "AddPlayerTechResearched": {
    "original": "constant native AddPlayerTechResearched takes player whichPlayer, integer techid, integer levels returns nothing",
    "name": "AddPlayerTechResearched",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "techid",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "levels",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "AddPlayerTechResearched(whichPlayer, techid, levels)",
    "documentation": "增加 ,~玩家, 的 ,~科技, 科技 ,~整数 , 级"
  },
  "SetPlayerTechResearched": {
    "original": "constant native SetPlayerTechResearched takes player whichPlayer, integer techid, integer setToLevel returns nothing",
    "name": "SetPlayerTechResearched",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "techid",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "setToLevel",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerTechResearched(whichPlayer, techid, setToLevel)",
    "documentation": ""
  },
  "GetPlayerTechResearched": {
    "original": "constant native GetPlayerTechResearched takes player whichPlayer, integer techid, boolean specificonly returns boolean",
    "name": "GetPlayerTechResearched",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "techid",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "specificonly",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "GetPlayerTechResearched(whichPlayer, techid, specificonly)",
    "documentation": ""
  },
  "GetPlayerTechCount": {
    "original": "constant native GetPlayerTechCount takes player whichPlayer, integer techid, boolean specificonly returns integer",
    "name": "GetPlayerTechCount",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "techid",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "specificonly",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetPlayerTechCount(whichPlayer, techid, specificonly)",
    "documentation": ""
  },
  "SetPlayerUnitsOwner": {
    "original": "native SetPlayerUnitsOwner takes player whichPlayer, integer newOwner returns nothing",
    "name": "SetPlayerUnitsOwner",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "newOwner",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerUnitsOwner(whichPlayer, newOwner)",
    "documentation": ""
  },
  "CripplePlayer": {
    "original": "native CripplePlayer takes player whichPlayer, force toWhichPlayers, boolean flag returns nothing",
    "name": "CripplePlayer",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "force",
      "name": "toWhichPlayers",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CripplePlayer(whichPlayer, toWhichPlayers, flag)",
    "documentation": ""
  },
  "SetPlayerAbilityAvailable": {
    "original": "native SetPlayerAbilityAvailable takes player whichPlayer, integer abilid, boolean avail returns nothing",
    "name": "SetPlayerAbilityAvailable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "abilid",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "avail",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerAbilityAvailable(whichPlayer, abilid, avail)",
    "documentation": "设置 ,~Player, 的 ,~技能, 为 ,~Enable/Disable"
  },
  "SetPlayerState": {
    "original": "native SetPlayerState takes player whichPlayer, playerstate whichPlayerState, integer value returns nothing",
    "name": "SetPlayerState",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "playerstate",
      "name": "whichPlayerState",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerState(whichPlayer, whichPlayerState, value)",
    "documentation": "设置玩家属性"
  },
  "RemovePlayer": {
    "original": "native RemovePlayer takes player whichPlayer, playergameresult gameResult returns nothing",
    "name": "RemovePlayer",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "playergameresult",
      "name": "gameResult",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RemovePlayer(whichPlayer, gameResult)",
    "documentation": "踢除 ,~Player, ，玩家的游戏结果为 ,~文字"
  },
  "CachePlayerHeroData": {
    "original": "native CachePlayerHeroData takes player whichPlayer returns nothing",
    "name": "CachePlayerHeroData",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CachePlayerHeroData(whichPlayer)",
    "documentation": ""
  },
  "SetFogStateRect": {
    "original": "native SetFogStateRect takes player forWhichPlayer, fogstate whichState, rect where, boolean useSharedVision returns nothing",
    "name": "SetFogStateRect",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "forWhichPlayer",
      "documentation": ""
    }, {
      "type": "fogstate",
      "name": "whichState",
      "documentation": ""
    }, {
      "type": "rect",
      "name": "where",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "useSharedVision",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetFogStateRect(forWhichPlayer, whichState, where, useSharedVision)",
    "documentation": "为 ,~玩家, 设置 ,~FogStateVisible, 在 ,~矩形区域, (对盟友 ,~共享, 视野)"
  },
  "SetFogStateRadius": {
    "original": "native SetFogStateRadius takes player forWhichPlayer, fogstate whichState, real centerx, real centerY, real radius, boolean useSharedVision returns nothing",
    "name": "SetFogStateRadius",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "forWhichPlayer",
      "documentation": ""
    }, {
      "type": "fogstate",
      "name": "whichState",
      "documentation": ""
    }, {
      "type": "real",
      "name": "centerx",
      "documentation": ""
    }, {
      "type": "real",
      "name": "centerY",
      "documentation": ""
    }, {
      "type": "real",
      "name": "radius",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "useSharedVision",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetFogStateRadius(forWhichPlayer, whichState, centerx, centerY, radius, useSharedVision)",
    "documentation": "为 ,~玩家, 设置 ,~FogStateVisible, 在圆心为(,~X,,,~Y,) 半径为 ,~数值, 的范围, (对盟友 ,~共享, 视野)"
  },
  "SetFogStateRadiusLoc": {
    "original": "native SetFogStateRadiusLoc takes player forWhichPlayer, fogstate whichState, location center, real radius, boolean useSharedVision returns nothing",
    "name": "SetFogStateRadiusLoc",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "forWhichPlayer",
      "documentation": ""
    }, {
      "type": "fogstate",
      "name": "whichState",
      "documentation": ""
    }, {
      "type": "location",
      "name": "center",
      "documentation": ""
    }, {
      "type": "real",
      "name": "radius",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "useSharedVision",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetFogStateRadiusLoc(forWhichPlayer, whichState, center, radius, useSharedVision)",
    "documentation": ""
  },
  "FogMaskEnable": {
    "original": "native FogMaskEnable takes boolean enable returns nothing",
    "name": "FogMaskEnable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "enable",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "FogMaskEnable(enable)",
    "documentation": "~启用/禁用, 黑色阴影"
  },
  "IsFogMaskEnabled": {
    "original": "native IsFogMaskEnabled takes nothing returns boolean",
    "name": "IsFogMaskEnabled",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "boolean",
    "insertText": "IsFogMaskEnabled()",
    "documentation": "允许黑色阴影"
  },
  "FogEnable": {
    "original": "native FogEnable takes boolean enable returns nothing",
    "name": "FogEnable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "enable",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "FogEnable(enable)",
    "documentation": "~启用/禁用, 战争迷雾"
  },
  "IsFogEnabled": {
    "original": "native IsFogEnabled takes nothing returns boolean",
    "name": "IsFogEnabled",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "boolean",
    "insertText": "IsFogEnabled()",
    "documentation": "允许战争迷雾"
  },
  "CreateFogModifierRect": {
    "original": "native CreateFogModifierRect takes player forWhichPlayer, fogstate whichState, rect where, boolean useSharedVision, boolean afterUnits returns fogmodifier",
    "name": "CreateFogModifierRect",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "forWhichPlayer",
      "documentation": ""
    }, {
      "type": "fogstate",
      "name": "whichState",
      "documentation": ""
    }, {
      "type": "rect",
      "name": "where",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "useSharedVision",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "afterUnits",
      "documentation": ""
    }],
    "returnType": "fogmodifier",
    "insertText": "CreateFogModifierRect(forWhichPlayer, whichState, where, useSharedVision, afterUnits)",
    "documentation": "新建的 ,~玩家, 可见度修正器. 可见度: ,~FogStateVisible, 影响区域: ,~矩形区域, (对盟友 ,~共享, 视野, ,~覆盖, 单位视野)"
  },
  "CreateFogModifierRadius": {
    "original": "native CreateFogModifierRadius takes player forWhichPlayer, fogstate whichState, real centerx, real centerY, real radius, boolean useSharedVision, boolean afterUnits returns fogmodifier",
    "name": "CreateFogModifierRadius",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "forWhichPlayer",
      "documentation": ""
    }, {
      "type": "fogstate",
      "name": "whichState",
      "documentation": ""
    }, {
      "type": "real",
      "name": "centerx",
      "documentation": ""
    }, {
      "type": "real",
      "name": "centerY",
      "documentation": ""
    }, {
      "type": "real",
      "name": "radius",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "useSharedVision",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "afterUnits",
      "documentation": ""
    }],
    "returnType": "fogmodifier",
    "insertText": "CreateFogModifierRadius(forWhichPlayer, whichState, centerx, centerY, radius, useSharedVision, afterUnits)",
    "documentation": "新建的 ,~玩家, 可见度修正器. 可见度: ,~FogStateVisible, 圆心坐标:(,~X,,,~Y,) 半径: ,~数值, (对盟友 ,~共享, 视野, ,~覆盖, 单位视野)"
  },
  "CreateFogModifierRadiusLoc": {
    "original": "native CreateFogModifierRadiusLoc takes player forWhichPlayer, fogstate whichState, location center, real radius, boolean useSharedVision, boolean afterUnits returns fogmodifier",
    "name": "CreateFogModifierRadiusLoc",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "forWhichPlayer",
      "documentation": ""
    }, {
      "type": "fogstate",
      "name": "whichState",
      "documentation": ""
    }, {
      "type": "location",
      "name": "center",
      "documentation": ""
    }, {
      "type": "real",
      "name": "radius",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "useSharedVision",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "afterUnits",
      "documentation": ""
    }],
    "returnType": "fogmodifier",
    "insertText": "CreateFogModifierRadiusLoc(forWhichPlayer, whichState, center, radius, useSharedVision, afterUnits)",
    "documentation": ""
  },
  "DestroyFogModifier": {
    "original": "native DestroyFogModifier takes fogmodifier whichFogModifier returns nothing",
    "name": "DestroyFogModifier",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "fogmodifier",
      "name": "whichFogModifier",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DestroyFogModifier(whichFogModifier)",
    "documentation": "删除可见度修正器"
  },
  "FogModifierStart": {
    "original": "native FogModifierStart takes fogmodifier whichFogModifier returns nothing",
    "name": "FogModifierStart",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "fogmodifier",
      "name": "whichFogModifier",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "FogModifierStart(whichFogModifier)",
    "documentation": "允许可见度修正器"
  },
  "FogModifierStop": {
    "original": "native FogModifierStop takes fogmodifier whichFogModifier returns nothing",
    "name": "FogModifierStop",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "fogmodifier",
      "name": "whichFogModifier",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "FogModifierStop(whichFogModifier)",
    "documentation": "禁止可见度修正器"
  },
  "VersionGet": {
    "original": "native VersionGet takes nothing returns version",
    "name": "VersionGet",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "version",
    "insertText": "VersionGet()",
    "documentation": ""
  },
  "VersionCompatible": {
    "original": "native VersionCompatible takes version whichVersion returns boolean",
    "name": "VersionCompatible",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "version",
      "name": "whichVersion",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "VersionCompatible(whichVersion)",
    "documentation": ""
  },
  "VersionSupported": {
    "original": "native VersionSupported takes version whichVersion returns boolean",
    "name": "VersionSupported",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "version",
      "name": "whichVersion",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "VersionSupported(whichVersion)",
    "documentation": ""
  },
  "EndGame": {
    "original": "native EndGame takes boolean doScoreScreen returns nothing",
    "name": "EndGame",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "doScoreScreen",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "EndGame(doScoreScreen)",
    "documentation": ""
  },
  "ChangeLevel": {
    "original": "native ChangeLevel takes string newLevel, boolean doScoreScreen returns nothing",
    "name": "ChangeLevel",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "newLevel",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "doScoreScreen",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ChangeLevel(newLevel, doScoreScreen)",
    "documentation": "切换到关卡: ,~Filename, (,~Show/Skip, 计分屏)"
  },
  "RestartGame": {
    "original": "native RestartGame takes boolean doScoreScreen returns nothing",
    "name": "RestartGame",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "doScoreScreen",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RestartGame(doScoreScreen)",
    "documentation": ""
  },
  "ReloadGame": {
    "original": "native ReloadGame takes nothing returns nothing",
    "name": "ReloadGame",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "ReloadGame()",
    "documentation": ""
  },
  "SetCampaignMenuRace": {
    "original": "native SetCampaignMenuRace takes race r returns nothing",
    "name": "SetCampaignMenuRace",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "race",
      "name": "r",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCampaignMenuRace(r)",
    "documentation": ""
  },
  "SetCampaignMenuRaceEx": {
    "original": "native SetCampaignMenuRaceEx takes integer campaignIndex returns nothing",
    "name": "SetCampaignMenuRaceEx",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "campaignIndex",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCampaignMenuRaceEx(campaignIndex)",
    "documentation": ""
  },
  "ForceCampaignSelectScreen": {
    "original": "native ForceCampaignSelectScreen takes nothing returns nothing",
    "name": "ForceCampaignSelectScreen",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "ForceCampaignSelectScreen()",
    "documentation": ""
  },
  "LoadGame": {
    "original": "native LoadGame takes string saveFileName, boolean doScoreScreen returns nothing",
    "name": "LoadGame",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "saveFileName",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "doScoreScreen",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LoadGame(saveFileName, doScoreScreen)",
    "documentation": ""
  },
  "SaveGame": {
    "original": "native SaveGame takes string saveFileName returns nothing",
    "name": "SaveGame",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "saveFileName",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SaveGame(saveFileName)",
    "documentation": "保存游戏进度为: ,~Filename"
  },
  "RenameSaveDirectory": {
    "original": "native RenameSaveDirectory takes string sourceDirName, string destDirName returns boolean",
    "name": "RenameSaveDirectory",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "sourceDirName",
      "documentation": ""
    }, {
      "type": "string",
      "name": "destDirName",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "RenameSaveDirectory(sourceDirName, destDirName)",
    "documentation": ""
  },
  "RemoveSaveDirectory": {
    "original": "native RemoveSaveDirectory takes string sourceDirName returns boolean",
    "name": "RemoveSaveDirectory",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "sourceDirName",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "RemoveSaveDirectory(sourceDirName)",
    "documentation": ""
  },
  "CopySaveGame": {
    "original": "native CopySaveGame takes string sourceSaveName, string destSaveName returns boolean",
    "name": "CopySaveGame",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "sourceSaveName",
      "documentation": ""
    }, {
      "type": "string",
      "name": "destSaveName",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "CopySaveGame(sourceSaveName, destSaveName)",
    "documentation": ""
  },
  "SaveGameExists": {
    "original": "native SaveGameExists takes string saveName returns boolean",
    "name": "SaveGameExists",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "saveName",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveGameExists(saveName)",
    "documentation": "游戏进度是存在的"
  },
  "SyncSelections": {
    "original": "native SyncSelections takes nothing returns nothing",
    "name": "SyncSelections",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "SyncSelections()",
    "documentation": ""
  },
  "SetFloatGameState": {
    "original": "native SetFloatGameState takes fgamestate whichFloatGameState, real value returns nothing",
    "name": "SetFloatGameState",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "fgamestate",
      "name": "whichFloatGameState",
      "documentation": ""
    }, {
      "type": "real",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetFloatGameState(whichFloatGameState, value)",
    "documentation": ""
  },
  "GetFloatGameState": {
    "original": "constant native GetFloatGameState takes fgamestate whichFloatGameState returns real",
    "name": "GetFloatGameState",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "fgamestate",
      "name": "whichFloatGameState",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetFloatGameState(whichFloatGameState)",
    "documentation": ""
  },
  "SetIntegerGameState": {
    "original": "native SetIntegerGameState takes igamestate whichIntegerGameState, integer value returns nothing",
    "name": "SetIntegerGameState",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "igamestate",
      "name": "whichIntegerGameState",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetIntegerGameState(whichIntegerGameState, value)",
    "documentation": ""
  },
  "GetIntegerGameState": {
    "original": "constant native GetIntegerGameState takes igamestate whichIntegerGameState returns integer",
    "name": "GetIntegerGameState",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "igamestate",
      "name": "whichIntegerGameState",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetIntegerGameState(whichIntegerGameState)",
    "documentation": ""
  },
  "SetTutorialCleared": {
    "original": "native SetTutorialCleared takes boolean cleared returns nothing",
    "name": "SetTutorialCleared",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "cleared",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTutorialCleared(cleared)",
    "documentation": ""
  },
  "SetMissionAvailable": {
    "original": "native SetMissionAvailable takes integer campaignNumber, integer missionNumber, boolean available returns nothing",
    "name": "SetMissionAvailable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "campaignNumber",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionNumber",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "available",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetMissionAvailable(campaignNumber, missionNumber, available)",
    "documentation": ""
  },
  "SetCampaignAvailable": {
    "original": "native SetCampaignAvailable takes integer campaignNumber, boolean available returns nothing",
    "name": "SetCampaignAvailable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "campaignNumber",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "available",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCampaignAvailable(campaignNumber, available)",
    "documentation": ""
  },
  "SetOpCinematicAvailable": {
    "original": "native SetOpCinematicAvailable takes integer campaignNumber, boolean available returns nothing",
    "name": "SetOpCinematicAvailable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "campaignNumber",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "available",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetOpCinematicAvailable(campaignNumber, available)",
    "documentation": ""
  },
  "SetEdCinematicAvailable": {
    "original": "native SetEdCinematicAvailable takes integer campaignNumber, boolean available returns nothing",
    "name": "SetEdCinematicAvailable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "campaignNumber",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "available",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetEdCinematicAvailable(campaignNumber, available)",
    "documentation": ""
  },
  "GetDefaultDifficulty": {
    "original": "native GetDefaultDifficulty takes nothing returns gamedifficulty",
    "name": "GetDefaultDifficulty",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "gamedifficulty",
    "insertText": "GetDefaultDifficulty()",
    "documentation": ""
  },
  "SetDefaultDifficulty": {
    "original": "native SetDefaultDifficulty takes gamedifficulty g returns nothing",
    "name": "SetDefaultDifficulty",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamedifficulty",
      "name": "g",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetDefaultDifficulty(g)",
    "documentation": ""
  },
  "SetCustomCampaignButtonVisible": {
    "original": "native SetCustomCampaignButtonVisible takes integer whichButton, boolean visible returns nothing",
    "name": "SetCustomCampaignButtonVisible",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "whichButton",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "visible",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCustomCampaignButtonVisible(whichButton, visible)",
    "documentation": ""
  },
  "GetCustomCampaignButtonVisible": {
    "original": "native GetCustomCampaignButtonVisible takes integer whichButton returns boolean",
    "name": "GetCustomCampaignButtonVisible",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "whichButton",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "GetCustomCampaignButtonVisible(whichButton)",
    "documentation": ""
  },
  "DoNotSaveReplay": {
    "original": "native DoNotSaveReplay takes nothing returns nothing",
    "name": "DoNotSaveReplay",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "DoNotSaveReplay()",
    "documentation": "关闭游戏录像功能"
  },
  "DialogCreate": {
    "original": "native DialogCreate takes nothing returns dialog",
    "name": "DialogCreate",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "dialog",
    "insertText": "DialogCreate()",
    "documentation": "新建对话框"
  },
  "DialogDestroy": {
    "original": "native DialogDestroy takes dialog whichDialog returns nothing",
    "name": "DialogDestroy",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "dialog",
      "name": "whichDialog",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DialogDestroy(whichDialog)",
    "documentation": "删除 ,~对话框"
  },
  "DialogClear": {
    "original": "native DialogClear takes dialog whichDialog returns nothing",
    "name": "DialogClear",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "dialog",
      "name": "whichDialog",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DialogClear(whichDialog)",
    "documentation": ""
  },
  "DialogSetMessage": {
    "original": "native DialogSetMessage takes dialog whichDialog, string messageText returns nothing",
    "name": "DialogSetMessage",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "dialog",
      "name": "whichDialog",
      "documentation": ""
    }, {
      "type": "string",
      "name": "messageText",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DialogSetMessage(whichDialog, messageText)",
    "documentation": ""
  },
  "DialogAddButton": {
    "original": "native DialogAddButton takes dialog whichDialog, string buttonText, integer hotkey returns button",
    "name": "DialogAddButton",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "dialog",
      "name": "whichDialog",
      "documentation": ""
    }, {
      "type": "string",
      "name": "buttonText",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "hotkey",
      "documentation": ""
    }],
    "returnType": "button",
    "insertText": "DialogAddButton(whichDialog, buttonText, hotkey)",
    "documentation": "给 ,~对话框, 添加按钮, 使用标题: ,~文字, 快捷键: ,~HotKey"
  },
  "DialogAddQuitButton": {
    "original": "native DialogAddQuitButton takes dialog whichDialog, boolean doScoreScreen, string buttonText, integer hotkey returns button",
    "name": "DialogAddQuitButton",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "dialog",
      "name": "whichDialog",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "doScoreScreen",
      "documentation": ""
    }, {
      "type": "string",
      "name": "buttonText",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "hotkey",
      "documentation": ""
    }],
    "returnType": "button",
    "insertText": "DialogAddQuitButton(whichDialog, doScoreScreen, buttonText, hotkey)",
    "documentation": "为 ,~对话框, 添加退出游戏按钮(,~跳过, 计分屏) 按钮标题为: ,~文字, 快捷键为: ,~HotKey"
  },
  "DialogDisplay": {
    "original": "native DialogDisplay takes player whichPlayer, dialog whichDialog, boolean flag returns nothing",
    "name": "DialogDisplay",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "dialog",
      "name": "whichDialog",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DialogDisplay(whichPlayer, whichDialog, flag)",
    "documentation": "对 ,~Player, 设置 ,~对话框, 的状态为 ,~Show/Hide"
  },
  "ReloadGameCachesFromDisk": {
    "original": "native ReloadGameCachesFromDisk takes nothing returns boolean",
    "name": "ReloadGameCachesFromDisk",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "boolean",
    "insertText": "ReloadGameCachesFromDisk()",
    "documentation": "读取所有缓存"
  },
  "InitGameCache": {
    "original": "native InitGameCache takes string campaignFile returns gamecache",
    "name": "InitGameCache",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "campaignFile",
      "documentation": ""
    }],
    "returnType": "gamecache",
    "insertText": "InitGameCache(campaignFile)",
    "documentation": "新建游戏缓存: ,~缓存名"
  },
  "SaveGameCache": {
    "original": "native SaveGameCache takes gamecache whichCache returns boolean",
    "name": "SaveGameCache",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamecache",
      "name": "whichCache",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveGameCache(whichCache)",
    "documentation": ""
  },
  "StoreInteger": {
    "original": "native StoreInteger takes gamecache cache, string missionKey, string key, integer value returns nothing",
    "name": "StoreInteger",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "StoreInteger(cache, missionKey, key, value)",
    "documentation": "缓存: ,~Game Cache,  类别名: ,~Category, 使用名称: ,~文字, 记录: ,~整数"
  },
  "StoreReal": {
    "original": "native StoreReal takes gamecache cache, string missionKey, string key, real value returns nothing",
    "name": "StoreReal",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "real",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "StoreReal(cache, missionKey, key, value)",
    "documentation": "缓存: ,~Game Cache,  类别名: ,~Category, 使用名称: ,~文字, 记录: ,~实数"
  },
  "StoreBoolean": {
    "original": "native StoreBoolean takes gamecache cache, string missionKey, string key, boolean value returns nothing",
    "name": "StoreBoolean",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "StoreBoolean(cache, missionKey, key, value)",
    "documentation": "缓存: ,~Game Cache,  类别名: ,~Category, 使用名称: ,~文字, 记录: ,~布尔值"
  },
  "StoreUnit": {
    "original": "native StoreUnit takes gamecache cache, string missionKey, string key, unit whichUnit returns boolean",
    "name": "StoreUnit",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "StoreUnit(cache, missionKey, key, whichUnit)",
    "documentation": ""
  },
  "StoreString": {
    "original": "native StoreString takes gamecache cache, string missionKey, string key, string value returns boolean",
    "name": "StoreString",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "string",
      "name": "value",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "StoreString(cache, missionKey, key, value)",
    "documentation": "缓存: ,~Game Cache,  类别名: ,~Category, 使用名称: ,~文字, 记录: ,~字符串"
  },
  "SyncStoredInteger": {
    "original": "native SyncStoredInteger takes gamecache cache, string missionKey, string key returns nothing",
    "name": "SyncStoredInteger",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SyncStoredInteger(cache, missionKey, key)",
    "documentation": ""
  },
  "SyncStoredReal": {
    "original": "native SyncStoredReal takes gamecache cache, string missionKey, string key returns nothing",
    "name": "SyncStoredReal",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SyncStoredReal(cache, missionKey, key)",
    "documentation": ""
  },
  "SyncStoredBoolean": {
    "original": "native SyncStoredBoolean takes gamecache cache, string missionKey, string key returns nothing",
    "name": "SyncStoredBoolean",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SyncStoredBoolean(cache, missionKey, key)",
    "documentation": ""
  },
  "SyncStoredUnit": {
    "original": "native SyncStoredUnit takes gamecache cache, string missionKey, string key returns nothing",
    "name": "SyncStoredUnit",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SyncStoredUnit(cache, missionKey, key)",
    "documentation": ""
  },
  "SyncStoredString": {
    "original": "native SyncStoredString takes gamecache cache, string missionKey, string key returns nothing",
    "name": "SyncStoredString",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SyncStoredString(cache, missionKey, key)",
    "documentation": ""
  },
  "HaveStoredInteger": {
    "original": "native HaveStoredInteger takes gamecache cache, string missionKey, string key returns boolean",
    "name": "HaveStoredInteger",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "HaveStoredInteger(cache, missionKey, key)",
    "documentation": ""
  },
  "HaveStoredReal": {
    "original": "native HaveStoredReal takes gamecache cache, string missionKey, string key returns boolean",
    "name": "HaveStoredReal",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "HaveStoredReal(cache, missionKey, key)",
    "documentation": ""
  },
  "HaveStoredBoolean": {
    "original": "native HaveStoredBoolean takes gamecache cache, string missionKey, string key returns boolean",
    "name": "HaveStoredBoolean",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "HaveStoredBoolean(cache, missionKey, key)",
    "documentation": ""
  },
  "HaveStoredUnit": {
    "original": "native HaveStoredUnit takes gamecache cache, string missionKey, string key returns boolean",
    "name": "HaveStoredUnit",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "HaveStoredUnit(cache, missionKey, key)",
    "documentation": ""
  },
  "HaveStoredString": {
    "original": "native HaveStoredString takes gamecache cache, string missionKey, string key returns boolean",
    "name": "HaveStoredString",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "HaveStoredString(cache, missionKey, key)",
    "documentation": ""
  },
  "FlushGameCache": {
    "original": "native FlushGameCache takes gamecache cache returns nothing",
    "name": "FlushGameCache",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "FlushGameCache(cache)",
    "documentation": "删除 ,~GameCache"
  },
  "FlushStoredMission": {
    "original": "native FlushStoredMission takes gamecache cache, string missionKey returns nothing",
    "name": "FlushStoredMission",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "FlushStoredMission(cache, missionKey)",
    "documentation": "删除缓存 ,~GameCache, 中 ,~Category, 类别"
  },
  "FlushStoredInteger": {
    "original": "native FlushStoredInteger takes gamecache cache, string missionKey, string key returns nothing",
    "name": "FlushStoredInteger",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "FlushStoredInteger(cache, missionKey, key)",
    "documentation": ""
  },
  "FlushStoredReal": {
    "original": "native FlushStoredReal takes gamecache cache, string missionKey, string key returns nothing",
    "name": "FlushStoredReal",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "FlushStoredReal(cache, missionKey, key)",
    "documentation": ""
  },
  "FlushStoredBoolean": {
    "original": "native FlushStoredBoolean takes gamecache cache, string missionKey, string key returns nothing",
    "name": "FlushStoredBoolean",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "FlushStoredBoolean(cache, missionKey, key)",
    "documentation": ""
  },
  "FlushStoredUnit": {
    "original": "native FlushStoredUnit takes gamecache cache, string missionKey, string key returns nothing",
    "name": "FlushStoredUnit",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "FlushStoredUnit(cache, missionKey, key)",
    "documentation": ""
  },
  "FlushStoredString": {
    "original": "native FlushStoredString takes gamecache cache, string missionKey, string key returns nothing",
    "name": "FlushStoredString",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "FlushStoredString(cache, missionKey, key)",
    "documentation": ""
  },
  "GetStoredInteger": {
    "original": "native GetStoredInteger takes gamecache cache, string missionKey, string key returns integer",
    "name": "GetStoredInteger",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetStoredInteger(cache, missionKey, key)",
    "documentation": "从,~Game Cache,中读取整数值,类别: ,~Category,,名称: ,~文字"
  },
  "GetStoredReal": {
    "original": "native GetStoredReal takes gamecache cache, string missionKey, string key returns real",
    "name": "GetStoredReal",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetStoredReal(cache, missionKey, key)",
    "documentation": "从 ,~Game Cache, 中读取实数,类别: ,~Category, 名称: ,~文字"
  },
  "GetStoredBoolean": {
    "original": "native GetStoredBoolean takes gamecache cache, string missionKey, string key returns boolean",
    "name": "GetStoredBoolean",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "GetStoredBoolean(cache, missionKey, key)",
    "documentation": "从,~Game Cache,中读取布尔值,类别: ,~Category,,名称: ,~文字"
  },
  "GetStoredString": {
    "original": "native GetStoredString takes gamecache cache, string missionKey, string key returns string",
    "name": "GetStoredString",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "GetStoredString(cache, missionKey, key)",
    "documentation": "从 ,~Game Cache, 中读取字符串,类别: ,~Category, 名称: ,~文字"
  },
  "RestoreUnit": {
    "original": "native RestoreUnit takes gamecache cache, string missionKey, string key, player forWhichPlayer, real x, real y, real facing returns unit",
    "name": "RestoreUnit",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "player",
      "name": "forWhichPlayer",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "facing",
      "documentation": ""
    }],
    "returnType": "unit",
    "insertText": "RestoreUnit(cache, missionKey, key, forWhichPlayer, x, y, facing)",
    "documentation": ""
  },
  "InitHashtable": {
    "original": "native InitHashtable takes nothing returns hashtable",
    "name": "InitHashtable",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "hashtable",
    "insertText": "InitHashtable()",
    "documentation": "创建一个新的哈希表"
  },
  "SaveInteger": {
    "original": "native SaveInteger takes hashtable table, integer parentKey, integer childKey, integer value returns nothing",
    "name": "SaveInteger",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SaveInteger(table, parentKey, childKey, value)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存整数 ,~Value"
  },
  "SaveReal": {
    "original": "native SaveReal takes hashtable table, integer parentKey, integer childKey, real value returns nothing",
    "name": "SaveReal",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "real",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SaveReal(table, parentKey, childKey, value)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存实数 ,~Value"
  },
  "SaveBoolean": {
    "original": "native SaveBoolean takes hashtable table, integer parentKey, integer childKey, boolean value returns nothing",
    "name": "SaveBoolean",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SaveBoolean(table, parentKey, childKey, value)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存布尔 ,~Value"
  },
  "SaveStr": {
    "original": "native SaveStr takes hashtable table, integer parentKey, integer childKey, string value returns boolean",
    "name": "SaveStr",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "string",
      "name": "value",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveStr(table, parentKey, childKey, value)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存字符串 ,~Value"
  },
  "SavePlayerHandle": {
    "original": "native SavePlayerHandle takes hashtable table, integer parentKey, integer childKey, player whichPlayer returns boolean",
    "name": "SavePlayerHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SavePlayerHandle(table, parentKey, childKey, whichPlayer)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存玩家 ,~Value"
  },
  "SaveWidgetHandle": {
    "original": "native SaveWidgetHandle takes hashtable table, integer parentKey, integer childKey, widget whichWidget returns boolean",
    "name": "SaveWidgetHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "widget",
      "name": "whichWidget",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveWidgetHandle(table, parentKey, childKey, whichWidget)",
    "documentation": ""
  },
  "SaveDestructableHandle": {
    "original": "native SaveDestructableHandle takes hashtable table, integer parentKey, integer childKey, destructable whichDestructable returns boolean",
    "name": "SaveDestructableHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "destructable",
      "name": "whichDestructable",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveDestructableHandle(table, parentKey, childKey, whichDestructable)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存可破坏物 ,~Value"
  },
  "SaveItemHandle": {
    "original": "native SaveItemHandle takes hashtable table, integer parentKey, integer childKey, item whichItem returns boolean",
    "name": "SaveItemHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveItemHandle(table, parentKey, childKey, whichItem)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存物品 ,~Value"
  },
  "SaveUnitHandle": {
    "original": "native SaveUnitHandle takes hashtable table, integer parentKey, integer childKey, unit whichUnit returns boolean",
    "name": "SaveUnitHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveUnitHandle(table, parentKey, childKey, whichUnit)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存单位 ,~Value"
  },
  "SaveAbilityHandle": {
    "original": "native SaveAbilityHandle takes hashtable table, integer parentKey, integer childKey, ability whichAbility returns boolean",
    "name": "SaveAbilityHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "ability",
      "name": "whichAbility",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveAbilityHandle(table, parentKey, childKey, whichAbility)",
    "documentation": ""
  },
  "SaveTimerHandle": {
    "original": "native SaveTimerHandle takes hashtable table, integer parentKey, integer childKey, timer whichTimer returns boolean",
    "name": "SaveTimerHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "timer",
      "name": "whichTimer",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveTimerHandle(table, parentKey, childKey, whichTimer)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存计时器 ,~Value"
  },
  "SaveTriggerHandle": {
    "original": "native SaveTriggerHandle takes hashtable table, integer parentKey, integer childKey, trigger whichTrigger returns boolean",
    "name": "SaveTriggerHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveTriggerHandle(table, parentKey, childKey, whichTrigger)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存触发器 ,~Value"
  },
  "SaveTriggerConditionHandle": {
    "original": "native SaveTriggerConditionHandle takes hashtable table, integer parentKey, integer childKey, triggercondition whichTriggercondition returns boolean",
    "name": "SaveTriggerConditionHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "triggercondition",
      "name": "whichTriggercondition",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveTriggerConditionHandle(table, parentKey, childKey, whichTriggercondition)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存触发条件 ,~Value"
  },
  "SaveTriggerActionHandle": {
    "original": "native SaveTriggerActionHandle takes hashtable table, integer parentKey, integer childKey, triggeraction whichTriggeraction returns boolean",
    "name": "SaveTriggerActionHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "triggeraction",
      "name": "whichTriggeraction",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveTriggerActionHandle(table, parentKey, childKey, whichTriggeraction)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存触发动作 ,~Value"
  },
  "SaveTriggerEventHandle": {
    "original": "native SaveTriggerEventHandle takes hashtable table, integer parentKey, integer childKey, event whichEvent returns boolean",
    "name": "SaveTriggerEventHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "event",
      "name": "whichEvent",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveTriggerEventHandle(table, parentKey, childKey, whichEvent)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存触发事件 ,~Value"
  },
  "SaveForceHandle": {
    "original": "native SaveForceHandle takes hashtable table, integer parentKey, integer childKey, force whichForce returns boolean",
    "name": "SaveForceHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "force",
      "name": "whichForce",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveForceHandle(table, parentKey, childKey, whichForce)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存玩家组 ,~Value"
  },
  "SaveGroupHandle": {
    "original": "native SaveGroupHandle takes hashtable table, integer parentKey, integer childKey, group whichGroup returns boolean",
    "name": "SaveGroupHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveGroupHandle(table, parentKey, childKey, whichGroup)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存单位组 ,~Value"
  },
  "SaveLocationHandle": {
    "original": "native SaveLocationHandle takes hashtable table, integer parentKey, integer childKey, location whichLocation returns boolean",
    "name": "SaveLocationHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "location",
      "name": "whichLocation",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveLocationHandle(table, parentKey, childKey, whichLocation)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存点 ,~Value"
  },
  "SaveRectHandle": {
    "original": "native SaveRectHandle takes hashtable table, integer parentKey, integer childKey, rect whichRect returns boolean",
    "name": "SaveRectHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "rect",
      "name": "whichRect",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveRectHandle(table, parentKey, childKey, whichRect)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存区域(矩型) ,~Value"
  },
  "SaveBooleanExprHandle": {
    "original": "native SaveBooleanExprHandle takes hashtable table, integer parentKey, integer childKey, boolexpr whichBoolexpr returns boolean",
    "name": "SaveBooleanExprHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "whichBoolexpr",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveBooleanExprHandle(table, parentKey, childKey, whichBoolexpr)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存布尔表达式 ,~Value"
  },
  "SaveSoundHandle": {
    "original": "native SaveSoundHandle takes hashtable table, integer parentKey, integer childKey, sound whichSound returns boolean",
    "name": "SaveSoundHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "sound",
      "name": "whichSound",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveSoundHandle(table, parentKey, childKey, whichSound)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存音效 ,~Value"
  },
  "SaveEffectHandle": {
    "original": "native SaveEffectHandle takes hashtable table, integer parentKey, integer childKey, effect whichEffect returns boolean",
    "name": "SaveEffectHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "effect",
      "name": "whichEffect",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveEffectHandle(table, parentKey, childKey, whichEffect)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存特效 ,~Value"
  },
  "SaveUnitPoolHandle": {
    "original": "native SaveUnitPoolHandle takes hashtable table, integer parentKey, integer childKey, unitpool whichUnitpool returns boolean",
    "name": "SaveUnitPoolHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "unitpool",
      "name": "whichUnitpool",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveUnitPoolHandle(table, parentKey, childKey, whichUnitpool)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存单位池 ,~Value"
  },
  "SaveItemPoolHandle": {
    "original": "native SaveItemPoolHandle takes hashtable table, integer parentKey, integer childKey, itempool whichItempool returns boolean",
    "name": "SaveItemPoolHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "itempool",
      "name": "whichItempool",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveItemPoolHandle(table, parentKey, childKey, whichItempool)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存物品池 ,~Value"
  },
  "SaveQuestHandle": {
    "original": "native SaveQuestHandle takes hashtable table, integer parentKey, integer childKey, quest whichQuest returns boolean",
    "name": "SaveQuestHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "quest",
      "name": "whichQuest",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveQuestHandle(table, parentKey, childKey, whichQuest)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存任务 ,~Value"
  },
  "SaveQuestItemHandle": {
    "original": "native SaveQuestItemHandle takes hashtable table, integer parentKey, integer childKey, questitem whichQuestitem returns boolean",
    "name": "SaveQuestItemHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "questitem",
      "name": "whichQuestitem",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveQuestItemHandle(table, parentKey, childKey, whichQuestitem)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存任务要求 ,~Value"
  },
  "SaveDefeatConditionHandle": {
    "original": "native SaveDefeatConditionHandle takes hashtable table, integer parentKey, integer childKey, defeatcondition whichDefeatcondition returns boolean",
    "name": "SaveDefeatConditionHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "defeatcondition",
      "name": "whichDefeatcondition",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveDefeatConditionHandle(table, parentKey, childKey, whichDefeatcondition)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存失败条件 ,~Value"
  },
  "SaveTimerDialogHandle": {
    "original": "native SaveTimerDialogHandle takes hashtable table, integer parentKey, integer childKey, timerdialog whichTimerdialog returns boolean",
    "name": "SaveTimerDialogHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "timerdialog",
      "name": "whichTimerdialog",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveTimerDialogHandle(table, parentKey, childKey, whichTimerdialog)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存计时器窗口 ,~Value"
  },
  "SaveLeaderboardHandle": {
    "original": "native SaveLeaderboardHandle takes hashtable table, integer parentKey, integer childKey, leaderboard whichLeaderboard returns boolean",
    "name": "SaveLeaderboardHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "leaderboard",
      "name": "whichLeaderboard",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveLeaderboardHandle(table, parentKey, childKey, whichLeaderboard)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存排行榜 ,~Value"
  },
  "SaveMultiboardHandle": {
    "original": "native SaveMultiboardHandle takes hashtable table, integer parentKey, integer childKey, multiboard whichMultiboard returns boolean",
    "name": "SaveMultiboardHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "multiboard",
      "name": "whichMultiboard",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveMultiboardHandle(table, parentKey, childKey, whichMultiboard)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存多面板 ,~Value"
  },
  "SaveMultiboardItemHandle": {
    "original": "native SaveMultiboardItemHandle takes hashtable table, integer parentKey, integer childKey, multiboarditem whichMultiboarditem returns boolean",
    "name": "SaveMultiboardItemHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "multiboarditem",
      "name": "whichMultiboarditem",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveMultiboardItemHandle(table, parentKey, childKey, whichMultiboarditem)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存多面板项目 ,~Value"
  },
  "SaveTrackableHandle": {
    "original": "native SaveTrackableHandle takes hashtable table, integer parentKey, integer childKey, trackable whichTrackable returns boolean",
    "name": "SaveTrackableHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "trackable",
      "name": "whichTrackable",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveTrackableHandle(table, parentKey, childKey, whichTrackable)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存可追踪物 ,~Value"
  },
  "SaveDialogHandle": {
    "original": "native SaveDialogHandle takes hashtable table, integer parentKey, integer childKey, dialog whichDialog returns boolean",
    "name": "SaveDialogHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "dialog",
      "name": "whichDialog",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveDialogHandle(table, parentKey, childKey, whichDialog)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存对话框 ,~Value"
  },
  "SaveButtonHandle": {
    "original": "native SaveButtonHandle takes hashtable table, integer parentKey, integer childKey, button whichButton returns boolean",
    "name": "SaveButtonHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "button",
      "name": "whichButton",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveButtonHandle(table, parentKey, childKey, whichButton)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存对话框按钮 ,~Value"
  },
  "SaveTextTagHandle": {
    "original": "native SaveTextTagHandle takes hashtable table, integer parentKey, integer childKey, texttag whichTexttag returns boolean",
    "name": "SaveTextTagHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "texttag",
      "name": "whichTexttag",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveTextTagHandle(table, parentKey, childKey, whichTexttag)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存漂浮文字 ,~Value"
  },
  "SaveLightningHandle": {
    "original": "native SaveLightningHandle takes hashtable table, integer parentKey, integer childKey, lightning whichLightning returns boolean",
    "name": "SaveLightningHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "lightning",
      "name": "whichLightning",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveLightningHandle(table, parentKey, childKey, whichLightning)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存闪电效果 ,~Value"
  },
  "SaveImageHandle": {
    "original": "native SaveImageHandle takes hashtable table, integer parentKey, integer childKey, image whichImage returns boolean",
    "name": "SaveImageHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "image",
      "name": "whichImage",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveImageHandle(table, parentKey, childKey, whichImage)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存图像 ,~Value"
  },
  "SaveUbersplatHandle": {
    "original": "native SaveUbersplatHandle takes hashtable table, integer parentKey, integer childKey, ubersplat whichUbersplat returns boolean",
    "name": "SaveUbersplatHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "ubersplat",
      "name": "whichUbersplat",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveUbersplatHandle(table, parentKey, childKey, whichUbersplat)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存地面纹理变化 ,~Value"
  },
  "SaveRegionHandle": {
    "original": "native SaveRegionHandle takes hashtable table, integer parentKey, integer childKey, region whichRegion returns boolean",
    "name": "SaveRegionHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "region",
      "name": "whichRegion",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveRegionHandle(table, parentKey, childKey, whichRegion)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存区域(不规则) ,~Value"
  },
  "SaveFogStateHandle": {
    "original": "native SaveFogStateHandle takes hashtable table, integer parentKey, integer childKey, fogstate whichFogState returns boolean",
    "name": "SaveFogStateHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "fogstate",
      "name": "whichFogState",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveFogStateHandle(table, parentKey, childKey, whichFogState)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存迷雾状态 ,~Value"
  },
  "SaveFogModifierHandle": {
    "original": "native SaveFogModifierHandle takes hashtable table, integer parentKey, integer childKey, fogmodifier whichFogModifier returns boolean",
    "name": "SaveFogModifierHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "fogmodifier",
      "name": "whichFogModifier",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveFogModifierHandle(table, parentKey, childKey, whichFogModifier)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存可见度修正器 ,~Value"
  },
  "SaveAgentHandle": {
    "original": "native SaveAgentHandle takes hashtable table, integer parentKey, integer childKey, agent whichAgent returns boolean",
    "name": "SaveAgentHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "agent",
      "name": "whichAgent",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveAgentHandle(table, parentKey, childKey, whichAgent)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存对象 ,~Value"
  },
  "SaveHashtableHandle": {
    "original": "native SaveHashtableHandle takes hashtable table, integer parentKey, integer childKey, hashtable whichHashtable returns boolean",
    "name": "SaveHashtableHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "whichHashtable",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveHashtableHandle(table, parentKey, childKey, whichHashtable)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 中保存哈希表 ,~Value"
  },
  "LoadInteger": {
    "original": "native LoadInteger takes hashtable table, integer parentKey, integer childKey returns integer",
    "name": "LoadInteger",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "LoadInteger(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取整数"
  },
  "LoadReal": {
    "original": "native LoadReal takes hashtable table, integer parentKey, integer childKey returns real",
    "name": "LoadReal",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "LoadReal(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取实数"
  },
  "LoadBoolean": {
    "original": "native LoadBoolean takes hashtable table, integer parentKey, integer childKey returns boolean",
    "name": "LoadBoolean",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "LoadBoolean(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取布尔"
  },
  "LoadStr": {
    "original": "native LoadStr takes hashtable table, integer parentKey, integer childKey returns string",
    "name": "LoadStr",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "LoadStr(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取字符串"
  },
  "LoadPlayerHandle": {
    "original": "native LoadPlayerHandle takes hashtable table, integer parentKey, integer childKey returns player",
    "name": "LoadPlayerHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "player",
    "insertText": "LoadPlayerHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取玩家"
  },
  "LoadWidgetHandle": {
    "original": "native LoadWidgetHandle takes hashtable table, integer parentKey, integer childKey returns widget",
    "name": "LoadWidgetHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "widget",
    "insertText": "LoadWidgetHandle(table, parentKey, childKey)",
    "documentation": ""
  },
  "LoadDestructableHandle": {
    "original": "native LoadDestructableHandle takes hashtable table, integer parentKey, integer childKey returns destructable",
    "name": "LoadDestructableHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "destructable",
    "insertText": "LoadDestructableHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取可破坏物"
  },
  "LoadItemHandle": {
    "original": "native LoadItemHandle takes hashtable table, integer parentKey, integer childKey returns item",
    "name": "LoadItemHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "item",
    "insertText": "LoadItemHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取物品"
  },
  "LoadUnitHandle": {
    "original": "native LoadUnitHandle takes hashtable table, integer parentKey, integer childKey returns unit",
    "name": "LoadUnitHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "unit",
    "insertText": "LoadUnitHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取单位"
  },
  "LoadAbilityHandle": {
    "original": "native LoadAbilityHandle takes hashtable table, integer parentKey, integer childKey returns ability",
    "name": "LoadAbilityHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "ability",
    "insertText": "LoadAbilityHandle(table, parentKey, childKey)",
    "documentation": ""
  },
  "LoadTimerHandle": {
    "original": "native LoadTimerHandle takes hashtable table, integer parentKey, integer childKey returns timer",
    "name": "LoadTimerHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "timer",
    "insertText": "LoadTimerHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取计时器"
  },
  "LoadTriggerHandle": {
    "original": "native LoadTriggerHandle takes hashtable table, integer parentKey, integer childKey returns trigger",
    "name": "LoadTriggerHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "trigger",
    "insertText": "LoadTriggerHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取触发器"
  },
  "LoadTriggerConditionHandle": {
    "original": "native LoadTriggerConditionHandle takes hashtable table, integer parentKey, integer childKey returns triggercondition",
    "name": "LoadTriggerConditionHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "triggercondition",
    "insertText": "LoadTriggerConditionHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取触发条件"
  },
  "LoadTriggerActionHandle": {
    "original": "native LoadTriggerActionHandle takes hashtable table, integer parentKey, integer childKey returns triggeraction",
    "name": "LoadTriggerActionHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "triggeraction",
    "insertText": "LoadTriggerActionHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取触发动作"
  },
  "LoadTriggerEventHandle": {
    "original": "native LoadTriggerEventHandle takes hashtable table, integer parentKey, integer childKey returns event",
    "name": "LoadTriggerEventHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "LoadTriggerEventHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取触发事件"
  },
  "LoadForceHandle": {
    "original": "native LoadForceHandle takes hashtable table, integer parentKey, integer childKey returns force",
    "name": "LoadForceHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "force",
    "insertText": "LoadForceHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取玩家组"
  },
  "LoadGroupHandle": {
    "original": "native LoadGroupHandle takes hashtable table, integer parentKey, integer childKey returns group",
    "name": "LoadGroupHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "group",
    "insertText": "LoadGroupHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取单位组"
  },
  "LoadLocationHandle": {
    "original": "native LoadLocationHandle takes hashtable table, integer parentKey, integer childKey returns location",
    "name": "LoadLocationHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "location",
    "insertText": "LoadLocationHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取点"
  },
  "LoadRectHandle": {
    "original": "native LoadRectHandle takes hashtable table, integer parentKey, integer childKey returns rect",
    "name": "LoadRectHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "rect",
    "insertText": "LoadRectHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取区域(矩型)"
  },
  "LoadBooleanExprHandle": {
    "original": "native LoadBooleanExprHandle takes hashtable table, integer parentKey, integer childKey returns boolexpr",
    "name": "LoadBooleanExprHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "boolexpr",
    "insertText": "LoadBooleanExprHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取布尔表达式"
  },
  "LoadSoundHandle": {
    "original": "native LoadSoundHandle takes hashtable table, integer parentKey, integer childKey returns sound",
    "name": "LoadSoundHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "sound",
    "insertText": "LoadSoundHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取音效"
  },
  "LoadEffectHandle": {
    "original": "native LoadEffectHandle takes hashtable table, integer parentKey, integer childKey returns effect",
    "name": "LoadEffectHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "effect",
    "insertText": "LoadEffectHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取特效"
  },
  "LoadUnitPoolHandle": {
    "original": "native LoadUnitPoolHandle takes hashtable table, integer parentKey, integer childKey returns unitpool",
    "name": "LoadUnitPoolHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "unitpool",
    "insertText": "LoadUnitPoolHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取单位池"
  },
  "LoadItemPoolHandle": {
    "original": "native LoadItemPoolHandle takes hashtable table, integer parentKey, integer childKey returns itempool",
    "name": "LoadItemPoolHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "itempool",
    "insertText": "LoadItemPoolHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取物品池"
  },
  "LoadQuestHandle": {
    "original": "native LoadQuestHandle takes hashtable table, integer parentKey, integer childKey returns quest",
    "name": "LoadQuestHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "quest",
    "insertText": "LoadQuestHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取任务"
  },
  "LoadQuestItemHandle": {
    "original": "native LoadQuestItemHandle takes hashtable table, integer parentKey, integer childKey returns questitem",
    "name": "LoadQuestItemHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "questitem",
    "insertText": "LoadQuestItemHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取任务要求"
  },
  "LoadDefeatConditionHandle": {
    "original": "native LoadDefeatConditionHandle takes hashtable table, integer parentKey, integer childKey returns defeatcondition",
    "name": "LoadDefeatConditionHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "defeatcondition",
    "insertText": "LoadDefeatConditionHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取失败条件"
  },
  "LoadTimerDialogHandle": {
    "original": "native LoadTimerDialogHandle takes hashtable table, integer parentKey, integer childKey returns timerdialog",
    "name": "LoadTimerDialogHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "timerdialog",
    "insertText": "LoadTimerDialogHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取计时器窗口"
  },
  "LoadLeaderboardHandle": {
    "original": "native LoadLeaderboardHandle takes hashtable table, integer parentKey, integer childKey returns leaderboard",
    "name": "LoadLeaderboardHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "leaderboard",
    "insertText": "LoadLeaderboardHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取排行榜"
  },
  "LoadMultiboardHandle": {
    "original": "native LoadMultiboardHandle takes hashtable table, integer parentKey, integer childKey returns multiboard",
    "name": "LoadMultiboardHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "multiboard",
    "insertText": "LoadMultiboardHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取多面板"
  },
  "LoadMultiboardItemHandle": {
    "original": "native LoadMultiboardItemHandle takes hashtable table, integer parentKey, integer childKey returns multiboarditem",
    "name": "LoadMultiboardItemHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "multiboarditem",
    "insertText": "LoadMultiboardItemHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取多面板项目"
  },
  "LoadTrackableHandle": {
    "original": "native LoadTrackableHandle takes hashtable table, integer parentKey, integer childKey returns trackable",
    "name": "LoadTrackableHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "trackable",
    "insertText": "LoadTrackableHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取可追踪物"
  },
  "LoadDialogHandle": {
    "original": "native LoadDialogHandle takes hashtable table, integer parentKey, integer childKey returns dialog",
    "name": "LoadDialogHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "dialog",
    "insertText": "LoadDialogHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取对话框"
  },
  "LoadButtonHandle": {
    "original": "native LoadButtonHandle takes hashtable table, integer parentKey, integer childKey returns button",
    "name": "LoadButtonHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "button",
    "insertText": "LoadButtonHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取对话框按钮"
  },
  "LoadTextTagHandle": {
    "original": "native LoadTextTagHandle takes hashtable table, integer parentKey, integer childKey returns texttag",
    "name": "LoadTextTagHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "texttag",
    "insertText": "LoadTextTagHandle(table, parentKey, childKey)",
    "documentation": "如果不存在则返回空,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取漂浮文字"
  },
  "LoadLightningHandle": {
    "original": "native LoadLightningHandle takes hashtable table, integer parentKey, integer childKey returns lightning",
    "name": "LoadLightningHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "lightning",
    "insertText": "LoadLightningHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取闪电效果"
  },
  "LoadImageHandle": {
    "original": "native LoadImageHandle takes hashtable table, integer parentKey, integer childKey returns image",
    "name": "LoadImageHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "image",
    "insertText": "LoadImageHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取图象"
  },
  "LoadUbersplatHandle": {
    "original": "native LoadUbersplatHandle takes hashtable table, integer parentKey, integer childKey returns ubersplat",
    "name": "LoadUbersplatHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "ubersplat",
    "insertText": "LoadUbersplatHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取地面纹理变化"
  },
  "LoadRegionHandle": {
    "original": "native LoadRegionHandle takes hashtable table, integer parentKey, integer childKey returns region",
    "name": "LoadRegionHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "region",
    "insertText": "LoadRegionHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取区域(不规则)"
  },
  "LoadFogStateHandle": {
    "original": "native LoadFogStateHandle takes hashtable table, integer parentKey, integer childKey returns fogstate",
    "name": "LoadFogStateHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "fogstate",
    "insertText": "LoadFogStateHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取迷雾状态"
  },
  "LoadFogModifierHandle": {
    "original": "native LoadFogModifierHandle takes hashtable table, integer parentKey, integer childKey returns fogmodifier",
    "name": "LoadFogModifierHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "fogmodifier",
    "insertText": "LoadFogModifierHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取可见度修正器"
  },
  "LoadHashtableHandle": {
    "original": "native LoadHashtableHandle takes hashtable table, integer parentKey, integer childKey returns hashtable",
    "name": "LoadHashtableHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "hashtable",
    "insertText": "LoadHashtableHandle(table, parentKey, childKey)",
    "documentation": "在 ,~Hashtable, 的主索引 ,~Value, 子索引 ,~Value, 内提取哈希表"
  },
  "HaveSavedInteger": {
    "original": "native HaveSavedInteger takes hashtable table, integer parentKey, integer childKey returns boolean",
    "name": "HaveSavedInteger",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "HaveSavedInteger(table, parentKey, childKey)",
    "documentation": ""
  },
  "HaveSavedReal": {
    "original": "native HaveSavedReal takes hashtable table, integer parentKey, integer childKey returns boolean",
    "name": "HaveSavedReal",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "HaveSavedReal(table, parentKey, childKey)",
    "documentation": ""
  },
  "HaveSavedBoolean": {
    "original": "native HaveSavedBoolean takes hashtable table, integer parentKey, integer childKey returns boolean",
    "name": "HaveSavedBoolean",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "HaveSavedBoolean(table, parentKey, childKey)",
    "documentation": ""
  },
  "HaveSavedString": {
    "original": "native HaveSavedString takes hashtable table, integer parentKey, integer childKey returns boolean",
    "name": "HaveSavedString",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "HaveSavedString(table, parentKey, childKey)",
    "documentation": ""
  },
  "HaveSavedHandle": {
    "original": "native HaveSavedHandle takes hashtable table, integer parentKey, integer childKey returns boolean",
    "name": "HaveSavedHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "HaveSavedHandle(table, parentKey, childKey)",
    "documentation": ""
  },
  "RemoveSavedInteger": {
    "original": "native RemoveSavedInteger takes hashtable table, integer parentKey, integer childKey returns nothing",
    "name": "RemoveSavedInteger",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RemoveSavedInteger(table, parentKey, childKey)",
    "documentation": ""
  },
  "RemoveSavedReal": {
    "original": "native RemoveSavedReal takes hashtable table, integer parentKey, integer childKey returns nothing",
    "name": "RemoveSavedReal",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RemoveSavedReal(table, parentKey, childKey)",
    "documentation": ""
  },
  "RemoveSavedBoolean": {
    "original": "native RemoveSavedBoolean takes hashtable table, integer parentKey, integer childKey returns nothing",
    "name": "RemoveSavedBoolean",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RemoveSavedBoolean(table, parentKey, childKey)",
    "documentation": ""
  },
  "RemoveSavedString": {
    "original": "native RemoveSavedString takes hashtable table, integer parentKey, integer childKey returns nothing",
    "name": "RemoveSavedString",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RemoveSavedString(table, parentKey, childKey)",
    "documentation": ""
  },
  "RemoveSavedHandle": {
    "original": "native RemoveSavedHandle takes hashtable table, integer parentKey, integer childKey returns nothing",
    "name": "RemoveSavedHandle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "childKey",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RemoveSavedHandle(table, parentKey, childKey)",
    "documentation": ""
  },
  "FlushParentHashtable": {
    "original": "native FlushParentHashtable takes hashtable table returns nothing",
    "name": "FlushParentHashtable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "FlushParentHashtable(table)",
    "documentation": "清空 ,~Hashtable"
  },
  "FlushChildHashtable": {
    "original": "native FlushChildHashtable takes hashtable table, integer parentKey returns nothing",
    "name": "FlushChildHashtable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parentKey",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "FlushChildHashtable(table, parentKey)",
    "documentation": "清空 ,~Hashtable, 中位于主索引 ,~Value,  之内的所有数据"
  },
  "GetRandomInt": {
    "original": "native GetRandomInt takes integer lowBound, integer highBound returns integer",
    "name": "GetRandomInt",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "lowBound",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "highBound",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetRandomInt(lowBound, highBound)",
    "documentation": "随机数字"
  },
  "GetRandomReal": {
    "original": "native GetRandomReal takes real lowBound, real highBound returns real",
    "name": "GetRandomReal",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "lowBound",
      "documentation": ""
    }, {
      "type": "real",
      "name": "highBound",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetRandomReal(lowBound, highBound)",
    "documentation": "随机数"
  },
  "CreateUnitPool": {
    "original": "native CreateUnitPool takes nothing returns unitpool",
    "name": "CreateUnitPool",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "unitpool",
    "insertText": "CreateUnitPool()",
    "documentation": "新建的空单位池"
  },
  "DestroyUnitPool": {
    "original": "native DestroyUnitPool takes unitpool whichPool returns nothing",
    "name": "DestroyUnitPool",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unitpool",
      "name": "whichPool",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DestroyUnitPool(whichPool)",
    "documentation": "删除 ,~单位池"
  },
  "UnitPoolAddUnitType": {
    "original": "native UnitPoolAddUnitType takes unitpool whichPool, integer unitId, real weight returns nothing",
    "name": "UnitPoolAddUnitType",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unitpool",
      "name": "whichPool",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitId",
      "documentation": ""
    }, {
      "type": "real",
      "name": "weight",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UnitPoolAddUnitType(whichPool, unitId, weight)",
    "documentation": "在 ,~单位池, 中添加一个 ,~单位, 比重为 ,~数值"
  },
  "UnitPoolRemoveUnitType": {
    "original": "native UnitPoolRemoveUnitType takes unitpool whichPool, integer unitId returns nothing",
    "name": "UnitPoolRemoveUnitType",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unitpool",
      "name": "whichPool",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitId",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UnitPoolRemoveUnitType(whichPool, unitId)",
    "documentation": "从 ,~单位池, 中删除 ,~单位"
  },
  "PlaceRandomUnit": {
    "original": "native PlaceRandomUnit takes unitpool whichPool, player forWhichPlayer, real x, real y, real facing returns unit",
    "name": "PlaceRandomUnit",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unitpool",
      "name": "whichPool",
      "documentation": ""
    }, {
      "type": "player",
      "name": "forWhichPlayer",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "facing",
      "documentation": ""
    }],
    "returnType": "unit",
    "insertText": "PlaceRandomUnit(whichPool, forWhichPlayer, x, y, facing)",
    "documentation": "从 ,~单位池, 中为 ,~玩家, 任意选择一个单位并放置到点( ,~X, , ,~Y, 面向 ,~度"
  },
  "CreateItemPool": {
    "original": "native CreateItemPool takes nothing returns itempool",
    "name": "CreateItemPool",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "itempool",
    "insertText": "CreateItemPool()",
    "documentation": "新建的空物品池"
  },
  "DestroyItemPool": {
    "original": "native DestroyItemPool takes itempool whichItemPool returns nothing",
    "name": "DestroyItemPool",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "itempool",
      "name": "whichItemPool",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DestroyItemPool(whichItemPool)",
    "documentation": "删除 ,~物品池"
  },
  "ItemPoolAddItemType": {
    "original": "native ItemPoolAddItemType takes itempool whichItemPool, integer itemId, real weight returns nothing",
    "name": "ItemPoolAddItemType",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "itempool",
      "name": "whichItemPool",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "itemId",
      "documentation": ""
    }, {
      "type": "real",
      "name": "weight",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ItemPoolAddItemType(whichItemPool, itemId, weight)",
    "documentation": "在 ,~物品池, 中添加一个 ,~物品, 比重为 ,~数值"
  },
  "ItemPoolRemoveItemType": {
    "original": "native ItemPoolRemoveItemType takes itempool whichItemPool, integer itemId returns nothing",
    "name": "ItemPoolRemoveItemType",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "itempool",
      "name": "whichItemPool",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "itemId",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ItemPoolRemoveItemType(whichItemPool, itemId)",
    "documentation": "从 ,~物品池, 中删除 ,~物品"
  },
  "PlaceRandomItem": {
    "original": "native PlaceRandomItem takes itempool whichItemPool, real x, real y returns item",
    "name": "PlaceRandomItem",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "itempool",
      "name": "whichItemPool",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": "item",
    "insertText": "PlaceRandomItem(whichItemPool, x, y)",
    "documentation": "从 ,~物品池, 中任意选择一个物品并放置到( ,~X, , ,~Y, )点"
  },
  "ChooseRandomCreep": {
    "original": "native ChooseRandomCreep takes integer level returns integer",
    "name": "ChooseRandomCreep",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "level",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "ChooseRandomCreep(level)",
    "documentation": ""
  },
  "ChooseRandomNPBuilding": {
    "original": "native ChooseRandomNPBuilding takes nothing returns integer",
    "name": "ChooseRandomNPBuilding",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "ChooseRandomNPBuilding()",
    "documentation": ""
  },
  "ChooseRandomItem": {
    "original": "native ChooseRandomItem takes integer level returns integer",
    "name": "ChooseRandomItem",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "level",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "ChooseRandomItem(level)",
    "documentation": ""
  },
  "ChooseRandomItemEx": {
    "original": "native ChooseRandomItemEx takes itemtype whichType, integer level returns integer",
    "name": "ChooseRandomItemEx",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "itemtype",
      "name": "whichType",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "level",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "ChooseRandomItemEx(whichType, level)",
    "documentation": ""
  },
  "SetRandomSeed": {
    "original": "native SetRandomSeed takes integer seed returns nothing",
    "name": "SetRandomSeed",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "seed",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetRandomSeed(seed)",
    "documentation": "设置随机种子数为：,~整数"
  },
  "SetTerrainFog": {
    "original": "native SetTerrainFog takes real a, real b, real c, real d, real e returns nothing",
    "name": "SetTerrainFog",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "a",
      "documentation": ""
    }, {
      "type": "real",
      "name": "b",
      "documentation": ""
    }, {
      "type": "real",
      "name": "c",
      "documentation": ""
    }, {
      "type": "real",
      "name": "d",
      "documentation": ""
    }, {
      "type": "real",
      "name": "e",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTerrainFog(a, b, c, d, e)",
    "documentation": ""
  },
  "ResetTerrainFog": {
    "original": "native ResetTerrainFog takes nothing returns nothing",
    "name": "ResetTerrainFog",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "ResetTerrainFog()",
    "documentation": ""
  },
  "SetUnitFog": {
    "original": "native SetUnitFog takes real a, real b, real c, real d, real e returns nothing",
    "name": "SetUnitFog",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "a",
      "documentation": ""
    }, {
      "type": "real",
      "name": "b",
      "documentation": ""
    }, {
      "type": "real",
      "name": "c",
      "documentation": ""
    }, {
      "type": "real",
      "name": "d",
      "documentation": ""
    }, {
      "type": "real",
      "name": "e",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitFog(a, b, c, d, e)",
    "documentation": ""
  },
  "SetTerrainFogEx": {
    "original": "native SetTerrainFogEx takes integer style, real zstart, real zend, real density, real red, real green, real blue returns nothing",
    "name": "SetTerrainFogEx",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "style",
      "documentation": ""
    }, {
      "type": "real",
      "name": "zstart",
      "documentation": ""
    }, {
      "type": "real",
      "name": "zend",
      "documentation": ""
    }, {
      "type": "real",
      "name": "density",
      "documentation": ""
    }, {
      "type": "real",
      "name": "red",
      "documentation": ""
    }, {
      "type": "real",
      "name": "green",
      "documentation": ""
    }, {
      "type": "real",
      "name": "blue",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTerrainFogEx(style, zstart, zend, density, red, green, blue)",
    "documentation": "迷雾风格: ,~Style,, Z轴开始端: ,~Z-Start,, Z轴结束端: ,~Z-End,, 密度: ,~Density, 颜色:(,~Red,,,~Green,,,~Blue,)"
  },
  "DisplayTextToPlayer": {
    "original": "native DisplayTextToPlayer takes player toPlayer, real x, real y, string message returns nothing",
    "name": "DisplayTextToPlayer",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "toPlayer",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "string",
      "name": "message",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DisplayTextToPlayer(toPlayer, x, y, message)",
    "documentation": "对 ,~玩家, 在屏幕位移(,~X,,,~Y,)处显示文本: ,~文字"
  },
  "DisplayTimedTextToPlayer": {
    "original": "native DisplayTimedTextToPlayer takes player toPlayer, real x, real y, real duration, string message returns nothing",
    "name": "DisplayTimedTextToPlayer",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "toPlayer",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }, {
      "type": "string",
      "name": "message",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DisplayTimedTextToPlayer(toPlayer, x, y, duration, message)",
    "documentation": "对 ,~玩家, 在屏幕位移(,~X,,,~Y,)处显示 ,~时间, 秒的文本信息: ,~文字"
  },
  "DisplayTimedTextFromPlayer": {
    "original": "native DisplayTimedTextFromPlayer takes player toPlayer, real x, real y, real duration, string message returns nothing",
    "name": "DisplayTimedTextFromPlayer",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "toPlayer",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }, {
      "type": "string",
      "name": "message",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DisplayTimedTextFromPlayer(toPlayer, x, y, duration, message)",
    "documentation": ""
  },
  "ClearTextMessages": {
    "original": "native ClearTextMessages takes nothing returns nothing",
    "name": "ClearTextMessages",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "ClearTextMessages()",
    "documentation": "清空玩家屏幕上的文本信息"
  },
  "SetDayNightModels": {
    "original": "native SetDayNightModels takes string terrainDNCFile, string unitDNCFile returns nothing",
    "name": "SetDayNightModels",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "terrainDNCFile",
      "documentation": ""
    }, {
      "type": "string",
      "name": "unitDNCFile",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetDayNightModels(terrainDNCFile, unitDNCFile)",
    "documentation": ""
  },
  "SetSkyModel": {
    "original": "native SetSkyModel takes string skyModelFile returns nothing",
    "name": "SetSkyModel",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "skyModelFile",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetSkyModel(skyModelFile)",
    "documentation": "设置天空"
  },
  "EnableUserControl": {
    "original": "native EnableUserControl takes boolean b returns nothing",
    "name": "EnableUserControl",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "b",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "EnableUserControl(b)",
    "documentation": "~启用/禁用, 玩家控制权"
  },
  "EnableUserUI": {
    "original": "native EnableUserUI takes boolean b returns nothing",
    "name": "EnableUserUI",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "b",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "EnableUserUI(b)",
    "documentation": ""
  },
  "SuspendTimeOfDay": {
    "original": "native SuspendTimeOfDay takes boolean b returns nothing",
    "name": "SuspendTimeOfDay",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "b",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SuspendTimeOfDay(b)",
    "documentation": ""
  },
  "SetTimeOfDayScale": {
    "original": "native SetTimeOfDayScale takes real r returns nothing",
    "name": "SetTimeOfDayScale",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "r",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTimeOfDayScale(r)",
    "documentation": "设置昼夜时间流逝速度为默认值的 ,~Value,倍"
  },
  "GetTimeOfDayScale": {
    "original": "native GetTimeOfDayScale takes nothing returns real",
    "name": "GetTimeOfDayScale",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "real",
    "insertText": "GetTimeOfDayScale()",
    "documentation": ""
  },
  "ShowInterface": {
    "original": "native ShowInterface takes boolean flag, real fadeDuration returns nothing",
    "name": "ShowInterface",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }, {
      "type": "real",
      "name": "fadeDuration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ShowInterface(flag, fadeDuration)",
    "documentation": "~开启/关闭, 信箱模式,转换时间为 ,~Duration, 秒"
  },
  "PauseGame": {
    "original": "native PauseGame takes boolean flag returns nothing",
    "name": "PauseGame",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PauseGame(flag)",
    "documentation": "~暂停/恢复, 游戏"
  },
  "UnitAddIndicator": {
    "original": "native UnitAddIndicator takes unit whichUnit, integer red, integer green, integer blue, integer alpha returns nothing",
    "name": "UnitAddIndicator",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "red",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "green",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "alpha",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UnitAddIndicator(whichUnit, red, green, blue, alpha)",
    "documentation": "对 ,~单位, 闪动指示器,使用颜色:(,~Red,%, ,~Green,%, ,~Blue,%) Alpha通道值: ,~Transparency"
  },
  "AddIndicator": {
    "original": "native AddIndicator takes widget whichWidget, integer red, integer green, integer blue, integer alpha returns nothing",
    "name": "AddIndicator",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "widget",
      "name": "whichWidget",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "red",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "green",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "alpha",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "AddIndicator(whichWidget, red, green, blue, alpha)",
    "documentation": ""
  },
  "PingMinimap": {
    "original": "native PingMinimap takes real x, real y, real duration returns nothing",
    "name": "PingMinimap",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PingMinimap(x, y, duration)",
    "documentation": "对所有玩家发送小地图信号到坐标(,~X,,,~Y,) 持续时间: ,~Duration, 秒"
  },
  "PingMinimapEx": {
    "original": "native PingMinimapEx takes real x, real y, real duration, integer red, integer green, integer blue, boolean extraEffects returns nothing",
    "name": "PingMinimapEx",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "red",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "green",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "extraEffects",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PingMinimapEx(x, y, duration, red, green, blue, extraEffects)",
    "documentation": "对所有玩家发送小地图信号到坐标(,~X,,,~Y,) 持续时间: ,~Duration, 秒, 信号颜色:(,~Red,,,~Green,,,~Blue,) 信号类型: ,~Style"
  },
  "EnableOcclusion": {
    "original": "native EnableOcclusion takes boolean flag returns nothing",
    "name": "EnableOcclusion",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "EnableOcclusion(flag)",
    "documentation": "~Enable/Disable, 闭塞"
  },
  "SetIntroShotText": {
    "original": "native SetIntroShotText takes string introText returns nothing",
    "name": "SetIntroShotText",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "introText",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetIntroShotText(introText)",
    "documentation": ""
  },
  "SetIntroShotModel": {
    "original": "native SetIntroShotModel takes string introModelPath returns nothing",
    "name": "SetIntroShotModel",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "introModelPath",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetIntroShotModel(introModelPath)",
    "documentation": ""
  },
  "EnableWorldFogBoundary": {
    "original": "native EnableWorldFogBoundary takes boolean b returns nothing",
    "name": "EnableWorldFogBoundary",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "b",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "EnableWorldFogBoundary(b)",
    "documentation": "~Enable/Disable, 边界染色,应用于所有玩家"
  },
  "PlayModelCinematic": {
    "original": "native PlayModelCinematic takes string modelName returns nothing",
    "name": "PlayModelCinematic",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "modelName",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PlayModelCinematic(modelName)",
    "documentation": ""
  },
  "PlayCinematic": {
    "original": "native PlayCinematic takes string movieName returns nothing",
    "name": "PlayCinematic",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "movieName",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PlayCinematic(movieName)",
    "documentation": ""
  },
  "ForceUIKey": {
    "original": "native ForceUIKey takes string key returns nothing",
    "name": "ForceUIKey",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ForceUIKey(key)",
    "documentation": ""
  },
  "ForceUICancel": {
    "original": "native ForceUICancel takes nothing returns nothing",
    "name": "ForceUICancel",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "ForceUICancel()",
    "documentation": ""
  },
  "DisplayLoadDialog": {
    "original": "native DisplayLoadDialog takes nothing returns nothing",
    "name": "DisplayLoadDialog",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "DisplayLoadDialog()",
    "documentation": ""
  },
  "SetAltMinimapIcon": {
    "original": "native SetAltMinimapIcon takes string iconPath returns nothing",
    "name": "SetAltMinimapIcon",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "iconPath",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetAltMinimapIcon(iconPath)",
    "documentation": "改变小地图的特殊图标"
  },
  "DisableRestartMission": {
    "original": "native DisableRestartMission takes boolean flag returns nothing",
    "name": "DisableRestartMission",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DisableRestartMission(flag)",
    "documentation": "设置 重新开始任务按钮可以点击为 ,~"
  },
  "CreateTextTag": {
    "original": "native CreateTextTag takes nothing returns texttag",
    "name": "CreateTextTag",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "texttag",
    "insertText": "CreateTextTag()",
    "documentation": "新建的空漂浮文字"
  },
  "DestroyTextTag": {
    "original": "native DestroyTextTag takes texttag t returns nothing",
    "name": "DestroyTextTag",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "texttag",
      "name": "t",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DestroyTextTag(t)",
    "documentation": ""
  },
  "SetTextTagText": {
    "original": "native SetTextTagText takes texttag t, string s, real height returns nothing",
    "name": "SetTextTagText",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "texttag",
      "name": "t",
      "documentation": ""
    }, {
      "type": "string",
      "name": "s",
      "documentation": ""
    }, {
      "type": "real",
      "name": "height",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTextTagText(t, s, height)",
    "documentation": "改变 ,~Floating Text, 的内容为 ,~文字, ,字体大小: ,~Size"
  },
  "SetTextTagPos": {
    "original": "native SetTextTagPos takes texttag t, real x, real y, real heightOffset returns nothing",
    "name": "SetTextTagPos",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "texttag",
      "name": "t",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "heightOffset",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTextTagPos(t, x, y, heightOffset)",
    "documentation": "改变 ,~Floating Text, 的位置为(,~X,,,~Y,) ,Z轴高度为 ,~Z"
  },
  "SetTextTagPosUnit": {
    "original": "native SetTextTagPosUnit takes texttag t, unit whichUnit, real heightOffset returns nothing",
    "name": "SetTextTagPosUnit",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "texttag",
      "name": "t",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "heightOffset",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTextTagPosUnit(t, whichUnit, heightOffset)",
    "documentation": ""
  },
  "SetTextTagColor": {
    "original": "native SetTextTagColor takes texttag t, integer red, integer green, integer blue, integer alpha returns nothing",
    "name": "SetTextTagColor",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "texttag",
      "name": "t",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "red",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "green",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "alpha",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTextTagColor(t, red, green, blue, alpha)",
    "documentation": "改变 ,~Floating Text, 的颜色为(,~Red,,,~Green,,,~Blue,) 透明值为 ,~Transparency"
  },
  "SetTextTagVelocity": {
    "original": "native SetTextTagVelocity takes texttag t, real xvel, real yvel returns nothing",
    "name": "SetTextTagVelocity",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "texttag",
      "name": "t",
      "documentation": ""
    }, {
      "type": "real",
      "name": "xvel",
      "documentation": ""
    }, {
      "type": "real",
      "name": "yvel",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTextTagVelocity(t, xvel, yvel)",
    "documentation": "设置 ,~Floating Text, 的X轴速率: ,~XSpeed, ,Y轴速率: ,~YSpeed"
  },
  "SetTextTagVisibility": {
    "original": "native SetTextTagVisibility takes texttag t, boolean flag returns nothing",
    "name": "SetTextTagVisibility",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "texttag",
      "name": "t",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTextTagVisibility(t, flag)",
    "documentation": "对所有玩家 ,~Show/Hide, ,~Floating Text"
  },
  "SetTextTagSuspended": {
    "original": "native SetTextTagSuspended takes texttag t, boolean flag returns nothing",
    "name": "SetTextTagSuspended",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "texttag",
      "name": "t",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTextTagSuspended(t, flag)",
    "documentation": ""
  },
  "SetTextTagPermanent": {
    "original": "native SetTextTagPermanent takes texttag t, boolean flag returns nothing",
    "name": "SetTextTagPermanent",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "texttag",
      "name": "t",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTextTagPermanent(t, flag)",
    "documentation": ""
  },
  "SetTextTagAge": {
    "original": "native SetTextTagAge takes texttag t, real age returns nothing",
    "name": "SetTextTagAge",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "texttag",
      "name": "t",
      "documentation": ""
    }, {
      "type": "real",
      "name": "age",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTextTagAge(t, age)",
    "documentation": ""
  },
  "SetTextTagLifespan": {
    "original": "native SetTextTagLifespan takes texttag t, real lifespan returns nothing",
    "name": "SetTextTagLifespan",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "texttag",
      "name": "t",
      "documentation": ""
    }, {
      "type": "real",
      "name": "lifespan",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTextTagLifespan(t, lifespan)",
    "documentation": ""
  },
  "SetTextTagFadepoint": {
    "original": "native SetTextTagFadepoint takes texttag t, real fadepoint returns nothing",
    "name": "SetTextTagFadepoint",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "texttag",
      "name": "t",
      "documentation": ""
    }, {
      "type": "real",
      "name": "fadepoint",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTextTagFadepoint(t, fadepoint)",
    "documentation": ""
  },
  "SetReservedLocalHeroButtons": {
    "original": "native SetReservedLocalHeroButtons takes integer reserved returns nothing",
    "name": "SetReservedLocalHeroButtons",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "reserved",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetReservedLocalHeroButtons(reserved)",
    "documentation": "保留英雄按钮"
  },
  "GetAllyColorFilterState": {
    "original": "native GetAllyColorFilterState takes nothing returns integer",
    "name": "GetAllyColorFilterState",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "GetAllyColorFilterState()",
    "documentation": "结盟滤色镜的设置值"
  },
  "SetAllyColorFilterState": {
    "original": "native SetAllyColorFilterState takes integer state returns nothing",
    "name": "SetAllyColorFilterState",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "state",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetAllyColorFilterState(state)",
    "documentation": "设置结盟滤色镜"
  },
  "GetCreepCampFilterState": {
    "original": "native GetCreepCampFilterState takes nothing returns boolean",
    "name": "GetCreepCampFilterState",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "boolean",
    "insertText": "GetCreepCampFilterState()",
    "documentation": "野生单位显示是开启的"
  },
  "SetCreepCampFilterState": {
    "original": "native SetCreepCampFilterState takes boolean state returns nothing",
    "name": "SetCreepCampFilterState",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "state",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCreepCampFilterState(state)",
    "documentation": "显示/隐藏野生生物图标在小地图"
  },
  "EnableMinimapFilterButtons": {
    "original": "native EnableMinimapFilterButtons takes boolean enableAlly, boolean enableCreep returns nothing",
    "name": "EnableMinimapFilterButtons",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "enableAlly",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "enableCreep",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "EnableMinimapFilterButtons(enableAlly, enableCreep)",
    "documentation": "允许/禁止小地图按钮"
  },
  "EnableDragSelect": {
    "original": "native EnableDragSelect takes boolean state, boolean ui returns nothing",
    "name": "EnableDragSelect",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "state",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "ui",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "EnableDragSelect(state, ui)",
    "documentation": "允许/禁止框选"
  },
  "EnablePreSelect": {
    "original": "native EnablePreSelect takes boolean state, boolean ui returns nothing",
    "name": "EnablePreSelect",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "state",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "ui",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "EnablePreSelect(state, ui)",
    "documentation": "允许/禁止预选"
  },
  "EnableSelect": {
    "original": "native EnableSelect takes boolean state, boolean ui returns nothing",
    "name": "EnableSelect",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "state",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "ui",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "EnableSelect(state, ui)",
    "documentation": "允许/禁止选择"
  },
  "CreateTrackable": {
    "original": "native CreateTrackable takes string trackableModelPath, real x, real y, real facing returns trackable",
    "name": "CreateTrackable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "trackableModelPath",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "facing",
      "documentation": ""
    }],
    "returnType": "trackable",
    "insertText": "CreateTrackable(trackableModelPath, x, y, facing)",
    "documentation": "新建的可追踪物, 使用模型: ,~模型名字, 所在位置: ( ,~X轴, , ,~Y轴, ) 面向角度: ,~数值, 度"
  },
  "CreateQuest": {
    "original": "native CreateQuest takes nothing returns quest",
    "name": "CreateQuest",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "quest",
    "insertText": "CreateQuest()",
    "documentation": "新建任务 "
  },
  "DestroyQuest": {
    "original": "native DestroyQuest takes quest whichQuest returns nothing",
    "name": "DestroyQuest",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "quest",
      "name": "whichQuest",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DestroyQuest(whichQuest)",
    "documentation": ""
  },
  "QuestSetTitle": {
    "original": "native QuestSetTitle takes quest whichQuest, string title returns nothing",
    "name": "QuestSetTitle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "quest",
      "name": "whichQuest",
      "documentation": ""
    }, {
      "type": "string",
      "name": "title",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "QuestSetTitle(whichQuest, title)",
    "documentation": ""
  },
  "QuestSetDescription": {
    "original": "native QuestSetDescription takes quest whichQuest, string description returns nothing",
    "name": "QuestSetDescription",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "quest",
      "name": "whichQuest",
      "documentation": ""
    }, {
      "type": "string",
      "name": "description",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "QuestSetDescription(whichQuest, description)",
    "documentation": ""
  },
  "QuestSetIconPath": {
    "original": "native QuestSetIconPath takes quest whichQuest, string iconPath returns nothing",
    "name": "QuestSetIconPath",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "quest",
      "name": "whichQuest",
      "documentation": ""
    }, {
      "type": "string",
      "name": "iconPath",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "QuestSetIconPath(whichQuest, iconPath)",
    "documentation": ""
  },
  "QuestSetRequired": {
    "original": "native QuestSetRequired takes quest whichQuest, boolean required returns nothing",
    "name": "QuestSetRequired",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "quest",
      "name": "whichQuest",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "required",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "QuestSetRequired(whichQuest, required)",
    "documentation": ""
  },
  "QuestSetCompleted": {
    "original": "native QuestSetCompleted takes quest whichQuest, boolean completed returns nothing",
    "name": "QuestSetCompleted",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "quest",
      "name": "whichQuest",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "completed",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "QuestSetCompleted(whichQuest, completed)",
    "documentation": ""
  },
  "QuestSetDiscovered": {
    "original": "native QuestSetDiscovered takes quest whichQuest, boolean discovered returns nothing",
    "name": "QuestSetDiscovered",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "quest",
      "name": "whichQuest",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "discovered",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "QuestSetDiscovered(whichQuest, discovered)",
    "documentation": ""
  },
  "QuestSetFailed": {
    "original": "native QuestSetFailed takes quest whichQuest, boolean failed returns nothing",
    "name": "QuestSetFailed",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "quest",
      "name": "whichQuest",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "failed",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "QuestSetFailed(whichQuest, failed)",
    "documentation": ""
  },
  "QuestSetEnabled": {
    "original": "native QuestSetEnabled takes quest whichQuest, boolean enabled returns nothing",
    "name": "QuestSetEnabled",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "quest",
      "name": "whichQuest",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "enabled",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "QuestSetEnabled(whichQuest, enabled)",
    "documentation": "设置 ,~Quest, ,~Enable/Disable"
  },
  "IsQuestRequired": {
    "original": "native IsQuestRequired takes quest whichQuest returns boolean",
    "name": "IsQuestRequired",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "quest",
      "name": "whichQuest",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsQuestRequired(whichQuest)",
    "documentation": "任务是必须完成的"
  },
  "IsQuestCompleted": {
    "original": "native IsQuestCompleted takes quest whichQuest returns boolean",
    "name": "IsQuestCompleted",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "quest",
      "name": "whichQuest",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsQuestCompleted(whichQuest)",
    "documentation": "任务完成"
  },
  "IsQuestDiscovered": {
    "original": "native IsQuestDiscovered takes quest whichQuest returns boolean",
    "name": "IsQuestDiscovered",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "quest",
      "name": "whichQuest",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsQuestDiscovered(whichQuest)",
    "documentation": "任务已发现"
  },
  "IsQuestFailed": {
    "original": "native IsQuestFailed takes quest whichQuest returns boolean",
    "name": "IsQuestFailed",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "quest",
      "name": "whichQuest",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsQuestFailed(whichQuest)",
    "documentation": "任务失败"
  },
  "IsQuestEnabled": {
    "original": "native IsQuestEnabled takes quest whichQuest returns boolean",
    "name": "IsQuestEnabled",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "quest",
      "name": "whichQuest",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsQuestEnabled(whichQuest)",
    "documentation": "允许任务"
  },
  "QuestCreateItem": {
    "original": "native QuestCreateItem takes quest whichQuest returns questitem",
    "name": "QuestCreateItem",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "quest",
      "name": "whichQuest",
      "documentation": ""
    }],
    "returnType": "questitem",
    "insertText": "QuestCreateItem(whichQuest)",
    "documentation": ""
  },
  "QuestItemSetDescription": {
    "original": "native QuestItemSetDescription takes questitem whichQuestItem, string description returns nothing",
    "name": "QuestItemSetDescription",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "questitem",
      "name": "whichQuestItem",
      "documentation": ""
    }, {
      "type": "string",
      "name": "description",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "QuestItemSetDescription(whichQuestItem, description)",
    "documentation": ""
  },
  "QuestItemSetCompleted": {
    "original": "native QuestItemSetCompleted takes questitem whichQuestItem, boolean completed returns nothing",
    "name": "QuestItemSetCompleted",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "questitem",
      "name": "whichQuestItem",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "completed",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "QuestItemSetCompleted(whichQuestItem, completed)",
    "documentation": ""
  },
  "IsQuestItemCompleted": {
    "original": "native IsQuestItemCompleted takes questitem whichQuestItem returns boolean",
    "name": "IsQuestItemCompleted",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "questitem",
      "name": "whichQuestItem",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsQuestItemCompleted(whichQuestItem)",
    "documentation": "任务条件完成"
  },
  "CreateDefeatCondition": {
    "original": "native CreateDefeatCondition takes nothing returns defeatcondition",
    "name": "CreateDefeatCondition",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "defeatcondition",
    "insertText": "CreateDefeatCondition()",
    "documentation": ""
  },
  "DestroyDefeatCondition": {
    "original": "native DestroyDefeatCondition takes defeatcondition whichCondition returns nothing",
    "name": "DestroyDefeatCondition",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "defeatcondition",
      "name": "whichCondition",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DestroyDefeatCondition(whichCondition)",
    "documentation": ""
  },
  "DefeatConditionSetDescription": {
    "original": "native DefeatConditionSetDescription takes defeatcondition whichCondition, string description returns nothing",
    "name": "DefeatConditionSetDescription",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "defeatcondition",
      "name": "whichCondition",
      "documentation": ""
    }, {
      "type": "string",
      "name": "description",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DefeatConditionSetDescription(whichCondition, description)",
    "documentation": ""
  },
  "FlashQuestDialogButton": {
    "original": "native FlashQuestDialogButton takes nothing returns nothing",
    "name": "FlashQuestDialogButton",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "FlashQuestDialogButton()",
    "documentation": ""
  },
  "ForceQuestDialogUpdate": {
    "original": "native ForceQuestDialogUpdate takes nothing returns nothing",
    "name": "ForceQuestDialogUpdate",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "ForceQuestDialogUpdate()",
    "documentation": ""
  },
  "CreateTimerDialog": {
    "original": "native CreateTimerDialog takes timer t returns timerdialog",
    "name": "CreateTimerDialog",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "timer",
      "name": "t",
      "documentation": ""
    }],
    "returnType": "timerdialog",
    "insertText": "CreateTimerDialog(t)",
    "documentation": "为 ,~计时器, 新建计时窗口"
  },
  "DestroyTimerDialog": {
    "original": "native DestroyTimerDialog takes timerdialog whichDialog returns nothing",
    "name": "DestroyTimerDialog",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "timerdialog",
      "name": "whichDialog",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DestroyTimerDialog(whichDialog)",
    "documentation": ""
  },
  "TimerDialogSetTitle": {
    "original": "native TimerDialogSetTitle takes timerdialog whichDialog, string title returns nothing",
    "name": "TimerDialogSetTitle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "timerdialog",
      "name": "whichDialog",
      "documentation": ""
    }, {
      "type": "string",
      "name": "title",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TimerDialogSetTitle(whichDialog, title)",
    "documentation": ""
  },
  "TimerDialogSetTitleColor": {
    "original": "native TimerDialogSetTitleColor takes timerdialog whichDialog, integer red, integer green, integer blue, integer alpha returns nothing",
    "name": "TimerDialogSetTitleColor",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "timerdialog",
      "name": "whichDialog",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "red",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "green",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "alpha",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TimerDialogSetTitleColor(whichDialog, red, green, blue, alpha)",
    "documentation": "改变 ,~Timer Window, 文字颜色为(,~Red,,,~Green,,,~Blue,) 透明值为: ,~Transparency"
  },
  "TimerDialogSetTimeColor": {
    "original": "native TimerDialogSetTimeColor takes timerdialog whichDialog, integer red, integer green, integer blue, integer alpha returns nothing",
    "name": "TimerDialogSetTimeColor",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "timerdialog",
      "name": "whichDialog",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "red",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "green",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "alpha",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TimerDialogSetTimeColor(whichDialog, red, green, blue, alpha)",
    "documentation": "改变 ,~Timer Window, 的计间颜色为(,~Red,,,~Green,,,~Blue,) 透明值为: ,~Transparency"
  },
  "TimerDialogSetSpeed": {
    "original": "native TimerDialogSetSpeed takes timerdialog whichDialog, real speedMultFactor returns nothing",
    "name": "TimerDialogSetSpeed",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "timerdialog",
      "name": "whichDialog",
      "documentation": ""
    }, {
      "type": "real",
      "name": "speedMultFactor",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TimerDialogSetSpeed(whichDialog, speedMultFactor)",
    "documentation": "设置 ,~Timer Window, 的时间流逝速度为 ,~Factor, 倍"
  },
  "TimerDialogDisplay": {
    "original": "native TimerDialogDisplay takes timerdialog whichDialog, boolean display returns nothing",
    "name": "TimerDialogDisplay",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "timerdialog",
      "name": "whichDialog",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "display",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TimerDialogDisplay(whichDialog, display)",
    "documentation": "设置 ,~计时器窗口, 的状态为,~Show/Hide"
  },
  "IsTimerDialogDisplayed": {
    "original": "native IsTimerDialogDisplayed takes timerdialog whichDialog returns boolean",
    "name": "IsTimerDialogDisplayed",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "timerdialog",
      "name": "whichDialog",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsTimerDialogDisplayed(whichDialog)",
    "documentation": ""
  },
  "TimerDialogSetRealTimeRemaining": {
    "original": "native TimerDialogSetRealTimeRemaining takes timerdialog whichDialog, real timeRemaining returns nothing",
    "name": "TimerDialogSetRealTimeRemaining",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "timerdialog",
      "name": "whichDialog",
      "documentation": ""
    }, {
      "type": "real",
      "name": "timeRemaining",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TimerDialogSetRealTimeRemaining(whichDialog, timeRemaining)",
    "documentation": ""
  },
  "CreateLeaderboard": {
    "original": "native CreateLeaderboard takes nothing returns leaderboard",
    "name": "CreateLeaderboard",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "leaderboard",
    "insertText": "CreateLeaderboard()",
    "documentation": "新建的空排行榜"
  },
  "DestroyLeaderboard": {
    "original": "native DestroyLeaderboard takes leaderboard lb returns nothing",
    "name": "DestroyLeaderboard",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DestroyLeaderboard(lb)",
    "documentation": ""
  },
  "LeaderboardDisplay": {
    "original": "native LeaderboardDisplay takes leaderboard lb, boolean show returns nothing",
    "name": "LeaderboardDisplay",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "show",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardDisplay(lb, show)",
    "documentation": "设置 ,~排行榜, ,~Show/Hide"
  },
  "IsLeaderboardDisplayed": {
    "original": "native IsLeaderboardDisplayed takes leaderboard lb returns boolean",
    "name": "IsLeaderboardDisplayed",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsLeaderboardDisplayed(lb)",
    "documentation": ""
  },
  "LeaderboardGetItemCount": {
    "original": "native LeaderboardGetItemCount takes leaderboard lb returns integer",
    "name": "LeaderboardGetItemCount",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "LeaderboardGetItemCount(lb)",
    "documentation": "~Leaderboard, 的行数"
  },
  "LeaderboardSetSizeByItemCount": {
    "original": "native LeaderboardSetSizeByItemCount takes leaderboard lb, integer count returns nothing",
    "name": "LeaderboardSetSizeByItemCount",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "count",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardSetSizeByItemCount(lb, count)",
    "documentation": ""
  },
  "LeaderboardAddItem": {
    "original": "native LeaderboardAddItem takes leaderboard lb, string label, integer value, player p returns nothing",
    "name": "LeaderboardAddItem",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "string",
      "name": "label",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "value",
      "documentation": ""
    }, {
      "type": "player",
      "name": "p",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardAddItem(lb, label, value, p)",
    "documentation": ""
  },
  "LeaderboardRemoveItem": {
    "original": "native LeaderboardRemoveItem takes leaderboard lb, integer index returns nothing",
    "name": "LeaderboardRemoveItem",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "index",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardRemoveItem(lb, index)",
    "documentation": ""
  },
  "LeaderboardRemovePlayerItem": {
    "original": "native LeaderboardRemovePlayerItem takes leaderboard lb, player p returns nothing",
    "name": "LeaderboardRemovePlayerItem",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "player",
      "name": "p",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardRemovePlayerItem(lb, p)",
    "documentation": ""
  },
  "LeaderboardClear": {
    "original": "native LeaderboardClear takes leaderboard lb returns nothing",
    "name": "LeaderboardClear",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardClear(lb)",
    "documentation": "清空 ,~排行榜"
  },
  "LeaderboardSortItemsByValue": {
    "original": "native LeaderboardSortItemsByValue takes leaderboard lb, boolean ascending returns nothing",
    "name": "LeaderboardSortItemsByValue",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "ascending",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardSortItemsByValue(lb, ascending)",
    "documentation": ""
  },
  "LeaderboardSortItemsByPlayer": {
    "original": "native LeaderboardSortItemsByPlayer takes leaderboard lb, boolean ascending returns nothing",
    "name": "LeaderboardSortItemsByPlayer",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "ascending",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardSortItemsByPlayer(lb, ascending)",
    "documentation": ""
  },
  "LeaderboardSortItemsByLabel": {
    "original": "native LeaderboardSortItemsByLabel takes leaderboard lb, boolean ascending returns nothing",
    "name": "LeaderboardSortItemsByLabel",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "ascending",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardSortItemsByLabel(lb, ascending)",
    "documentation": ""
  },
  "LeaderboardHasPlayerItem": {
    "original": "native LeaderboardHasPlayerItem takes leaderboard lb, player p returns boolean",
    "name": "LeaderboardHasPlayerItem",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "player",
      "name": "p",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "LeaderboardHasPlayerItem(lb, p)",
    "documentation": ""
  },
  "LeaderboardGetPlayerIndex": {
    "original": "native LeaderboardGetPlayerIndex takes leaderboard lb, player p returns integer",
    "name": "LeaderboardGetPlayerIndex",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "player",
      "name": "p",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "LeaderboardGetPlayerIndex(lb, p)",
    "documentation": ""
  },
  "LeaderboardSetLabel": {
    "original": "native LeaderboardSetLabel takes leaderboard lb, string label returns nothing",
    "name": "LeaderboardSetLabel",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "string",
      "name": "label",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardSetLabel(lb, label)",
    "documentation": ""
  },
  "LeaderboardGetLabelText": {
    "original": "native LeaderboardGetLabelText takes leaderboard lb returns string",
    "name": "LeaderboardGetLabelText",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "LeaderboardGetLabelText(lb)",
    "documentation": ""
  },
  "PlayerSetLeaderboard": {
    "original": "native PlayerSetLeaderboard takes player toPlayer, leaderboard lb returns nothing",
    "name": "PlayerSetLeaderboard",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "toPlayer",
      "documentation": ""
    }, {
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PlayerSetLeaderboard(toPlayer, lb)",
    "documentation": "设置 ,~Player, 使用 ,~排行榜"
  },
  "PlayerGetLeaderboard": {
    "original": "native PlayerGetLeaderboard takes player toPlayer returns leaderboard",
    "name": "PlayerGetLeaderboard",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "toPlayer",
      "documentation": ""
    }],
    "returnType": "leaderboard",
    "insertText": "PlayerGetLeaderboard(toPlayer)",
    "documentation": ""
  },
  "LeaderboardSetLabelColor": {
    "original": "native LeaderboardSetLabelColor takes leaderboard lb, integer red, integer green, integer blue, integer alpha returns nothing",
    "name": "LeaderboardSetLabelColor",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "red",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "green",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "alpha",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardSetLabelColor(lb, red, green, blue, alpha)",
    "documentation": "设置 ,~Leaderboard, 的文字颜色为(,~Red,,,~Green,,,~Blue,) Alpha通道值为: ,~Transparency"
  },
  "LeaderboardSetValueColor": {
    "original": "native LeaderboardSetValueColor takes leaderboard lb, integer red, integer green, integer blue, integer alpha returns nothing",
    "name": "LeaderboardSetValueColor",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "red",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "green",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "alpha",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardSetValueColor(lb, red, green, blue, alpha)",
    "documentation": "设置 ,~Leaderboard, 的数值颜色为(,~Red,,,~Green,,,~Blue,) Alpha通道值为: ,~Transparency"
  },
  "LeaderboardSetStyle": {
    "original": "native LeaderboardSetStyle takes leaderboard lb, boolean showLabel, boolean showNames, boolean showValues, boolean showIcons returns nothing",
    "name": "LeaderboardSetStyle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "showLabel",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "showNames",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "showValues",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "showIcons",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardSetStyle(lb, showLabel, showNames, showValues, showIcons)",
    "documentation": ""
  },
  "LeaderboardSetItemValue": {
    "original": "native LeaderboardSetItemValue takes leaderboard lb, integer whichItem, integer val returns nothing",
    "name": "LeaderboardSetItemValue",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "val",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardSetItemValue(lb, whichItem, val)",
    "documentation": ""
  },
  "LeaderboardSetItemLabel": {
    "original": "native LeaderboardSetItemLabel takes leaderboard lb, integer whichItem, string val returns nothing",
    "name": "LeaderboardSetItemLabel",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "string",
      "name": "val",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardSetItemLabel(lb, whichItem, val)",
    "documentation": ""
  },
  "LeaderboardSetItemStyle": {
    "original": "native LeaderboardSetItemStyle takes leaderboard lb, integer whichItem, boolean showLabel, boolean showValue, boolean showIcon returns nothing",
    "name": "LeaderboardSetItemStyle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "showLabel",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "showValue",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "showIcon",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardSetItemStyle(lb, whichItem, showLabel, showValue, showIcon)",
    "documentation": ""
  },
  "LeaderboardSetItemLabelColor": {
    "original": "native LeaderboardSetItemLabelColor takes leaderboard lb, integer whichItem, integer red, integer green, integer blue, integer alpha returns nothing",
    "name": "LeaderboardSetItemLabelColor",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "red",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "green",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "alpha",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardSetItemLabelColor(lb, whichItem, red, green, blue, alpha)",
    "documentation": ""
  },
  "LeaderboardSetItemValueColor": {
    "original": "native LeaderboardSetItemValueColor takes leaderboard lb, integer whichItem, integer red, integer green, integer blue, integer alpha returns nothing",
    "name": "LeaderboardSetItemValueColor",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "red",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "green",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "alpha",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardSetItemValueColor(lb, whichItem, red, green, blue, alpha)",
    "documentation": ""
  },
  "CreateMultiboard": {
    "original": "native CreateMultiboard takes nothing returns multiboard",
    "name": "CreateMultiboard",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "multiboard",
    "insertText": "CreateMultiboard()",
    "documentation": "新建的空多面板"
  },
  "DestroyMultiboard": {
    "original": "native DestroyMultiboard takes multiboard lb returns nothing",
    "name": "DestroyMultiboard",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "multiboard",
      "name": "lb",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DestroyMultiboard(lb)",
    "documentation": ""
  },
  "MultiboardDisplay": {
    "original": "native MultiboardDisplay takes multiboard lb, boolean show returns nothing",
    "name": "MultiboardDisplay",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "multiboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "show",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MultiboardDisplay(lb, show)",
    "documentation": "设置 ,~Multiboard, ,~Show/Hide"
  },
  "IsMultiboardDisplayed": {
    "original": "native IsMultiboardDisplayed takes multiboard lb returns boolean",
    "name": "IsMultiboardDisplayed",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "multiboard",
      "name": "lb",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsMultiboardDisplayed(lb)",
    "documentation": "多列面板 是已显示的"
  },
  "MultiboardMinimize": {
    "original": "native MultiboardMinimize takes multiboard lb, boolean minimize returns nothing",
    "name": "MultiboardMinimize",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "multiboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "minimize",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MultiboardMinimize(lb, minimize)",
    "documentation": "设置 ,~Multiboard, ,~Minimize/Maximize"
  },
  "IsMultiboardMinimized": {
    "original": "native IsMultiboardMinimized takes multiboard lb returns boolean",
    "name": "IsMultiboardMinimized",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "multiboard",
      "name": "lb",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsMultiboardMinimized(lb)",
    "documentation": "多列面板 是最小化的"
  },
  "MultiboardClear": {
    "original": "native MultiboardClear takes multiboard lb returns nothing",
    "name": "MultiboardClear",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "multiboard",
      "name": "lb",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MultiboardClear(lb)",
    "documentation": "清除 多列面板"
  },
  "MultiboardSetTitleText": {
    "original": "native MultiboardSetTitleText takes multiboard lb, string label returns nothing",
    "name": "MultiboardSetTitleText",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "multiboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "string",
      "name": "label",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MultiboardSetTitleText(lb, label)",
    "documentation": "改变 多列面板 标题"
  },
  "MultiboardGetTitleText": {
    "original": "native MultiboardGetTitleText takes multiboard lb returns string",
    "name": "MultiboardGetTitleText",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "multiboard",
      "name": "lb",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "MultiboardGetTitleText(lb)",
    "documentation": "多列面板 的标题"
  },
  "MultiboardSetTitleTextColor": {
    "original": "native MultiboardSetTitleTextColor takes multiboard lb, integer red, integer green, integer blue, integer alpha returns nothing",
    "name": "MultiboardSetTitleTextColor",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "multiboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "red",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "green",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "alpha",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MultiboardSetTitleTextColor(lb, red, green, blue, alpha)",
    "documentation": "设置 ,~Multiboard, 的标题颜色为(,~Red,,,~Green,,,~Blue,), Alpha值为 ,~Transparency"
  },
  "MultiboardGetRowCount": {
    "original": "native MultiboardGetRowCount takes multiboard lb returns integer",
    "name": "MultiboardGetRowCount",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "multiboard",
      "name": "lb",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "MultiboardGetRowCount(lb)",
    "documentation": "获得多列面板 的行数"
  },
  "MultiboardGetColumnCount": {
    "original": "native MultiboardGetColumnCount takes multiboard lb returns integer",
    "name": "MultiboardGetColumnCount",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "multiboard",
      "name": "lb",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "MultiboardGetColumnCount(lb)",
    "documentation": "获得多列面板 的列数"
  },
  "MultiboardSetColumnCount": {
    "original": "native MultiboardSetColumnCount takes multiboard lb, integer count returns nothing",
    "name": "MultiboardSetColumnCount",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "multiboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "count",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MultiboardSetColumnCount(lb, count)",
    "documentation": "改变多列面板'列数'"
  },
  "MultiboardSetRowCount": {
    "original": "native MultiboardSetRowCount takes multiboard lb, integer count returns nothing",
    "name": "MultiboardSetRowCount",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "multiboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "count",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MultiboardSetRowCount(lb, count)",
    "documentation": "改变多列面板'行数'"
  },
  "MultiboardSetItemsStyle": {
    "original": "native MultiboardSetItemsStyle takes multiboard lb, boolean showValues, boolean showIcons returns nothing",
    "name": "MultiboardSetItemsStyle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "multiboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "showValues",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "showIcons",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MultiboardSetItemsStyle(lb, showValues, showIcons)",
    "documentation": "设置 ,~多面板, 的所有项目显示风格: ,~Show/Hide, 文字 ,~Show/Hide, 图标"
  },
  "MultiboardSetItemsValue": {
    "original": "native MultiboardSetItemsValue takes multiboard lb, string value returns nothing",
    "name": "MultiboardSetItemsValue",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "multiboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "string",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MultiboardSetItemsValue(lb, value)",
    "documentation": "设置 ,~多面板, 的所有项目文本为 ,~文字"
  },
  "MultiboardSetItemsValueColor": {
    "original": "native MultiboardSetItemsValueColor takes multiboard lb, integer red, integer green, integer blue, integer alpha returns nothing",
    "name": "MultiboardSetItemsValueColor",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "multiboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "red",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "green",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "alpha",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MultiboardSetItemsValueColor(lb, red, green, blue, alpha)",
    "documentation": "设置 ,~多面板, 的所有项目颜色为(,~Red,,,~Green,,,~Blue,), Alpha值为 ,~Transparency"
  },
  "MultiboardSetItemsWidth": {
    "original": "native MultiboardSetItemsWidth takes multiboard lb, real width returns nothing",
    "name": "MultiboardSetItemsWidth",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "multiboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "real",
      "name": "width",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MultiboardSetItemsWidth(lb, width)",
    "documentation": "设置 ,~多面板, 的所有项目宽度为 ,~Width, 倍屏幕宽度"
  },
  "MultiboardSetItemsIcon": {
    "original": "native MultiboardSetItemsIcon takes multiboard lb, string iconPath returns nothing",
    "name": "MultiboardSetItemsIcon",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "multiboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "string",
      "name": "iconPath",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MultiboardSetItemsIcon(lb, iconPath)",
    "documentation": "设置 ,~多面板, 的所有项目图标为 ,~Icon File"
  },
  "MultiboardGetItem": {
    "original": "native MultiboardGetItem takes multiboard lb, integer row, integer column returns multiboarditem",
    "name": "MultiboardGetItem",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "multiboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "row",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "column",
      "documentation": ""
    }],
    "returnType": "multiboarditem",
    "insertText": "MultiboardGetItem(lb, row, column)",
    "documentation": "~多面板, 的第 ,~X, 行,第 ,~Y, 列项"
  },
  "MultiboardReleaseItem": {
    "original": "native MultiboardReleaseItem takes multiboarditem mbi returns nothing",
    "name": "MultiboardReleaseItem",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "multiboarditem",
      "name": "mbi",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MultiboardReleaseItem(mbi)",
    "documentation": "删除 ,~多面板项目"
  },
  "MultiboardSetItemStyle": {
    "original": "native MultiboardSetItemStyle takes multiboarditem mbi, boolean showValue, boolean showIcon returns nothing",
    "name": "MultiboardSetItemStyle",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "multiboarditem",
      "name": "mbi",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "showValue",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "showIcon",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MultiboardSetItemStyle(mbi, showValue, showIcon)",
    "documentation": "设置 ,~多面板项目, 的显示风格: ,~Show/Hide, 文字 ,~Show/Hide, 图标"
  },
  "MultiboardSetItemValue": {
    "original": "native MultiboardSetItemValue takes multiboarditem mbi, string val returns nothing",
    "name": "MultiboardSetItemValue",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "multiboarditem",
      "name": "mbi",
      "documentation": ""
    }, {
      "type": "string",
      "name": "val",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MultiboardSetItemValue(mbi, val)",
    "documentation": "设置 ,~多面板项目, 的项目文本为 ,~文字"
  },
  "MultiboardSetItemValueColor": {
    "original": "native MultiboardSetItemValueColor takes multiboarditem mbi, integer red, integer green, integer blue, integer alpha returns nothing",
    "name": "MultiboardSetItemValueColor",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "multiboarditem",
      "name": "mbi",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "red",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "green",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "alpha",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MultiboardSetItemValueColor(mbi, red, green, blue, alpha)",
    "documentation": "设置 ,~多面板项目, 的项目颜色为(,~Red,,,~Green,,,~Blue,), Alpha值为 ,~Transparency"
  },
  "MultiboardSetItemWidth": {
    "original": "native MultiboardSetItemWidth takes multiboarditem mbi, real width returns nothing",
    "name": "MultiboardSetItemWidth",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "multiboarditem",
      "name": "mbi",
      "documentation": ""
    }, {
      "type": "real",
      "name": "width",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MultiboardSetItemWidth(mbi, width)",
    "documentation": "设置 ,~多面板项目, 的项目宽度为 ,~Width, 倍屏幕宽度"
  },
  "MultiboardSetItemIcon": {
    "original": "native MultiboardSetItemIcon takes multiboarditem mbi, string iconFileName returns nothing",
    "name": "MultiboardSetItemIcon",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "multiboarditem",
      "name": "mbi",
      "documentation": ""
    }, {
      "type": "string",
      "name": "iconFileName",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MultiboardSetItemIcon(mbi, iconFileName)",
    "documentation": "设置 ,~多面板项目, 的项目图标为 ,~Icon File"
  },
  "MultiboardSuppressDisplay": {
    "original": "native MultiboardSuppressDisplay takes boolean flag returns nothing",
    "name": "MultiboardSuppressDisplay",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MultiboardSuppressDisplay(flag)",
    "documentation": "~打开/关闭, 隐藏多面板模式"
  },
  "SetCameraPosition": {
    "original": "native SetCameraPosition takes real x, real y returns nothing",
    "name": "SetCameraPosition",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCameraPosition(x, y)",
    "documentation": ""
  },
  "SetCameraQuickPosition": {
    "original": "native SetCameraQuickPosition takes real x, real y returns nothing",
    "name": "SetCameraQuickPosition",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCameraQuickPosition(x, y)",
    "documentation": "设置玩家的空格键转向点为(,~X,,,~Y,)"
  },
  "SetCameraBounds": {
    "original": "native SetCameraBounds takes real x1, real y1, real x2, real y2, real x3, real y3, real x4, real y4 returns nothing",
    "name": "SetCameraBounds",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x1",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y1",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x2",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y2",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x3",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y3",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x4",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y4",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCameraBounds(x1, y1, x2, y2, x3, y3, x4, y4)",
    "documentation": "设置玩家可用镜头区域: 左下角(,~X,,,~Y,), 左上角(,~X,,,~Y,), 右上角(,~X,,,~Y,), 右下角(,~X,,,~Y,)"
  },
  "StopCamera": {
    "original": "native StopCamera takes nothing returns nothing",
    "name": "StopCamera",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "StopCamera()",
    "documentation": "让所有玩家停止播放镜头"
  },
  "ResetToGameCamera": {
    "original": "native ResetToGameCamera takes real duration returns nothing",
    "name": "ResetToGameCamera",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ResetToGameCamera(duration)",
    "documentation": "重置玩家镜头为游戏默认状态,持续  ,~Time, 秒"
  },
  "PanCameraTo": {
    "original": "native PanCameraTo takes real x, real y returns nothing",
    "name": "PanCameraTo",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PanCameraTo(x, y)",
    "documentation": ""
  },
  "PanCameraToTimed": {
    "original": "native PanCameraToTimed takes real x, real y, real duration returns nothing",
    "name": "PanCameraToTimed",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PanCameraToTimed(x, y, duration)",
    "documentation": "平移玩家镜头到(,~X,,,~Y,),持续 ,~Time, 秒"
  },
  "PanCameraToWithZ": {
    "original": "native PanCameraToWithZ takes real x, real y, real zOffsetDest returns nothing",
    "name": "PanCameraToWithZ",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "zOffsetDest",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PanCameraToWithZ(x, y, zOffsetDest)",
    "documentation": ""
  },
  "PanCameraToTimedWithZ": {
    "original": "native PanCameraToTimedWithZ takes real x, real y, real zOffsetDest, real duration returns nothing",
    "name": "PanCameraToTimedWithZ",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "zOffsetDest",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PanCameraToTimedWithZ(x, y, zOffsetDest, duration)",
    "documentation": "平移玩家镜头到(,~X,,,~Y,),镜头距离地面高度为 ,~Z,,持续 ,~Time, 秒"
  },
  "SetCinematicCamera": {
    "original": "native SetCinematicCamera takes string cameraModelFile returns nothing",
    "name": "SetCinematicCamera",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "cameraModelFile",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCinematicCamera(cameraModelFile)",
    "documentation": "对所有玩家播放电影镜头: ,~Camera File"
  },
  "SetCameraRotateMode": {
    "original": "native SetCameraRotateMode takes real x, real y, real radiansToSweep, real duration returns nothing",
    "name": "SetCameraRotateMode",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "radiansToSweep",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCameraRotateMode(x, y, radiansToSweep, duration)",
    "documentation": "以(,~X,,,~Y,)为中心,旋转弧度为,~Rad,, 持续: ,~Time, 秒"
  },
  "SetCameraField": {
    "original": "native SetCameraField takes camerafield whichField, real value, real duration returns nothing",
    "name": "SetCameraField",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "camerafield",
      "name": "whichField",
      "documentation": ""
    }, {
      "type": "real",
      "name": "value",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCameraField(whichField, value, duration)",
    "documentation": "设置玩家的镜头属性 ,~Field, 为 ,~数值,,持续 ,~Time, 秒"
  },
  "AdjustCameraField": {
    "original": "native AdjustCameraField takes camerafield whichField, real offset, real duration returns nothing",
    "name": "AdjustCameraField",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "camerafield",
      "name": "whichField",
      "documentation": ""
    }, {
      "type": "real",
      "name": "offset",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "AdjustCameraField(whichField, offset, duration)",
    "documentation": ""
  },
  "SetCameraTargetController": {
    "original": "native SetCameraTargetController takes unit whichUnit, real xoffset, real yoffset, boolean inheritOrientation returns nothing",
    "name": "SetCameraTargetController",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "xoffset",
      "documentation": ""
    }, {
      "type": "real",
      "name": "yoffset",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "inheritOrientation",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCameraTargetController(whichUnit, xoffset, yoffset, inheritOrientation)",
    "documentation": "锁定玩家镜头到 ,~单位,, 偏移坐标(,~X,, ,~Y,) ,使用 ,~Rotation Source"
  },
  "SetCameraOrientController": {
    "original": "native SetCameraOrientController takes unit whichUnit, real xoffset, real yoffset returns nothing",
    "name": "SetCameraOrientController",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "xoffset",
      "documentation": ""
    }, {
      "type": "real",
      "name": "yoffset",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCameraOrientController(whichUnit, xoffset, yoffset)",
    "documentation": "锁定玩家镜头到 ,~单位,, 偏移坐标(,~X,, ,~Y,)"
  },
  "CreateCameraSetup": {
    "original": "native CreateCameraSetup takes nothing returns camerasetup",
    "name": "CreateCameraSetup",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "camerasetup",
    "insertText": "CreateCameraSetup()",
    "documentation": ""
  },
  "CameraSetupSetField": {
    "original": "native CameraSetupSetField takes camerasetup whichSetup, camerafield whichField, real value, real duration returns nothing",
    "name": "CameraSetupSetField",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "camerasetup",
      "name": "whichSetup",
      "documentation": ""
    }, {
      "type": "camerafield",
      "name": "whichField",
      "documentation": ""
    }, {
      "type": "real",
      "name": "value",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CameraSetupSetField(whichSetup, whichField, value, duration)",
    "documentation": ""
  },
  "CameraSetupGetField": {
    "original": "native CameraSetupGetField takes camerasetup whichSetup, camerafield whichField returns real",
    "name": "CameraSetupGetField",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "camerasetup",
      "name": "whichSetup",
      "documentation": ""
    }, {
      "type": "camerafield",
      "name": "whichField",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "CameraSetupGetField(whichSetup, whichField)",
    "documentation": "~镜头, 的 ,~Camera Field"
  },
  "CameraSetupSetDestPosition": {
    "original": "native CameraSetupSetDestPosition takes camerasetup whichSetup, real x, real y, real duration returns nothing",
    "name": "CameraSetupSetDestPosition",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "camerasetup",
      "name": "whichSetup",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CameraSetupSetDestPosition(whichSetup, x, y, duration)",
    "documentation": ""
  },
  "CameraSetupGetDestPositionLoc": {
    "original": "native CameraSetupGetDestPositionLoc takes camerasetup whichSetup returns location",
    "name": "CameraSetupGetDestPositionLoc",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "camerasetup",
      "name": "whichSetup",
      "documentation": ""
    }],
    "returnType": "location",
    "insertText": "CameraSetupGetDestPositionLoc(whichSetup)",
    "documentation": "摄象机的目标"
  },
  "CameraSetupGetDestPositionX": {
    "original": "native CameraSetupGetDestPositionX takes camerasetup whichSetup returns real",
    "name": "CameraSetupGetDestPositionX",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "camerasetup",
      "name": "whichSetup",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "CameraSetupGetDestPositionX(whichSetup)",
    "documentation": ""
  },
  "CameraSetupGetDestPositionY": {
    "original": "native CameraSetupGetDestPositionY takes camerasetup whichSetup returns real",
    "name": "CameraSetupGetDestPositionY",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "camerasetup",
      "name": "whichSetup",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "CameraSetupGetDestPositionY(whichSetup)",
    "documentation": ""
  },
  "CameraSetupApply": {
    "original": "native CameraSetupApply takes camerasetup whichSetup, boolean doPan, boolean panTimed returns nothing",
    "name": "CameraSetupApply",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "camerasetup",
      "name": "whichSetup",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "doPan",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "panTimed",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CameraSetupApply(whichSetup, doPan, panTimed)",
    "documentation": ""
  },
  "CameraSetupApplyWithZ": {
    "original": "native CameraSetupApplyWithZ takes camerasetup whichSetup, real zDestOffset returns nothing",
    "name": "CameraSetupApplyWithZ",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "camerasetup",
      "name": "whichSetup",
      "documentation": ""
    }, {
      "type": "real",
      "name": "zDestOffset",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CameraSetupApplyWithZ(whichSetup, zDestOffset)",
    "documentation": ""
  },
  "CameraSetupApplyForceDuration": {
    "original": "native CameraSetupApplyForceDuration takes camerasetup whichSetup, boolean doPan, real forceDuration returns nothing",
    "name": "CameraSetupApplyForceDuration",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "camerasetup",
      "name": "whichSetup",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "doPan",
      "documentation": ""
    }, {
      "type": "real",
      "name": "forceDuration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CameraSetupApplyForceDuration(whichSetup, doPan, forceDuration)",
    "documentation": "将 ,~镜头, 应用方式设置为 ,~Apply Method,,持续 ,~Time, 秒"
  },
  "CameraSetupApplyForceDurationWithZ": {
    "original": "native CameraSetupApplyForceDurationWithZ takes camerasetup whichSetup, real zDestOffset, real forceDuration returns nothing",
    "name": "CameraSetupApplyForceDurationWithZ",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "camerasetup",
      "name": "whichSetup",
      "documentation": ""
    }, {
      "type": "real",
      "name": "zDestOffset",
      "documentation": ""
    }, {
      "type": "real",
      "name": "forceDuration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CameraSetupApplyForceDurationWithZ(whichSetup, zDestOffset, forceDuration)",
    "documentation": ""
  },
  "CameraSetTargetNoise": {
    "original": "native CameraSetTargetNoise takes real mag, real velocity returns nothing",
    "name": "CameraSetTargetNoise",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "mag",
      "documentation": ""
    }, {
      "type": "real",
      "name": "velocity",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CameraSetTargetNoise(mag, velocity)",
    "documentation": ""
  },
  "CameraSetSourceNoise": {
    "original": "native CameraSetSourceNoise takes real mag, real velocity returns nothing",
    "name": "CameraSetSourceNoise",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "mag",
      "documentation": ""
    }, {
      "type": "real",
      "name": "velocity",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CameraSetSourceNoise(mag, velocity)",
    "documentation": ""
  },
  "CameraSetTargetNoiseEx": {
    "original": "native CameraSetTargetNoiseEx takes real mag, real velocity, boolean vertOnly returns nothing",
    "name": "CameraSetTargetNoiseEx",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "mag",
      "documentation": ""
    }, {
      "type": "real",
      "name": "velocity",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "vertOnly",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CameraSetTargetNoiseEx(mag, velocity, vertOnly)",
    "documentation": "摇晃玩家的镜头源, 摇晃幅度: ,~Magnitude, 速率: ,~Velocity, 摇晃方式: ,~方式"
  },
  "CameraSetSourceNoiseEx": {
    "original": "native CameraSetSourceNoiseEx takes real mag, real velocity, boolean vertOnly returns nothing",
    "name": "CameraSetSourceNoiseEx",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "mag",
      "documentation": ""
    }, {
      "type": "real",
      "name": "velocity",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "vertOnly",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CameraSetSourceNoiseEx(mag, velocity, vertOnly)",
    "documentation": "摇晃玩家的镜头源, 摇晃幅度: ,~Magnitude, 速率: ,~Velocity, 摇晃方式: ,~方式"
  },
  "CameraSetSmoothingFactor": {
    "original": "native CameraSetSmoothingFactor takes real factor returns nothing",
    "name": "CameraSetSmoothingFactor",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "factor",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CameraSetSmoothingFactor(factor)",
    "documentation": ""
  },
  "SetCineFilterTexture": {
    "original": "native SetCineFilterTexture takes string filename returns nothing",
    "name": "SetCineFilterTexture",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "filename",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCineFilterTexture(filename)",
    "documentation": ""
  },
  "SetCineFilterBlendMode": {
    "original": "native SetCineFilterBlendMode takes blendmode whichMode returns nothing",
    "name": "SetCineFilterBlendMode",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "blendmode",
      "name": "whichMode",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCineFilterBlendMode(whichMode)",
    "documentation": ""
  },
  "SetCineFilterTexMapFlags": {
    "original": "native SetCineFilterTexMapFlags takes texmapflags whichFlags returns nothing",
    "name": "SetCineFilterTexMapFlags",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "texmapflags",
      "name": "whichFlags",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCineFilterTexMapFlags(whichFlags)",
    "documentation": ""
  },
  "SetCineFilterStartUV": {
    "original": "native SetCineFilterStartUV takes real minu, real minv, real maxu, real maxv returns nothing",
    "name": "SetCineFilterStartUV",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "minu",
      "documentation": ""
    }, {
      "type": "real",
      "name": "minv",
      "documentation": ""
    }, {
      "type": "real",
      "name": "maxu",
      "documentation": ""
    }, {
      "type": "real",
      "name": "maxv",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCineFilterStartUV(minu, minv, maxu, maxv)",
    "documentation": ""
  },
  "SetCineFilterEndUV": {
    "original": "native SetCineFilterEndUV takes real minu, real minv, real maxu, real maxv returns nothing",
    "name": "SetCineFilterEndUV",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "minu",
      "documentation": ""
    }, {
      "type": "real",
      "name": "minv",
      "documentation": ""
    }, {
      "type": "real",
      "name": "maxu",
      "documentation": ""
    }, {
      "type": "real",
      "name": "maxv",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCineFilterEndUV(minu, minv, maxu, maxv)",
    "documentation": ""
  },
  "SetCineFilterStartColor": {
    "original": "native SetCineFilterStartColor takes integer red, integer green, integer blue, integer alpha returns nothing",
    "name": "SetCineFilterStartColor",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "red",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "green",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "alpha",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCineFilterStartColor(red, green, blue, alpha)",
    "documentation": ""
  },
  "SetCineFilterEndColor": {
    "original": "native SetCineFilterEndColor takes integer red, integer green, integer blue, integer alpha returns nothing",
    "name": "SetCineFilterEndColor",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "red",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "green",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "alpha",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCineFilterEndColor(red, green, blue, alpha)",
    "documentation": ""
  },
  "SetCineFilterDuration": {
    "original": "native SetCineFilterDuration takes real duration returns nothing",
    "name": "SetCineFilterDuration",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCineFilterDuration(duration)",
    "documentation": ""
  },
  "DisplayCineFilter": {
    "original": "native DisplayCineFilter takes boolean flag returns nothing",
    "name": "DisplayCineFilter",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DisplayCineFilter(flag)",
    "documentation": ""
  },
  "IsCineFilterDisplayed": {
    "original": "native IsCineFilterDisplayed takes nothing returns boolean",
    "name": "IsCineFilterDisplayed",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "boolean",
    "insertText": "IsCineFilterDisplayed()",
    "documentation": ""
  },
  "SetCinematicScene": {
    "original": "native SetCinematicScene takes integer portraitUnitId, playercolor color, string speakerTitle, string text, real sceneDuration, real voiceoverDuration returns nothing",
    "name": "SetCinematicScene",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "portraitUnitId",
      "documentation": ""
    }, {
      "type": "playercolor",
      "name": "color",
      "documentation": ""
    }, {
      "type": "string",
      "name": "speakerTitle",
      "documentation": ""
    }, {
      "type": "string",
      "name": "text",
      "documentation": ""
    }, {
      "type": "real",
      "name": "sceneDuration",
      "documentation": ""
    }, {
      "type": "real",
      "name": "voiceoverDuration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCinematicScene(portraitUnitId, color, speakerTitle, text, sceneDuration, voiceoverDuration)",
    "documentation": ""
  },
  "EndCinematicScene": {
    "original": "native EndCinematicScene takes nothing returns nothing",
    "name": "EndCinematicScene",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "EndCinematicScene()",
    "documentation": ""
  },
  "ForceCinematicSubtitles": {
    "original": "native ForceCinematicSubtitles takes boolean flag returns nothing",
    "name": "ForceCinematicSubtitles",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ForceCinematicSubtitles(flag)",
    "documentation": ""
  },
  "GetCameraMargin": {
    "original": "native GetCameraMargin takes integer whichMargin returns real",
    "name": "GetCameraMargin",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "whichMargin",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetCameraMargin(whichMargin)",
    "documentation": ""
  },
  "GetCameraBoundMinX": {
    "original": "constant native GetCameraBoundMinX takes nothing returns real",
    "name": "GetCameraBoundMinX",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "real",
    "insertText": "GetCameraBoundMinX()",
    "documentation": ""
  },
  "GetCameraBoundMinY": {
    "original": "constant native GetCameraBoundMinY takes nothing returns real",
    "name": "GetCameraBoundMinY",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "real",
    "insertText": "GetCameraBoundMinY()",
    "documentation": ""
  },
  "GetCameraBoundMaxX": {
    "original": "constant native GetCameraBoundMaxX takes nothing returns real",
    "name": "GetCameraBoundMaxX",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "real",
    "insertText": "GetCameraBoundMaxX()",
    "documentation": ""
  },
  "GetCameraBoundMaxY": {
    "original": "constant native GetCameraBoundMaxY takes nothing returns real",
    "name": "GetCameraBoundMaxY",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "real",
    "insertText": "GetCameraBoundMaxY()",
    "documentation": ""
  },
  "GetCameraField": {
    "original": "constant native GetCameraField takes camerafield whichField returns real",
    "name": "GetCameraField",
    "isConstant": true,
    "isNative": true,
    "args": [{
      "type": "camerafield",
      "name": "whichField",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetCameraField(whichField)",
    "documentation": "当前摄象机的数值"
  },
  "GetCameraTargetPositionX": {
    "original": "constant native GetCameraTargetPositionX takes nothing returns real",
    "name": "GetCameraTargetPositionX",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "real",
    "insertText": "GetCameraTargetPositionX()",
    "documentation": "当前摄象机的目标的 X 坐标"
  },
  "GetCameraTargetPositionY": {
    "original": "constant native GetCameraTargetPositionY takes nothing returns real",
    "name": "GetCameraTargetPositionY",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "real",
    "insertText": "GetCameraTargetPositionY()",
    "documentation": "当前摄象机的目标的 Y 坐标"
  },
  "GetCameraTargetPositionZ": {
    "original": "constant native GetCameraTargetPositionZ takes nothing returns real",
    "name": "GetCameraTargetPositionZ",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "real",
    "insertText": "GetCameraTargetPositionZ()",
    "documentation": "当前摄象机的目标的 Z 坐标"
  },
  "GetCameraTargetPositionLoc": {
    "original": "constant native GetCameraTargetPositionLoc takes nothing returns location",
    "name": "GetCameraTargetPositionLoc",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "location",
    "insertText": "GetCameraTargetPositionLoc()",
    "documentation": "当前摄象机的目标"
  },
  "GetCameraEyePositionX": {
    "original": "constant native GetCameraEyePositionX takes nothing returns real",
    "name": "GetCameraEyePositionX",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "real",
    "insertText": "GetCameraEyePositionX()",
    "documentation": "当前摄象机的位置的 X 坐标"
  },
  "GetCameraEyePositionY": {
    "original": "constant native GetCameraEyePositionY takes nothing returns real",
    "name": "GetCameraEyePositionY",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "real",
    "insertText": "GetCameraEyePositionY()",
    "documentation": "当前摄象机的位置的 Y 坐标"
  },
  "GetCameraEyePositionZ": {
    "original": "constant native GetCameraEyePositionZ takes nothing returns real",
    "name": "GetCameraEyePositionZ",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "real",
    "insertText": "GetCameraEyePositionZ()",
    "documentation": "当前摄象机的位置的 Z 坐标"
  },
  "GetCameraEyePositionLoc": {
    "original": "constant native GetCameraEyePositionLoc takes nothing returns location",
    "name": "GetCameraEyePositionLoc",
    "isConstant": true,
    "isNative": true,
    "args": null,
    "returnType": "location",
    "insertText": "GetCameraEyePositionLoc()",
    "documentation": "当前照相机的位置"
  },
  "NewSoundEnvironment": {
    "original": "native NewSoundEnvironment takes string environmentName returns nothing",
    "name": "NewSoundEnvironment",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "environmentName",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "NewSoundEnvironment(environmentName)",
    "documentation": ""
  },
  "CreateSound": {
    "original": "native CreateSound takes string fileName, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate, string eaxSetting returns sound",
    "name": "CreateSound",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "fileName",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "looping",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "is3D",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "stopwhenoutofrange",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "fadeInRate",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "fadeOutRate",
      "documentation": ""
    }, {
      "type": "string",
      "name": "eaxSetting",
      "documentation": ""
    }],
    "returnType": "sound",
    "insertText": "CreateSound(fileName, looping, is3D, stopwhenoutofrange, fadeInRate, fadeOutRate, eaxSetting)",
    "documentation": ""
  },
  "CreateSoundFilenameWithLabel": {
    "original": "native CreateSoundFilenameWithLabel takes string fileName, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate, string SLKEntryName returns sound",
    "name": "CreateSoundFilenameWithLabel",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "fileName",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "looping",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "is3D",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "stopwhenoutofrange",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "fadeInRate",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "fadeOutRate",
      "documentation": ""
    }, {
      "type": "string",
      "name": "SLKEntryName",
      "documentation": ""
    }],
    "returnType": "sound",
    "insertText": "CreateSoundFilenameWithLabel(fileName, looping, is3D, stopwhenoutofrange, fadeInRate, fadeOutRate, SLKEntryName)",
    "documentation": ""
  },
  "CreateSoundFromLabel": {
    "original": "native CreateSoundFromLabel takes string soundLabel, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate returns sound",
    "name": "CreateSoundFromLabel",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "soundLabel",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "looping",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "is3D",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "stopwhenoutofrange",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "fadeInRate",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "fadeOutRate",
      "documentation": ""
    }],
    "returnType": "sound",
    "insertText": "CreateSoundFromLabel(soundLabel, looping, is3D, stopwhenoutofrange, fadeInRate, fadeOutRate)",
    "documentation": ""
  },
  "CreateMIDISound": {
    "original": "native CreateMIDISound takes string soundLabel, integer fadeInRate, integer fadeOutRate returns sound",
    "name": "CreateMIDISound",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "soundLabel",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "fadeInRate",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "fadeOutRate",
      "documentation": ""
    }],
    "returnType": "sound",
    "insertText": "CreateMIDISound(soundLabel, fadeInRate, fadeOutRate)",
    "documentation": ""
  },
  "SetSoundParamsFromLabel": {
    "original": "native SetSoundParamsFromLabel takes sound soundHandle, string soundLabel returns nothing",
    "name": "SetSoundParamsFromLabel",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "string",
      "name": "soundLabel",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetSoundParamsFromLabel(soundHandle, soundLabel)",
    "documentation": ""
  },
  "SetSoundDistanceCutoff": {
    "original": "native SetSoundDistanceCutoff takes sound soundHandle, real cutoff returns nothing",
    "name": "SetSoundDistanceCutoff",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "real",
      "name": "cutoff",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetSoundDistanceCutoff(soundHandle, cutoff)",
    "documentation": ""
  },
  "SetSoundChannel": {
    "original": "native SetSoundChannel takes sound soundHandle, integer channel returns nothing",
    "name": "SetSoundChannel",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "channel",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetSoundChannel(soundHandle, channel)",
    "documentation": ""
  },
  "SetSoundVolume": {
    "original": "native SetSoundVolume takes sound soundHandle, integer volume returns nothing",
    "name": "SetSoundVolume",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "volume",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetSoundVolume(soundHandle, volume)",
    "documentation": "设置 ,~音效, 的音量为 ,~Volume"
  },
  "SetSoundPitch": {
    "original": "native SetSoundPitch takes sound soundHandle, real pitch returns nothing",
    "name": "SetSoundPitch",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "real",
      "name": "pitch",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetSoundPitch(soundHandle, pitch)",
    "documentation": ""
  },
  "SetSoundPlayPosition": {
    "original": "native SetSoundPlayPosition takes sound soundHandle, integer millisecs returns nothing",
    "name": "SetSoundPlayPosition",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "millisecs",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetSoundPlayPosition(soundHandle, millisecs)",
    "documentation": "设置 ,~音效, 的播放时间点为 ,~Offset, 毫秒"
  },
  "SetSoundDistances": {
    "original": "native SetSoundDistances takes sound soundHandle, real minDist, real maxDist returns nothing",
    "name": "SetSoundDistances",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "real",
      "name": "minDist",
      "documentation": ""
    }, {
      "type": "real",
      "name": "maxDist",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetSoundDistances(soundHandle, minDist, maxDist)",
    "documentation": "设置3D声音距离"
  },
  "SetSoundConeAngles": {
    "original": "native SetSoundConeAngles takes sound soundHandle, real inside, real outside, integer outsideVolume returns nothing",
    "name": "SetSoundConeAngles",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "real",
      "name": "inside",
      "documentation": ""
    }, {
      "type": "real",
      "name": "outside",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "outsideVolume",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetSoundConeAngles(soundHandle, inside, outside, outsideVolume)",
    "documentation": ""
  },
  "SetSoundConeOrientation": {
    "original": "native SetSoundConeOrientation takes sound soundHandle, real x, real y, real z returns nothing",
    "name": "SetSoundConeOrientation",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "z",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetSoundConeOrientation(soundHandle, x, y, z)",
    "documentation": ""
  },
  "SetSoundPosition": {
    "original": "native SetSoundPosition takes sound soundHandle, real x, real y, real z returns nothing",
    "name": "SetSoundPosition",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "z",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetSoundPosition(soundHandle, x, y, z)",
    "documentation": "该动作仅用于3D音效.,~3D音效, 的播放位置为(,~X,,,~Y,), Z轴高度为 ,~Z"
  },
  "SetSoundVelocity": {
    "original": "native SetSoundVelocity takes sound soundHandle, real x, real y, real z returns nothing",
    "name": "SetSoundVelocity",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "z",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetSoundVelocity(soundHandle, x, y, z)",
    "documentation": ""
  },
  "AttachSoundToUnit": {
    "original": "native AttachSoundToUnit takes sound soundHandle, unit whichUnit returns nothing",
    "name": "AttachSoundToUnit",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "AttachSoundToUnit(soundHandle, whichUnit)",
    "documentation": ""
  },
  "StartSound": {
    "original": "native StartSound takes sound soundHandle returns nothing",
    "name": "StartSound",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "StartSound(soundHandle)",
    "documentation": ""
  },
  "StopSound": {
    "original": "native StopSound takes sound soundHandle, boolean killWhenDone, boolean fadeOut returns nothing",
    "name": "StopSound",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "killWhenDone",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "fadeOut",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "StopSound(soundHandle, killWhenDone, fadeOut)",
    "documentation": ""
  },
  "KillSoundWhenDone": {
    "original": "native KillSoundWhenDone takes sound soundHandle returns nothing",
    "name": "KillSoundWhenDone",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "KillSoundWhenDone(soundHandle)",
    "documentation": ""
  },
  "SetMapMusic": {
    "original": "native SetMapMusic takes string musicName, boolean random, integer index returns nothing",
    "name": "SetMapMusic",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "musicName",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "random",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "index",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetMapMusic(musicName, random, index)",
    "documentation": "设置背景音乐列表为: ,~Music, , ,~允许/禁止, 随机播放, 开始播放序号为 ,~Index"
  },
  "ClearMapMusic": {
    "original": "native ClearMapMusic takes nothing returns nothing",
    "name": "ClearMapMusic",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "ClearMapMusic()",
    "documentation": ""
  },
  "PlayMusic": {
    "original": "native PlayMusic takes string musicName returns nothing",
    "name": "PlayMusic",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "musicName",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PlayMusic(musicName)",
    "documentation": ""
  },
  "PlayMusicEx": {
    "original": "native PlayMusicEx takes string musicName, integer frommsecs, integer fadeinmsecs returns nothing",
    "name": "PlayMusicEx",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "musicName",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "frommsecs",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "fadeinmsecs",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PlayMusicEx(musicName, frommsecs, fadeinmsecs)",
    "documentation": ""
  },
  "StopMusic": {
    "original": "native StopMusic takes boolean fadeOut returns nothing",
    "name": "StopMusic",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "fadeOut",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "StopMusic(fadeOut)",
    "documentation": ""
  },
  "ResumeMusic": {
    "original": "native ResumeMusic takes nothing returns nothing",
    "name": "ResumeMusic",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "ResumeMusic()",
    "documentation": ""
  },
  "PlayThematicMusic": {
    "original": "native PlayThematicMusic takes string musicFileName returns nothing",
    "name": "PlayThematicMusic",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "musicFileName",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PlayThematicMusic(musicFileName)",
    "documentation": "播放 ,~Music Theme, 主题音乐"
  },
  "PlayThematicMusicEx": {
    "original": "native PlayThematicMusicEx takes string musicFileName, integer frommsecs returns nothing",
    "name": "PlayThematicMusicEx",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "musicFileName",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "frommsecs",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PlayThematicMusicEx(musicFileName, frommsecs)",
    "documentation": "播放 ,~Music Theme, 主题音乐,跳过开始 ,~Offset, 毫秒"
  },
  "EndThematicMusic": {
    "original": "native EndThematicMusic takes nothing returns nothing",
    "name": "EndThematicMusic",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "EndThematicMusic()",
    "documentation": "停止正在播放的主题音乐"
  },
  "SetMusicVolume": {
    "original": "native SetMusicVolume takes integer volume returns nothing",
    "name": "SetMusicVolume",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "volume",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetMusicVolume(volume)",
    "documentation": "设置背景音乐音量为 ,~Volume"
  },
  "SetMusicPlayPosition": {
    "original": "native SetMusicPlayPosition takes integer millisecs returns nothing",
    "name": "SetMusicPlayPosition",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "millisecs",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetMusicPlayPosition(millisecs)",
    "documentation": "设置当前背景音乐的播放时间点为 ,~Offset, 毫秒"
  },
  "SetThematicMusicPlayPosition": {
    "original": "native SetThematicMusicPlayPosition takes integer millisecs returns nothing",
    "name": "SetThematicMusicPlayPosition",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "millisecs",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetThematicMusicPlayPosition(millisecs)",
    "documentation": "设置当前主题音乐播放时间点为 ,~Offset, 毫秒"
  },
  "SetSoundDuration": {
    "original": "native SetSoundDuration takes sound soundHandle, integer duration returns nothing",
    "name": "SetSoundDuration",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetSoundDuration(soundHandle, duration)",
    "documentation": ""
  },
  "GetSoundDuration": {
    "original": "native GetSoundDuration takes sound soundHandle returns integer",
    "name": "GetSoundDuration",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetSoundDuration(soundHandle)",
    "documentation": ""
  },
  "GetSoundFileDuration": {
    "original": "native GetSoundFileDuration takes string musicFileName returns integer",
    "name": "GetSoundFileDuration",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "musicFileName",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetSoundFileDuration(musicFileName)",
    "documentation": ""
  },
  "VolumeGroupSetVolume": {
    "original": "native VolumeGroupSetVolume takes volumegroup vgroup, real scale returns nothing",
    "name": "VolumeGroupSetVolume",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "volumegroup",
      "name": "vgroup",
      "documentation": ""
    }, {
      "type": "real",
      "name": "scale",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "VolumeGroupSetVolume(vgroup, scale)",
    "documentation": "设置 ,~Volume Channel, 的音量为 ,~Volume"
  },
  "VolumeGroupReset": {
    "original": "native VolumeGroupReset takes nothing returns nothing",
    "name": "VolumeGroupReset",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "VolumeGroupReset()",
    "documentation": ""
  },
  "GetSoundIsPlaying": {
    "original": "native GetSoundIsPlaying takes sound soundHandle returns boolean",
    "name": "GetSoundIsPlaying",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "GetSoundIsPlaying(soundHandle)",
    "documentation": ""
  },
  "GetSoundIsLoading": {
    "original": "native GetSoundIsLoading takes sound soundHandle returns boolean",
    "name": "GetSoundIsLoading",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "GetSoundIsLoading(soundHandle)",
    "documentation": ""
  },
  "RegisterStackedSound": {
    "original": "native RegisterStackedSound takes sound soundHandle, boolean byPosition, real rectwidth, real rectheight returns nothing",
    "name": "RegisterStackedSound",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "byPosition",
      "documentation": ""
    }, {
      "type": "real",
      "name": "rectwidth",
      "documentation": ""
    }, {
      "type": "real",
      "name": "rectheight",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RegisterStackedSound(soundHandle, byPosition, rectwidth, rectheight)",
    "documentation": ""
  },
  "UnregisterStackedSound": {
    "original": "native UnregisterStackedSound takes sound soundHandle, boolean byPosition, real rectwidth, real rectheight returns nothing",
    "name": "UnregisterStackedSound",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "byPosition",
      "documentation": ""
    }, {
      "type": "real",
      "name": "rectwidth",
      "documentation": ""
    }, {
      "type": "real",
      "name": "rectheight",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UnregisterStackedSound(soundHandle, byPosition, rectwidth, rectheight)",
    "documentation": ""
  },
  "AddWeatherEffect": {
    "original": "native AddWeatherEffect takes rect where, integer effectID returns weathereffect",
    "name": "AddWeatherEffect",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "rect",
      "name": "where",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "effectID",
      "documentation": ""
    }],
    "returnType": "weathereffect",
    "insertText": "AddWeatherEffect(where, effectID)",
    "documentation": "新建的在 ,~矩形区域, 的天气效果: ,~WeatherId"
  },
  "RemoveWeatherEffect": {
    "original": "native RemoveWeatherEffect takes weathereffect whichEffect returns nothing",
    "name": "RemoveWeatherEffect",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "weathereffect",
      "name": "whichEffect",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RemoveWeatherEffect(whichEffect)",
    "documentation": ""
  },
  "EnableWeatherEffect": {
    "original": "native EnableWeatherEffect takes weathereffect whichEffect, boolean enable returns nothing",
    "name": "EnableWeatherEffect",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "weathereffect",
      "name": "whichEffect",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "enable",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "EnableWeatherEffect(whichEffect, enable)",
    "documentation": "打开/关闭天气效果"
  },
  "TerrainDeformCrater": {
    "original": "native TerrainDeformCrater takes real x, real y, real radius, real depth, integer duration, boolean permanent returns terraindeformation",
    "name": "TerrainDeformCrater",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "radius",
      "documentation": ""
    }, {
      "type": "real",
      "name": "depth",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "duration",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "permanent",
      "documentation": ""
    }],
    "returnType": "terraindeformation",
    "insertText": "TerrainDeformCrater(x, y, radius, depth, duration, permanent)",
    "documentation": "新建的弹坑变形. 中心坐标:(,~X,,,~Y,) 半径: ,~Radius, 深度: ,~Depth, 持续时间: ,~Duration, 毫秒, 变化类型: ,~Type"
  },
  "TerrainDeformRipple": {
    "original": "native TerrainDeformRipple takes real x, real y, real radius, real depth, integer duration, integer count, real spaceWaves, real timeWaves, real radiusStartPct, boolean limitNeg returns terraindeformation",
    "name": "TerrainDeformRipple",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "radius",
      "documentation": ""
    }, {
      "type": "real",
      "name": "depth",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "duration",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "count",
      "documentation": ""
    }, {
      "type": "real",
      "name": "spaceWaves",
      "documentation": ""
    }, {
      "type": "real",
      "name": "timeWaves",
      "documentation": ""
    }, {
      "type": "real",
      "name": "radiusStartPct",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "limitNeg",
      "documentation": ""
    }],
    "returnType": "terraindeformation",
    "insertText": "TerrainDeformRipple(x, y, radius, depth, duration, count, spaceWaves, timeWaves, radiusStartPct, limitNeg)",
    "documentation": "初始半径率"
  },
  "TerrainDeformWave": {
    "original": "native TerrainDeformWave takes real x, real y, real dirX, real dirY, real distance, real speed, real radius, real depth, integer trailTime, integer count returns terraindeformation",
    "name": "TerrainDeformWave",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "dirX",
      "documentation": ""
    }, {
      "type": "real",
      "name": "dirY",
      "documentation": ""
    }, {
      "type": "real",
      "name": "distance",
      "documentation": ""
    }, {
      "type": "real",
      "name": "speed",
      "documentation": ""
    }, {
      "type": "real",
      "name": "radius",
      "documentation": ""
    }, {
      "type": "real",
      "name": "depth",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "trailTime",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "count",
      "documentation": ""
    }],
    "returnType": "terraindeformation",
    "insertText": "TerrainDeformWave(x, y, dirX, dirY, distance, speed, radius, depth, trailTime, count)",
    "documentation": "新建的冲击波变形. 起始坐标:(,~X,,,~Y,) 波方向:(,~X,,,~Y,) 波距离: ,~distance, 波速度: ,~speed, 波半径: ,~radius, 深度: ,~Depth, 变形效果持续时间: ,~Delay, 毫秒, 变化次数: ,~Count"
  },
  "TerrainDeformRandom": {
    "original": "native TerrainDeformRandom takes real x, real y, real radius, real minDelta, real maxDelta, integer duration, integer updateInterval returns terraindeformation",
    "name": "TerrainDeformRandom",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "radius",
      "documentation": ""
    }, {
      "type": "real",
      "name": "minDelta",
      "documentation": ""
    }, {
      "type": "real",
      "name": "maxDelta",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "duration",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "updateInterval",
      "documentation": ""
    }],
    "returnType": "terraindeformation",
    "insertText": "TerrainDeformRandom(x, y, radius, minDelta, maxDelta, duration, updateInterval)",
    "documentation": "新建的随机变形. 中心坐标:(,~X,,,~Y,) 半径: ,~Radius, 最小高度变化: ,~Depth, 最大高度变化: ,~Depth, 持续时间: ,~Duration, 毫秒, 变化周期: ,~Duration, 毫秒"
  },
  "TerrainDeformStop": {
    "original": "native TerrainDeformStop takes terraindeformation deformation, integer duration returns nothing",
    "name": "TerrainDeformStop",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "terraindeformation",
      "name": "deformation",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TerrainDeformStop(deformation, duration)",
    "documentation": "停止 ,~Terrain Deformation, ,衰退时间: ,~Duration, 毫秒"
  },
  "TerrainDeformStopAll": {
    "original": "native TerrainDeformStopAll takes nothing returns nothing",
    "name": "TerrainDeformStopAll",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "TerrainDeformStopAll()",
    "documentation": "停止所有地域变形"
  },
  "AddSpecialEffect": {
    "original": "native AddSpecialEffect takes string modelName, real x, real y returns effect",
    "name": "AddSpecialEffect",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "modelName",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": "effect",
    "insertText": "AddSpecialEffect(modelName, x, y)",
    "documentation": "新建特效 ,~Model File, 在(,~X,,,~Y,)处"
  },
  "AddSpecialEffectLoc": {
    "original": "native AddSpecialEffectLoc takes string modelName, location where returns effect",
    "name": "AddSpecialEffectLoc",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "modelName",
      "documentation": ""
    }, {
      "type": "location",
      "name": "where",
      "documentation": ""
    }],
    "returnType": "effect",
    "insertText": "AddSpecialEffectLoc(modelName, where)",
    "documentation": "新建特效 ,~Model File, 在 ,~指定点, 处"
  },
  "AddSpecialEffectTarget": {
    "original": "native AddSpecialEffectTarget takes string modelName, widget targetWidget, string attachPointName returns effect",
    "name": "AddSpecialEffectTarget",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "modelName",
      "documentation": ""
    }, {
      "type": "widget",
      "name": "targetWidget",
      "documentation": ""
    }, {
      "type": "string",
      "name": "attachPointName",
      "documentation": ""
    }],
    "returnType": "effect",
    "insertText": "AddSpecialEffectTarget(modelName, targetWidget, attachPointName)",
    "documentation": "新建特效 ,~Model File, 并绑定到 ,~单位, 的 ,~Attachment Point, 附加点上"
  },
  "DestroyEffect": {
    "original": "native DestroyEffect takes effect whichEffect returns nothing",
    "name": "DestroyEffect",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "effect",
      "name": "whichEffect",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DestroyEffect(whichEffect)",
    "documentation": ""
  },
  "AddSpellEffect": {
    "original": "native AddSpellEffect takes string abilityString, effecttype t, real x, real y returns effect",
    "name": "AddSpellEffect",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "abilityString",
      "documentation": ""
    }, {
      "type": "effecttype",
      "name": "t",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": "effect",
    "insertText": "AddSpellEffect(abilityString, t, x, y)",
    "documentation": ""
  },
  "AddSpellEffectLoc": {
    "original": "native AddSpellEffectLoc takes string abilityString, effecttype t,location where returns effect",
    "name": "AddSpellEffectLoc",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "abilityString",
      "documentation": ""
    }, {
      "type": "effecttype",
      "name": "t",
      "documentation": ""
    }, {
      "type": "location",
      "name": "where",
      "documentation": ""
    }],
    "returnType": "effect",
    "insertText": "AddSpellEffectLoc(abilityString, t, where)",
    "documentation": ""
  },
  "AddSpellEffectById": {
    "original": "native AddSpellEffectById takes integer abilityId, effecttype t,real x, real y returns effect",
    "name": "AddSpellEffectById",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilityId",
      "documentation": ""
    }, {
      "type": "effecttype",
      "name": "t",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": "effect",
    "insertText": "AddSpellEffectById(abilityId, t, x, y)",
    "documentation": "~技能, 的 ,~EffectType, , 创建到坐标(,~X,,,~Y,)"
  },
  "AddSpellEffectByIdLoc": {
    "original": "native AddSpellEffectByIdLoc takes integer abilityId, effecttype t,location where returns effect",
    "name": "AddSpellEffectByIdLoc",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilityId",
      "documentation": ""
    }, {
      "type": "effecttype",
      "name": "t",
      "documentation": ""
    }, {
      "type": "location",
      "name": "where",
      "documentation": ""
    }],
    "returnType": "effect",
    "insertText": "AddSpellEffectByIdLoc(abilityId, t, where)",
    "documentation": "~技能, 的 ,~EffectType, , 创建到 ,~指定点"
  },
  "AddSpellEffectTarget": {
    "original": "native AddSpellEffectTarget takes string modelName, effecttype t, widget targetWidget, string attachPoint returns effect",
    "name": "AddSpellEffectTarget",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "modelName",
      "documentation": ""
    }, {
      "type": "effecttype",
      "name": "t",
      "documentation": ""
    }, {
      "type": "widget",
      "name": "targetWidget",
      "documentation": ""
    }, {
      "type": "string",
      "name": "attachPoint",
      "documentation": ""
    }],
    "returnType": "effect",
    "insertText": "AddSpellEffectTarget(modelName, t, targetWidget, attachPoint)",
    "documentation": ""
  },
  "AddSpellEffectTargetById": {
    "original": "native AddSpellEffectTargetById takes integer abilityId, effecttype t, widget targetWidget, string attachPoint returns effect",
    "name": "AddSpellEffectTargetById",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilityId",
      "documentation": ""
    }, {
      "type": "effecttype",
      "name": "t",
      "documentation": ""
    }, {
      "type": "widget",
      "name": "targetWidget",
      "documentation": ""
    }, {
      "type": "string",
      "name": "attachPoint",
      "documentation": ""
    }],
    "returnType": "effect",
    "insertText": "AddSpellEffectTargetById(abilityId, t, targetWidget, attachPoint)",
    "documentation": "~技能, 的 ,~EffectType, , 绑定到 ,~单位, 的 ,~String, 附加点"
  },
  "AddLightning": {
    "original": "native AddLightning takes string codeName, boolean checkVisibility, real x1, real y1, real x2, real y2 returns lightning",
    "name": "AddLightning",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "codeName",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "checkVisibility",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x1",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y1",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x2",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y2",
      "documentation": ""
    }],
    "returnType": "lightning",
    "insertText": "AddLightning(codeName, checkVisibility, x1, y1, x2, y2)",
    "documentation": "新建闪电效果: ,~闪电效果, (,~Boolean,检查可见性) 起始点:(,~X,,,~Y,) 终结点:(,~X,,,~Y,)"
  },
  "AddLightningEx": {
    "original": "native AddLightningEx takes string codeName, boolean checkVisibility, real x1, real y1, real z1, real x2, real y2, real z2 returns lightning",
    "name": "AddLightningEx",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "codeName",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "checkVisibility",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x1",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y1",
      "documentation": ""
    }, {
      "type": "real",
      "name": "z1",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x2",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y2",
      "documentation": ""
    }, {
      "type": "real",
      "name": "z2",
      "documentation": ""
    }],
    "returnType": "lightning",
    "insertText": "AddLightningEx(codeName, checkVisibility, x1, y1, z1, x2, y2, z2)",
    "documentation": "新建闪电效果: ,~闪电效果, (,~Boolean,检查可见性) 起始点:(,~X,,,~Y,,,~Z,) 终结点:(,~X,,,~Y,,,~Z,)"
  },
  "DestroyLightning": {
    "original": "native DestroyLightning takes lightning whichBolt returns boolean",
    "name": "DestroyLightning",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "lightning",
      "name": "whichBolt",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "DestroyLightning(whichBolt)",
    "documentation": ""
  },
  "MoveLightning": {
    "original": "native MoveLightning takes lightning whichBolt, boolean checkVisibility, real x1, real y1, real x2, real y2 returns boolean",
    "name": "MoveLightning",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "lightning",
      "name": "whichBolt",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "checkVisibility",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x1",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y1",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x2",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y2",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "MoveLightning(whichBolt, checkVisibility, x1, y1, x2, y2)",
    "documentation": ""
  },
  "MoveLightningEx": {
    "original": "native MoveLightningEx takes lightning whichBolt, boolean checkVisibility, real x1, real y1, real z1, real x2, real y2, real z2 returns boolean",
    "name": "MoveLightningEx",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "lightning",
      "name": "whichBolt",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "checkVisibility",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x1",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y1",
      "documentation": ""
    }, {
      "type": "real",
      "name": "z1",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x2",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y2",
      "documentation": ""
    }, {
      "type": "real",
      "name": "z2",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "MoveLightningEx(whichBolt, checkVisibility, x1, y1, z1, x2, y2, z2)",
    "documentation": "移动 ,~Lightning, 到新位置,(,~Boolean, 检查可见性) 新起始点: (,~X,,,~Y,,,~Z,) 新终结点: (,~X,,,~Y,,,~Z,)"
  },
  "GetLightningColorA": {
    "original": "native GetLightningColorA takes lightning whichBolt returns real",
    "name": "GetLightningColorA",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "lightning",
      "name": "whichBolt",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetLightningColorA(whichBolt)",
    "documentation": ""
  },
  "GetLightningColorR": {
    "original": "native GetLightningColorR takes lightning whichBolt returns real",
    "name": "GetLightningColorR",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "lightning",
      "name": "whichBolt",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetLightningColorR(whichBolt)",
    "documentation": ""
  },
  "GetLightningColorG": {
    "original": "native GetLightningColorG takes lightning whichBolt returns real",
    "name": "GetLightningColorG",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "lightning",
      "name": "whichBolt",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetLightningColorG(whichBolt)",
    "documentation": ""
  },
  "GetLightningColorB": {
    "original": "native GetLightningColorB takes lightning whichBolt returns real",
    "name": "GetLightningColorB",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "lightning",
      "name": "whichBolt",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetLightningColorB(whichBolt)",
    "documentation": ""
  },
  "SetLightningColor": {
    "original": "native SetLightningColor takes lightning whichBolt, real r, real g, real b, real a returns boolean",
    "name": "SetLightningColor",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "lightning",
      "name": "whichBolt",
      "documentation": ""
    }, {
      "type": "real",
      "name": "r",
      "documentation": ""
    }, {
      "type": "real",
      "name": "g",
      "documentation": ""
    }, {
      "type": "real",
      "name": "b",
      "documentation": ""
    }, {
      "type": "real",
      "name": "a",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SetLightningColor(whichBolt, r, g, b, a)",
    "documentation": ""
  },
  "GetAbilityEffect": {
    "original": "native GetAbilityEffect takes string abilityString, effecttype t, integer index returns string",
    "name": "GetAbilityEffect",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "abilityString",
      "documentation": ""
    }, {
      "type": "effecttype",
      "name": "t",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "index",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "GetAbilityEffect(abilityString, t, index)",
    "documentation": ""
  },
  "GetAbilityEffectById": {
    "original": "native GetAbilityEffectById takes integer abilityId, effecttype t, integer index returns string",
    "name": "GetAbilityEffectById",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilityId",
      "documentation": ""
    }, {
      "type": "effecttype",
      "name": "t",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "index",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "GetAbilityEffectById(abilityId, t, index)",
    "documentation": ""
  },
  "GetAbilitySound": {
    "original": "native GetAbilitySound takes string abilityString, soundtype t returns string",
    "name": "GetAbilitySound",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "abilityString",
      "documentation": ""
    }, {
      "type": "soundtype",
      "name": "t",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "GetAbilitySound(abilityString, t)",
    "documentation": ""
  },
  "GetAbilitySoundById": {
    "original": "native GetAbilitySoundById takes integer abilityId, soundtype t returns string",
    "name": "GetAbilitySoundById",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilityId",
      "documentation": ""
    }, {
      "type": "soundtype",
      "name": "t",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "GetAbilitySoundById(abilityId, t)",
    "documentation": ""
  },
  "GetTerrainCliffLevel": {
    "original": "native GetTerrainCliffLevel takes real x, real y returns integer",
    "name": "GetTerrainCliffLevel",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetTerrainCliffLevel(x, y)",
    "documentation": "坐标(,~X,,,~Y,)处的地形悬崖高度"
  },
  "SetWaterBaseColor": {
    "original": "native SetWaterBaseColor takes integer red, integer green, integer blue, integer alpha returns nothing",
    "name": "SetWaterBaseColor",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "red",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "green",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "alpha",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetWaterBaseColor(red, green, blue, alpha)",
    "documentation": "设置水颜色为:(,~Red,,,~Green,,,~Blue,), 透明值为: ,~Transparency"
  },
  "SetWaterDeforms": {
    "original": "native SetWaterDeforms takes boolean val returns nothing",
    "name": "SetWaterDeforms",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "val",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetWaterDeforms(val)",
    "documentation": "设置 水变形 开/关"
  },
  "GetTerrainType": {
    "original": "native GetTerrainType takes real x, real y returns integer",
    "name": "GetTerrainType",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetTerrainType(x, y)",
    "documentation": "坐标(,~X,,,~Y,)处的地形"
  },
  "GetTerrainVariance": {
    "original": "native GetTerrainVariance takes real x, real y returns integer",
    "name": "GetTerrainVariance",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetTerrainVariance(x, y)",
    "documentation": "坐标(,~X,,,~Y,)处的地形样式"
  },
  "SetTerrainType": {
    "original": "native SetTerrainType takes real x, real y, integer terrainType, integer variation, integer area, integer shape returns nothing",
    "name": "SetTerrainType",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "terrainType",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "variation",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "area",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "shape",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTerrainType(x, y, terrainType, variation, area, shape)",
    "documentation": "改变(,~X,,,~Y,)处的地形为 ,~Terrain Type, ,使用样式: ,~Variation, 范围: ,~Area, 形状: ,~Shape"
  },
  "IsTerrainPathable": {
    "original": "native IsTerrainPathable takes real x, real y, pathingtype t returns boolean",
    "name": "IsTerrainPathable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "pathingtype",
      "name": "t",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsTerrainPathable(x, y, t)",
    "documentation": "坐标(,~X,,,~Y,)处的 ,~Pathing Type, 通行状态为关闭"
  },
  "SetTerrainPathable": {
    "original": "native SetTerrainPathable takes real x, real y, pathingtype t, boolean flag returns nothing",
    "name": "SetTerrainPathable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "pathingtype",
      "name": "t",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTerrainPathable(x, y, t, flag)",
    "documentation": "设置(,~X,,,~Y,)处单元点的 ,~Pathing, 地形通行状态为: ,~On/Off"
  },
  "CreateImage": {
    "original": "native CreateImage takes string file, real sizeX, real sizeY, real sizeZ, real posX, real posY, real posZ, real originX, real originY, real originZ, integer imageType returns image",
    "name": "CreateImage",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "file",
      "documentation": ""
    }, {
      "type": "real",
      "name": "sizeX",
      "documentation": ""
    }, {
      "type": "real",
      "name": "sizeY",
      "documentation": ""
    }, {
      "type": "real",
      "name": "sizeZ",
      "documentation": ""
    }, {
      "type": "real",
      "name": "posX",
      "documentation": ""
    }, {
      "type": "real",
      "name": "posY",
      "documentation": ""
    }, {
      "type": "real",
      "name": "posZ",
      "documentation": ""
    }, {
      "type": "real",
      "name": "originX",
      "documentation": ""
    }, {
      "type": "real",
      "name": "originY",
      "documentation": ""
    }, {
      "type": "real",
      "name": "originZ",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "imageType",
      "documentation": ""
    }],
    "returnType": "image",
    "insertText": "CreateImage(file, sizeX, sizeY, sizeZ, posX, posY, posZ, originX, originY, originZ, imageType)",
    "documentation": "新建图像: ,~Image, 大小:(,~X,,,~Y,,,~Z,) 创建点:(,~X,,,~Y,,,~Z,) 原点坐标:(,~X,,,~Y,,,~Z,) 图像类型: ,~Type"
  },
  "DestroyImage": {
    "original": "native DestroyImage takes image whichImage returns nothing",
    "name": "DestroyImage",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "image",
      "name": "whichImage",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DestroyImage(whichImage)",
    "documentation": "删除图像"
  },
  "ShowImage": {
    "original": "native ShowImage takes image whichImage, boolean flag returns nothing",
    "name": "ShowImage",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "image",
      "name": "whichImage",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ShowImage(whichImage, flag)",
    "documentation": "设置 ,~Image, ,~Show/Hide"
  },
  "SetImageConstantHeight": {
    "original": "native SetImageConstantHeight takes image whichImage, boolean flag, real height returns nothing",
    "name": "SetImageConstantHeight",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "image",
      "name": "whichImage",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }, {
      "type": "real",
      "name": "height",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetImageConstantHeight(whichImage, flag, height)",
    "documentation": "改变图像高度"
  },
  "SetImagePosition": {
    "original": "native SetImagePosition takes image whichImage, real x, real y, real z returns nothing",
    "name": "SetImagePosition",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "image",
      "name": "whichImage",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "z",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetImagePosition(whichImage, x, y, z)",
    "documentation": "改变 ,~Image, 的位置为(,~X,,,~Y,),Z轴偏移为 ,~Z"
  },
  "SetImageColor": {
    "original": "native SetImageColor takes image whichImage, integer red, integer green, integer blue, integer alpha returns nothing",
    "name": "SetImageColor",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "image",
      "name": "whichImage",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "red",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "green",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "alpha",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetImageColor(whichImage, red, green, blue, alpha)",
    "documentation": "设置 ,~Image, 的颜色值为(,~Red,,,~Green,,,~Blue,) Alpha值为 ,~Alpha"
  },
  "SetImageRender": {
    "original": "native SetImageRender takes image whichImage, boolean flag returns nothing",
    "name": "SetImageRender",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "image",
      "name": "whichImage",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetImageRender(whichImage, flag)",
    "documentation": "改变图像着色状态"
  },
  "SetImageRenderAlways": {
    "original": "native SetImageRenderAlways takes image whichImage, boolean flag returns nothing",
    "name": "SetImageRenderAlways",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "image",
      "name": "whichImage",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetImageRenderAlways(whichImage, flag)",
    "documentation": "改变图像永久着色状态"
  },
  "SetImageAboveWater": {
    "original": "native SetImageAboveWater takes image whichImage, boolean flag, boolean useWaterAlpha returns nothing",
    "name": "SetImageAboveWater",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "image",
      "name": "whichImage",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "useWaterAlpha",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetImageAboveWater(whichImage, flag, useWaterAlpha)",
    "documentation": "改变图像水上状态"
  },
  "SetImageType": {
    "original": "native SetImageType takes image whichImage, integer imageType returns nothing",
    "name": "SetImageType",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "image",
      "name": "whichImage",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "imageType",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetImageType(whichImage, imageType)",
    "documentation": "改变图像类型"
  },
  "CreateUbersplat": {
    "original": "native CreateUbersplat takes real x, real y, string name, integer red, integer green, integer blue, integer alpha, boolean forcePaused, boolean noBirthTime returns ubersplat",
    "name": "CreateUbersplat",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "string",
      "name": "name",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "red",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "green",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "alpha",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "forcePaused",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "noBirthTime",
      "documentation": ""
    }],
    "returnType": "ubersplat",
    "insertText": "CreateUbersplat(x, y, name, red, green, blue, alpha, forcePaused, noBirthTime)",
    "documentation": "新建的地面纹理变化在点(,~X,,,~Y,),使用图像: ,~Type, 颜色值为(,~Red,,,~Green,,,~Blue,) Alpha值为,~Transparency, (,~Enable/Disable, 暂停状态, ,~Enble/Disable, 跳过出生动画)"
  },
  "DestroyUbersplat": {
    "original": "native DestroyUbersplat takes ubersplat whichSplat returns nothing",
    "name": "DestroyUbersplat",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "ubersplat",
      "name": "whichSplat",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DestroyUbersplat(whichSplat)",
    "documentation": "删除地面纹理"
  },
  "ResetUbersplat": {
    "original": "native ResetUbersplat takes ubersplat whichSplat returns nothing",
    "name": "ResetUbersplat",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "ubersplat",
      "name": "whichSplat",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ResetUbersplat(whichSplat)",
    "documentation": "重置地面纹理"
  },
  "FinishUbersplat": {
    "original": "native FinishUbersplat takes ubersplat whichSplat returns nothing",
    "name": "FinishUbersplat",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "ubersplat",
      "name": "whichSplat",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "FinishUbersplat(whichSplat)",
    "documentation": "完成地面纹理"
  },
  "ShowUbersplat": {
    "original": "native ShowUbersplat takes ubersplat whichSplat, boolean flag returns nothing",
    "name": "ShowUbersplat",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "ubersplat",
      "name": "whichSplat",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ShowUbersplat(whichSplat, flag)",
    "documentation": "设置 ,~Ubersplat, 状态为 ,~Show/Hide"
  },
  "SetUbersplatRender": {
    "original": "native SetUbersplatRender takes ubersplat whichSplat, boolean flag returns nothing",
    "name": "SetUbersplatRender",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "ubersplat",
      "name": "whichSplat",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUbersplatRender(whichSplat, flag)",
    "documentation": "改变地面纹理着色状态"
  },
  "SetUbersplatRenderAlways": {
    "original": "native SetUbersplatRenderAlways takes ubersplat whichSplat, boolean flag returns nothing",
    "name": "SetUbersplatRenderAlways",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "ubersplat",
      "name": "whichSplat",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUbersplatRenderAlways(whichSplat, flag)",
    "documentation": "改变地面纹理永久着色状态"
  },
  "SetBlight": {
    "original": "native SetBlight takes player whichPlayer, real x, real y, real radius, boolean addBlight returns nothing",
    "name": "SetBlight",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "radius",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "addBlight",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetBlight(whichPlayer, x, y, radius, addBlight)",
    "documentation": "为 ,~Player, 在圆心为(,~X,,,~Y,),半径为 ,~R, 的圆范围内 ,~Create/Remove, 一块荒芜地表"
  },
  "SetBlightRect": {
    "original": "native SetBlightRect takes player whichPlayer, rect r, boolean addBlight returns nothing",
    "name": "SetBlightRect",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "rect",
      "name": "r",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "addBlight",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetBlightRect(whichPlayer, r, addBlight)",
    "documentation": "为 ,~Player, 在 ,~Region, ,~Create/Remove, 一块荒芜地表"
  },
  "SetBlightPoint": {
    "original": "native SetBlightPoint takes player whichPlayer, real x, real y, boolean addBlight returns nothing",
    "name": "SetBlightPoint",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "addBlight",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetBlightPoint(whichPlayer, x, y, addBlight)",
    "documentation": ""
  },
  "SetBlightLoc": {
    "original": "native SetBlightLoc takes player whichPlayer, location whichLocation, real radius, boolean addBlight returns nothing",
    "name": "SetBlightLoc",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "location",
      "name": "whichLocation",
      "documentation": ""
    }, {
      "type": "real",
      "name": "radius",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "addBlight",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetBlightLoc(whichPlayer, whichLocation, radius, addBlight)",
    "documentation": ""
  },
  "CreateBlightedGoldmine": {
    "original": "native CreateBlightedGoldmine takes player id, real x, real y, real face returns unit",
    "name": "CreateBlightedGoldmine",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "id",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "face",
      "documentation": ""
    }],
    "returnType": "unit",
    "insertText": "CreateBlightedGoldmine(id, x, y, face)",
    "documentation": "新建 ,~玩家, 的不死族金矿在(,~X,,,~Y,),面向角度:,~Face, 度"
  },
  "IsPointBlighted": {
    "original": "native IsPointBlighted takes real x, real y returns boolean",
    "name": "IsPointBlighted",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsPointBlighted(x, y)",
    "documentation": "坐标点(,~X,,,~Y,)被荒芜地表覆盖"
  },
  "SetDoodadAnimation": {
    "original": "native SetDoodadAnimation takes real x, real y, real radius, integer doodadID, boolean nearestOnly, string animName, boolean animRandom returns nothing",
    "name": "SetDoodadAnimation",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "radius",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "doodadID",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "nearestOnly",
      "documentation": ""
    }, {
      "type": "string",
      "name": "animName",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "animRandom",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetDoodadAnimation(x, y, radius, doodadID, nearestOnly, animName, animRandom)",
    "documentation": "选取圆心为(,~X,,,~Y,),半径为 ,~半径, 的圆范围内的 ,~装饰物类型,(选取方式:,~选取方式,), 做 ,~Animation Name, 动作(,~允许/禁止, 随机播放)"
  },
  "SetDoodadAnimationRect": {
    "original": "native SetDoodadAnimationRect takes rect r, integer doodadID, string animName, boolean animRandom returns nothing",
    "name": "SetDoodadAnimationRect",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "rect",
      "name": "r",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "doodadID",
      "documentation": ""
    }, {
      "type": "string",
      "name": "animName",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "animRandom",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetDoodadAnimationRect(r, doodadID, animName, animRandom)",
    "documentation": "播放 ,~Rect, 内所有 ,~装饰物类型, 的 ,~Animation Name, 动作(,~允许/禁止, 随机播放)"
  },
  "StartMeleeAI": {
    "original": "native StartMeleeAI takes player num, string script returns nothing",
    "name": "StartMeleeAI",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "num",
      "documentation": ""
    }, {
      "type": "string",
      "name": "script",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "StartMeleeAI(num, script)",
    "documentation": "启动对战 AI "
  },
  "StartCampaignAI": {
    "original": "native StartCampaignAI takes player num, string script returns nothing",
    "name": "StartCampaignAI",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "num",
      "documentation": ""
    }, {
      "type": "string",
      "name": "script",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "StartCampaignAI(num, script)",
    "documentation": "启动战役 AI "
  },
  "CommandAI": {
    "original": "native CommandAI takes player num, integer command, integer data returns nothing",
    "name": "CommandAI",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "num",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "command",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "data",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CommandAI(num, command, data)",
    "documentation": "发送 AI 命令"
  },
  "PauseCompAI": {
    "original": "native PauseCompAI takes player p, boolean pause returns nothing",
    "name": "PauseCompAI",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "p",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "pause",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PauseCompAI(p, pause)",
    "documentation": "设定 ,~Player, ,~暂停/恢复, 当前AI脚本的运行"
  },
  "GetAIDifficulty": {
    "original": "native GetAIDifficulty takes player num returns aidifficulty",
    "name": "GetAIDifficulty",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "num",
      "documentation": ""
    }],
    "returnType": "aidifficulty",
    "insertText": "GetAIDifficulty(num)",
    "documentation": "对战 AI"
  },
  "RemoveGuardPosition": {
    "original": "native RemoveGuardPosition takes unit hUnit returns nothing",
    "name": "RemoveGuardPosition",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "hUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RemoveGuardPosition(hUnit)",
    "documentation": "忽略单位的防守职责"
  },
  "RecycleGuardPosition": {
    "original": "native RecycleGuardPosition takes unit hUnit returns nothing",
    "name": "RecycleGuardPosition",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "hUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RecycleGuardPosition(hUnit)",
    "documentation": "恢复单位的防守职责"
  },
  "RemoveAllGuardPositions": {
    "original": "native RemoveAllGuardPositions takes player num returns nothing",
    "name": "RemoveAllGuardPositions",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "num",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RemoveAllGuardPositions(num)",
    "documentation": "忽略所有单位的防守职责"
  },
  "Cheat": {
    "original": "native Cheat takes string cheatStr returns nothing",
    "name": "Cheat",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "cheatStr",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "Cheat(cheatStr)",
    "documentation": "** Cheat标签 **"
  },
  "IsNoVictoryCheat": {
    "original": "native IsNoVictoryCheat takes nothing returns boolean",
    "name": "IsNoVictoryCheat",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "boolean",
    "insertText": "IsNoVictoryCheat()",
    "documentation": "玩家开启作弊模式: 无法胜利"
  },
  "IsNoDefeatCheat": {
    "original": "native IsNoDefeatCheat takes nothing returns boolean",
    "name": "IsNoDefeatCheat",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "boolean",
    "insertText": "IsNoDefeatCheat()",
    "documentation": "玩家开启作弊模式: 无法失败"
  },
  "Preload": {
    "original": "native Preload takes string filename returns nothing",
    "name": "Preload",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "filename",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "Preload(filename)",
    "documentation": "预读文件"
  },
  "PreloadEnd": {
    "original": "native PreloadEnd takes real timeout returns nothing",
    "name": "PreloadEnd",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "timeout",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PreloadEnd(timeout)",
    "documentation": "开始预读"
  },
  "PreloadStart": {
    "original": "native PreloadStart takes nothing returns nothing",
    "name": "PreloadStart",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "PreloadStart()",
    "documentation": ""
  },
  "PreloadRefresh": {
    "original": "native PreloadRefresh takes nothing returns nothing",
    "name": "PreloadRefresh",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "PreloadRefresh()",
    "documentation": ""
  },
  "PreloadEndEx": {
    "original": "native PreloadEndEx takes nothing returns nothing",
    "name": "PreloadEndEx",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "PreloadEndEx()",
    "documentation": ""
  },
  "PreloadGenClear": {
    "original": "native PreloadGenClear takes nothing returns nothing",
    "name": "PreloadGenClear",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "PreloadGenClear()",
    "documentation": ""
  },
  "PreloadGenStart": {
    "original": "native PreloadGenStart takes nothing returns nothing",
    "name": "PreloadGenStart",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "PreloadGenStart()",
    "documentation": ""
  },
  "PreloadGenEnd": {
    "original": "native PreloadGenEnd takes string filename returns nothing",
    "name": "PreloadGenEnd",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "filename",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PreloadGenEnd(filename)",
    "documentation": ""
  },
  "Preloader": {
    "original": "native Preloader takes string filename returns nothing",
    "name": "Preloader",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "filename",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "Preloader(filename)",
    "documentation": "预读一批文件"
  },
  "AutomationTestStart": {
    "original": "native AutomationTestStart takes string testName returns nothing",
    "name": "AutomationTestStart",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "testName",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "AutomationTestStart(testName)",
    "documentation": ""
  },
  "AutomationTestEnd": {
    "original": "native AutomationTestEnd takes string testName returns nothing",
    "name": "AutomationTestEnd",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "testName",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "AutomationTestEnd(testName)",
    "documentation": ""
  },
  "BlzGetTriggerPlayerMouseX": {
    "original": "native BlzGetTriggerPlayerMouseX takes nothing returns real",
    "name": "BlzGetTriggerPlayerMouseX",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "real",
    "insertText": "BlzGetTriggerPlayerMouseX()",
    "documentation": "触发鼠标位置X"
  },
  "BlzGetTriggerPlayerMouseY": {
    "original": "native BlzGetTriggerPlayerMouseY takes nothing returns real",
    "name": "BlzGetTriggerPlayerMouseY",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "real",
    "insertText": "BlzGetTriggerPlayerMouseY()",
    "documentation": "触发鼠标位置Y"
  },
  "BlzGetTriggerPlayerMousePosition": {
    "original": "native BlzGetTriggerPlayerMousePosition takes nothing returns location",
    "name": "BlzGetTriggerPlayerMousePosition",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "location",
    "insertText": "BlzGetTriggerPlayerMousePosition()",
    "documentation": "触发鼠标位置"
  },
  "BlzGetTriggerPlayerMouseButton": {
    "original": "native BlzGetTriggerPlayerMouseButton takes nothing returns mousebuttontype",
    "name": "BlzGetTriggerPlayerMouseButton",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "mousebuttontype",
    "insertText": "BlzGetTriggerPlayerMouseButton()",
    "documentation": "触发鼠标按键"
  },
  "BlzSetAbilityTooltip": {
    "original": "native BlzSetAbilityTooltip takes integer abilCode, string tooltip, integer level returns nothing",
    "name": "BlzSetAbilityTooltip",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilCode",
      "documentation": ""
    }, {
      "type": "string",
      "name": "tooltip",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "level",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetAbilityTooltip(abilCode, tooltip, level)",
    "documentation": "设置技能提示信息"
  },
  "BlzSetAbilityActivatedTooltip": {
    "original": "native BlzSetAbilityActivatedTooltip takes integer abilCode, string tooltip, integer level returns nothing",
    "name": "BlzSetAbilityActivatedTooltip",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilCode",
      "documentation": ""
    }, {
      "type": "string",
      "name": "tooltip",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "level",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetAbilityActivatedTooltip(abilCode, tooltip, level)",
    "documentation": "设置技能提示信息（自动施法启用）"
  },
  "BlzSetAbilityExtendedTooltip": {
    "original": "native BlzSetAbilityExtendedTooltip takes integer abilCode, string ExtendedTooltip, integer level returns nothing",
    "name": "BlzSetAbilityExtendedTooltip",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilCode",
      "documentation": ""
    }, {
      "type": "string",
      "name": "ExtendedTooltip",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "level",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetAbilityExtendedTooltip(abilCode, ExtendedTooltip, level)",
    "documentation": "设置技能扩展提示信息"
  },
  "BlzSetAbilityActivatedExtendedTooltip": {
    "original": "native BlzSetAbilityActivatedExtendedTooltip takes integer abilCode, string ExtendedTooltip, integer level returns nothing",
    "name": "BlzSetAbilityActivatedExtendedTooltip",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilCode",
      "documentation": ""
    }, {
      "type": "string",
      "name": "ExtendedTooltip",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "level",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetAbilityActivatedExtendedTooltip(abilCode, ExtendedTooltip, level)",
    "documentation": "设置技能扩展提示信息（自动施法启用）"
  },
  "BlzSetAbilityResearchTooltip": {
    "original": "native BlzSetAbilityResearchTooltip takes integer abilCode, string researchTooltip, integer level returns nothing",
    "name": "BlzSetAbilityResearchTooltip",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilCode",
      "documentation": ""
    }, {
      "type": "string",
      "name": "researchTooltip",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "level",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetAbilityResearchTooltip(abilCode, researchTooltip, level)",
    "documentation": "设置提示信息（学习）"
  },
  "BlzSetAbilityResearchExtendedTooltip": {
    "original": "native BlzSetAbilityResearchExtendedTooltip takes integer abilCode, string researchExtendedTooltip, integer level returns nothing",
    "name": "BlzSetAbilityResearchExtendedTooltip",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilCode",
      "documentation": ""
    }, {
      "type": "string",
      "name": "researchExtendedTooltip",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "level",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetAbilityResearchExtendedTooltip(abilCode, researchExtendedTooltip, level)",
    "documentation": "设置扩展提示信息（学习）"
  },
  "BlzGetAbilityTooltip": {
    "original": "native BlzGetAbilityTooltip takes integer abilCode, integer level returns string",
    "name": "BlzGetAbilityTooltip",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilCode",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "level",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "BlzGetAbilityTooltip(abilCode, level)",
    "documentation": "技能提示信息"
  },
  "BlzGetAbilityActivatedTooltip": {
    "original": "native BlzGetAbilityActivatedTooltip takes integer abilCode, integer level returns string",
    "name": "BlzGetAbilityActivatedTooltip",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilCode",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "level",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "BlzGetAbilityActivatedTooltip(abilCode, level)",
    "documentation": "技能提示信息（自动施法启用）"
  },
  "BlzGetAbilityExtendedTooltip": {
    "original": "native BlzGetAbilityExtendedTooltip takes integer abilCode, integer level returns string",
    "name": "BlzGetAbilityExtendedTooltip",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilCode",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "level",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "BlzGetAbilityExtendedTooltip(abilCode, level)",
    "documentation": "技能扩展提示信息"
  },
  "BlzGetAbilityActivatedExtendedTooltip": {
    "original": "native BlzGetAbilityActivatedExtendedTooltip takes integer abilCode, integer level returns string",
    "name": "BlzGetAbilityActivatedExtendedTooltip",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilCode",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "level",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "BlzGetAbilityActivatedExtendedTooltip(abilCode, level)",
    "documentation": "技能扩展提示信息（自动施法启用）"
  },
  "BlzGetAbilityResearchTooltip": {
    "original": "native BlzGetAbilityResearchTooltip takes integer abilCode, integer level returns string",
    "name": "BlzGetAbilityResearchTooltip",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilCode",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "level",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "BlzGetAbilityResearchTooltip(abilCode, level)",
    "documentation": "技能提示信息（学习）"
  },
  "BlzGetAbilityResearchExtendedTooltip": {
    "original": "native BlzGetAbilityResearchExtendedTooltip takes integer abilCode, integer level returns string",
    "name": "BlzGetAbilityResearchExtendedTooltip",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilCode",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "level",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "BlzGetAbilityResearchExtendedTooltip(abilCode, level)",
    "documentation": "技能扩展提示信息（学习）"
  },
  "BlzSetAbilityIcon": {
    "original": "native BlzSetAbilityIcon takes integer abilCode, string iconPath returns nothing",
    "name": "BlzSetAbilityIcon",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilCode",
      "documentation": ""
    }, {
      "type": "string",
      "name": "iconPath",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetAbilityIcon(abilCode, iconPath)",
    "documentation": "设置技能图标"
  },
  "BlzGetAbilityIcon": {
    "original": "native BlzGetAbilityIcon takes integer abilCode returns string",
    "name": "BlzGetAbilityIcon",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilCode",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "BlzGetAbilityIcon(abilCode)",
    "documentation": "技能图标"
  },
  "BlzSetAbilityActivatedIcon": {
    "original": "native BlzSetAbilityActivatedIcon takes integer abilCode, string iconPath returns nothing",
    "name": "BlzSetAbilityActivatedIcon",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilCode",
      "documentation": ""
    }, {
      "type": "string",
      "name": "iconPath",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetAbilityActivatedIcon(abilCode, iconPath)",
    "documentation": "设置技能图标（自动施法启用）"
  },
  "BlzGetAbilityActivatedIcon": {
    "original": "native BlzGetAbilityActivatedIcon takes integer abilCode returns string",
    "name": "BlzGetAbilityActivatedIcon",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilCode",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "BlzGetAbilityActivatedIcon(abilCode)",
    "documentation": "技能图标（自动施法启用）"
  },
  "BlzGetAbilityPosX": {
    "original": "native BlzGetAbilityPosX takes integer abilCode returns integer",
    "name": "BlzGetAbilityPosX",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilCode",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "BlzGetAbilityPosX(abilCode)",
    "documentation": "技能位置 - X"
  },
  "BlzGetAbilityPosY": {
    "original": "native BlzGetAbilityPosY takes integer abilCode returns integer",
    "name": "BlzGetAbilityPosY",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilCode",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "BlzGetAbilityPosY(abilCode)",
    "documentation": "技能位置 - Y"
  },
  "BlzSetAbilityPosX": {
    "original": "native BlzSetAbilityPosX takes integer abilCode, integer x returns nothing",
    "name": "BlzSetAbilityPosX",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilCode",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "x",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetAbilityPosX(abilCode, x)",
    "documentation": "设置技能位置X"
  },
  "BlzSetAbilityPosY": {
    "original": "native BlzSetAbilityPosY takes integer abilCode, integer y returns nothing",
    "name": "BlzSetAbilityPosY",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilCode",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetAbilityPosY(abilCode, y)",
    "documentation": "设置技能位置Y"
  },
  "BlzGetAbilityActivatedPosX": {
    "original": "native BlzGetAbilityActivatedPosX takes integer abilCode returns integer",
    "name": "BlzGetAbilityActivatedPosX",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilCode",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "BlzGetAbilityActivatedPosX(abilCode)",
    "documentation": "技能位置 - X (自动施法)"
  },
  "BlzGetAbilityActivatedPosY": {
    "original": "native BlzGetAbilityActivatedPosY takes integer abilCode returns integer",
    "name": "BlzGetAbilityActivatedPosY",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilCode",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "BlzGetAbilityActivatedPosY(abilCode)",
    "documentation": "技能位置 - Y (自动施法)"
  },
  "BlzSetAbilityActivatedPosX": {
    "original": "native BlzSetAbilityActivatedPosX takes integer abilCode, integer x returns nothing",
    "name": "BlzSetAbilityActivatedPosX",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilCode",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "x",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetAbilityActivatedPosX(abilCode, x)",
    "documentation": "设置技能位置X（自动施法启用）"
  },
  "BlzSetAbilityActivatedPosY": {
    "original": "native BlzSetAbilityActivatedPosY takes integer abilCode, integer y returns nothing",
    "name": "BlzSetAbilityActivatedPosY",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilCode",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetAbilityActivatedPosY(abilCode, y)",
    "documentation": "设置技能位置Y（自动施法启用）"
  },
  "BlzGetUnitMaxHP": {
    "original": "native BlzGetUnitMaxHP takes unit whichUnit returns integer",
    "name": "BlzGetUnitMaxHP",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "BlzGetUnitMaxHP(whichUnit)",
    "documentation": "获取单位最大生命值"
  },
  "BlzSetUnitMaxHP": {
    "original": "native BlzSetUnitMaxHP takes unit whichUnit, integer hp returns nothing",
    "name": "BlzSetUnitMaxHP",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "hp",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetUnitMaxHP(whichUnit, hp)",
    "documentation": "设置最大生命值"
  },
  "BlzGetUnitMaxMana": {
    "original": "native BlzGetUnitMaxMana takes unit whichUnit returns integer",
    "name": "BlzGetUnitMaxMana",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "BlzGetUnitMaxMana(whichUnit)",
    "documentation": "获取单位最大魔法值"
  },
  "BlzSetUnitMaxMana": {
    "original": "native BlzSetUnitMaxMana takes unit whichUnit, integer mana returns nothing",
    "name": "BlzSetUnitMaxMana",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "mana",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetUnitMaxMana(whichUnit, mana)",
    "documentation": "设置最大法力值"
  },
  "BlzDeleteHeroAbility": {
    "original": "native BlzDeleteHeroAbility takes unit whichUnit, integer abilCode returns nothing",
    "name": "BlzDeleteHeroAbility",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "abilCode",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzDeleteHeroAbility(whichUnit, abilCode)",
    "documentation": ""
  },
  "BlzSetItemName": {
    "original": "native BlzSetItemName takes item whichItem, string name returns nothing",
    "name": "BlzSetItemName",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "string",
      "name": "name",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetItemName(whichItem, name)",
    "documentation": "设置物品名字"
  },
  "BlzSetItemDescription": {
    "original": "native BlzSetItemDescription takes item whichItem, string name returns nothing",
    "name": "BlzSetItemDescription",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "string",
      "name": "name",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetItemDescription(whichItem, name)",
    "documentation": "设置物品介绍"
  },
  "BlzGetItemDescription": {
    "original": "native BlzGetItemDescription takes item whichItem returns string",
    "name": "BlzGetItemDescription",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "BlzGetItemDescription(whichItem)",
    "documentation": "物品介绍"
  },
  "BlzSetItemTooltip": {
    "original": "native BlzSetItemTooltip takes item whichItem, string name returns nothing",
    "name": "BlzSetItemTooltip",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "string",
      "name": "name",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetItemTooltip(whichItem, name)",
    "documentation": "设置物品提示"
  },
  "BlzGetItemTooltip": {
    "original": "native BlzGetItemTooltip takes item whichItem returns string",
    "name": "BlzGetItemTooltip",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "BlzGetItemTooltip(whichItem)",
    "documentation": "物品提示信息"
  },
  "BlzSetItemExtendedTooltip": {
    "original": "native BlzSetItemExtendedTooltip takes item whichItem, string name returns nothing",
    "name": "BlzSetItemExtendedTooltip",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "string",
      "name": "name",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetItemExtendedTooltip(whichItem, name)",
    "documentation": "设置物品扩展提示"
  },
  "BlzGetItemExtendedTooltip": {
    "original": "native BlzGetItemExtendedTooltip takes item whichItem returns string",
    "name": "BlzGetItemExtendedTooltip",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "BlzGetItemExtendedTooltip(whichItem)",
    "documentation": "物品扩展提示信息"
  },
  "BlzSetItemIconPath": {
    "original": "native BlzSetItemIconPath takes item whichItem, string name returns nothing",
    "name": "BlzSetItemIconPath",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "string",
      "name": "name",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetItemIconPath(whichItem, name)",
    "documentation": "设置物品图标路径"
  },
  "BlzGetItemIconPath": {
    "original": "native BlzGetItemIconPath takes item whichItem returns string",
    "name": "BlzGetItemIconPath",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "BlzGetItemIconPath(whichItem)",
    "documentation": "物品图标"
  },
  "BlzSetUnitName": {
    "original": "native BlzSetUnitName takes unit whichUnit, string name returns nothing",
    "name": "BlzSetUnitName",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "string",
      "name": "name",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetUnitName(whichUnit, name)",
    "documentation": "设置单位名字"
  },
  "BlzSetHeroProperName": {
    "original": "native BlzSetHeroProperName takes unit whichUnit, string name returns nothing",
    "name": "BlzSetHeroProperName",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "string",
      "name": "name",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetHeroProperName(whichUnit, name)",
    "documentation": "设置英雄称谓"
  },
  "BlzGetUnitBaseDamage": {
    "original": "native BlzGetUnitBaseDamage takes unit whichUnit, integer weaponIndex returns integer",
    "name": "BlzGetUnitBaseDamage",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "weaponIndex",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "BlzGetUnitBaseDamage(whichUnit, weaponIndex)",
    "documentation": "获取单位基础伤害"
  },
  "BlzSetUnitBaseDamage": {
    "original": "native BlzSetUnitBaseDamage takes unit whichUnit, integer baseDamage, integer weaponIndex returns nothing",
    "name": "BlzSetUnitBaseDamage",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "baseDamage",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "weaponIndex",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetUnitBaseDamage(whichUnit, baseDamage, weaponIndex)",
    "documentation": "设置基础伤害"
  },
  "BlzGetUnitDiceNumber": {
    "original": "native BlzGetUnitDiceNumber takes unit whichUnit, integer weaponIndex returns integer",
    "name": "BlzGetUnitDiceNumber",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "weaponIndex",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "BlzGetUnitDiceNumber(whichUnit, weaponIndex)",
    "documentation": "获取单位骰子数量"
  },
  "BlzSetUnitDiceNumber": {
    "original": "native BlzSetUnitDiceNumber takes unit whichUnit, integer diceNumber, integer weaponIndex returns nothing",
    "name": "BlzSetUnitDiceNumber",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "diceNumber",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "weaponIndex",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetUnitDiceNumber(whichUnit, diceNumber, weaponIndex)",
    "documentation": "设置单位骰子数"
  },
  "BlzGetUnitDiceSides": {
    "original": "native BlzGetUnitDiceSides takes unit whichUnit, integer weaponIndex returns integer",
    "name": "BlzGetUnitDiceSides",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "weaponIndex",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "BlzGetUnitDiceSides(whichUnit, weaponIndex)",
    "documentation": "获取单位骰子面数"
  },
  "BlzSetUnitDiceSides": {
    "original": "native BlzSetUnitDiceSides takes unit whichUnit, integer diceSides, integer weaponIndex returns nothing",
    "name": "BlzSetUnitDiceSides",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "diceSides",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "weaponIndex",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetUnitDiceSides(whichUnit, diceSides, weaponIndex)",
    "documentation": "设置骰子面数"
  },
  "BlzGetUnitAttackCooldown": {
    "original": "native BlzGetUnitAttackCooldown takes unit whichUnit, integer weaponIndex returns real",
    "name": "BlzGetUnitAttackCooldown",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "weaponIndex",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "BlzGetUnitAttackCooldown(whichUnit, weaponIndex)",
    "documentation": "攻击间隔"
  },
  "BlzSetUnitAttackCooldown": {
    "original": "native BlzSetUnitAttackCooldown takes unit whichUnit, real cooldown, integer weaponIndex returns nothing",
    "name": "BlzSetUnitAttackCooldown",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "cooldown",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "weaponIndex",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetUnitAttackCooldown(whichUnit, cooldown, weaponIndex)",
    "documentation": "设置攻击间隔"
  },
  "BlzSetSpecialEffectColorByPlayer": {
    "original": "native BlzSetSpecialEffectColorByPlayer takes effect whichEffect, player whichPlayer returns nothing",
    "name": "BlzSetSpecialEffectColorByPlayer",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "effect",
      "name": "whichEffect",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetSpecialEffectColorByPlayer(whichEffect, whichPlayer)",
    "documentation": "按玩家设置特效颜色"
  },
  "BlzSetSpecialEffectColor": {
    "original": "native BlzSetSpecialEffectColor takes effect whichEffect, integer r, integer g, integer b returns nothing",
    "name": "BlzSetSpecialEffectColor",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "effect",
      "name": "whichEffect",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "r",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "g",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "b",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetSpecialEffectColor(whichEffect, r, g, b)",
    "documentation": "设置特效颜色"
  },
  "BlzSetSpecialEffectAlpha": {
    "original": "native BlzSetSpecialEffectAlpha takes effect whichEffect, integer alpha returns nothing",
    "name": "BlzSetSpecialEffectAlpha",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "effect",
      "name": "whichEffect",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "alpha",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetSpecialEffectAlpha(whichEffect, alpha)",
    "documentation": "设置特效透明度"
  },
  "BlzSetSpecialEffectScale": {
    "original": "native BlzSetSpecialEffectScale takes effect whichEffect, real scale returns nothing",
    "name": "BlzSetSpecialEffectScale",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "effect",
      "name": "whichEffect",
      "documentation": ""
    }, {
      "type": "real",
      "name": "scale",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetSpecialEffectScale(whichEffect, scale)",
    "documentation": "设置特效缩放"
  },
  "BlzSetSpecialEffectPosition": {
    "original": "native BlzSetSpecialEffectPosition takes effect whichEffect, real x, real y, real z returns nothing",
    "name": "BlzSetSpecialEffectPosition",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "effect",
      "name": "whichEffect",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "z",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetSpecialEffectPosition(whichEffect, x, y, z)",
    "documentation": "设置特效坐标"
  },
  "BlzSetSpecialEffectHeight": {
    "original": "native BlzSetSpecialEffectHeight takes effect whichEffect, real height returns nothing",
    "name": "BlzSetSpecialEffectHeight",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "effect",
      "name": "whichEffect",
      "documentation": ""
    }, {
      "type": "real",
      "name": "height",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetSpecialEffectHeight(whichEffect, height)",
    "documentation": "设置特效高度"
  },
  "BlzSetSpecialEffectTimeScale": {
    "original": "native BlzSetSpecialEffectTimeScale takes effect whichEffect, real timeScale returns nothing",
    "name": "BlzSetSpecialEffectTimeScale",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "effect",
      "name": "whichEffect",
      "documentation": ""
    }, {
      "type": "real",
      "name": "timeScale",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetSpecialEffectTimeScale(whichEffect, timeScale)",
    "documentation": "设置特效时间比例"
  },
  "BlzSetSpecialEffectTime": {
    "original": "native BlzSetSpecialEffectTime takes effect whichEffect, real time returns nothing",
    "name": "BlzSetSpecialEffectTime",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "effect",
      "name": "whichEffect",
      "documentation": ""
    }, {
      "type": "real",
      "name": "time",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetSpecialEffectTime(whichEffect, time)",
    "documentation": "设置特效时间"
  },
  "BlzSetSpecialEffectOrientation": {
    "original": "native BlzSetSpecialEffectOrientation takes effect whichEffect, real yaw, real pitch, real roll returns nothing",
    "name": "BlzSetSpecialEffectOrientation",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "effect",
      "name": "whichEffect",
      "documentation": ""
    }, {
      "type": "real",
      "name": "yaw",
      "documentation": ""
    }, {
      "type": "real",
      "name": "pitch",
      "documentation": ""
    }, {
      "type": "real",
      "name": "roll",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetSpecialEffectOrientation(whichEffect, yaw, pitch, roll)",
    "documentation": "设置特效朝向"
  },
  "BlzSetSpecialEffectYaw": {
    "original": "native BlzSetSpecialEffectYaw takes effect whichEffect, real yaw returns nothing",
    "name": "BlzSetSpecialEffectYaw",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "effect",
      "name": "whichEffect",
      "documentation": ""
    }, {
      "type": "real",
      "name": "yaw",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetSpecialEffectYaw(whichEffect, yaw)",
    "documentation": "设置特效横摇"
  },
  "BlzSetSpecialEffectPitch": {
    "original": "native BlzSetSpecialEffectPitch takes effect whichEffect, real pitch returns nothing",
    "name": "BlzSetSpecialEffectPitch",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "effect",
      "name": "whichEffect",
      "documentation": ""
    }, {
      "type": "real",
      "name": "pitch",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetSpecialEffectPitch(whichEffect, pitch)",
    "documentation": "设置特效纵摇"
  },
  "BlzSetSpecialEffectRoll": {
    "original": "native BlzSetSpecialEffectRoll takes effect whichEffect, real roll returns nothing",
    "name": "BlzSetSpecialEffectRoll",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "effect",
      "name": "whichEffect",
      "documentation": ""
    }, {
      "type": "real",
      "name": "roll",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetSpecialEffectRoll(whichEffect, roll)",
    "documentation": "设置特效滚摇"
  },
  "BlzSetSpecialEffectX": {
    "original": "native BlzSetSpecialEffectX takes effect whichEffect, real x returns nothing",
    "name": "BlzSetSpecialEffectX",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "effect",
      "name": "whichEffect",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetSpecialEffectX(whichEffect, x)",
    "documentation": "设置特效X坐标"
  },
  "BlzSetSpecialEffectY": {
    "original": "native BlzSetSpecialEffectY takes effect whichEffect, real y returns nothing",
    "name": "BlzSetSpecialEffectY",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "effect",
      "name": "whichEffect",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetSpecialEffectY(whichEffect, y)",
    "documentation": "设置特效Y坐标"
  },
  "BlzSetSpecialEffectZ": {
    "original": "native BlzSetSpecialEffectZ takes effect whichEffect, real z returns nothing",
    "name": "BlzSetSpecialEffectZ",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "effect",
      "name": "whichEffect",
      "documentation": ""
    }, {
      "type": "real",
      "name": "z",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetSpecialEffectZ(whichEffect, z)",
    "documentation": "设置特效Z坐标"
  },
  "BlzSetSpecialEffectPositionLoc": {
    "original": "native BlzSetSpecialEffectPositionLoc takes effect whichEffect, location loc returns nothing",
    "name": "BlzSetSpecialEffectPositionLoc",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "effect",
      "name": "whichEffect",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetSpecialEffectPositionLoc(whichEffect, loc)",
    "documentation": "设置特效点"
  },
  "BlzGetLocalSpecialEffectX": {
    "original": "native BlzGetLocalSpecialEffectX takes effect whichEffect returns real",
    "name": "BlzGetLocalSpecialEffectX",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "effect",
      "name": "whichEffect",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "BlzGetLocalSpecialEffectX(whichEffect)",
    "documentation": "特效位置 - X"
  },
  "BlzGetLocalSpecialEffectY": {
    "original": "native BlzGetLocalSpecialEffectY takes effect whichEffect returns real",
    "name": "BlzGetLocalSpecialEffectY",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "effect",
      "name": "whichEffect",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "BlzGetLocalSpecialEffectY(whichEffect)",
    "documentation": "特效位置 - Y"
  },
  "BlzGetLocalSpecialEffectZ": {
    "original": "native BlzGetLocalSpecialEffectZ takes effect whichEffect returns real",
    "name": "BlzGetLocalSpecialEffectZ",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "effect",
      "name": "whichEffect",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "BlzGetLocalSpecialEffectZ(whichEffect)",
    "documentation": "特效位置 - Z"
  },
  "BlzGetUnitArmor": {
    "original": "native BlzGetUnitArmor takes unit whichUnit returns real",
    "name": "BlzGetUnitArmor",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "BlzGetUnitArmor(whichUnit)",
    "documentation": "获取护甲"
  },
  "BlzSetUnitArmor": {
    "original": "native BlzSetUnitArmor takes unit whichUnit, real armorAmount returns nothing",
    "name": "BlzSetUnitArmor",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "armorAmount",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetUnitArmor(whichUnit, armorAmount)",
    "documentation": "设置护甲"
  },
  "BlzUnitHideAbility": {
    "original": "native BlzUnitHideAbility takes unit whichUnit, integer abilId, boolean flag returns nothing",
    "name": "BlzUnitHideAbility",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "abilId",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzUnitHideAbility(whichUnit, abilId, flag)",
    "documentation": "隐藏技能"
  },
  "BlzUnitDisableAbility": {
    "original": "native BlzUnitDisableAbility takes unit whichUnit, integer abilId, boolean flag, boolean hideUI returns nothing",
    "name": "BlzUnitDisableAbility",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "abilId",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "hideUI",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzUnitDisableAbility(whichUnit, abilId, flag, hideUI)",
    "documentation": "禁用技能"
  },
  "BlzUnitCancelTimedLife": {
    "original": "native BlzUnitCancelTimedLife takes unit whichUnit returns nothing",
    "name": "BlzUnitCancelTimedLife",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzUnitCancelTimedLife(whichUnit)",
    "documentation": "取消限时生命"
  },
  "BlzIsUnitSelectable": {
    "original": "native BlzIsUnitSelectable takes unit whichUnit returns boolean",
    "name": "BlzIsUnitSelectable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "BlzIsUnitSelectable(whichUnit)",
    "documentation": "单位能被选择"
  },
  "BlzIsUnitInvulnerable": {
    "original": "native BlzIsUnitInvulnerable takes unit whichUnit returns boolean",
    "name": "BlzIsUnitInvulnerable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "BlzIsUnitInvulnerable(whichUnit)",
    "documentation": "单位是无敌的"
  },
  "BlzUnitInterruptAttack": {
    "original": "native BlzUnitInterruptAttack takes unit whichUnit returns nothing",
    "name": "BlzUnitInterruptAttack",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzUnitInterruptAttack(whichUnit)",
    "documentation": "打断攻击"
  },
  "BlzGetUnitCollisionSize": {
    "original": "native BlzGetUnitCollisionSize takes unit whichUnit returns real",
    "name": "BlzGetUnitCollisionSize",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "BlzGetUnitCollisionSize(whichUnit)",
    "documentation": "碰撞体积"
  },
  "BlzGetAbilityManaCost": {
    "original": "native BlzGetAbilityManaCost takes integer abilId, integer level returns integer",
    "name": "BlzGetAbilityManaCost",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilId",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "level",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "BlzGetAbilityManaCost(abilId, level)",
    "documentation": "技能魔法消耗"
  },
  "BlzGetAbilityCooldown": {
    "original": "native BlzGetAbilityCooldown takes integer abilId, integer level returns real",
    "name": "BlzGetAbilityCooldown",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "abilId",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "level",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "BlzGetAbilityCooldown(abilId, level)",
    "documentation": "技能冷却时间"
  },
  "BlzSetUnitAbilityCooldown": {
    "original": "native BlzSetUnitAbilityCooldown takes unit whichUnit, integer abilId, integer level, real cooldown returns nothing",
    "name": "BlzSetUnitAbilityCooldown",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "abilId",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "level",
      "documentation": ""
    }, {
      "type": "real",
      "name": "cooldown",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetUnitAbilityCooldown(whichUnit, abilId, level, cooldown)",
    "documentation": "设置技能冷却时间"
  },
  "BlzGetUnitAbilityCooldown": {
    "original": "native BlzGetUnitAbilityCooldown takes unit whichUnit, integer abilId, integer level returns real",
    "name": "BlzGetUnitAbilityCooldown",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "abilId",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "level",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "BlzGetUnitAbilityCooldown(whichUnit, abilId, level)",
    "documentation": "单位的技能冷却时间"
  },
  "BlzGetUnitAbilityCooldownRemaining": {
    "original": "native BlzGetUnitAbilityCooldownRemaining takes unit whichUnit, integer abilId returns real",
    "name": "BlzGetUnitAbilityCooldownRemaining",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "abilId",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "BlzGetUnitAbilityCooldownRemaining(whichUnit, abilId)",
    "documentation": "单位技能的剩余冷却时间"
  },
  "BlzEndUnitAbilityCooldown": {
    "original": "native BlzEndUnitAbilityCooldown takes unit whichUnit, integer abilCode returns nothing",
    "name": "BlzEndUnitAbilityCooldown",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "abilCode",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzEndUnitAbilityCooldown(whichUnit, abilCode)",
    "documentation": "重设技能冷却"
  },
  "BlzGetUnitAbilityManaCost": {
    "original": "native BlzGetUnitAbilityManaCost takes unit whichUnit, integer abilId, integer level returns integer",
    "name": "BlzGetUnitAbilityManaCost",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "abilId",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "level",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "BlzGetUnitAbilityManaCost(whichUnit, abilId, level)",
    "documentation": "单位技能魔法消耗"
  },
  "BlzSetUnitAbilityManaCost": {
    "original": "native BlzSetUnitAbilityManaCost takes unit whichUnit, integer abilId, integer level, integer manaCost returns nothing",
    "name": "BlzSetUnitAbilityManaCost",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "abilId",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "level",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "manaCost",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetUnitAbilityManaCost(whichUnit, abilId, level, manaCost)",
    "documentation": "设置单位技能法力消耗"
  },
  "BlzGetLocalUnitZ": {
    "original": "native BlzGetLocalUnitZ takes unit whichUnit returns real ",
    "name": "BlzGetLocalUnitZ",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "BlzGetLocalUnitZ(whichUnit)",
    "documentation": "获取本地单位Z坐标"
  },
  "BlzDecPlayerTechResearched": {
    "original": "native BlzDecPlayerTechResearched takes player whichPlayer, integer techid, integer levels returns nothing",
    "name": "BlzDecPlayerTechResearched",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "techid",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "levels",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzDecPlayerTechResearched(whichPlayer, techid, levels)",
    "documentation": "降低玩家科技"
  },
  "BlzSetEventDamage": {
    "original": "native BlzSetEventDamage takes real damage returns nothing",
    "name": "BlzSetEventDamage",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "damage",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BlzSetEventDamage(damage)",
    "documentation": "设置单位伤害事件的伤害"
  },
  "BJDebugMsg": {
    "original": "function BJDebugMsg takes string msg returns nothing",
    "name": "BJDebugMsg",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "msg",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BJDebugMsg(msg)",
    "documentation": "显示Debug信息: ,~文字"
  },
  "RMinBJ": {
    "original": "function RMinBJ takes real a, real b returns real",
    "name": "RMinBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "a",
      "documentation": ""
    }, {
      "type": "real",
      "name": "b",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "RMinBJ(a, b)",
    "documentation": "最小值"
  },
  "RMaxBJ": {
    "original": "function RMaxBJ takes real a, real b returns real",
    "name": "RMaxBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "a",
      "documentation": ""
    }, {
      "type": "real",
      "name": "b",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "RMaxBJ(a, b)",
    "documentation": "最大值"
  },
  "RAbsBJ": {
    "original": "function RAbsBJ takes real a returns real",
    "name": "RAbsBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "a",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "RAbsBJ(a)",
    "documentation": "绝对值Abs"
  },
  "RSignBJ": {
    "original": "function RSignBJ takes real a returns real",
    "name": "RSignBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "a",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "RSignBJ(a)",
    "documentation": "标记"
  },
  "IMinBJ": {
    "original": "function IMinBJ takes integer a, integer b returns integer",
    "name": "IMinBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "a",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "b",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "IMinBJ(a, b)",
    "documentation": "取最小值"
  },
  "IMaxBJ": {
    "original": "function IMaxBJ takes integer a, integer b returns integer",
    "name": "IMaxBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "a",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "b",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "IMaxBJ(a, b)",
    "documentation": "取最大值"
  },
  "IAbsBJ": {
    "original": "function IAbsBJ takes integer a returns integer",
    "name": "IAbsBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "a",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "IAbsBJ(a)",
    "documentation": "绝对值Abs"
  },
  "ISignBJ": {
    "original": "function ISignBJ takes integer a returns integer",
    "name": "ISignBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "a",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "ISignBJ(a)",
    "documentation": "标记"
  },
  "SinBJ": {
    "original": "function SinBJ takes real degrees returns real",
    "name": "SinBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "degrees",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "SinBJ(degrees)",
    "documentation": "正弦"
  },
  "CosBJ": {
    "original": "function CosBJ takes real degrees returns real",
    "name": "CosBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "degrees",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "CosBJ(degrees)",
    "documentation": "余弦"
  },
  "TanBJ": {
    "original": "function TanBJ takes real degrees returns real",
    "name": "TanBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "degrees",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "TanBJ(degrees)",
    "documentation": "正切"
  },
  "AsinBJ": {
    "original": "function AsinBJ takes real degrees returns real",
    "name": "AsinBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "degrees",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "AsinBJ(degrees)",
    "documentation": "反正弦"
  },
  "AcosBJ": {
    "original": "function AcosBJ takes real degrees returns real",
    "name": "AcosBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "degrees",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "AcosBJ(degrees)",
    "documentation": "反余弦"
  },
  "AtanBJ": {
    "original": "function AtanBJ takes real degrees returns real",
    "name": "AtanBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "degrees",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "AtanBJ(degrees)",
    "documentation": "反正切 (From Angle)"
  },
  "Atan2BJ": {
    "original": "function Atan2BJ takes real y, real x returns real",
    "name": "Atan2BJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "Atan2BJ(y, x)",
    "documentation": "和正半轴角度"
  },
  "AngleBetweenPoints": {
    "original": "function AngleBetweenPoints takes location locA, location locB returns real",
    "name": "AngleBetweenPoints",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "location",
      "name": "locA",
      "documentation": ""
    }, {
      "type": "location",
      "name": "locB",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "AngleBetweenPoints(locA, locB)",
    "documentation": "两个坐标之间的角度"
  },
  "DistanceBetweenPoints": {
    "original": "function DistanceBetweenPoints takes location locA, location locB returns real",
    "name": "DistanceBetweenPoints",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "location",
      "name": "locA",
      "documentation": ""
    }, {
      "type": "location",
      "name": "locB",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "DistanceBetweenPoints(locA, locB)",
    "documentation": "坐标之间的距离"
  },
  "PolarProjectionBJ": {
    "original": "function PolarProjectionBJ takes location source, real dist, real angle returns location",
    "name": "PolarProjectionBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "location",
      "name": "source",
      "documentation": ""
    }, {
      "type": "real",
      "name": "dist",
      "documentation": ""
    }, {
      "type": "real",
      "name": "angle",
      "documentation": ""
    }],
    "returnType": "location",
    "insertText": "PolarProjectionBJ(source, dist, angle)",
    "documentation": "点向方向 位移 "
  },
  "GetRandomDirectionDeg": {
    "original": "function GetRandomDirectionDeg takes nothing returns real",
    "name": "GetRandomDirectionDeg",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "real",
    "insertText": "GetRandomDirectionDeg()",
    "documentation": "随机角度"
  },
  "GetRandomPercentageBJ": {
    "original": "function GetRandomPercentageBJ takes nothing returns real",
    "name": "GetRandomPercentageBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "real",
    "insertText": "GetRandomPercentageBJ()",
    "documentation": "随机百分数"
  },
  "GetRandomLocInRect": {
    "original": "function GetRandomLocInRect takes rect whichRect returns location",
    "name": "GetRandomLocInRect",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "rect",
      "name": "whichRect",
      "documentation": ""
    }],
    "returnType": "location",
    "insertText": "GetRandomLocInRect(whichRect)",
    "documentation": "区域内的随机地点"
  },
  "ModuloInteger": {
    "original": "function ModuloInteger takes integer dividend, integer divisor returns integer",
    "name": "ModuloInteger",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "dividend",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "divisor",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "ModuloInteger(dividend, divisor)",
    "documentation": "取余数"
  },
  "ModuloReal": {
    "original": "function ModuloReal takes real dividend, real divisor returns real",
    "name": "ModuloReal",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "dividend",
      "documentation": ""
    }, {
      "type": "real",
      "name": "divisor",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "ModuloReal(dividend, divisor)",
    "documentation": "取余数"
  },
  "OffsetLocation": {
    "original": "function OffsetLocation takes location loc, real dx, real dy returns location",
    "name": "OffsetLocation",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "location",
      "name": "loc",
      "documentation": ""
    }, {
      "type": "real",
      "name": "dx",
      "documentation": ""
    }, {
      "type": "real",
      "name": "dy",
      "documentation": ""
    }],
    "returnType": "location",
    "insertText": "OffsetLocation(loc, dx, dy)",
    "documentation": "点的坐标"
  },
  "OffsetRectBJ": {
    "original": "function OffsetRectBJ takes rect r, real dx, real dy returns rect",
    "name": "OffsetRectBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "rect",
      "name": "r",
      "documentation": ""
    }, {
      "type": "real",
      "name": "dx",
      "documentation": ""
    }, {
      "type": "real",
      "name": "dy",
      "documentation": ""
    }],
    "returnType": "rect",
    "insertText": "OffsetRectBJ(r, dx, dy)",
    "documentation": "区域位移"
  },
  "RectFromCenterSizeBJ": {
    "original": "function RectFromCenterSizeBJ takes location center, real width, real height returns rect",
    "name": "RectFromCenterSizeBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "location",
      "name": "center",
      "documentation": ""
    }, {
      "type": "real",
      "name": "width",
      "documentation": ""
    }, {
      "type": "real",
      "name": "height",
      "documentation": ""
    }],
    "returnType": "rect",
    "insertText": "RectFromCenterSizeBJ(center, width, height)",
    "documentation": "将点,大小转换为区域"
  },
  "RectContainsCoords": {
    "original": "function RectContainsCoords takes rect r, real x, real y returns boolean",
    "name": "RectContainsCoords",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "rect",
      "name": "r",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "RectContainsCoords(r, x, y)",
    "documentation": ""
  },
  "RectContainsLoc": {
    "original": "function RectContainsLoc takes rect r, location loc returns boolean",
    "name": "RectContainsLoc",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "rect",
      "name": "r",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "RectContainsLoc(r, loc)",
    "documentation": "区域包含点"
  },
  "RectContainsUnit": {
    "original": "function RectContainsUnit takes rect r, unit whichUnit returns boolean",
    "name": "RectContainsUnit",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "rect",
      "name": "r",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "RectContainsUnit(r, whichUnit)",
    "documentation": "单位在区域"
  },
  "RectContainsItem": {
    "original": "function RectContainsItem takes item whichItem, rect r returns boolean",
    "name": "RectContainsItem",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "rect",
      "name": "r",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "RectContainsItem(whichItem, r)",
    "documentation": "物品在区域"
  },
  "ConditionalTriggerExecute": {
    "original": "function ConditionalTriggerExecute takes trigger trig returns nothing",
    "name": "ConditionalTriggerExecute",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ConditionalTriggerExecute(trig)",
    "documentation": "运行触发器 (检查条件)"
  },
  "TriggerExecuteBJ": {
    "original": "function TriggerExecuteBJ takes trigger trig, boolean checkConditions returns boolean",
    "name": "TriggerExecuteBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "checkConditions",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "TriggerExecuteBJ(trig, checkConditions)",
    "documentation": ""
  },
  "PostTriggerExecuteBJ": {
    "original": "function PostTriggerExecuteBJ takes trigger trig, boolean checkConditions returns boolean",
    "name": "PostTriggerExecuteBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "checkConditions",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "PostTriggerExecuteBJ(trig, checkConditions)",
    "documentation": ""
  },
  "QueuedTriggerCheck": {
    "original": "function QueuedTriggerCheck takes nothing returns nothing",
    "name": "QueuedTriggerCheck",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "QueuedTriggerCheck()",
    "documentation": ""
  },
  "QueuedTriggerGetIndex": {
    "original": "function QueuedTriggerGetIndex takes trigger trig returns integer",
    "name": "QueuedTriggerGetIndex",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "QueuedTriggerGetIndex(trig)",
    "documentation": ""
  },
  "QueuedTriggerRemoveByIndex": {
    "original": "function QueuedTriggerRemoveByIndex takes integer trigIndex returns boolean",
    "name": "QueuedTriggerRemoveByIndex",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "trigIndex",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "QueuedTriggerRemoveByIndex(trigIndex)",
    "documentation": ""
  },
  "QueuedTriggerAttemptExec": {
    "original": "function QueuedTriggerAttemptExec takes nothing returns boolean",
    "name": "QueuedTriggerAttemptExec",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "boolean",
    "insertText": "QueuedTriggerAttemptExec()",
    "documentation": ""
  },
  "QueuedTriggerAddBJ": {
    "original": "function QueuedTriggerAddBJ takes trigger trig, boolean checkConditions returns boolean",
    "name": "QueuedTriggerAddBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "checkConditions",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "QueuedTriggerAddBJ(trig, checkConditions)",
    "documentation": "增加到触发器队列"
  },
  "QueuedTriggerRemoveBJ": {
    "original": "function QueuedTriggerRemoveBJ takes trigger trig returns nothing",
    "name": "QueuedTriggerRemoveBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "QueuedTriggerRemoveBJ(trig)",
    "documentation": "清除触发器队列"
  },
  "QueuedTriggerDoneBJ": {
    "original": "function QueuedTriggerDoneBJ takes nothing returns nothing",
    "name": "QueuedTriggerDoneBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "QueuedTriggerDoneBJ()",
    "documentation": ""
  },
  "QueuedTriggerClearBJ": {
    "original": "function QueuedTriggerClearBJ takes nothing returns nothing",
    "name": "QueuedTriggerClearBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "QueuedTriggerClearBJ()",
    "documentation": "清除触发器所有队列"
  },
  "QueuedTriggerClearInactiveBJ": {
    "original": "function QueuedTriggerClearInactiveBJ takes nothing returns nothing",
    "name": "QueuedTriggerClearInactiveBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "QueuedTriggerClearInactiveBJ()",
    "documentation": "清除触发器队列中未执行任务"
  },
  "QueuedTriggerCountBJ": {
    "original": "function QueuedTriggerCountBJ takes nothing returns integer",
    "name": "QueuedTriggerCountBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "integer",
    "insertText": "QueuedTriggerCountBJ()",
    "documentation": "触发器队列中触发器的数量"
  },
  "IsTriggerQueueEmptyBJ": {
    "original": "function IsTriggerQueueEmptyBJ takes nothing returns boolean",
    "name": "IsTriggerQueueEmptyBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "boolean",
    "insertText": "IsTriggerQueueEmptyBJ()",
    "documentation": "触发器队列是空的"
  },
  "IsTriggerQueuedBJ": {
    "original": "function IsTriggerQueuedBJ takes trigger trig returns boolean",
    "name": "IsTriggerQueuedBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsTriggerQueuedBJ(trig)",
    "documentation": "触发器在队列中"
  },
  "GetForLoopIndexA": {
    "original": "function GetForLoopIndexA takes nothing returns integer",
    "name": "GetForLoopIndexA",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "integer",
    "insertText": "GetForLoopIndexA()",
    "documentation": "循环整数 A"
  },
  "SetForLoopIndexA": {
    "original": "function SetForLoopIndexA takes integer newIndex returns nothing",
    "name": "SetForLoopIndexA",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "newIndex",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetForLoopIndexA(newIndex)",
    "documentation": "设置循环整数A的值为 ,~数值"
  },
  "GetForLoopIndexB": {
    "original": "function GetForLoopIndexB takes nothing returns integer",
    "name": "GetForLoopIndexB",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "integer",
    "insertText": "GetForLoopIndexB()",
    "documentation": "循环整数 B"
  },
  "SetForLoopIndexB": {
    "original": "function SetForLoopIndexB takes integer newIndex returns nothing",
    "name": "SetForLoopIndexB",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "newIndex",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetForLoopIndexB(newIndex)",
    "documentation": "设置循环整数B的值为 ,~数值"
  },
  "PolledWait": {
    "original": "function PolledWait takes real duration returns nothing",
    "name": "PolledWait",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PolledWait(duration)",
    "documentation": "等待 (游戏时间)"
  },
  "IntegerTertiaryOp": {
    "original": "function IntegerTertiaryOp takes boolean flag, integer valueA, integer valueB returns integer",
    "name": "IntegerTertiaryOp",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "valueA",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "valueB",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "IntegerTertiaryOp(flag, valueA, valueB)",
    "documentation": ""
  },
  "DoNothing": {
    "original": "function DoNothing takes nothing returns nothing",
    "name": "DoNothing",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "DoNothing()",
    "documentation": "不做任何动作"
  },
  "CommentString": {
    "original": "function CommentString takes string commentString returns nothing",
    "name": "CommentString",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "commentString",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CommentString(commentString)",
    "documentation": "注释"
  },
  "StringIdentity": {
    "original": "function StringIdentity takes string theString returns string",
    "name": "StringIdentity",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "theString",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "StringIdentity(theString)",
    "documentation": "格式化字串符"
  },
  "GetBooleanAnd": {
    "original": "function GetBooleanAnd takes boolean valueA, boolean valueB returns boolean",
    "name": "GetBooleanAnd",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "valueA",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "valueB",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "GetBooleanAnd(valueA, valueB)",
    "documentation": "条件A和条件B    比较"
  },
  "GetBooleanOr": {
    "original": "function GetBooleanOr takes boolean valueA, boolean valueB returns boolean",
    "name": "GetBooleanOr",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "valueA",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "valueB",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "GetBooleanOr(valueA, valueB)",
    "documentation": "条件A或条件B    比较"
  },
  "PercentToInt": {
    "original": "function PercentToInt takes real percentage, integer max returns integer",
    "name": "PercentToInt",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "percentage",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "max",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "PercentToInt(percentage, max)",
    "documentation": ""
  },
  "PercentTo255": {
    "original": "function PercentTo255 takes real percentage returns integer",
    "name": "PercentTo255",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "percentage",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "PercentTo255(percentage)",
    "documentation": ""
  },
  "GetTimeOfDay": {
    "original": "function GetTimeOfDay takes nothing returns real",
    "name": "GetTimeOfDay",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "real",
    "insertText": "GetTimeOfDay()",
    "documentation": "游戏当前的时间"
  },
  "SetTimeOfDay": {
    "original": "function SetTimeOfDay takes real whatTime returns nothing",
    "name": "SetTimeOfDay",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "whatTime",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTimeOfDay(whatTime)",
    "documentation": "设置游戏的时间"
  },
  "SetTimeOfDayScalePercentBJ": {
    "original": "function SetTimeOfDayScalePercentBJ takes real scalePercent returns nothing",
    "name": "SetTimeOfDayScalePercentBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "scalePercent",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTimeOfDayScalePercentBJ(scalePercent)",
    "documentation": "设置时间流逝速度"
  },
  "GetTimeOfDayScalePercentBJ": {
    "original": "function GetTimeOfDayScalePercentBJ takes nothing returns real",
    "name": "GetTimeOfDayScalePercentBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "real",
    "insertText": "GetTimeOfDayScalePercentBJ()",
    "documentation": "游戏时间的速度"
  },
  "PlaySound": {
    "original": "function PlaySound takes string soundName returns nothing",
    "name": "PlaySound",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "soundName",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PlaySound(soundName)",
    "documentation": ""
  },
  "CompareLocationsBJ": {
    "original": "function CompareLocationsBJ takes location A, location B returns boolean",
    "name": "CompareLocationsBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "location",
      "name": "A",
      "documentation": ""
    }, {
      "type": "location",
      "name": "B",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "CompareLocationsBJ(A, B)",
    "documentation": ""
  },
  "CompareRectsBJ": {
    "original": "function CompareRectsBJ takes rect A, rect B returns boolean",
    "name": "CompareRectsBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "rect",
      "name": "A",
      "documentation": ""
    }, {
      "type": "rect",
      "name": "B",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "CompareRectsBJ(A, B)",
    "documentation": ""
  },
  "GetRectFromCircleBJ": {
    "original": "function GetRectFromCircleBJ takes location center, real radius returns rect",
    "name": "GetRectFromCircleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "location",
      "name": "center",
      "documentation": ""
    }, {
      "type": "real",
      "name": "radius",
      "documentation": ""
    }],
    "returnType": "rect",
    "insertText": "GetRectFromCircleBJ(center, radius)",
    "documentation": ""
  },
  "GetCurrentCameraSetup": {
    "original": "function GetCurrentCameraSetup takes nothing returns camerasetup",
    "name": "GetCurrentCameraSetup",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "camerasetup",
    "insertText": "GetCurrentCameraSetup()",
    "documentation": "当前的视角"
  },
  "CameraSetupApplyForPlayer": {
    "original": "function CameraSetupApplyForPlayer takes boolean doPan, camerasetup whichSetup, player whichPlayer, real duration returns nothing",
    "name": "CameraSetupApplyForPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "doPan",
      "documentation": ""
    }, {
      "type": "camerasetup",
      "name": "whichSetup",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CameraSetupApplyForPlayer(doPan, whichSetup, whichPlayer, duration)",
    "documentation": "应用摄像机 (限时)"
  },
  "CameraSetupGetFieldSwap": {
    "original": "function CameraSetupGetFieldSwap takes camerafield whichField, camerasetup whichSetup returns real",
    "name": "CameraSetupGetFieldSwap",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "camerafield",
      "name": "whichField",
      "documentation": ""
    }, {
      "type": "camerasetup",
      "name": "whichSetup",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "CameraSetupGetFieldSwap(whichField, whichSetup)",
    "documentation": "摄像机的数值"
  },
  "SetCameraFieldForPlayer": {
    "original": "function SetCameraFieldForPlayer takes player whichPlayer, camerafield whichField, real value, real duration returns nothing",
    "name": "SetCameraFieldForPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "camerafield",
      "name": "whichField",
      "documentation": ""
    }, {
      "type": "real",
      "name": "value",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCameraFieldForPlayer(whichPlayer, whichField, value, duration)",
    "documentation": "设定摄像机属性 (限时)"
  },
  "SetCameraTargetControllerNoZForPlayer": {
    "original": "function SetCameraTargetControllerNoZForPlayer takes player whichPlayer, unit whichUnit, real xoffset, real yoffset, boolean inheritOrientation returns nothing",
    "name": "SetCameraTargetControllerNoZForPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "xoffset",
      "documentation": ""
    }, {
      "type": "real",
      "name": "yoffset",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "inheritOrientation",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCameraTargetControllerNoZForPlayer(whichPlayer, whichUnit, xoffset, yoffset, inheritOrientation)",
    "documentation": "锁定摄像机目标到单位"
  },
  "SetCameraPositionForPlayer": {
    "original": "function SetCameraPositionForPlayer takes player whichPlayer, real x, real y returns nothing",
    "name": "SetCameraPositionForPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCameraPositionForPlayer(whichPlayer, x, y)",
    "documentation": ""
  },
  "SetCameraPositionLocForPlayer": {
    "original": "function SetCameraPositionLocForPlayer takes player whichPlayer, location loc returns nothing",
    "name": "SetCameraPositionLocForPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCameraPositionLocForPlayer(whichPlayer, loc)",
    "documentation": ""
  },
  "RotateCameraAroundLocBJ": {
    "original": "function RotateCameraAroundLocBJ takes real degrees, location loc, player whichPlayer, real duration returns nothing",
    "name": "RotateCameraAroundLocBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "degrees",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RotateCameraAroundLocBJ(degrees, loc, whichPlayer, duration)",
    "documentation": "旋转摄像机 (限时)"
  },
  "PanCameraToForPlayer": {
    "original": "function PanCameraToForPlayer takes player whichPlayer, real x, real y returns nothing",
    "name": "PanCameraToForPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PanCameraToForPlayer(whichPlayer, x, y)",
    "documentation": ""
  },
  "PanCameraToLocForPlayer": {
    "original": "function PanCameraToLocForPlayer takes player whichPlayer, location loc returns nothing",
    "name": "PanCameraToLocForPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PanCameraToLocForPlayer(whichPlayer, loc)",
    "documentation": ""
  },
  "PanCameraToTimedForPlayer": {
    "original": "function PanCameraToTimedForPlayer takes player whichPlayer, real x, real y, real duration returns nothing",
    "name": "PanCameraToTimedForPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PanCameraToTimedForPlayer(whichPlayer, x, y, duration)",
    "documentation": ""
  },
  "PanCameraToTimedLocForPlayer": {
    "original": "function PanCameraToTimedLocForPlayer takes player whichPlayer, location loc, real duration returns nothing",
    "name": "PanCameraToTimedLocForPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PanCameraToTimedLocForPlayer(whichPlayer, loc, duration)",
    "documentation": "平移摄像机 (限时)"
  },
  "PanCameraToTimedLocWithZForPlayer": {
    "original": "function PanCameraToTimedLocWithZForPlayer takes player whichPlayer, location loc, real zOffset, real duration returns nothing",
    "name": "PanCameraToTimedLocWithZForPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }, {
      "type": "real",
      "name": "zOffset",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PanCameraToTimedLocWithZForPlayer(whichPlayer, loc, zOffset, duration)",
    "documentation": "在指定高度平移摄像机 (限时)"
  },
  "SmartCameraPanBJ": {
    "original": "function SmartCameraPanBJ takes player whichPlayer, location loc, real duration returns nothing",
    "name": "SmartCameraPanBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SmartCameraPanBJ(whichPlayer, loc, duration)",
    "documentation": "必要时平移摄像机 (限时)"
  },
  "SetCinematicCameraForPlayer": {
    "original": "function SetCinematicCameraForPlayer takes player whichPlayer, string cameraModelFile returns nothing",
    "name": "SetCinematicCameraForPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "cameraModelFile",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCinematicCameraForPlayer(whichPlayer, cameraModelFile)",
    "documentation": "播放动画摄像机"
  },
  "ResetToGameCameraForPlayer": {
    "original": "function ResetToGameCameraForPlayer takes player whichPlayer, real duration returns nothing",
    "name": "ResetToGameCameraForPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ResetToGameCameraForPlayer(whichPlayer, duration)",
    "documentation": "重置游戏摄像机"
  },
  "CameraSetSourceNoiseForPlayer": {
    "original": "function CameraSetSourceNoiseForPlayer takes player whichPlayer, real magnitude, real velocity returns nothing",
    "name": "CameraSetSourceNoiseForPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "real",
      "name": "magnitude",
      "documentation": ""
    }, {
      "type": "real",
      "name": "velocity",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CameraSetSourceNoiseForPlayer(whichPlayer, magnitude, velocity)",
    "documentation": "摇摆摄像机来源"
  },
  "CameraSetTargetNoiseForPlayer": {
    "original": "function CameraSetTargetNoiseForPlayer takes player whichPlayer, real magnitude, real velocity returns nothing",
    "name": "CameraSetTargetNoiseForPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "real",
      "name": "magnitude",
      "documentation": ""
    }, {
      "type": "real",
      "name": "velocity",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CameraSetTargetNoiseForPlayer(whichPlayer, magnitude, velocity)",
    "documentation": "摇摆摄像机目标"
  },
  "CameraSetEQNoiseForPlayer": {
    "original": "function CameraSetEQNoiseForPlayer takes player whichPlayer, real magnitude returns nothing",
    "name": "CameraSetEQNoiseForPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "real",
      "name": "magnitude",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CameraSetEQNoiseForPlayer(whichPlayer, magnitude)",
    "documentation": "摇动摄像机"
  },
  "CameraClearNoiseForPlayer": {
    "original": "function CameraClearNoiseForPlayer takes player whichPlayer returns nothing",
    "name": "CameraClearNoiseForPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CameraClearNoiseForPlayer(whichPlayer)",
    "documentation": "停止 摇摆/摇动 摄像机"
  },
  "GetCurrentCameraBoundsMapRectBJ": {
    "original": "function GetCurrentCameraBoundsMapRectBJ takes nothing returns rect",
    "name": "GetCurrentCameraBoundsMapRectBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "rect",
    "insertText": "GetCurrentCameraBoundsMapRectBJ()",
    "documentation": "当前的摄象机范围"
  },
  "GetCameraBoundsMapRect": {
    "original": "function GetCameraBoundsMapRect takes nothing returns rect",
    "name": "GetCameraBoundsMapRect",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "rect",
    "insertText": "GetCameraBoundsMapRect()",
    "documentation": "初始游戏时的摄象机范围"
  },
  "GetPlayableMapRect": {
    "original": "function GetPlayableMapRect takes nothing returns rect",
    "name": "GetPlayableMapRect",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "rect",
    "insertText": "GetPlayableMapRect()",
    "documentation": "可玩的地图区域"
  },
  "GetEntireMapRect": {
    "original": "function GetEntireMapRect takes nothing returns rect",
    "name": "GetEntireMapRect",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "rect",
    "insertText": "GetEntireMapRect()",
    "documentation": "全地图"
  },
  "SetCameraBoundsToRect": {
    "original": "function SetCameraBoundsToRect takes rect r returns nothing",
    "name": "SetCameraBoundsToRect",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "rect",
      "name": "r",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCameraBoundsToRect(r)",
    "documentation": ""
  },
  "SetCameraBoundsToRectForPlayerBJ": {
    "original": "function SetCameraBoundsToRectForPlayerBJ takes player whichPlayer, rect r returns nothing",
    "name": "SetCameraBoundsToRectForPlayerBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "rect",
      "name": "r",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCameraBoundsToRectForPlayerBJ(whichPlayer, r)",
    "documentation": "设置镜头范围"
  },
  "AdjustCameraBoundsBJ": {
    "original": "function AdjustCameraBoundsBJ takes integer adjustMethod, real dxWest, real dxEast, real dyNorth, real dySouth returns nothing",
    "name": "AdjustCameraBoundsBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "adjustMethod",
      "documentation": ""
    }, {
      "type": "real",
      "name": "dxWest",
      "documentation": ""
    }, {
      "type": "real",
      "name": "dxEast",
      "documentation": ""
    }, {
      "type": "real",
      "name": "dyNorth",
      "documentation": ""
    }, {
      "type": "real",
      "name": "dySouth",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "AdjustCameraBoundsBJ(adjustMethod, dxWest, dxEast, dyNorth, dySouth)",
    "documentation": ""
  },
  "AdjustCameraBoundsForPlayerBJ": {
    "original": "function AdjustCameraBoundsForPlayerBJ takes integer adjustMethod, player whichPlayer, real dxWest, real dxEast, real dyNorth, real dySouth returns nothing",
    "name": "AdjustCameraBoundsForPlayerBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "adjustMethod",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "real",
      "name": "dxWest",
      "documentation": ""
    }, {
      "type": "real",
      "name": "dxEast",
      "documentation": ""
    }, {
      "type": "real",
      "name": "dyNorth",
      "documentation": ""
    }, {
      "type": "real",
      "name": "dySouth",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "AdjustCameraBoundsForPlayerBJ(adjustMethod, whichPlayer, dxWest, dxEast, dyNorth, dySouth)",
    "documentation": "扩展/收缩摄像绑定"
  },
  "SetCameraQuickPositionForPlayer": {
    "original": "function SetCameraQuickPositionForPlayer takes player whichPlayer, real x, real y returns nothing",
    "name": "SetCameraQuickPositionForPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCameraQuickPositionForPlayer(whichPlayer, x, y)",
    "documentation": ""
  },
  "SetCameraQuickPositionLocForPlayer": {
    "original": "function SetCameraQuickPositionLocForPlayer takes player whichPlayer, location loc returns nothing",
    "name": "SetCameraQuickPositionLocForPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCameraQuickPositionLocForPlayer(whichPlayer, loc)",
    "documentation": "设置空格点击 切换镜头目标"
  },
  "SetCameraQuickPositionLoc": {
    "original": "function SetCameraQuickPositionLoc takes location loc returns nothing",
    "name": "SetCameraQuickPositionLoc",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "location",
      "name": "loc",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCameraQuickPositionLoc(loc)",
    "documentation": ""
  },
  "StopCameraForPlayerBJ": {
    "original": "function StopCameraForPlayerBJ takes player whichPlayer returns nothing",
    "name": "StopCameraForPlayerBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "StopCameraForPlayerBJ(whichPlayer)",
    "documentation": "停止摄像机"
  },
  "SetCameraOrientControllerForPlayerBJ": {
    "original": "function SetCameraOrientControllerForPlayerBJ takes player whichPlayer, unit whichUnit, real xoffset, real yoffset returns nothing",
    "name": "SetCameraOrientControllerForPlayerBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "xoffset",
      "documentation": ""
    }, {
      "type": "real",
      "name": "yoffset",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCameraOrientControllerForPlayerBJ(whichPlayer, whichUnit, xoffset, yoffset)",
    "documentation": "锁定摄像机方向到单位"
  },
  "CameraSetSmoothingFactorBJ": {
    "original": "function CameraSetSmoothingFactorBJ takes real factor returns nothing",
    "name": "CameraSetSmoothingFactorBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "factor",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CameraSetSmoothingFactorBJ(factor)",
    "documentation": "改变摄像机平滑参数"
  },
  "CameraResetSmoothingFactorBJ": {
    "original": "function CameraResetSmoothingFactorBJ takes nothing returns nothing",
    "name": "CameraResetSmoothingFactorBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "CameraResetSmoothingFactorBJ()",
    "documentation": "重置摄像机平滑参数"
  },
  "DisplayTextToForce": {
    "original": "function DisplayTextToForce takes force toForce, string message returns nothing",
    "name": "DisplayTextToForce",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "force",
      "name": "toForce",
      "documentation": ""
    }, {
      "type": "string",
      "name": "message",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DisplayTextToForce(toForce, message)",
    "documentation": "文本消息(自动计时)"
  },
  "DisplayTimedTextToForce": {
    "original": "function DisplayTimedTextToForce takes force toForce, real duration, string message returns nothing",
    "name": "DisplayTimedTextToForce",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "force",
      "name": "toForce",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }, {
      "type": "string",
      "name": "message",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DisplayTimedTextToForce(toForce, duration, message)",
    "documentation": "文本消息(指定计时)"
  },
  "ClearTextMessagesBJ": {
    "original": "function ClearTextMessagesBJ takes force toForce returns nothing",
    "name": "ClearTextMessagesBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "force",
      "name": "toForce",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ClearTextMessagesBJ(toForce)",
    "documentation": "清空文本信息"
  },
  "SubStringBJ": {
    "original": "function SubStringBJ takes string source, integer start, integer end returns string",
    "name": "SubStringBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "source",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "start",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "end",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "SubStringBJ(source, start, end)",
    "documentation": "切割字符串"
  },
  "GetHandleIdBJ": {
    "original": "function GetHandleIdBJ takes handle h returns integer",
    "name": "GetHandleIdBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "handle",
      "name": "h",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetHandleIdBJ(h)",
    "documentation": "转换 ,~Handle, 为整数"
  },
  "StringHashBJ": {
    "original": "function StringHashBJ takes string s returns integer",
    "name": "StringHashBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "s",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "StringHashBJ(s)",
    "documentation": "转换 ,~String, 为整数"
  },
  "TriggerRegisterTimerEventPeriodic": {
    "original": "function TriggerRegisterTimerEventPeriodic takes trigger trig, real timeout returns event",
    "name": "TriggerRegisterTimerEventPeriodic",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "real",
      "name": "timeout",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterTimerEventPeriodic(trig, timeout)",
    "documentation": "循环逝去的时间"
  },
  "TriggerRegisterTimerEventSingle": {
    "original": "function TriggerRegisterTimerEventSingle takes trigger trig, real timeout returns event",
    "name": "TriggerRegisterTimerEventSingle",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "real",
      "name": "timeout",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterTimerEventSingle(trig, timeout)",
    "documentation": "游戏开始逝去的时间"
  },
  "TriggerRegisterTimerExpireEventBJ": {
    "original": "function TriggerRegisterTimerExpireEventBJ takes trigger trig, timer t returns event",
    "name": "TriggerRegisterTimerExpireEventBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "timer",
      "name": "t",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterTimerExpireEventBJ(trig, t)",
    "documentation": "计时器期满"
  },
  "TriggerRegisterPlayerUnitEventSimple": {
    "original": "function TriggerRegisterPlayerUnitEventSimple takes trigger trig, player whichPlayer, playerunitevent whichEvent returns event",
    "name": "TriggerRegisterPlayerUnitEventSimple",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "playerunitevent",
      "name": "whichEvent",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterPlayerUnitEventSimple(trig, whichPlayer, whichEvent)",
    "documentation": "玩家单位的事件"
  },
  "TriggerRegisterAnyUnitEventBJ": {
    "original": "function TriggerRegisterAnyUnitEventBJ takes trigger trig, playerunitevent whichEvent returns nothing",
    "name": "TriggerRegisterAnyUnitEventBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "playerunitevent",
      "name": "whichEvent",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TriggerRegisterAnyUnitEventBJ(trig, whichEvent)",
    "documentation": "单位的事件"
  },
  "TriggerRegisterPlayerSelectionEventBJ": {
    "original": "function TriggerRegisterPlayerSelectionEventBJ takes trigger trig, player whichPlayer, boolean selected returns event",
    "name": "TriggerRegisterPlayerSelectionEventBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "selected",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterPlayerSelectionEventBJ(trig, whichPlayer, selected)",
    "documentation": "选择单位事件"
  },
  "TriggerRegisterPlayerKeyEventBJ": {
    "original": "function TriggerRegisterPlayerKeyEventBJ takes trigger trig, player whichPlayer, integer keType, integer keKey returns event",
    "name": "TriggerRegisterPlayerKeyEventBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "keType",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "keKey",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterPlayerKeyEventBJ(trig, whichPlayer, keType, keKey)",
    "documentation": "键盘事件"
  },
  "TriggerRegisterPlayerMouseEventBJ": {
    "original": "function TriggerRegisterPlayerMouseEventBJ takes trigger trig, player whichPlayer, integer meType returns event",
    "name": "TriggerRegisterPlayerMouseEventBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "meType",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterPlayerMouseEventBJ(trig, whichPlayer, meType)",
    "documentation": ""
  },
  "TriggerRegisterPlayerEventVictory": {
    "original": "function TriggerRegisterPlayerEventVictory takes trigger trig, player whichPlayer returns event",
    "name": "TriggerRegisterPlayerEventVictory",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterPlayerEventVictory(trig, whichPlayer)",
    "documentation": "胜利"
  },
  "TriggerRegisterPlayerEventDefeat": {
    "original": "function TriggerRegisterPlayerEventDefeat takes trigger trig, player whichPlayer returns event",
    "name": "TriggerRegisterPlayerEventDefeat",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterPlayerEventDefeat(trig, whichPlayer)",
    "documentation": "失败"
  },
  "TriggerRegisterPlayerEventLeave": {
    "original": "function TriggerRegisterPlayerEventLeave takes trigger trig, player whichPlayer returns event",
    "name": "TriggerRegisterPlayerEventLeave",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterPlayerEventLeave(trig, whichPlayer)",
    "documentation": "玩家离开游戏"
  },
  "TriggerRegisterPlayerEventAllianceChanged": {
    "original": "function TriggerRegisterPlayerEventAllianceChanged takes trigger trig, player whichPlayer returns event",
    "name": "TriggerRegisterPlayerEventAllianceChanged",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterPlayerEventAllianceChanged(trig, whichPlayer)",
    "documentation": "联盟状态改变(任何状态)"
  },
  "TriggerRegisterPlayerEventEndCinematic": {
    "original": "function TriggerRegisterPlayerEventEndCinematic takes trigger trig, player whichPlayer returns event",
    "name": "TriggerRegisterPlayerEventEndCinematic",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterPlayerEventEndCinematic(trig, whichPlayer)",
    "documentation": "按ESC键(跳过动画)"
  },
  "TriggerRegisterGameStateEventTimeOfDay": {
    "original": "function TriggerRegisterGameStateEventTimeOfDay takes trigger trig, limitop opcode, real limitval returns event",
    "name": "TriggerRegisterGameStateEventTimeOfDay",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "limitop",
      "name": "opcode",
      "documentation": ""
    }, {
      "type": "real",
      "name": "limitval",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterGameStateEventTimeOfDay(trig, opcode, limitval)",
    "documentation": "游戏时间改变"
  },
  "TriggerRegisterEnterRegionSimple": {
    "original": "function TriggerRegisterEnterRegionSimple takes trigger trig, region whichRegion returns event",
    "name": "TriggerRegisterEnterRegionSimple",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "region",
      "name": "whichRegion",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterEnterRegionSimple(trig, whichRegion)",
    "documentation": "任意单位进入 ,~区域"
  },
  "TriggerRegisterLeaveRegionSimple": {
    "original": "function TriggerRegisterLeaveRegionSimple takes trigger trig, region whichRegion returns event",
    "name": "TriggerRegisterLeaveRegionSimple",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "region",
      "name": "whichRegion",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterLeaveRegionSimple(trig, whichRegion)",
    "documentation": "任意单位离开 ,~区域"
  },
  "TriggerRegisterEnterRectSimple": {
    "original": "function TriggerRegisterEnterRectSimple takes trigger trig, rect r returns event",
    "name": "TriggerRegisterEnterRectSimple",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "rect",
      "name": "r",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterEnterRectSimple(trig, r)",
    "documentation": "单位进入区域"
  },
  "TriggerRegisterLeaveRectSimple": {
    "original": "function TriggerRegisterLeaveRectSimple takes trigger trig, rect r returns event",
    "name": "TriggerRegisterLeaveRectSimple",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "rect",
      "name": "r",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterLeaveRectSimple(trig, r)",
    "documentation": "单位离开区域"
  },
  "TriggerRegisterDistanceBetweenUnits": {
    "original": "function TriggerRegisterDistanceBetweenUnits takes trigger trig, unit whichUnit, boolexpr condition, real range returns event",
    "name": "TriggerRegisterDistanceBetweenUnits",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "condition",
      "documentation": ""
    }, {
      "type": "real",
      "name": "range",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterDistanceBetweenUnits(trig, whichUnit, condition, range)",
    "documentation": ""
  },
  "TriggerRegisterUnitInRangeSimple": {
    "original": "function TriggerRegisterUnitInRangeSimple takes trigger trig, real range, unit whichUnit returns event",
    "name": "TriggerRegisterUnitInRangeSimple",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "real",
      "name": "range",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterUnitInRangeSimple(trig, range, whichUnit)",
    "documentation": "进入单位的范围"
  },
  "TriggerRegisterUnitLifeEvent": {
    "original": "function TriggerRegisterUnitLifeEvent takes trigger trig, unit whichUnit, limitop opcode, real limitval returns event",
    "name": "TriggerRegisterUnitLifeEvent",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "limitop",
      "name": "opcode",
      "documentation": ""
    }, {
      "type": "real",
      "name": "limitval",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterUnitLifeEvent(trig, whichUnit, opcode, limitval)",
    "documentation": "单位生命值"
  },
  "TriggerRegisterUnitManaEvent": {
    "original": "function TriggerRegisterUnitManaEvent takes trigger trig, unit whichUnit, limitop opcode, real limitval returns event",
    "name": "TriggerRegisterUnitManaEvent",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "limitop",
      "name": "opcode",
      "documentation": ""
    }, {
      "type": "real",
      "name": "limitval",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterUnitManaEvent(trig, whichUnit, opcode, limitval)",
    "documentation": "单位魔法值"
  },
  "TriggerRegisterDialogEventBJ": {
    "original": "function TriggerRegisterDialogEventBJ takes trigger trig, dialog whichDialog returns event",
    "name": "TriggerRegisterDialogEventBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "dialog",
      "name": "whichDialog",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterDialogEventBJ(trig, whichDialog)",
    "documentation": "对话框按钮点击"
  },
  "TriggerRegisterShowSkillEventBJ": {
    "original": "function TriggerRegisterShowSkillEventBJ takes trigger trig returns event",
    "name": "TriggerRegisterShowSkillEventBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterShowSkillEventBJ(trig)",
    "documentation": "英雄学习技能按钮被点击"
  },
  "TriggerRegisterBuildSubmenuEventBJ": {
    "original": "function TriggerRegisterBuildSubmenuEventBJ takes trigger trig returns event",
    "name": "TriggerRegisterBuildSubmenuEventBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterBuildSubmenuEventBJ(trig)",
    "documentation": "建造建筑物按钮被点击"
  },
  "TriggerRegisterGameLoadedEventBJ": {
    "original": "function TriggerRegisterGameLoadedEventBJ takes trigger trig returns event",
    "name": "TriggerRegisterGameLoadedEventBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterGameLoadedEventBJ(trig)",
    "documentation": "读取游戏"
  },
  "TriggerRegisterGameSavedEventBJ": {
    "original": "function TriggerRegisterGameSavedEventBJ takes trigger trig returns event",
    "name": "TriggerRegisterGameSavedEventBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "TriggerRegisterGameSavedEventBJ(trig)",
    "documentation": "储存游戏"
  },
  "RegisterDestDeathInRegionEnum": {
    "original": "function RegisterDestDeathInRegionEnum takes nothing returns nothing",
    "name": "RegisterDestDeathInRegionEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "RegisterDestDeathInRegionEnum()",
    "documentation": ""
  },
  "TriggerRegisterDestDeathInRegionEvent": {
    "original": "function TriggerRegisterDestDeathInRegionEvent takes trigger trig, rect r returns nothing",
    "name": "TriggerRegisterDestDeathInRegionEvent",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "rect",
      "name": "r",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TriggerRegisterDestDeathInRegionEvent(trig, r)",
    "documentation": "可毁坏物在 区域 死亡"
  },
  "AddWeatherEffectSaveLast": {
    "original": "function AddWeatherEffectSaveLast takes rect where, integer effectID returns weathereffect",
    "name": "AddWeatherEffectSaveLast",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "rect",
      "name": "where",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "effectID",
      "documentation": ""
    }],
    "returnType": "weathereffect",
    "insertText": "AddWeatherEffectSaveLast(where, effectID)",
    "documentation": "创造天气效果"
  },
  "GetLastCreatedWeatherEffect": {
    "original": "function GetLastCreatedWeatherEffect takes nothing returns weathereffect",
    "name": "GetLastCreatedWeatherEffect",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "weathereffect",
    "insertText": "GetLastCreatedWeatherEffect()",
    "documentation": "最后创建的天气效果"
  },
  "RemoveWeatherEffectBJ": {
    "original": "function RemoveWeatherEffectBJ takes weathereffect whichWeatherEffect returns nothing",
    "name": "RemoveWeatherEffectBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "weathereffect",
      "name": "whichWeatherEffect",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RemoveWeatherEffectBJ(whichWeatherEffect)",
    "documentation": "删除天气效果"
  },
  "TerrainDeformationCraterBJ": {
    "original": "function TerrainDeformationCraterBJ takes real duration, boolean permanent, location where, real radius, real depth returns terraindeformation",
    "name": "TerrainDeformationCraterBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "duration",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "permanent",
      "documentation": ""
    }, {
      "type": "location",
      "name": "where",
      "documentation": ""
    }, {
      "type": "real",
      "name": "radius",
      "documentation": ""
    }, {
      "type": "real",
      "name": "depth",
      "documentation": ""
    }],
    "returnType": "terraindeformation",
    "insertText": "TerrainDeformationCraterBJ(duration, permanent, where, radius, depth)",
    "documentation": "创造地域变形 :弹坑"
  },
  "TerrainDeformationRippleBJ": {
    "original": "function TerrainDeformationRippleBJ takes real duration, boolean limitNeg, location where, real startRadius, real endRadius, real depth, real wavePeriod, real waveWidth returns terraindeformation",
    "name": "TerrainDeformationRippleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "duration",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "limitNeg",
      "documentation": ""
    }, {
      "type": "location",
      "name": "where",
      "documentation": ""
    }, {
      "type": "real",
      "name": "startRadius",
      "documentation": ""
    }, {
      "type": "real",
      "name": "endRadius",
      "documentation": ""
    }, {
      "type": "real",
      "name": "depth",
      "documentation": ""
    }, {
      "type": "real",
      "name": "wavePeriod",
      "documentation": ""
    }, {
      "type": "real",
      "name": "waveWidth",
      "documentation": ""
    }],
    "returnType": "terraindeformation",
    "insertText": "TerrainDeformationRippleBJ(duration, limitNeg, where, startRadius, endRadius, depth, wavePeriod, waveWidth)",
    "documentation": "创造地域变形: 波纹"
  },
  "TerrainDeformationWaveBJ": {
    "original": "function TerrainDeformationWaveBJ takes real duration, location source, location target, real radius, real depth, real trailDelay returns terraindeformation",
    "name": "TerrainDeformationWaveBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "duration",
      "documentation": ""
    }, {
      "type": "location",
      "name": "source",
      "documentation": ""
    }, {
      "type": "location",
      "name": "target",
      "documentation": ""
    }, {
      "type": "real",
      "name": "radius",
      "documentation": ""
    }, {
      "type": "real",
      "name": "depth",
      "documentation": ""
    }, {
      "type": "real",
      "name": "trailDelay",
      "documentation": ""
    }],
    "returnType": "terraindeformation",
    "insertText": "TerrainDeformationWaveBJ(duration, source, target, radius, depth, trailDelay)",
    "documentation": "创造地域变形: 波"
  },
  "TerrainDeformationRandomBJ": {
    "original": "function TerrainDeformationRandomBJ takes real duration, location where, real radius, real minDelta, real maxDelta, real updateInterval returns terraindeformation",
    "name": "TerrainDeformationRandomBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "duration",
      "documentation": ""
    }, {
      "type": "location",
      "name": "where",
      "documentation": ""
    }, {
      "type": "real",
      "name": "radius",
      "documentation": ""
    }, {
      "type": "real",
      "name": "minDelta",
      "documentation": ""
    }, {
      "type": "real",
      "name": "maxDelta",
      "documentation": ""
    }, {
      "type": "real",
      "name": "updateInterval",
      "documentation": ""
    }],
    "returnType": "terraindeformation",
    "insertText": "TerrainDeformationRandomBJ(duration, where, radius, minDelta, maxDelta, updateInterval)",
    "documentation": "创造地域变形: 随机"
  },
  "TerrainDeformationStopBJ": {
    "original": "function TerrainDeformationStopBJ takes terraindeformation deformation, real duration returns nothing",
    "name": "TerrainDeformationStopBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "terraindeformation",
      "name": "deformation",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TerrainDeformationStopBJ(deformation, duration)",
    "documentation": "停止地域变形"
  },
  "GetLastCreatedTerrainDeformation": {
    "original": "function GetLastCreatedTerrainDeformation takes nothing returns terraindeformation",
    "name": "GetLastCreatedTerrainDeformation",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "terraindeformation",
    "insertText": "GetLastCreatedTerrainDeformation()",
    "documentation": "最后创建的可毁坏物"
  },
  "AddLightningLoc": {
    "original": "function AddLightningLoc takes string codeName, location where1, location where2 returns lightning",
    "name": "AddLightningLoc",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "codeName",
      "documentation": ""
    }, {
      "type": "location",
      "name": "where1",
      "documentation": ""
    }, {
      "type": "location",
      "name": "where2",
      "documentation": ""
    }],
    "returnType": "lightning",
    "insertText": "AddLightningLoc(codeName, where1, where2)",
    "documentation": "创建闪电效果于指定点"
  },
  "DestroyLightningBJ": {
    "original": "function DestroyLightningBJ takes lightning whichBolt returns boolean",
    "name": "DestroyLightningBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "lightning",
      "name": "whichBolt",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "DestroyLightningBJ(whichBolt)",
    "documentation": "删除闪电效果"
  },
  "MoveLightningLoc": {
    "original": "function MoveLightningLoc takes lightning whichBolt, location where1, location where2 returns boolean",
    "name": "MoveLightningLoc",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "lightning",
      "name": "whichBolt",
      "documentation": ""
    }, {
      "type": "location",
      "name": "where1",
      "documentation": ""
    }, {
      "type": "location",
      "name": "where2",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "MoveLightningLoc(whichBolt, where1, where2)",
    "documentation": "移动闪电效果到指定点"
  },
  "GetLightningColorABJ": {
    "original": "function GetLightningColorABJ takes lightning whichBolt returns real",
    "name": "GetLightningColorABJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "lightning",
      "name": "whichBolt",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetLightningColorABJ(whichBolt)",
    "documentation": "闪电的Alpha通道颜色"
  },
  "GetLightningColorRBJ": {
    "original": "function GetLightningColorRBJ takes lightning whichBolt returns real",
    "name": "GetLightningColorRBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "lightning",
      "name": "whichBolt",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetLightningColorRBJ(whichBolt)",
    "documentation": "闪电的红色通道颜色"
  },
  "GetLightningColorGBJ": {
    "original": "function GetLightningColorGBJ takes lightning whichBolt returns real",
    "name": "GetLightningColorGBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "lightning",
      "name": "whichBolt",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetLightningColorGBJ(whichBolt)",
    "documentation": "闪电的绿色通道颜色"
  },
  "GetLightningColorBBJ": {
    "original": "function GetLightningColorBBJ takes lightning whichBolt returns real",
    "name": "GetLightningColorBBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "lightning",
      "name": "whichBolt",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetLightningColorBBJ(whichBolt)",
    "documentation": "闪电的蓝色通道颜色"
  },
  "SetLightningColorBJ": {
    "original": "function SetLightningColorBJ takes lightning whichBolt, real r, real g, real b, real a returns boolean",
    "name": "SetLightningColorBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "lightning",
      "name": "whichBolt",
      "documentation": ""
    }, {
      "type": "real",
      "name": "r",
      "documentation": ""
    }, {
      "type": "real",
      "name": "g",
      "documentation": ""
    }, {
      "type": "real",
      "name": "b",
      "documentation": ""
    }, {
      "type": "real",
      "name": "a",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SetLightningColorBJ(whichBolt, r, g, b, a)",
    "documentation": "设置闪电效果颜色"
  },
  "GetLastCreatedLightningBJ": {
    "original": "function GetLastCreatedLightningBJ takes nothing returns lightning",
    "name": "GetLastCreatedLightningBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "lightning",
    "insertText": "GetLastCreatedLightningBJ()",
    "documentation": "最后创建的闪电效果"
  },
  "GetAbilityEffectBJ": {
    "original": "function GetAbilityEffectBJ takes integer abilcode, effecttype t, integer index returns string",
    "name": "GetAbilityEffectBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "abilcode",
      "documentation": ""
    }, {
      "type": "effecttype",
      "name": "t",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "index",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "GetAbilityEffectBJ(abilcode, t, index)",
    "documentation": "技能效果图像"
  },
  "GetAbilitySoundBJ": {
    "original": "function GetAbilitySoundBJ takes integer abilcode, soundtype t returns string",
    "name": "GetAbilitySoundBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "abilcode",
      "documentation": ""
    }, {
      "type": "soundtype",
      "name": "t",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "GetAbilitySoundBJ(abilcode, t)",
    "documentation": "技能效果音"
  },
  "GetTerrainCliffLevelBJ": {
    "original": "function GetTerrainCliffLevelBJ takes location where returns integer",
    "name": "GetTerrainCliffLevelBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "location",
      "name": "where",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetTerrainCliffLevelBJ(where)",
    "documentation": "悬崖的高度"
  },
  "GetTerrainTypeBJ": {
    "original": "function GetTerrainTypeBJ takes location where returns integer",
    "name": "GetTerrainTypeBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "location",
      "name": "where",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetTerrainTypeBJ(where)",
    "documentation": "地形类型"
  },
  "GetTerrainVarianceBJ": {
    "original": "function GetTerrainVarianceBJ takes location where returns integer",
    "name": "GetTerrainVarianceBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "location",
      "name": "where",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetTerrainVarianceBJ(where)",
    "documentation": "地形形态"
  },
  "SetTerrainTypeBJ": {
    "original": "function SetTerrainTypeBJ takes location where, integer terrainType, integer variation, integer area, integer shape returns nothing",
    "name": "SetTerrainTypeBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "location",
      "name": "where",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "terrainType",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "variation",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "area",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "shape",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTerrainTypeBJ(where, terrainType, variation, area, shape)",
    "documentation": "改变地形类型"
  },
  "IsTerrainPathableBJ": {
    "original": "function IsTerrainPathableBJ takes location where, pathingtype t returns boolean",
    "name": "IsTerrainPathableBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "location",
      "name": "where",
      "documentation": ""
    }, {
      "type": "pathingtype",
      "name": "t",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsTerrainPathableBJ(where, t)",
    "documentation": "地形是否为对应路径"
  },
  "SetTerrainPathableBJ": {
    "original": "function SetTerrainPathableBJ takes location where, pathingtype t, boolean flag returns nothing",
    "name": "SetTerrainPathableBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "location",
      "name": "where",
      "documentation": ""
    }, {
      "type": "pathingtype",
      "name": "t",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTerrainPathableBJ(where, t, flag)",
    "documentation": "设置 地形路径 开/关"
  },
  "SetWaterBaseColorBJ": {
    "original": "function SetWaterBaseColorBJ takes real red, real green, real blue, real transparency returns nothing",
    "name": "SetWaterBaseColorBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "red",
      "documentation": ""
    }, {
      "type": "real",
      "name": "green",
      "documentation": ""
    }, {
      "type": "real",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "real",
      "name": "transparency",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetWaterBaseColorBJ(red, green, blue, transparency)",
    "documentation": "设置 水 颜色"
  },
  "CreateFogModifierRectSimple": {
    "original": "function CreateFogModifierRectSimple takes player whichPlayer, fogstate whichFogState, rect r, boolean afterUnits returns fogmodifier",
    "name": "CreateFogModifierRectSimple",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "fogstate",
      "name": "whichFogState",
      "documentation": ""
    }, {
      "type": "rect",
      "name": "r",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "afterUnits",
      "documentation": ""
    }],
    "returnType": "fogmodifier",
    "insertText": "CreateFogModifierRectSimple(whichPlayer, whichFogState, r, afterUnits)",
    "documentation": ""
  },
  "CreateFogModifierRadiusLocSimple": {
    "original": "function CreateFogModifierRadiusLocSimple takes player whichPlayer, fogstate whichFogState, location center, real radius, boolean afterUnits returns fogmodifier",
    "name": "CreateFogModifierRadiusLocSimple",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "fogstate",
      "name": "whichFogState",
      "documentation": ""
    }, {
      "type": "location",
      "name": "center",
      "documentation": ""
    }, {
      "type": "real",
      "name": "radius",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "afterUnits",
      "documentation": ""
    }],
    "returnType": "fogmodifier",
    "insertText": "CreateFogModifierRadiusLocSimple(whichPlayer, whichFogState, center, radius, afterUnits)",
    "documentation": ""
  },
  "CreateFogModifierRectBJ": {
    "original": "function CreateFogModifierRectBJ takes boolean enabled, player whichPlayer, fogstate whichFogState, rect r returns fogmodifier",
    "name": "CreateFogModifierRectBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "enabled",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "fogstate",
      "name": "whichFogState",
      "documentation": ""
    }, {
      "type": "rect",
      "name": "r",
      "documentation": ""
    }],
    "returnType": "fogmodifier",
    "insertText": "CreateFogModifierRectBJ(enabled, whichPlayer, whichFogState, r)",
    "documentation": "创造 区域 可见度修正器"
  },
  "CreateFogModifierRadiusLocBJ": {
    "original": "function CreateFogModifierRadiusLocBJ takes boolean enabled, player whichPlayer, fogstate whichFogState, location center, real radius returns fogmodifier",
    "name": "CreateFogModifierRadiusLocBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "enabled",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "fogstate",
      "name": "whichFogState",
      "documentation": ""
    }, {
      "type": "location",
      "name": "center",
      "documentation": ""
    }, {
      "type": "real",
      "name": "radius",
      "documentation": ""
    }],
    "returnType": "fogmodifier",
    "insertText": "CreateFogModifierRadiusLocBJ(enabled, whichPlayer, whichFogState, center, radius)",
    "documentation": "创造 圆周 可见度修正器"
  },
  "GetLastCreatedFogModifier": {
    "original": "function GetLastCreatedFogModifier takes nothing returns fogmodifier",
    "name": "GetLastCreatedFogModifier",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "fogmodifier",
    "insertText": "GetLastCreatedFogModifier()",
    "documentation": "最后创建的可见度修正器"
  },
  "FogEnableOn": {
    "original": "function FogEnableOn takes nothing returns nothing",
    "name": "FogEnableOn",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "FogEnableOn()",
    "documentation": "允许战争迷雾"
  },
  "FogEnableOff": {
    "original": "function FogEnableOff takes nothing returns nothing",
    "name": "FogEnableOff",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "FogEnableOff()",
    "documentation": "禁止战争迷雾"
  },
  "FogMaskEnableOn": {
    "original": "function FogMaskEnableOn takes nothing returns nothing",
    "name": "FogMaskEnableOn",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "FogMaskEnableOn()",
    "documentation": "允许黑色阴影"
  },
  "FogMaskEnableOff": {
    "original": "function FogMaskEnableOff takes nothing returns nothing",
    "name": "FogMaskEnableOff",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "FogMaskEnableOff()",
    "documentation": "禁止黑色阴影"
  },
  "UseTimeOfDayBJ": {
    "original": "function UseTimeOfDayBJ takes boolean flag returns nothing",
    "name": "UseTimeOfDayBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UseTimeOfDayBJ(flag)",
    "documentation": "打开/关闭日夜循环"
  },
  "SetTerrainFogExBJ": {
    "original": "function SetTerrainFogExBJ takes integer style, real zstart, real zend, real density, real red, real green, real blue returns nothing",
    "name": "SetTerrainFogExBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "style",
      "documentation": ""
    }, {
      "type": "real",
      "name": "zstart",
      "documentation": ""
    }, {
      "type": "real",
      "name": "zend",
      "documentation": ""
    }, {
      "type": "real",
      "name": "density",
      "documentation": ""
    }, {
      "type": "real",
      "name": "red",
      "documentation": ""
    }, {
      "type": "real",
      "name": "green",
      "documentation": ""
    }, {
      "type": "real",
      "name": "blue",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTerrainFogExBJ(style, zstart, zend, density, red, green, blue)",
    "documentation": "设置 迷雾 "
  },
  "ResetTerrainFogBJ": {
    "original": "function ResetTerrainFogBJ takes nothing returns nothing",
    "name": "ResetTerrainFogBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "ResetTerrainFogBJ()",
    "documentation": "重置 迷雾"
  },
  "SetDoodadAnimationBJ": {
    "original": "function SetDoodadAnimationBJ takes string animName, integer doodadID, real radius, location center returns nothing",
    "name": "SetDoodadAnimationBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "animName",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "doodadID",
      "documentation": ""
    }, {
      "type": "real",
      "name": "radius",
      "documentation": ""
    }, {
      "type": "location",
      "name": "center",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetDoodadAnimationBJ(animName, doodadID, radius, center)",
    "documentation": "播放圆周内地形装饰物的动作"
  },
  "SetDoodadAnimationRectBJ": {
    "original": "function SetDoodadAnimationRectBJ takes string animName, integer doodadID, rect r returns nothing",
    "name": "SetDoodadAnimationRectBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "animName",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "doodadID",
      "documentation": ""
    }, {
      "type": "rect",
      "name": "r",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetDoodadAnimationRectBJ(animName, doodadID, r)",
    "documentation": "播放区域内地形装饰物的动作"
  },
  "AddUnitAnimationPropertiesBJ": {
    "original": "function AddUnitAnimationPropertiesBJ takes boolean add, string animProperties, unit whichUnit returns nothing",
    "name": "AddUnitAnimationPropertiesBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "add",
      "documentation": ""
    }, {
      "type": "string",
      "name": "animProperties",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "AddUnitAnimationPropertiesBJ(add, animProperties, whichUnit)",
    "documentation": "添加/删除 单位动画 标签"
  },
  "CreateImageBJ": {
    "original": "function CreateImageBJ takes string file, real size, location where, real zOffset, integer imageType returns image",
    "name": "CreateImageBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "file",
      "documentation": ""
    }, {
      "type": "real",
      "name": "size",
      "documentation": ""
    }, {
      "type": "location",
      "name": "where",
      "documentation": ""
    }, {
      "type": "real",
      "name": "zOffset",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "imageType",
      "documentation": ""
    }],
    "returnType": "image",
    "insertText": "CreateImageBJ(file, size, where, zOffset, imageType)",
    "documentation": "创建图像"
  },
  "ShowImageBJ": {
    "original": "function ShowImageBJ takes boolean flag, image whichImage returns nothing",
    "name": "ShowImageBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }, {
      "type": "image",
      "name": "whichImage",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ShowImageBJ(flag, whichImage)",
    "documentation": "显示/隐藏图像"
  },
  "SetImagePositionBJ": {
    "original": "function SetImagePositionBJ takes image whichImage, location where, real zOffset returns nothing",
    "name": "SetImagePositionBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "image",
      "name": "whichImage",
      "documentation": ""
    }, {
      "type": "location",
      "name": "where",
      "documentation": ""
    }, {
      "type": "real",
      "name": "zOffset",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetImagePositionBJ(whichImage, where, zOffset)",
    "documentation": "改变图像位置"
  },
  "SetImageColorBJ": {
    "original": "function SetImageColorBJ takes image whichImage, real red, real green, real blue, real alpha returns nothing",
    "name": "SetImageColorBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "image",
      "name": "whichImage",
      "documentation": ""
    }, {
      "type": "real",
      "name": "red",
      "documentation": ""
    }, {
      "type": "real",
      "name": "green",
      "documentation": ""
    }, {
      "type": "real",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "real",
      "name": "alpha",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetImageColorBJ(whichImage, red, green, blue, alpha)",
    "documentation": "改变图像颜色"
  },
  "GetLastCreatedImage": {
    "original": "function GetLastCreatedImage takes nothing returns image",
    "name": "GetLastCreatedImage",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "image",
    "insertText": "GetLastCreatedImage()",
    "documentation": "最后创建的图像"
  },
  "CreateUbersplatBJ": {
    "original": "function CreateUbersplatBJ takes location where, string name, real red, real green, real blue, real alpha, boolean forcePaused, boolean noBirthTime returns ubersplat",
    "name": "CreateUbersplatBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "location",
      "name": "where",
      "documentation": ""
    }, {
      "type": "string",
      "name": "name",
      "documentation": ""
    }, {
      "type": "real",
      "name": "red",
      "documentation": ""
    }, {
      "type": "real",
      "name": "green",
      "documentation": ""
    }, {
      "type": "real",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "real",
      "name": "alpha",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "forcePaused",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "noBirthTime",
      "documentation": ""
    }],
    "returnType": "ubersplat",
    "insertText": "CreateUbersplatBJ(where, name, red, green, blue, alpha, forcePaused, noBirthTime)",
    "documentation": "创建地面纹理"
  },
  "ShowUbersplatBJ": {
    "original": "function ShowUbersplatBJ takes boolean flag, ubersplat whichSplat returns nothing",
    "name": "ShowUbersplatBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }, {
      "type": "ubersplat",
      "name": "whichSplat",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ShowUbersplatBJ(flag, whichSplat)",
    "documentation": "显示/隐藏地面纹理"
  },
  "GetLastCreatedUbersplat": {
    "original": "function GetLastCreatedUbersplat takes nothing returns ubersplat",
    "name": "GetLastCreatedUbersplat",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "ubersplat",
    "insertText": "GetLastCreatedUbersplat()",
    "documentation": "最后创建的地面纹理"
  },
  "PlaySoundBJ": {
    "original": "function PlaySoundBJ takes sound soundHandle returns nothing",
    "name": "PlaySoundBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PlaySoundBJ(soundHandle)",
    "documentation": "播放声音"
  },
  "StopSoundBJ": {
    "original": "function StopSoundBJ takes sound soundHandle, boolean fadeOut returns nothing",
    "name": "StopSoundBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "fadeOut",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "StopSoundBJ(soundHandle, fadeOut)",
    "documentation": "停止声音"
  },
  "SetSoundVolumeBJ": {
    "original": "function SetSoundVolumeBJ takes sound soundHandle, real volumePercent returns nothing",
    "name": "SetSoundVolumeBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "real",
      "name": "volumePercent",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetSoundVolumeBJ(soundHandle, volumePercent)",
    "documentation": "设置声音音量"
  },
  "SetSoundOffsetBJ": {
    "original": "function SetSoundOffsetBJ takes real newOffset, sound soundHandle returns nothing",
    "name": "SetSoundOffsetBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "newOffset",
      "documentation": ""
    }, {
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetSoundOffsetBJ(newOffset, soundHandle)",
    "documentation": "跳跃播放声音"
  },
  "SetSoundDistanceCutoffBJ": {
    "original": "function SetSoundDistanceCutoffBJ takes sound soundHandle, real cutoff returns nothing",
    "name": "SetSoundDistanceCutoffBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "real",
      "name": "cutoff",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetSoundDistanceCutoffBJ(soundHandle, cutoff)",
    "documentation": "设置声音距离"
  },
  "SetSoundPitchBJ": {
    "original": "function SetSoundPitchBJ takes sound soundHandle, real pitch returns nothing",
    "name": "SetSoundPitchBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "real",
      "name": "pitch",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetSoundPitchBJ(soundHandle, pitch)",
    "documentation": "设置声音定调"
  },
  "SetSoundPositionLocBJ": {
    "original": "function SetSoundPositionLocBJ takes sound soundHandle, location loc, real z returns nothing",
    "name": "SetSoundPositionLocBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }, {
      "type": "real",
      "name": "z",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetSoundPositionLocBJ(soundHandle, loc, z)",
    "documentation": "设置3D声音位置"
  },
  "AttachSoundToUnitBJ": {
    "original": "function AttachSoundToUnitBJ takes sound soundHandle, unit whichUnit returns nothing",
    "name": "AttachSoundToUnitBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "AttachSoundToUnitBJ(soundHandle, whichUnit)",
    "documentation": "捆绑3D声音到单位"
  },
  "SetSoundConeAnglesBJ": {
    "original": "function SetSoundConeAnglesBJ takes sound soundHandle, real inside, real outside, real outsideVolumePercent returns nothing",
    "name": "SetSoundConeAnglesBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "real",
      "name": "inside",
      "documentation": ""
    }, {
      "type": "real",
      "name": "outside",
      "documentation": ""
    }, {
      "type": "real",
      "name": "outsideVolumePercent",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetSoundConeAnglesBJ(soundHandle, inside, outside, outsideVolumePercent)",
    "documentation": ""
  },
  "KillSoundWhenDoneBJ": {
    "original": "function KillSoundWhenDoneBJ takes sound soundHandle returns nothing",
    "name": "KillSoundWhenDoneBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "KillSoundWhenDoneBJ(soundHandle)",
    "documentation": "破坏声音"
  },
  "PlaySoundAtPointBJ": {
    "original": "function PlaySoundAtPointBJ takes sound soundHandle, real volumePercent, location loc, real z returns nothing",
    "name": "PlaySoundAtPointBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "real",
      "name": "volumePercent",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }, {
      "type": "real",
      "name": "z",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PlaySoundAtPointBJ(soundHandle, volumePercent, loc, z)",
    "documentation": "播放声音在点"
  },
  "PlaySoundOnUnitBJ": {
    "original": "function PlaySoundOnUnitBJ takes sound soundHandle, real volumePercent, unit whichUnit returns nothing",
    "name": "PlaySoundOnUnitBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "real",
      "name": "volumePercent",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PlaySoundOnUnitBJ(soundHandle, volumePercent, whichUnit)",
    "documentation": "播放声音单位"
  },
  "PlaySoundFromOffsetBJ": {
    "original": "function PlaySoundFromOffsetBJ takes sound soundHandle, real volumePercent, real startingOffset returns nothing",
    "name": "PlaySoundFromOffsetBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "real",
      "name": "volumePercent",
      "documentation": ""
    }, {
      "type": "real",
      "name": "startingOffset",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PlaySoundFromOffsetBJ(soundHandle, volumePercent, startingOffset)",
    "documentation": "播放声音 有等待时间"
  },
  "PlayMusicBJ": {
    "original": "function PlayMusicBJ takes string musicFileName returns nothing",
    "name": "PlayMusicBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "musicFileName",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PlayMusicBJ(musicFileName)",
    "documentation": "播放音乐"
  },
  "PlayMusicExBJ": {
    "original": "function PlayMusicExBJ takes string musicFileName, real startingOffset, real fadeInTime returns nothing",
    "name": "PlayMusicExBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "musicFileName",
      "documentation": ""
    }, {
      "type": "real",
      "name": "startingOffset",
      "documentation": ""
    }, {
      "type": "real",
      "name": "fadeInTime",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PlayMusicExBJ(musicFileName, startingOffset, fadeInTime)",
    "documentation": "播放音乐(跳跃)"
  },
  "SetMusicOffsetBJ": {
    "original": "function SetMusicOffsetBJ takes real newOffset returns nothing",
    "name": "SetMusicOffsetBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "newOffset",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetMusicOffsetBJ(newOffset)",
    "documentation": "跳越音乐"
  },
  "PlayThematicMusicBJ": {
    "original": "function PlayThematicMusicBJ takes string musicName returns nothing",
    "name": "PlayThematicMusicBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "musicName",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PlayThematicMusicBJ(musicName)",
    "documentation": "播放主题音乐"
  },
  "PlayThematicMusicExBJ": {
    "original": "function PlayThematicMusicExBJ takes string musicName, real startingOffset returns nothing",
    "name": "PlayThematicMusicExBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "musicName",
      "documentation": ""
    }, {
      "type": "real",
      "name": "startingOffset",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PlayThematicMusicExBJ(musicName, startingOffset)",
    "documentation": "播放主题音乐(跳跃)"
  },
  "SetThematicMusicOffsetBJ": {
    "original": "function SetThematicMusicOffsetBJ takes real newOffset returns nothing",
    "name": "SetThematicMusicOffsetBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "newOffset",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetThematicMusicOffsetBJ(newOffset)",
    "documentation": "跳越音乐主题曲"
  },
  "EndThematicMusicBJ": {
    "original": "function EndThematicMusicBJ takes nothing returns nothing",
    "name": "EndThematicMusicBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "EndThematicMusicBJ()",
    "documentation": "停放主题曲"
  },
  "StopMusicBJ": {
    "original": "function StopMusicBJ takes boolean fadeOut returns nothing",
    "name": "StopMusicBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "fadeOut",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "StopMusicBJ(fadeOut)",
    "documentation": "停止音乐"
  },
  "ResumeMusicBJ": {
    "original": "function ResumeMusicBJ takes nothing returns nothing",
    "name": "ResumeMusicBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "ResumeMusicBJ()",
    "documentation": "继续音乐"
  },
  "SetMusicVolumeBJ": {
    "original": "function SetMusicVolumeBJ takes real volumePercent returns nothing",
    "name": "SetMusicVolumeBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "volumePercent",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetMusicVolumeBJ(volumePercent)",
    "documentation": "设置音乐音量"
  },
  "GetSoundDurationBJ": {
    "original": "function GetSoundDurationBJ takes sound soundHandle returns real",
    "name": "GetSoundDurationBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetSoundDurationBJ(soundHandle)",
    "documentation": "声音长度"
  },
  "GetSoundFileDurationBJ": {
    "original": "function GetSoundFileDurationBJ takes string musicFileName returns real",
    "name": "GetSoundFileDurationBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "musicFileName",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetSoundFileDurationBJ(musicFileName)",
    "documentation": "音乐长度"
  },
  "GetLastPlayedSound": {
    "original": "function GetLastPlayedSound takes nothing returns sound",
    "name": "GetLastPlayedSound",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "sound",
    "insertText": "GetLastPlayedSound()",
    "documentation": "最后播放的声音"
  },
  "GetLastPlayedMusic": {
    "original": "function GetLastPlayedMusic takes nothing returns string",
    "name": "GetLastPlayedMusic",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "string",
    "insertText": "GetLastPlayedMusic()",
    "documentation": "最后播放的音乐"
  },
  "VolumeGroupSetVolumeBJ": {
    "original": "function VolumeGroupSetVolumeBJ takes volumegroup vgroup, real percent returns nothing",
    "name": "VolumeGroupSetVolumeBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "volumegroup",
      "name": "vgroup",
      "documentation": ""
    }, {
      "type": "real",
      "name": "percent",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "VolumeGroupSetVolumeBJ(vgroup, percent)",
    "documentation": "设置音量"
  },
  "SetCineModeVolumeGroupsImmediateBJ": {
    "original": "function SetCineModeVolumeGroupsImmediateBJ takes nothing returns nothing",
    "name": "SetCineModeVolumeGroupsImmediateBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "SetCineModeVolumeGroupsImmediateBJ()",
    "documentation": ""
  },
  "SetCineModeVolumeGroupsBJ": {
    "original": "function SetCineModeVolumeGroupsBJ takes nothing returns nothing",
    "name": "SetCineModeVolumeGroupsBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "SetCineModeVolumeGroupsBJ()",
    "documentation": "将所有音量设置为动画"
  },
  "SetSpeechVolumeGroupsImmediateBJ": {
    "original": "function SetSpeechVolumeGroupsImmediateBJ takes nothing returns nothing",
    "name": "SetSpeechVolumeGroupsImmediateBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "SetSpeechVolumeGroupsImmediateBJ()",
    "documentation": ""
  },
  "SetSpeechVolumeGroupsBJ": {
    "original": "function SetSpeechVolumeGroupsBJ takes nothing returns nothing",
    "name": "SetSpeechVolumeGroupsBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "SetSpeechVolumeGroupsBJ()",
    "documentation": "将所有音量设置为说话"
  },
  "VolumeGroupResetImmediateBJ": {
    "original": "function VolumeGroupResetImmediateBJ takes nothing returns nothing",
    "name": "VolumeGroupResetImmediateBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "VolumeGroupResetImmediateBJ()",
    "documentation": ""
  },
  "VolumeGroupResetBJ": {
    "original": "function VolumeGroupResetBJ takes nothing returns nothing",
    "name": "VolumeGroupResetBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "VolumeGroupResetBJ()",
    "documentation": "重置所有音量"
  },
  "GetSoundIsPlayingBJ": {
    "original": "function GetSoundIsPlayingBJ takes sound soundHandle returns boolean",
    "name": "GetSoundIsPlayingBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "GetSoundIsPlayingBJ(soundHandle)",
    "documentation": ""
  },
  "WaitForSoundBJ": {
    "original": "function WaitForSoundBJ takes sound soundHandle, real offset returns nothing",
    "name": "WaitForSoundBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "real",
      "name": "offset",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "WaitForSoundBJ(soundHandle, offset)",
    "documentation": "等待声音结束"
  },
  "SetMapMusicIndexedBJ": {
    "original": "function SetMapMusicIndexedBJ takes string musicName, integer index returns nothing",
    "name": "SetMapMusicIndexedBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "musicName",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "index",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetMapMusicIndexedBJ(musicName, index)",
    "documentation": "设置音乐列表 (使用指定的开始音乐)"
  },
  "SetMapMusicRandomBJ": {
    "original": "function SetMapMusicRandomBJ takes string musicName returns nothing",
    "name": "SetMapMusicRandomBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "musicName",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetMapMusicRandomBJ(musicName)",
    "documentation": "设定音乐列表 (使用随机的开始音乐)"
  },
  "ClearMapMusicBJ": {
    "original": "function ClearMapMusicBJ takes nothing returns nothing",
    "name": "ClearMapMusicBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "ClearMapMusicBJ()",
    "documentation": "清空音乐列表"
  },
  "SetStackedSoundBJ": {
    "original": "function SetStackedSoundBJ takes boolean add, sound soundHandle, rect r returns nothing",
    "name": "SetStackedSoundBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "add",
      "documentation": ""
    }, {
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "rect",
      "name": "r",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetStackedSoundBJ(add, soundHandle, r)",
    "documentation": "添加/删除穿越区域的3维声音"
  },
  "StartSoundForPlayerBJ": {
    "original": "function StartSoundForPlayerBJ takes player whichPlayer, sound soundHandle returns nothing",
    "name": "StartSoundForPlayerBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "StartSoundForPlayerBJ(whichPlayer, soundHandle)",
    "documentation": ""
  },
  "VolumeGroupSetVolumeForPlayerBJ": {
    "original": "function VolumeGroupSetVolumeForPlayerBJ takes player whichPlayer, volumegroup vgroup, real scale returns nothing",
    "name": "VolumeGroupSetVolumeForPlayerBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "volumegroup",
      "name": "vgroup",
      "documentation": ""
    }, {
      "type": "real",
      "name": "scale",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "VolumeGroupSetVolumeForPlayerBJ(whichPlayer, vgroup, scale)",
    "documentation": ""
  },
  "EnableDawnDusk": {
    "original": "function EnableDawnDusk takes boolean flag returns nothing",
    "name": "EnableDawnDusk",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "EnableDawnDusk(flag)",
    "documentation": "打开/关闭 日出/日落 的声音"
  },
  "IsDawnDuskEnabled": {
    "original": "function IsDawnDuskEnabled takes nothing returns boolean",
    "name": "IsDawnDuskEnabled",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "boolean",
    "insertText": "IsDawnDuskEnabled()",
    "documentation": ""
  },
  "SetAmbientDaySound": {
    "original": "function SetAmbientDaySound takes string inLabel returns nothing",
    "name": "SetAmbientDaySound",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "inLabel",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetAmbientDaySound(inLabel)",
    "documentation": "使用白昼环境的音乐"
  },
  "SetAmbientNightSound": {
    "original": "function SetAmbientNightSound takes string inLabel returns nothing",
    "name": "SetAmbientNightSound",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "inLabel",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetAmbientNightSound(inLabel)",
    "documentation": "使用夜晚环境的音乐"
  },
  "AddSpecialEffectLocBJ": {
    "original": "function AddSpecialEffectLocBJ takes location where, string modelName returns effect",
    "name": "AddSpecialEffectLocBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "location",
      "name": "where",
      "documentation": ""
    }, {
      "type": "string",
      "name": "modelName",
      "documentation": ""
    }],
    "returnType": "effect",
    "insertText": "AddSpecialEffectLocBJ(where, modelName)",
    "documentation": "对某点创造特殊效果"
  },
  "AddSpecialEffectTargetUnitBJ": {
    "original": "function AddSpecialEffectTargetUnitBJ takes string attachPointName, widget targetWidget, string modelName returns effect",
    "name": "AddSpecialEffectTargetUnitBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "attachPointName",
      "documentation": ""
    }, {
      "type": "widget",
      "name": "targetWidget",
      "documentation": ""
    }, {
      "type": "string",
      "name": "modelName",
      "documentation": ""
    }],
    "returnType": "effect",
    "insertText": "AddSpecialEffectTargetUnitBJ(attachPointName, targetWidget, modelName)",
    "documentation": "对某单位创造特殊效果"
  },
  "DestroyEffectBJ": {
    "original": "function DestroyEffectBJ takes effect whichEffect returns nothing",
    "name": "DestroyEffectBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "effect",
      "name": "whichEffect",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DestroyEffectBJ(whichEffect)",
    "documentation": "删除特殊效果"
  },
  "GetLastCreatedEffectBJ": {
    "original": "function GetLastCreatedEffectBJ takes nothing returns effect",
    "name": "GetLastCreatedEffectBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "effect",
    "insertText": "GetLastCreatedEffectBJ()",
    "documentation": "最后创建的特殊效果"
  },
  "GetItemLoc": {
    "original": "function GetItemLoc takes item whichItem returns location",
    "name": "GetItemLoc",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }],
    "returnType": "location",
    "insertText": "GetItemLoc(whichItem)",
    "documentation": "物品的位置"
  },
  "GetItemLifeBJ": {
    "original": "function GetItemLifeBJ takes widget whichWidget returns real",
    "name": "GetItemLifeBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "widget",
      "name": "whichWidget",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetItemLifeBJ(whichWidget)",
    "documentation": "物品生命"
  },
  "SetItemLifeBJ": {
    "original": "function SetItemLifeBJ takes widget whichWidget, real life returns nothing",
    "name": "SetItemLifeBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "widget",
      "name": "whichWidget",
      "documentation": ""
    }, {
      "type": "real",
      "name": "life",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetItemLifeBJ(whichWidget, life)",
    "documentation": "设置生命(物品)"
  },
  "AddHeroXPSwapped": {
    "original": "function AddHeroXPSwapped takes integer xpToAdd, unit whichHero, boolean showEyeCandy returns nothing",
    "name": "AddHeroXPSwapped",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "xpToAdd",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "showEyeCandy",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "AddHeroXPSwapped(xpToAdd, whichHero, showEyeCandy)",
    "documentation": "增加英雄经验值"
  },
  "SetHeroLevelBJ": {
    "original": "function SetHeroLevelBJ takes unit whichHero, integer newLevel, boolean showEyeCandy returns nothing",
    "name": "SetHeroLevelBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "newLevel",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "showEyeCandy",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetHeroLevelBJ(whichHero, newLevel, showEyeCandy)",
    "documentation": ""
  },
  "DecUnitAbilityLevelSwapped": {
    "original": "function DecUnitAbilityLevelSwapped takes integer abilcode, unit whichUnit returns integer",
    "name": "DecUnitAbilityLevelSwapped",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "abilcode",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "DecUnitAbilityLevelSwapped(abilcode, whichUnit)",
    "documentation": "降低单位技能等级"
  },
  "IncUnitAbilityLevelSwapped": {
    "original": "function IncUnitAbilityLevelSwapped takes integer abilcode, unit whichUnit returns integer",
    "name": "IncUnitAbilityLevelSwapped",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "abilcode",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "IncUnitAbilityLevelSwapped(abilcode, whichUnit)",
    "documentation": "提升单位技能等级"
  },
  "SetUnitAbilityLevelSwapped": {
    "original": "function SetUnitAbilityLevelSwapped takes integer abilcode, unit whichUnit, integer level returns integer",
    "name": "SetUnitAbilityLevelSwapped",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "abilcode",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "level",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "SetUnitAbilityLevelSwapped(abilcode, whichUnit, level)",
    "documentation": "设置单位技能等级"
  },
  "GetUnitAbilityLevelSwapped": {
    "original": "function GetUnitAbilityLevelSwapped takes integer abilcode, unit whichUnit returns integer",
    "name": "GetUnitAbilityLevelSwapped",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "abilcode",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetUnitAbilityLevelSwapped(abilcode, whichUnit)",
    "documentation": "单位的技能等级"
  },
  "UnitHasBuffBJ": {
    "original": "function UnitHasBuffBJ takes unit whichUnit, integer buffcode returns boolean",
    "name": "UnitHasBuffBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "buffcode",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitHasBuffBJ(whichUnit, buffcode)",
    "documentation": "单位存在 魔法特效"
  },
  "UnitRemoveBuffBJ": {
    "original": "function UnitRemoveBuffBJ takes integer buffcode, unit whichUnit returns boolean",
    "name": "UnitRemoveBuffBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "buffcode",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitRemoveBuffBJ(buffcode, whichUnit)",
    "documentation": "删除 持续状态 (指定的)"
  },
  "UnitAddItemSwapped": {
    "original": "function UnitAddItemSwapped takes item whichItem, unit whichHero returns boolean",
    "name": "UnitAddItemSwapped",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitAddItemSwapped(whichItem, whichHero)",
    "documentation": "移动物品给英雄"
  },
  "UnitAddItemByIdSwapped": {
    "original": "function UnitAddItemByIdSwapped takes integer itemId, unit whichHero returns item",
    "name": "UnitAddItemByIdSwapped",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "itemId",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }],
    "returnType": "item",
    "insertText": "UnitAddItemByIdSwapped(itemId, whichHero)",
    "documentation": "创建物品给英雄"
  },
  "UnitRemoveItemSwapped": {
    "original": "function UnitRemoveItemSwapped takes item whichItem, unit whichHero returns nothing",
    "name": "UnitRemoveItemSwapped",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UnitRemoveItemSwapped(whichItem, whichHero)",
    "documentation": "掉落英雄的一个物品"
  },
  "UnitRemoveItemFromSlotSwapped": {
    "original": "function UnitRemoveItemFromSlotSwapped takes integer itemSlot, unit whichHero returns item",
    "name": "UnitRemoveItemFromSlotSwapped",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "itemSlot",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }],
    "returnType": "item",
    "insertText": "UnitRemoveItemFromSlotSwapped(itemSlot, whichHero)",
    "documentation": "从英雄的物品栏位置中掉落物品"
  },
  "CreateItemLoc": {
    "original": "function CreateItemLoc takes integer itemId, location loc returns item",
    "name": "CreateItemLoc",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "itemId",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }],
    "returnType": "item",
    "insertText": "CreateItemLoc(itemId, loc)",
    "documentation": "创造物品"
  },
  "GetLastCreatedItem": {
    "original": "function GetLastCreatedItem takes nothing returns item",
    "name": "GetLastCreatedItem",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "item",
    "insertText": "GetLastCreatedItem()",
    "documentation": "最后创造的物品"
  },
  "GetLastRemovedItem": {
    "original": "function GetLastRemovedItem takes nothing returns item",
    "name": "GetLastRemovedItem",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "item",
    "insertText": "GetLastRemovedItem()",
    "documentation": "最后掉落的物品"
  },
  "SetItemPositionLoc": {
    "original": "function SetItemPositionLoc takes item whichItem, location loc returns nothing",
    "name": "SetItemPositionLoc",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetItemPositionLoc(whichItem, loc)",
    "documentation": "移动物品 (立刻)"
  },
  "GetLearnedSkillBJ": {
    "original": "function GetLearnedSkillBJ takes nothing returns integer",
    "name": "GetLearnedSkillBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "integer",
    "insertText": "GetLearnedSkillBJ()",
    "documentation": "学习英雄技能"
  },
  "SuspendHeroXPBJ": {
    "original": "function SuspendHeroXPBJ takes boolean flag, unit whichHero returns nothing",
    "name": "SuspendHeroXPBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SuspendHeroXPBJ(flag, whichHero)",
    "documentation": "允许/禁止 英雄获得经验值"
  },
  "SetPlayerHandicapXPBJ": {
    "original": "function SetPlayerHandicapXPBJ takes player whichPlayer, real handicapPercent returns nothing",
    "name": "SetPlayerHandicapXPBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "real",
      "name": "handicapPercent",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerHandicapXPBJ(whichPlayer, handicapPercent)",
    "documentation": "设置玩家英雄经验值预先获得"
  },
  "GetPlayerHandicapXPBJ": {
    "original": "function GetPlayerHandicapXPBJ takes player whichPlayer returns real",
    "name": "GetPlayerHandicapXPBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetPlayerHandicapXPBJ(whichPlayer)",
    "documentation": "经验值比率"
  },
  "SetPlayerHandicapBJ": {
    "original": "function SetPlayerHandicapBJ takes player whichPlayer, real handicapPercent returns nothing",
    "name": "SetPlayerHandicapBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "real",
      "name": "handicapPercent",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerHandicapBJ(whichPlayer, handicapPercent)",
    "documentation": "设置玩家生命百分比"
  },
  "GetPlayerHandicapBJ": {
    "original": "function GetPlayerHandicapBJ takes player whichPlayer returns real",
    "name": "GetPlayerHandicapBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetPlayerHandicapBJ(whichPlayer)",
    "documentation": "经验值上限"
  },
  "GetHeroStatBJ": {
    "original": "function GetHeroStatBJ takes integer whichStat, unit whichHero, boolean includeBonuses returns integer",
    "name": "GetHeroStatBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "whichStat",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "includeBonuses",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetHeroStatBJ(whichStat, whichHero, includeBonuses)",
    "documentation": "英雄的属性"
  },
  "SetHeroStat": {
    "original": "function SetHeroStat takes unit whichHero, integer whichStat, integer value returns nothing",
    "name": "SetHeroStat",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "whichStat",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetHeroStat(whichHero, whichStat, value)",
    "documentation": ""
  },
  "ModifyHeroStat": {
    "original": "function ModifyHeroStat takes integer whichStat, unit whichHero, integer modifyMethod, integer value returns nothing",
    "name": "ModifyHeroStat",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "whichStat",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "modifyMethod",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ModifyHeroStat(whichStat, whichHero, modifyMethod, value)",
    "documentation": "改变英雄属性"
  },
  "ModifyHeroSkillPoints": {
    "original": "function ModifyHeroSkillPoints takes unit whichHero, integer modifyMethod, integer value returns boolean",
    "name": "ModifyHeroSkillPoints",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichHero",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "modifyMethod",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "value",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "ModifyHeroSkillPoints(whichHero, modifyMethod, value)",
    "documentation": "改变英雄技能点数"
  },
  "UnitDropItemPointBJ": {
    "original": "function UnitDropItemPointBJ takes unit whichUnit, item whichItem, real x, real y returns boolean",
    "name": "UnitDropItemPointBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitDropItemPointBJ(whichUnit, whichItem, x, y)",
    "documentation": ""
  },
  "UnitDropItemPointLoc": {
    "original": "function UnitDropItemPointLoc takes unit whichUnit, item whichItem, location loc returns boolean",
    "name": "UnitDropItemPointLoc",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitDropItemPointLoc(whichUnit, whichItem, loc)",
    "documentation": "丢弃物品于指定点"
  },
  "UnitDropItemSlotBJ": {
    "original": "function UnitDropItemSlotBJ takes unit whichUnit, item whichItem, integer slot returns boolean",
    "name": "UnitDropItemSlotBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "slot",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitDropItemSlotBJ(whichUnit, whichItem, slot)",
    "documentation": "放置物品于指定物品格"
  },
  "UnitDropItemTargetBJ": {
    "original": "function UnitDropItemTargetBJ takes unit whichUnit, item whichItem, widget target returns boolean",
    "name": "UnitDropItemTargetBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "widget",
      "name": "target",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitDropItemTargetBJ(whichUnit, whichItem, target)",
    "documentation": "将物品给予其它单位"
  },
  "UnitUseItemDestructable": {
    "original": "function UnitUseItemDestructable takes unit whichUnit, item whichItem, widget target returns boolean",
    "name": "UnitUseItemDestructable",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "widget",
      "name": "target",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitUseItemDestructable(whichUnit, whichItem, target)",
    "documentation": "对可毁坏物使用物品"
  },
  "UnitUseItemPointLoc": {
    "original": "function UnitUseItemPointLoc takes unit whichUnit, item whichItem, location loc returns boolean",
    "name": "UnitUseItemPointLoc",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitUseItemPointLoc(whichUnit, whichItem, loc)",
    "documentation": "对 点 使用物品"
  },
  "UnitItemInSlotBJ": {
    "original": "function UnitItemInSlotBJ takes unit whichUnit, integer itemSlot returns item",
    "name": "UnitItemInSlotBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "itemSlot",
      "documentation": ""
    }],
    "returnType": "item",
    "insertText": "UnitItemInSlotBJ(whichUnit, itemSlot)",
    "documentation": "英雄携带的物品"
  },
  "GetInventoryIndexOfItemTypeBJ": {
    "original": "function GetInventoryIndexOfItemTypeBJ takes unit whichUnit, integer itemId returns integer",
    "name": "GetInventoryIndexOfItemTypeBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "itemId",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetInventoryIndexOfItemTypeBJ(whichUnit, itemId)",
    "documentation": "~单位, 所持有的 ,~物品类型, 的物品栏序号"
  },
  "GetItemOfTypeFromUnitBJ": {
    "original": "function GetItemOfTypeFromUnitBJ takes unit whichUnit, integer itemId returns item",
    "name": "GetItemOfTypeFromUnitBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "itemId",
      "documentation": ""
    }],
    "returnType": "item",
    "insertText": "GetItemOfTypeFromUnitBJ(whichUnit, itemId)",
    "documentation": "英雄携带的物品类型"
  },
  "UnitHasItemOfTypeBJ": {
    "original": "function UnitHasItemOfTypeBJ takes unit whichUnit, integer itemId returns boolean",
    "name": "UnitHasItemOfTypeBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "itemId",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitHasItemOfTypeBJ(whichUnit, itemId)",
    "documentation": "英雄已有 物品 - 类型"
  },
  "UnitInventoryCount": {
    "original": "function UnitInventoryCount takes unit whichUnit returns integer",
    "name": "UnitInventoryCount",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "UnitInventoryCount(whichUnit)",
    "documentation": "单位物品的数量"
  },
  "UnitInventorySizeBJ": {
    "original": "function UnitInventorySizeBJ takes unit whichUnit returns integer",
    "name": "UnitInventorySizeBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "UnitInventorySizeBJ(whichUnit)",
    "documentation": "物品栏容量"
  },
  "SetItemInvulnerableBJ": {
    "original": "function SetItemInvulnerableBJ takes item whichItem, boolean flag returns nothing",
    "name": "SetItemInvulnerableBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetItemInvulnerableBJ(whichItem, flag)",
    "documentation": "设置物品 无敌/可攻击"
  },
  "SetItemDropOnDeathBJ": {
    "original": "function SetItemDropOnDeathBJ takes item whichItem, boolean flag returns nothing",
    "name": "SetItemDropOnDeathBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetItemDropOnDeathBJ(whichItem, flag)",
    "documentation": "设置英雄死亡后能否物品掉落"
  },
  "SetItemDroppableBJ": {
    "original": "function SetItemDroppableBJ takes item whichItem, boolean flag returns nothing",
    "name": "SetItemDroppableBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetItemDroppableBJ(whichItem, flag)",
    "documentation": "设置物品能否丢弃"
  },
  "SetItemPlayerBJ": {
    "original": "function SetItemPlayerBJ takes item whichItem, player whichPlayer, boolean changeColor returns nothing",
    "name": "SetItemPlayerBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "changeColor",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetItemPlayerBJ(whichItem, whichPlayer, changeColor)",
    "documentation": "改变物品的所有者"
  },
  "SetItemVisibleBJ": {
    "original": "function SetItemVisibleBJ takes boolean show, item whichItem returns nothing",
    "name": "SetItemVisibleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "show",
      "documentation": ""
    }, {
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetItemVisibleBJ(show, whichItem)",
    "documentation": "显示/隐藏 物品"
  },
  "IsItemHiddenBJ": {
    "original": "function IsItemHiddenBJ takes item whichItem returns boolean",
    "name": "IsItemHiddenBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsItemHiddenBJ(whichItem)",
    "documentation": "物品是隐藏的"
  },
  "ChooseRandomItemBJ": {
    "original": "function ChooseRandomItemBJ takes integer level returns integer",
    "name": "ChooseRandomItemBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "level",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "ChooseRandomItemBJ(level)",
    "documentation": "随机物品-所有类别"
  },
  "ChooseRandomItemExBJ": {
    "original": "function ChooseRandomItemExBJ takes integer level, itemtype whichType returns integer",
    "name": "ChooseRandomItemExBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "level",
      "documentation": ""
    }, {
      "type": "itemtype",
      "name": "whichType",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "ChooseRandomItemExBJ(level, whichType)",
    "documentation": "随机物品-有类别"
  },
  "ChooseRandomNPBuildingBJ": {
    "original": "function ChooseRandomNPBuildingBJ takes nothing returns integer",
    "name": "ChooseRandomNPBuildingBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "integer",
    "insertText": "ChooseRandomNPBuildingBJ()",
    "documentation": "随机的中立建筑物类型"
  },
  "ChooseRandomCreepBJ": {
    "original": "function ChooseRandomCreepBJ takes integer level returns integer",
    "name": "ChooseRandomCreepBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "level",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "ChooseRandomCreepBJ(level)",
    "documentation": "随机的野生单位单位类型(有等级)"
  },
  "EnumItemsInRectBJ": {
    "original": "function EnumItemsInRectBJ takes rect r, code actionFunc returns nothing",
    "name": "EnumItemsInRectBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "rect",
      "name": "r",
      "documentation": ""
    }, {
      "type": "code",
      "name": "actionFunc",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "EnumItemsInRectBJ(r, actionFunc)",
    "documentation": "选取所有物品在 区域 做动作(单一的)"
  },
  "RandomItemInRectBJEnum": {
    "original": "function RandomItemInRectBJEnum takes nothing returns nothing",
    "name": "RandomItemInRectBJEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "RandomItemInRectBJEnum()",
    "documentation": ""
  },
  "RandomItemInRectBJ": {
    "original": "function RandomItemInRectBJ takes rect r, boolexpr filter returns item",
    "name": "RandomItemInRectBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "rect",
      "name": "r",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "filter",
      "documentation": ""
    }],
    "returnType": "item",
    "insertText": "RandomItemInRectBJ(r, filter)",
    "documentation": "随机物品在区域并匹配条件"
  },
  "RandomItemInRectSimpleBJ": {
    "original": "function RandomItemInRectSimpleBJ takes rect r returns item",
    "name": "RandomItemInRectSimpleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "rect",
      "name": "r",
      "documentation": ""
    }],
    "returnType": "item",
    "insertText": "RandomItemInRectSimpleBJ(r)",
    "documentation": "随机物品在区域"
  },
  "CheckItemStatus": {
    "original": "function CheckItemStatus takes item whichItem, integer status returns boolean",
    "name": "CheckItemStatus",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "status",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "CheckItemStatus(whichItem, status)",
    "documentation": "物品状态检查"
  },
  "CheckItemcodeStatus": {
    "original": "function CheckItemcodeStatus takes integer itemId, integer status returns boolean",
    "name": "CheckItemcodeStatus",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "itemId",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "status",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "CheckItemcodeStatus(itemId, status)",
    "documentation": "物品 - 类型 状态检查"
  },
  "UnitId2OrderIdBJ": {
    "original": "function UnitId2OrderIdBJ takes integer unitId returns integer",
    "name": "UnitId2OrderIdBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "unitId",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "UnitId2OrderIdBJ(unitId)",
    "documentation": "将单位类型转换为命令"
  },
  "String2UnitIdBJ": {
    "original": "function String2UnitIdBJ takes string unitIdString returns integer",
    "name": "String2UnitIdBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "unitIdString",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "String2UnitIdBJ(unitIdString)",
    "documentation": "将单位类型转换为字符串"
  },
  "UnitId2StringBJ": {
    "original": "function UnitId2StringBJ takes integer unitId returns string",
    "name": "UnitId2StringBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "unitId",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "UnitId2StringBJ(unitId)",
    "documentation": "将单位转换为字符串"
  },
  "String2OrderIdBJ": {
    "original": "function String2OrderIdBJ takes string orderIdString returns integer",
    "name": "String2OrderIdBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "orderIdString",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "String2OrderIdBJ(orderIdString)",
    "documentation": "将字符串转换为命令"
  },
  "OrderId2StringBJ": {
    "original": "function OrderId2StringBJ takes integer orderId returns string",
    "name": "OrderId2StringBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "orderId",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "OrderId2StringBJ(orderId)",
    "documentation": "将命令转换为字符串"
  },
  "GetIssuedOrderIdBJ": {
    "original": "function GetIssuedOrderIdBJ takes nothing returns integer",
    "name": "GetIssuedOrderIdBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "integer",
    "insertText": "GetIssuedOrderIdBJ()",
    "documentation": "发出的命令"
  },
  "GetKillingUnitBJ": {
    "original": "function GetKillingUnitBJ takes nothing returns unit",
    "name": "GetKillingUnitBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "unit",
    "insertText": "GetKillingUnitBJ()",
    "documentation": "凶手单位"
  },
  "CreateUnitAtLocSaveLast": {
    "original": "function CreateUnitAtLocSaveLast takes player id, integer unitid, location loc, real face returns unit",
    "name": "CreateUnitAtLocSaveLast",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "id",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }, {
      "type": "real",
      "name": "face",
      "documentation": ""
    }],
    "returnType": "unit",
    "insertText": "CreateUnitAtLocSaveLast(id, unitid, loc, face)",
    "documentation": ""
  },
  "GetLastCreatedUnit": {
    "original": "function GetLastCreatedUnit takes nothing returns unit",
    "name": "GetLastCreatedUnit",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "unit",
    "insertText": "GetLastCreatedUnit()",
    "documentation": "最后创建的单位"
  },
  "CreateNUnitsAtLoc": {
    "original": "function CreateNUnitsAtLoc takes integer count, integer unitId, player whichPlayer, location loc, real face returns group",
    "name": "CreateNUnitsAtLoc",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "count",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitId",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }, {
      "type": "real",
      "name": "face",
      "documentation": ""
    }],
    "returnType": "group",
    "insertText": "CreateNUnitsAtLoc(count, unitId, whichPlayer, loc, face)",
    "documentation": "创造单位面对角度"
  },
  "CreateNUnitsAtLocFacingLocBJ": {
    "original": "function CreateNUnitsAtLocFacingLocBJ takes integer count, integer unitId, player whichPlayer, location loc, location lookAt returns group",
    "name": "CreateNUnitsAtLocFacingLocBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "count",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitId",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }, {
      "type": "location",
      "name": "lookAt",
      "documentation": ""
    }],
    "returnType": "group",
    "insertText": "CreateNUnitsAtLocFacingLocBJ(count, unitId, whichPlayer, loc, lookAt)",
    "documentation": "创造单位面对点"
  },
  "GetLastCreatedGroupEnum": {
    "original": "function GetLastCreatedGroupEnum takes nothing returns nothing",
    "name": "GetLastCreatedGroupEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "GetLastCreatedGroupEnum()",
    "documentation": ""
  },
  "GetLastCreatedGroup": {
    "original": "function GetLastCreatedGroup takes nothing returns group",
    "name": "GetLastCreatedGroup",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "group",
    "insertText": "GetLastCreatedGroup()",
    "documentation": "最后创建的单位组"
  },
  "CreateCorpseLocBJ": {
    "original": "function CreateCorpseLocBJ takes integer unitid, player whichPlayer, location loc returns unit",
    "name": "CreateCorpseLocBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }],
    "returnType": "unit",
    "insertText": "CreateCorpseLocBJ(unitid, whichPlayer, loc)",
    "documentation": "创造尸体"
  },
  "UnitSuspendDecayBJ": {
    "original": "function UnitSuspendDecayBJ takes boolean suspend, unit whichUnit returns nothing",
    "name": "UnitSuspendDecayBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "suspend",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UnitSuspendDecayBJ(suspend, whichUnit)",
    "documentation": "设置尸体腐烂方式"
  },
  "DelayedSuspendDecayStopAnimEnum": {
    "original": "function DelayedSuspendDecayStopAnimEnum takes nothing returns nothing",
    "name": "DelayedSuspendDecayStopAnimEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "DelayedSuspendDecayStopAnimEnum()",
    "documentation": ""
  },
  "DelayedSuspendDecayBoneEnum": {
    "original": "function DelayedSuspendDecayBoneEnum takes nothing returns nothing",
    "name": "DelayedSuspendDecayBoneEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "DelayedSuspendDecayBoneEnum()",
    "documentation": ""
  },
  "DelayedSuspendDecayFleshEnum": {
    "original": "function DelayedSuspendDecayFleshEnum takes nothing returns nothing",
    "name": "DelayedSuspendDecayFleshEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "DelayedSuspendDecayFleshEnum()",
    "documentation": ""
  },
  "DelayedSuspendDecay": {
    "original": "function DelayedSuspendDecay takes nothing returns nothing",
    "name": "DelayedSuspendDecay",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "DelayedSuspendDecay()",
    "documentation": ""
  },
  "DelayedSuspendDecayCreate": {
    "original": "function DelayedSuspendDecayCreate takes nothing returns nothing",
    "name": "DelayedSuspendDecayCreate",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "DelayedSuspendDecayCreate()",
    "documentation": ""
  },
  "CreatePermanentCorpseLocBJ": {
    "original": "function CreatePermanentCorpseLocBJ takes integer style, integer unitid, player whichPlayer, location loc, real facing returns unit",
    "name": "CreatePermanentCorpseLocBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "style",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }, {
      "type": "real",
      "name": "facing",
      "documentation": ""
    }],
    "returnType": "unit",
    "insertText": "CreatePermanentCorpseLocBJ(style, unitid, whichPlayer, loc, facing)",
    "documentation": "创造永久的尸体"
  },
  "GetUnitStateSwap": {
    "original": "function GetUnitStateSwap takes unitstate whichState, unit whichUnit returns real",
    "name": "GetUnitStateSwap",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unitstate",
      "name": "whichState",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetUnitStateSwap(whichState, whichUnit)",
    "documentation": "单位属性"
  },
  "GetUnitStatePercent": {
    "original": "function GetUnitStatePercent takes unit whichUnit, unitstate whichState, unitstate whichMaxState returns real",
    "name": "GetUnitStatePercent",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "unitstate",
      "name": "whichState",
      "documentation": ""
    }, {
      "type": "unitstate",
      "name": "whichMaxState",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetUnitStatePercent(whichUnit, whichState, whichMaxState)",
    "documentation": ""
  },
  "GetUnitLifePercent": {
    "original": "function GetUnitLifePercent takes unit whichUnit returns real",
    "name": "GetUnitLifePercent",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetUnitLifePercent(whichUnit)",
    "documentation": "生命值百分比"
  },
  "GetUnitManaPercent": {
    "original": "function GetUnitManaPercent takes unit whichUnit returns real",
    "name": "GetUnitManaPercent",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetUnitManaPercent(whichUnit)",
    "documentation": "魔法值百分比"
  },
  "SelectUnitSingle": {
    "original": "function SelectUnitSingle takes unit whichUnit returns nothing",
    "name": "SelectUnitSingle",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SelectUnitSingle(whichUnit)",
    "documentation": "选定单位"
  },
  "SelectGroupBJEnum": {
    "original": "function SelectGroupBJEnum takes nothing returns nothing",
    "name": "SelectGroupBJEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "SelectGroupBJEnum()",
    "documentation": ""
  },
  "SelectGroupBJ": {
    "original": "function SelectGroupBJ takes group g returns nothing",
    "name": "SelectGroupBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "group",
      "name": "g",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SelectGroupBJ(g)",
    "documentation": "选定单位组"
  },
  "SelectUnitAdd": {
    "original": "function SelectUnitAdd takes unit whichUnit returns nothing",
    "name": "SelectUnitAdd",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SelectUnitAdd(whichUnit)",
    "documentation": "命令所有玩家添加选择 ,~单位"
  },
  "SelectUnitRemove": {
    "original": "function SelectUnitRemove takes unit whichUnit returns nothing",
    "name": "SelectUnitRemove",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SelectUnitRemove(whichUnit)",
    "documentation": "清除单位选择"
  },
  "ClearSelectionForPlayer": {
    "original": "function ClearSelectionForPlayer takes player whichPlayer returns nothing",
    "name": "ClearSelectionForPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ClearSelectionForPlayer(whichPlayer)",
    "documentation": "清除选定对玩家"
  },
  "SelectUnitForPlayerSingle": {
    "original": "function SelectUnitForPlayerSingle takes unit whichUnit, player whichPlayer returns nothing",
    "name": "SelectUnitForPlayerSingle",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SelectUnitForPlayerSingle(whichUnit, whichPlayer)",
    "documentation": "选定单位对玩家"
  },
  "SelectGroupForPlayerBJ": {
    "original": "function SelectGroupForPlayerBJ takes group g, player whichPlayer returns nothing",
    "name": "SelectGroupForPlayerBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "group",
      "name": "g",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SelectGroupForPlayerBJ(g, whichPlayer)",
    "documentation": "清除选定单位组对玩家"
  },
  "SelectUnitAddForPlayer": {
    "original": "function SelectUnitAddForPlayer takes unit whichUnit, player whichPlayer returns nothing",
    "name": "SelectUnitAddForPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SelectUnitAddForPlayer(whichUnit, whichPlayer)",
    "documentation": "增加单位到玩家的选定中"
  },
  "SelectUnitRemoveForPlayer": {
    "original": "function SelectUnitRemoveForPlayer takes unit whichUnit, player whichPlayer returns nothing",
    "name": "SelectUnitRemoveForPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SelectUnitRemoveForPlayer(whichUnit, whichPlayer)",
    "documentation": "清除单位的选定为玩家"
  },
  "SetUnitLifeBJ": {
    "original": "function SetUnitLifeBJ takes unit whichUnit, real newValue returns nothing",
    "name": "SetUnitLifeBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "newValue",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitLifeBJ(whichUnit, newValue)",
    "documentation": "设置单位生命值 (数值)"
  },
  "SetUnitManaBJ": {
    "original": "function SetUnitManaBJ takes unit whichUnit, real newValue returns nothing",
    "name": "SetUnitManaBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "newValue",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitManaBJ(whichUnit, newValue)",
    "documentation": "设置单位魔法值 (数值)"
  },
  "SetUnitLifePercentBJ": {
    "original": "function SetUnitLifePercentBJ takes unit whichUnit, real percent returns nothing",
    "name": "SetUnitLifePercentBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "percent",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitLifePercentBJ(whichUnit, percent)",
    "documentation": "设置单位生命值 (百分比)"
  },
  "SetUnitManaPercentBJ": {
    "original": "function SetUnitManaPercentBJ takes unit whichUnit, real percent returns nothing",
    "name": "SetUnitManaPercentBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "percent",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitManaPercentBJ(whichUnit, percent)",
    "documentation": "设置单位魔法值 (百分比)"
  },
  "IsUnitDeadBJ": {
    "original": "function IsUnitDeadBJ takes unit whichUnit returns boolean",
    "name": "IsUnitDeadBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitDeadBJ(whichUnit)",
    "documentation": "单位是已死亡的"
  },
  "IsUnitAliveBJ": {
    "original": "function IsUnitAliveBJ takes unit whichUnit returns boolean",
    "name": "IsUnitAliveBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitAliveBJ(whichUnit)",
    "documentation": "单位是活着的"
  },
  "IsUnitGroupDeadBJEnum": {
    "original": "function IsUnitGroupDeadBJEnum takes nothing returns nothing",
    "name": "IsUnitGroupDeadBJEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "IsUnitGroupDeadBJEnum()",
    "documentation": ""
  },
  "IsUnitGroupDeadBJ": {
    "original": "function IsUnitGroupDeadBJ takes group g returns boolean",
    "name": "IsUnitGroupDeadBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "group",
      "name": "g",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitGroupDeadBJ(g)",
    "documentation": "单位组的单位是已死亡的"
  },
  "IsUnitGroupEmptyBJEnum": {
    "original": "function IsUnitGroupEmptyBJEnum takes nothing returns nothing",
    "name": "IsUnitGroupEmptyBJEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "IsUnitGroupEmptyBJEnum()",
    "documentation": ""
  },
  "IsUnitGroupEmptyBJ": {
    "original": "function IsUnitGroupEmptyBJ takes group g returns boolean",
    "name": "IsUnitGroupEmptyBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "group",
      "name": "g",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitGroupEmptyBJ(g)",
    "documentation": "单位组是空的"
  },
  "IsUnitGroupInRectBJEnum": {
    "original": "function IsUnitGroupInRectBJEnum takes nothing returns nothing",
    "name": "IsUnitGroupInRectBJEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "IsUnitGroupInRectBJEnum()",
    "documentation": ""
  },
  "IsUnitGroupInRectBJ": {
    "original": "function IsUnitGroupInRectBJ takes group g, rect r returns boolean",
    "name": "IsUnitGroupInRectBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "group",
      "name": "g",
      "documentation": ""
    }, {
      "type": "rect",
      "name": "r",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitGroupInRectBJ(g, r)",
    "documentation": "单位组的单位在区域"
  },
  "IsUnitHiddenBJ": {
    "original": "function IsUnitHiddenBJ takes unit whichUnit returns boolean",
    "name": "IsUnitHiddenBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitHiddenBJ(whichUnit)",
    "documentation": "单位被隐藏"
  },
  "ShowUnitHide": {
    "original": "function ShowUnitHide takes unit whichUnit returns nothing",
    "name": "ShowUnitHide",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ShowUnitHide(whichUnit)",
    "documentation": "隐藏单位"
  },
  "ShowUnitShow": {
    "original": "function ShowUnitShow takes unit whichUnit returns nothing",
    "name": "ShowUnitShow",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ShowUnitShow(whichUnit)",
    "documentation": "显示单位"
  },
  "IssueHauntOrderAtLocBJFilter": {
    "original": "function IssueHauntOrderAtLocBJFilter takes nothing returns boolean",
    "name": "IssueHauntOrderAtLocBJFilter",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "boolean",
    "insertText": "IssueHauntOrderAtLocBJFilter()",
    "documentation": ""
  },
  "IssueHauntOrderAtLocBJ": {
    "original": "function IssueHauntOrderAtLocBJ takes unit whichPeon, location loc returns boolean",
    "name": "IssueHauntOrderAtLocBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichPeon",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IssueHauntOrderAtLocBJ(whichPeon, loc)",
    "documentation": ""
  },
  "IssueBuildOrderByIdLocBJ": {
    "original": "function IssueBuildOrderByIdLocBJ takes unit whichPeon, integer unitId, location loc returns boolean",
    "name": "IssueBuildOrderByIdLocBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichPeon",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitId",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IssueBuildOrderByIdLocBJ(whichPeon, unitId, loc)",
    "documentation": "发送命令到 建造建筑"
  },
  "IssueTrainOrderByIdBJ": {
    "original": "function IssueTrainOrderByIdBJ takes unit whichUnit, integer unitId returns boolean",
    "name": "IssueTrainOrderByIdBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitId",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IssueTrainOrderByIdBJ(whichUnit, unitId)",
    "documentation": "发送命令到 训练兵种/升级建筑"
  },
  "GroupTrainOrderByIdBJ": {
    "original": "function GroupTrainOrderByIdBJ takes group g, integer unitId returns boolean",
    "name": "GroupTrainOrderByIdBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "group",
      "name": "g",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitId",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "GroupTrainOrderByIdBJ(g, unitId)",
    "documentation": "发送单位组命令到 训练兵种/升级建筑"
  },
  "IssueUpgradeOrderByIdBJ": {
    "original": "function IssueUpgradeOrderByIdBJ takes unit whichUnit, integer techId returns boolean",
    "name": "IssueUpgradeOrderByIdBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "techId",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IssueUpgradeOrderByIdBJ(whichUnit, techId)",
    "documentation": "发送命令到 研究科技"
  },
  "GetAttackedUnitBJ": {
    "original": "function GetAttackedUnitBJ takes nothing returns unit",
    "name": "GetAttackedUnitBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "unit",
    "insertText": "GetAttackedUnitBJ()",
    "documentation": "被攻击的单位"
  },
  "SetUnitFlyHeightBJ": {
    "original": "function SetUnitFlyHeightBJ takes unit whichUnit, real newHeight, real rate returns nothing",
    "name": "SetUnitFlyHeightBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "newHeight",
      "documentation": ""
    }, {
      "type": "real",
      "name": "rate",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitFlyHeightBJ(whichUnit, newHeight, rate)",
    "documentation": "改变单位飞行高度"
  },
  "SetUnitTurnSpeedBJ": {
    "original": "function SetUnitTurnSpeedBJ takes unit whichUnit, real turnSpeed returns nothing",
    "name": "SetUnitTurnSpeedBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "turnSpeed",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitTurnSpeedBJ(whichUnit, turnSpeed)",
    "documentation": "改变单位转向速度"
  },
  "SetUnitPropWindowBJ": {
    "original": "function SetUnitPropWindowBJ takes unit whichUnit, real propWindow returns nothing",
    "name": "SetUnitPropWindowBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "propWindow",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitPropWindowBJ(whichUnit, propWindow)",
    "documentation": "改变单位头像视窗角度"
  },
  "GetUnitPropWindowBJ": {
    "original": "function GetUnitPropWindowBJ takes unit whichUnit returns real",
    "name": "GetUnitPropWindowBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetUnitPropWindowBJ(whichUnit)",
    "documentation": "单位在头像窗口的角度 (当前)"
  },
  "GetUnitDefaultPropWindowBJ": {
    "original": "function GetUnitDefaultPropWindowBJ takes unit whichUnit returns real",
    "name": "GetUnitDefaultPropWindowBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetUnitDefaultPropWindowBJ(whichUnit)",
    "documentation": "单位在头像窗口的角度 (默认)"
  },
  "SetUnitBlendTimeBJ": {
    "original": "function SetUnitBlendTimeBJ takes unit whichUnit, real blendTime returns nothing",
    "name": "SetUnitBlendTimeBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "blendTime",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitBlendTimeBJ(whichUnit, blendTime)",
    "documentation": "改变单位混合时间"
  },
  "SetUnitAcquireRangeBJ": {
    "original": "function SetUnitAcquireRangeBJ takes unit whichUnit, real acquireRange returns nothing",
    "name": "SetUnitAcquireRangeBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "acquireRange",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitAcquireRangeBJ(whichUnit, acquireRange)",
    "documentation": "设置感知敌人距离"
  },
  "UnitSetCanSleepBJ": {
    "original": "function UnitSetCanSleepBJ takes unit whichUnit, boolean canSleep returns nothing",
    "name": "UnitSetCanSleepBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "canSleep",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UnitSetCanSleepBJ(whichUnit, canSleep)",
    "documentation": "设置单位睡眠(之在晚上)"
  },
  "UnitCanSleepBJ": {
    "original": "function UnitCanSleepBJ takes unit whichUnit returns boolean",
    "name": "UnitCanSleepBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitCanSleepBJ(whichUnit)",
    "documentation": "单位晚上睡觉"
  },
  "UnitWakeUpBJ": {
    "original": "function UnitWakeUpBJ takes unit whichUnit returns nothing",
    "name": "UnitWakeUpBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UnitWakeUpBJ(whichUnit)",
    "documentation": "设置单位醒来"
  },
  "UnitIsSleepingBJ": {
    "original": "function UnitIsSleepingBJ takes unit whichUnit returns boolean",
    "name": "UnitIsSleepingBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitIsSleepingBJ(whichUnit)",
    "documentation": "单位正在睡觉"
  },
  "WakePlayerUnitsEnum": {
    "original": "function WakePlayerUnitsEnum takes nothing returns nothing",
    "name": "WakePlayerUnitsEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "WakePlayerUnitsEnum()",
    "documentation": ""
  },
  "WakePlayerUnits": {
    "original": "function WakePlayerUnits takes player whichPlayer returns nothing",
    "name": "WakePlayerUnits",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "WakePlayerUnits(whichPlayer)",
    "documentation": ""
  },
  "EnableCreepSleepBJ": {
    "original": "function EnableCreepSleepBJ takes boolean enable returns nothing",
    "name": "EnableCreepSleepBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "enable",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "EnableCreepSleepBJ(enable)",
    "documentation": "允许/禁止 所有野生单位夜间睡眠"
  },
  "UnitGenerateAlarms": {
    "original": "function UnitGenerateAlarms takes unit whichUnit, boolean generate returns boolean",
    "name": "UnitGenerateAlarms",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "generate",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitGenerateAlarms(whichUnit, generate)",
    "documentation": "设置警报产生 打开/关闭"
  },
  "DoesUnitGenerateAlarms": {
    "original": "function DoesUnitGenerateAlarms takes unit whichUnit returns boolean",
    "name": "DoesUnitGenerateAlarms",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "DoesUnitGenerateAlarms(whichUnit)",
    "documentation": "单位发出警报"
  },
  "PauseAllUnitsBJEnum": {
    "original": "function PauseAllUnitsBJEnum takes nothing returns nothing",
    "name": "PauseAllUnitsBJEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "PauseAllUnitsBJEnum()",
    "documentation": ""
  },
  "PauseAllUnitsBJ": {
    "original": "function PauseAllUnitsBJ takes boolean pause returns nothing",
    "name": "PauseAllUnitsBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "pause",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PauseAllUnitsBJ(pause)",
    "documentation": "暂停/恢复 所有单位"
  },
  "PauseUnitBJ": {
    "original": "function PauseUnitBJ takes boolean pause, unit whichUnit returns nothing",
    "name": "PauseUnitBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "pause",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PauseUnitBJ(pause, whichUnit)",
    "documentation": "设置单位 暂停/恢复"
  },
  "IsUnitPausedBJ": {
    "original": "function IsUnitPausedBJ takes unit whichUnit returns boolean",
    "name": "IsUnitPausedBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitPausedBJ(whichUnit)",
    "documentation": "单位被暂停"
  },
  "UnitPauseTimedLifeBJ": {
    "original": "function UnitPauseTimedLifeBJ takes boolean flag, unit whichUnit returns nothing",
    "name": "UnitPauseTimedLifeBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UnitPauseTimedLifeBJ(flag, whichUnit)",
    "documentation": "暂停/恢复 单位生命计时器"
  },
  "UnitApplyTimedLifeBJ": {
    "original": "function UnitApplyTimedLifeBJ takes real duration, integer buffId, unit whichUnit returns nothing",
    "name": "UnitApplyTimedLifeBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "duration",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "buffId",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UnitApplyTimedLifeBJ(duration, buffId, whichUnit)",
    "documentation": "设置单位生命计时器"
  },
  "UnitShareVisionBJ": {
    "original": "function UnitShareVisionBJ takes boolean share, unit whichUnit, player whichPlayer returns nothing",
    "name": "UnitShareVisionBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "share",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UnitShareVisionBJ(share, whichUnit, whichPlayer)",
    "documentation": "共享单位视野"
  },
  "UnitRemoveBuffsBJ": {
    "original": "function UnitRemoveBuffsBJ takes integer buffType, unit whichUnit returns nothing",
    "name": "UnitRemoveBuffsBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "buffType",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UnitRemoveBuffsBJ(buffType, whichUnit)",
    "documentation": "删除 持续状态"
  },
  "UnitRemoveBuffsExBJ": {
    "original": "function UnitRemoveBuffsExBJ takes integer polarity, integer resist, unit whichUnit, boolean bTLife, boolean bAura returns nothing",
    "name": "UnitRemoveBuffsExBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "polarity",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "resist",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "bTLife",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "bAura",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UnitRemoveBuffsExBJ(polarity, resist, whichUnit, bTLife, bAura)",
    "documentation": "删除 持续状态 (按类型)"
  },
  "UnitCountBuffsExBJ": {
    "original": "function UnitCountBuffsExBJ takes integer polarity, integer resist, unit whichUnit, boolean bTLife, boolean bAura returns integer",
    "name": "UnitCountBuffsExBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "polarity",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "resist",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "bTLife",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "bAura",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "UnitCountBuffsExBJ(polarity, resist, whichUnit, bTLife, bAura)",
    "documentation": "魔法效果/特殊效果 的数量"
  },
  "UnitRemoveAbilityBJ": {
    "original": "function UnitRemoveAbilityBJ takes integer abilityId, unit whichUnit returns boolean",
    "name": "UnitRemoveAbilityBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "abilityId",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitRemoveAbilityBJ(abilityId, whichUnit)",
    "documentation": "删除单位技能"
  },
  "UnitAddAbilityBJ": {
    "original": "function UnitAddAbilityBJ takes integer abilityId, unit whichUnit returns boolean",
    "name": "UnitAddAbilityBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "abilityId",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitAddAbilityBJ(abilityId, whichUnit)",
    "documentation": "增加单位技能"
  },
  "UnitRemoveTypeBJ": {
    "original": "function UnitRemoveTypeBJ takes unittype whichType, unit whichUnit returns boolean",
    "name": "UnitRemoveTypeBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unittype",
      "name": "whichType",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitRemoveTypeBJ(whichType, whichUnit)",
    "documentation": "移除类别"
  },
  "UnitAddTypeBJ": {
    "original": "function UnitAddTypeBJ takes unittype whichType, unit whichUnit returns boolean",
    "name": "UnitAddTypeBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unittype",
      "name": "whichType",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitAddTypeBJ(whichType, whichUnit)",
    "documentation": "添加类别"
  },
  "UnitMakeAbilityPermanentBJ": {
    "original": "function UnitMakeAbilityPermanentBJ takes boolean permanent, integer abilityId, unit whichUnit returns boolean",
    "name": "UnitMakeAbilityPermanentBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "permanent",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "abilityId",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitMakeAbilityPermanentBJ(permanent, abilityId, whichUnit)",
    "documentation": ""
  },
  "SetUnitExplodedBJ": {
    "original": "function SetUnitExplodedBJ takes unit whichUnit, boolean exploded returns nothing",
    "name": "SetUnitExplodedBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "exploded",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitExplodedBJ(whichUnit, exploded)",
    "documentation": "设置单位死亡方式"
  },
  "ExplodeUnitBJ": {
    "original": "function ExplodeUnitBJ takes unit whichUnit returns nothing",
    "name": "ExplodeUnitBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ExplodeUnitBJ(whichUnit)",
    "documentation": "使单位爆炸而死"
  },
  "GetTransportUnitBJ": {
    "original": "function GetTransportUnitBJ takes nothing returns unit",
    "name": "GetTransportUnitBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "unit",
    "insertText": "GetTransportUnitBJ()",
    "documentation": "传送单位"
  },
  "GetLoadedUnitBJ": {
    "original": "function GetLoadedUnitBJ takes nothing returns unit",
    "name": "GetLoadedUnitBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "unit",
    "insertText": "GetLoadedUnitBJ()",
    "documentation": "载入单位"
  },
  "IsUnitInTransportBJ": {
    "original": "function IsUnitInTransportBJ takes unit whichUnit, unit whichTransport returns boolean",
    "name": "IsUnitInTransportBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichTransport",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitInTransportBJ(whichUnit, whichTransport)",
    "documentation": "单位已经装载"
  },
  "IsUnitLoadedBJ": {
    "original": "function IsUnitLoadedBJ takes unit whichUnit returns boolean",
    "name": "IsUnitLoadedBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitLoadedBJ(whichUnit)",
    "documentation": "单位正在被送"
  },
  "IsUnitIllusionBJ": {
    "original": "function IsUnitIllusionBJ takes unit whichUnit returns boolean",
    "name": "IsUnitIllusionBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsUnitIllusionBJ(whichUnit)",
    "documentation": "单位是隐形的"
  },
  "ReplaceUnitBJ": {
    "original": "function ReplaceUnitBJ takes unit whichUnit, integer newUnitId, integer unitStateMethod returns unit",
    "name": "ReplaceUnitBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "newUnitId",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitStateMethod",
      "documentation": ""
    }],
    "returnType": "unit",
    "insertText": "ReplaceUnitBJ(whichUnit, newUnitId, unitStateMethod)",
    "documentation": "替换单位"
  },
  "GetLastReplacedUnitBJ": {
    "original": "function GetLastReplacedUnitBJ takes nothing returns unit",
    "name": "GetLastReplacedUnitBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "unit",
    "insertText": "GetLastReplacedUnitBJ()",
    "documentation": "最后替换的单位"
  },
  "SetUnitPositionLocFacingBJ": {
    "original": "function SetUnitPositionLocFacingBJ takes unit whichUnit, location loc, real facing returns nothing",
    "name": "SetUnitPositionLocFacingBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }, {
      "type": "real",
      "name": "facing",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitPositionLocFacingBJ(whichUnit, loc, facing)",
    "documentation": "移动单位并改变面对角度 (立刻)"
  },
  "SetUnitPositionLocFacingLocBJ": {
    "original": "function SetUnitPositionLocFacingLocBJ takes unit whichUnit, location loc, location lookAt returns nothing",
    "name": "SetUnitPositionLocFacingLocBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }, {
      "type": "location",
      "name": "lookAt",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitPositionLocFacingLocBJ(whichUnit, loc, lookAt)",
    "documentation": "移动单位并改变面对点 (立刻)"
  },
  "AddItemToStockBJ": {
    "original": "function AddItemToStockBJ takes integer itemId, unit whichUnit, integer currentStock, integer stockMax returns nothing",
    "name": "AddItemToStockBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "itemId",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "currentStock",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "stockMax",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "AddItemToStockBJ(itemId, whichUnit, currentStock, stockMax)",
    "documentation": "增加 物品-类型 (到商店)"
  },
  "AddUnitToStockBJ": {
    "original": "function AddUnitToStockBJ takes integer unitId, unit whichUnit, integer currentStock, integer stockMax returns nothing",
    "name": "AddUnitToStockBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "unitId",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "currentStock",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "stockMax",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "AddUnitToStockBJ(unitId, whichUnit, currentStock, stockMax)",
    "documentation": "增加 单位-类型 (到商店)"
  },
  "RemoveItemFromStockBJ": {
    "original": "function RemoveItemFromStockBJ takes integer itemId, unit whichUnit returns nothing",
    "name": "RemoveItemFromStockBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "itemId",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RemoveItemFromStockBJ(itemId, whichUnit)",
    "documentation": "删除 物品-类型 (从商店)"
  },
  "RemoveUnitFromStockBJ": {
    "original": "function RemoveUnitFromStockBJ takes integer unitId, unit whichUnit returns nothing",
    "name": "RemoveUnitFromStockBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "unitId",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RemoveUnitFromStockBJ(unitId, whichUnit)",
    "documentation": "删除 单位-类型 (从商店)"
  },
  "SetUnitUseFoodBJ": {
    "original": "function SetUnitUseFoodBJ takes boolean enable, unit whichUnit returns nothing",
    "name": "SetUnitUseFoodBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "enable",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitUseFoodBJ(enable, whichUnit)",
    "documentation": "允许/禁止 使用人口"
  },
  "UnitDamagePointLoc": {
    "original": "function UnitDamagePointLoc takes unit whichUnit, real delay, real radius, location loc, real amount, attacktype whichAttack, damagetype whichDamage returns boolean",
    "name": "UnitDamagePointLoc",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "delay",
      "documentation": ""
    }, {
      "type": "real",
      "name": "radius",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }, {
      "type": "real",
      "name": "amount",
      "documentation": ""
    }, {
      "type": "attacktype",
      "name": "whichAttack",
      "documentation": ""
    }, {
      "type": "damagetype",
      "name": "whichDamage",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitDamagePointLoc(whichUnit, delay, radius, loc, amount, whichAttack, whichDamage)",
    "documentation": "伤害区域"
  },
  "UnitDamageTargetBJ": {
    "original": "function UnitDamageTargetBJ takes unit whichUnit, unit target, real amount, attacktype whichAttack, damagetype whichDamage returns boolean",
    "name": "UnitDamageTargetBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "target",
      "documentation": ""
    }, {
      "type": "real",
      "name": "amount",
      "documentation": ""
    }, {
      "type": "attacktype",
      "name": "whichAttack",
      "documentation": ""
    }, {
      "type": "damagetype",
      "name": "whichDamage",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitDamageTargetBJ(whichUnit, target, amount, whichAttack, whichDamage)",
    "documentation": "伤害目标"
  },
  "CreateDestructableLoc": {
    "original": "function CreateDestructableLoc takes integer objectid, location loc, real facing, real scale, integer variation returns destructable",
    "name": "CreateDestructableLoc",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "objectid",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }, {
      "type": "real",
      "name": "facing",
      "documentation": ""
    }, {
      "type": "real",
      "name": "scale",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "variation",
      "documentation": ""
    }],
    "returnType": "destructable",
    "insertText": "CreateDestructableLoc(objectid, loc, facing, scale, variation)",
    "documentation": "创造 可毁坏物"
  },
  "CreateDeadDestructableLocBJ": {
    "original": "function CreateDeadDestructableLocBJ takes integer objectid, location loc, real facing, real scale, integer variation returns destructable",
    "name": "CreateDeadDestructableLocBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "objectid",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }, {
      "type": "real",
      "name": "facing",
      "documentation": ""
    }, {
      "type": "real",
      "name": "scale",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "variation",
      "documentation": ""
    }],
    "returnType": "destructable",
    "insertText": "CreateDeadDestructableLocBJ(objectid, loc, facing, scale, variation)",
    "documentation": "创造[可毁坏物](毁坏的)"
  },
  "GetLastCreatedDestructable": {
    "original": "function GetLastCreatedDestructable takes nothing returns destructable",
    "name": "GetLastCreatedDestructable",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "destructable",
    "insertText": "GetLastCreatedDestructable()",
    "documentation": "最后创建的可毁坏物"
  },
  "ShowDestructableBJ": {
    "original": "function ShowDestructableBJ takes boolean flag, destructable d returns nothing",
    "name": "ShowDestructableBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }, {
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ShowDestructableBJ(flag, d)",
    "documentation": "显示/隐藏 可毁坏物"
  },
  "SetDestructableInvulnerableBJ": {
    "original": "function SetDestructableInvulnerableBJ takes destructable d, boolean flag returns nothing",
    "name": "SetDestructableInvulnerableBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetDestructableInvulnerableBJ(d, flag)",
    "documentation": "设置 无敌/可攻击"
  },
  "IsDestructableInvulnerableBJ": {
    "original": "function IsDestructableInvulnerableBJ takes destructable d returns boolean",
    "name": "IsDestructableInvulnerableBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsDestructableInvulnerableBJ(d)",
    "documentation": "可毁坏物是无敌的"
  },
  "GetDestructableLoc": {
    "original": "function GetDestructableLoc takes destructable whichDestructable returns location",
    "name": "GetDestructableLoc",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "destructable",
      "name": "whichDestructable",
      "documentation": ""
    }],
    "returnType": "location",
    "insertText": "GetDestructableLoc(whichDestructable)",
    "documentation": "可毁坏物的位置"
  },
  "EnumDestructablesInRectAll": {
    "original": "function EnumDestructablesInRectAll takes rect r, code actionFunc returns nothing",
    "name": "EnumDestructablesInRectAll",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "rect",
      "name": "r",
      "documentation": ""
    }, {
      "type": "code",
      "name": "actionFunc",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "EnumDestructablesInRectAll(r, actionFunc)",
    "documentation": "选取所有可毁坏物 在区域 做 动作(单一的)"
  },
  "EnumDestructablesInCircleBJFilter": {
    "original": "function EnumDestructablesInCircleBJFilter takes nothing returns boolean",
    "name": "EnumDestructablesInCircleBJFilter",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "boolean",
    "insertText": "EnumDestructablesInCircleBJFilter()",
    "documentation": ""
  },
  "IsDestructableDeadBJ": {
    "original": "function IsDestructableDeadBJ takes destructable d returns boolean",
    "name": "IsDestructableDeadBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsDestructableDeadBJ(d)",
    "documentation": "可毁坏物是死的"
  },
  "IsDestructableAliveBJ": {
    "original": "function IsDestructableAliveBJ takes destructable d returns boolean",
    "name": "IsDestructableAliveBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsDestructableAliveBJ(d)",
    "documentation": "可毁坏物是活者的"
  },
  "RandomDestructableInRectBJEnum": {
    "original": "function RandomDestructableInRectBJEnum takes nothing returns nothing",
    "name": "RandomDestructableInRectBJEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "RandomDestructableInRectBJEnum()",
    "documentation": ""
  },
  "RandomDestructableInRectBJ": {
    "original": "function RandomDestructableInRectBJ takes rect r, boolexpr filter returns destructable",
    "name": "RandomDestructableInRectBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "rect",
      "name": "r",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "filter",
      "documentation": ""
    }],
    "returnType": "destructable",
    "insertText": "RandomDestructableInRectBJ(r, filter)",
    "documentation": "区域的 随机可毁坏物 且匹配条件"
  },
  "RandomDestructableInRectSimpleBJ": {
    "original": "function RandomDestructableInRectSimpleBJ takes rect r returns destructable",
    "name": "RandomDestructableInRectSimpleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "rect",
      "name": "r",
      "documentation": ""
    }],
    "returnType": "destructable",
    "insertText": "RandomDestructableInRectSimpleBJ(r)",
    "documentation": "区域的 随机可毁坏物"
  },
  "EnumDestructablesInCircleBJ": {
    "original": "function EnumDestructablesInCircleBJ takes real radius, location loc, code actionFunc returns nothing",
    "name": "EnumDestructablesInCircleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "radius",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }, {
      "type": "code",
      "name": "actionFunc",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "EnumDestructablesInCircleBJ(radius, loc, actionFunc)",
    "documentation": "选取所有可毁坏物 在圆周 做 动作(单一的)"
  },
  "SetDestructableLifePercentBJ": {
    "original": "function SetDestructableLifePercentBJ takes destructable d, real percent returns nothing",
    "name": "SetDestructableLifePercentBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }, {
      "type": "real",
      "name": "percent",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetDestructableLifePercentBJ(d, percent)",
    "documentation": "设置 可毁坏物 生命 (百分比)"
  },
  "SetDestructableMaxLifeBJ": {
    "original": "function SetDestructableMaxLifeBJ takes destructable d, real max returns nothing",
    "name": "SetDestructableMaxLifeBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }, {
      "type": "real",
      "name": "max",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetDestructableMaxLifeBJ(d, max)",
    "documentation": "设置 可毁坏物 最大生命"
  },
  "ModifyGateBJ": {
    "original": "function ModifyGateBJ takes integer gateOperation, destructable d returns nothing",
    "name": "ModifyGateBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "gateOperation",
      "documentation": ""
    }, {
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ModifyGateBJ(gateOperation, d)",
    "documentation": "打开/关闭/破坏门"
  },
  "GetElevatorHeight": {
    "original": "function GetElevatorHeight takes destructable d returns integer",
    "name": "GetElevatorHeight",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetElevatorHeight(d)",
    "documentation": "升降机高度"
  },
  "ChangeElevatorHeight": {
    "original": "function ChangeElevatorHeight takes destructable d, integer newHeight returns nothing",
    "name": "ChangeElevatorHeight",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "newHeight",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ChangeElevatorHeight(d, newHeight)",
    "documentation": "设置升降机高度"
  },
  "NudgeUnitsInRectEnum": {
    "original": "function NudgeUnitsInRectEnum takes nothing returns nothing",
    "name": "NudgeUnitsInRectEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "NudgeUnitsInRectEnum()",
    "documentation": ""
  },
  "NudgeItemsInRectEnum": {
    "original": "function NudgeItemsInRectEnum takes nothing returns nothing",
    "name": "NudgeItemsInRectEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "NudgeItemsInRectEnum()",
    "documentation": ""
  },
  "NudgeObjectsInRect": {
    "original": "function NudgeObjectsInRect takes rect nudgeArea returns nothing",
    "name": "NudgeObjectsInRect",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "rect",
      "name": "nudgeArea",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "NudgeObjectsInRect(nudgeArea)",
    "documentation": ""
  },
  "NearbyElevatorExistsEnum": {
    "original": "function NearbyElevatorExistsEnum takes nothing returns nothing",
    "name": "NearbyElevatorExistsEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "NearbyElevatorExistsEnum()",
    "documentation": ""
  },
  "NearbyElevatorExists": {
    "original": "function NearbyElevatorExists takes real x, real y returns boolean",
    "name": "NearbyElevatorExists",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "NearbyElevatorExists(x, y)",
    "documentation": ""
  },
  "FindElevatorWallBlockerEnum": {
    "original": "function FindElevatorWallBlockerEnum takes nothing returns nothing",
    "name": "FindElevatorWallBlockerEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "FindElevatorWallBlockerEnum()",
    "documentation": ""
  },
  "ChangeElevatorWallBlocker": {
    "original": "function ChangeElevatorWallBlocker takes real x, real y, real facing, boolean open returns nothing",
    "name": "ChangeElevatorWallBlocker",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "facing",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "open",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ChangeElevatorWallBlocker(x, y, facing, open)",
    "documentation": ""
  },
  "ChangeElevatorWalls": {
    "original": "function ChangeElevatorWalls takes boolean open, integer walls, destructable d returns nothing",
    "name": "ChangeElevatorWalls",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "open",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "walls",
      "documentation": ""
    }, {
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ChangeElevatorWalls(open, walls, d)",
    "documentation": "打开/关闭 升降机"
  },
  "WaygateActivateBJ": {
    "original": "function WaygateActivateBJ takes boolean activate, unit waygate returns nothing",
    "name": "WaygateActivateBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "activate",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "waygate",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "WaygateActivateBJ(activate, waygate)",
    "documentation": "打开/关闭 传送门"
  },
  "WaygateIsActiveBJ": {
    "original": "function WaygateIsActiveBJ takes unit waygate returns boolean",
    "name": "WaygateIsActiveBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "waygate",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "WaygateIsActiveBJ(waygate)",
    "documentation": "传送门是允许的"
  },
  "WaygateSetDestinationLocBJ": {
    "original": "function WaygateSetDestinationLocBJ takes unit waygate, location loc returns nothing",
    "name": "WaygateSetDestinationLocBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "waygate",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "WaygateSetDestinationLocBJ(waygate, loc)",
    "documentation": "设置传送门目的地"
  },
  "WaygateGetDestinationLocBJ": {
    "original": "function WaygateGetDestinationLocBJ takes unit waygate returns location",
    "name": "WaygateGetDestinationLocBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "waygate",
      "documentation": ""
    }],
    "returnType": "location",
    "insertText": "WaygateGetDestinationLocBJ(waygate)",
    "documentation": "传送门的目的地"
  },
  "UnitSetUsesAltIconBJ": {
    "original": "function UnitSetUsesAltIconBJ takes boolean flag, unit whichUnit returns nothing",
    "name": "UnitSetUsesAltIconBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UnitSetUsesAltIconBJ(flag, whichUnit)",
    "documentation": "改变单位的小地图图标"
  },
  "ForceUIKeyBJ": {
    "original": "function ForceUIKeyBJ takes player whichPlayer, string key returns nothing",
    "name": "ForceUIKeyBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ForceUIKeyBJ(whichPlayer, key)",
    "documentation": "按下 UI 键"
  },
  "ForceUICancelBJ": {
    "original": "function ForceUICancelBJ takes player whichPlayer returns nothing",
    "name": "ForceUICancelBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ForceUICancelBJ(whichPlayer)",
    "documentation": "取消 UI 键"
  },
  "ForGroupBJ": {
    "original": "function ForGroupBJ takes group whichGroup, code callback returns nothing",
    "name": "ForGroupBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }, {
      "type": "code",
      "name": "callback",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ForGroupBJ(whichGroup, callback)",
    "documentation": ""
  },
  "GroupAddUnitSimple": {
    "original": "function GroupAddUnitSimple takes unit whichUnit, group whichGroup returns nothing",
    "name": "GroupAddUnitSimple",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "GroupAddUnitSimple(whichUnit, whichGroup)",
    "documentation": "增加单位到单位组"
  },
  "GroupRemoveUnitSimple": {
    "original": "function GroupRemoveUnitSimple takes unit whichUnit, group whichGroup returns nothing",
    "name": "GroupRemoveUnitSimple",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "GroupRemoveUnitSimple(whichUnit, whichGroup)",
    "documentation": "清除单位从单位组"
  },
  "GroupAddGroupEnum": {
    "original": "function GroupAddGroupEnum takes nothing returns nothing",
    "name": "GroupAddGroupEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "GroupAddGroupEnum()",
    "documentation": ""
  },
  "GroupAddGroup": {
    "original": "function GroupAddGroup takes group sourceGroup, group destGroup returns nothing",
    "name": "GroupAddGroup",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "group",
      "name": "sourceGroup",
      "documentation": ""
    }, {
      "type": "group",
      "name": "destGroup",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "GroupAddGroup(sourceGroup, destGroup)",
    "documentation": "增加单位组到单位组"
  },
  "GroupRemoveGroupEnum": {
    "original": "function GroupRemoveGroupEnum takes nothing returns nothing",
    "name": "GroupRemoveGroupEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "GroupRemoveGroupEnum()",
    "documentation": ""
  },
  "GroupRemoveGroup": {
    "original": "function GroupRemoveGroup takes group sourceGroup, group destGroup returns nothing",
    "name": "GroupRemoveGroup",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "group",
      "name": "sourceGroup",
      "documentation": ""
    }, {
      "type": "group",
      "name": "destGroup",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "GroupRemoveGroup(sourceGroup, destGroup)",
    "documentation": "清除单位组从单位组"
  },
  "ForceAddPlayerSimple": {
    "original": "function ForceAddPlayerSimple takes player whichPlayer, force whichForce returns nothing",
    "name": "ForceAddPlayerSimple",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "force",
      "name": "whichForce",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ForceAddPlayerSimple(whichPlayer, whichForce)",
    "documentation": "添加玩家到玩家组"
  },
  "ForceRemovePlayerSimple": {
    "original": "function ForceRemovePlayerSimple takes player whichPlayer, force whichForce returns nothing",
    "name": "ForceRemovePlayerSimple",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "force",
      "name": "whichForce",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ForceRemovePlayerSimple(whichPlayer, whichForce)",
    "documentation": "删除玩家到玩家组"
  },
  "GroupPickRandomUnitEnum": {
    "original": "function GroupPickRandomUnitEnum takes nothing returns nothing",
    "name": "GroupPickRandomUnitEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "GroupPickRandomUnitEnum()",
    "documentation": ""
  },
  "GroupPickRandomUnit": {
    "original": "function GroupPickRandomUnit takes group whichGroup returns unit",
    "name": "GroupPickRandomUnit",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }],
    "returnType": "unit",
    "insertText": "GroupPickRandomUnit(whichGroup)",
    "documentation": "单位组里的随机单位"
  },
  "ForcePickRandomPlayerEnum": {
    "original": "function ForcePickRandomPlayerEnum takes nothing returns nothing",
    "name": "ForcePickRandomPlayerEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "ForcePickRandomPlayerEnum()",
    "documentation": ""
  },
  "ForcePickRandomPlayer": {
    "original": "function ForcePickRandomPlayer takes force whichForce returns player",
    "name": "ForcePickRandomPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "force",
      "name": "whichForce",
      "documentation": ""
    }],
    "returnType": "player",
    "insertText": "ForcePickRandomPlayer(whichForce)",
    "documentation": "玩家组里的随机玩家"
  },
  "EnumUnitsSelected": {
    "original": "function EnumUnitsSelected takes player whichPlayer, boolexpr enumFilter, code enumAction returns nothing",
    "name": "EnumUnitsSelected",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "enumFilter",
      "documentation": ""
    }, {
      "type": "code",
      "name": "enumAction",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "EnumUnitsSelected(whichPlayer, enumFilter, enumAction)",
    "documentation": ""
  },
  "GetUnitsInRectMatching": {
    "original": "function GetUnitsInRectMatching takes rect r, boolexpr filter returns group",
    "name": "GetUnitsInRectMatching",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "rect",
      "name": "r",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "filter",
      "documentation": ""
    }],
    "returnType": "group",
    "insertText": "GetUnitsInRectMatching(r, filter)",
    "documentation": "单位在区域中并匹配条件"
  },
  "GetUnitsInRectAll": {
    "original": "function GetUnitsInRectAll takes rect r returns group",
    "name": "GetUnitsInRectAll",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "rect",
      "name": "r",
      "documentation": ""
    }],
    "returnType": "group",
    "insertText": "GetUnitsInRectAll(r)",
    "documentation": "区域中的所有单位"
  },
  "GetUnitsInRectOfPlayerFilter": {
    "original": "function GetUnitsInRectOfPlayerFilter takes nothing returns boolean",
    "name": "GetUnitsInRectOfPlayerFilter",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "boolean",
    "insertText": "GetUnitsInRectOfPlayerFilter()",
    "documentation": ""
  },
  "GetUnitsInRectOfPlayer": {
    "original": "function GetUnitsInRectOfPlayer takes rect r, player whichPlayer returns group",
    "name": "GetUnitsInRectOfPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "rect",
      "name": "r",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "group",
    "insertText": "GetUnitsInRectOfPlayer(r, whichPlayer)",
    "documentation": "玩家在区域中的单位"
  },
  "GetUnitsInRangeOfLocMatching": {
    "original": "function GetUnitsInRangeOfLocMatching takes real radius, location whichLocation, boolexpr filter returns group",
    "name": "GetUnitsInRangeOfLocMatching",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "radius",
      "documentation": ""
    }, {
      "type": "location",
      "name": "whichLocation",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "filter",
      "documentation": ""
    }],
    "returnType": "group",
    "insertText": "GetUnitsInRangeOfLocMatching(radius, whichLocation, filter)",
    "documentation": "单位在圆周内匹配条件的"
  },
  "GetUnitsInRangeOfLocAll": {
    "original": "function GetUnitsInRangeOfLocAll takes real radius, location whichLocation returns group",
    "name": "GetUnitsInRangeOfLocAll",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "radius",
      "documentation": ""
    }, {
      "type": "location",
      "name": "whichLocation",
      "documentation": ""
    }],
    "returnType": "group",
    "insertText": "GetUnitsInRangeOfLocAll(radius, whichLocation)",
    "documentation": "圆周内的所有单位"
  },
  "GetUnitsOfTypeIdAllFilter": {
    "original": "function GetUnitsOfTypeIdAllFilter takes nothing returns boolean",
    "name": "GetUnitsOfTypeIdAllFilter",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "boolean",
    "insertText": "GetUnitsOfTypeIdAllFilter()",
    "documentation": ""
  },
  "GetUnitsOfTypeIdAll": {
    "original": "function GetUnitsOfTypeIdAll takes integer unitid returns group",
    "name": "GetUnitsOfTypeIdAll",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": "group",
    "insertText": "GetUnitsOfTypeIdAll(unitid)",
    "documentation": "某类型的单位"
  },
  "GetUnitsOfPlayerMatching": {
    "original": "function GetUnitsOfPlayerMatching takes player whichPlayer, boolexpr filter returns group",
    "name": "GetUnitsOfPlayerMatching",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "boolexpr",
      "name": "filter",
      "documentation": ""
    }],
    "returnType": "group",
    "insertText": "GetUnitsOfPlayerMatching(whichPlayer, filter)",
    "documentation": "玩家拥有的单位匹配条件"
  },
  "GetUnitsOfPlayerAll": {
    "original": "function GetUnitsOfPlayerAll takes player whichPlayer returns group",
    "name": "GetUnitsOfPlayerAll",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "group",
    "insertText": "GetUnitsOfPlayerAll(whichPlayer)",
    "documentation": "玩家拥有的单位"
  },
  "GetUnitsOfPlayerAndTypeIdFilter": {
    "original": "function GetUnitsOfPlayerAndTypeIdFilter takes nothing returns boolean",
    "name": "GetUnitsOfPlayerAndTypeIdFilter",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "boolean",
    "insertText": "GetUnitsOfPlayerAndTypeIdFilter()",
    "documentation": ""
  },
  "GetUnitsOfPlayerAndTypeId": {
    "original": "function GetUnitsOfPlayerAndTypeId takes player whichPlayer, integer unitid returns group",
    "name": "GetUnitsOfPlayerAndTypeId",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": "group",
    "insertText": "GetUnitsOfPlayerAndTypeId(whichPlayer, unitid)",
    "documentation": "玩家拥有的单位类型"
  },
  "GetUnitsSelectedAll": {
    "original": "function GetUnitsSelectedAll takes player whichPlayer returns group",
    "name": "GetUnitsSelectedAll",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "group",
    "insertText": "GetUnitsSelectedAll(whichPlayer)",
    "documentation": "选定的单位"
  },
  "GetForceOfPlayer": {
    "original": "function GetForceOfPlayer takes player whichPlayer returns force",
    "name": "GetForceOfPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "force",
    "insertText": "GetForceOfPlayer(whichPlayer)",
    "documentation": "将玩家转换为玩家组"
  },
  "GetPlayersAll": {
    "original": "function GetPlayersAll takes nothing returns force",
    "name": "GetPlayersAll",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "force",
    "insertText": "GetPlayersAll()",
    "documentation": "所有玩家"
  },
  "GetPlayersByMapControl": {
    "original": "function GetPlayersByMapControl takes mapcontrol whichControl returns force",
    "name": "GetPlayersByMapControl",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "mapcontrol",
      "name": "whichControl",
      "documentation": ""
    }],
    "returnType": "force",
    "insertText": "GetPlayersByMapControl(whichControl)",
    "documentation": "所有某种控制的玩家"
  },
  "GetPlayersAllies": {
    "original": "function GetPlayersAllies takes player whichPlayer returns force",
    "name": "GetPlayersAllies",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "force",
    "insertText": "GetPlayersAllies(whichPlayer)",
    "documentation": "玩家联盟"
  },
  "GetPlayersEnemies": {
    "original": "function GetPlayersEnemies takes player whichPlayer returns force",
    "name": "GetPlayersEnemies",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "force",
    "insertText": "GetPlayersEnemies(whichPlayer)",
    "documentation": "玩家的敌人"
  },
  "GetPlayersMatching": {
    "original": "function GetPlayersMatching takes boolexpr filter returns force",
    "name": "GetPlayersMatching",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolexpr",
      "name": "filter",
      "documentation": ""
    }],
    "returnType": "force",
    "insertText": "GetPlayersMatching(filter)",
    "documentation": "所有玩家匹配条件"
  },
  "CountUnitsInGroupEnum": {
    "original": "function CountUnitsInGroupEnum takes nothing returns nothing",
    "name": "CountUnitsInGroupEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "CountUnitsInGroupEnum()",
    "documentation": ""
  },
  "CountUnitsInGroup": {
    "original": "function CountUnitsInGroup takes group g returns integer",
    "name": "CountUnitsInGroup",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "group",
      "name": "g",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "CountUnitsInGroup(g)",
    "documentation": "单位组的单位数量"
  },
  "CountPlayersInForceEnum": {
    "original": "function CountPlayersInForceEnum takes nothing returns nothing",
    "name": "CountPlayersInForceEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "CountPlayersInForceEnum()",
    "documentation": ""
  },
  "CountPlayersInForceBJ": {
    "original": "function CountPlayersInForceBJ takes force f returns integer",
    "name": "CountPlayersInForceBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "force",
      "name": "f",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "CountPlayersInForceBJ(f)",
    "documentation": "玩家组中的玩家数量"
  },
  "GetRandomSubGroupEnum": {
    "original": "function GetRandomSubGroupEnum takes nothing returns nothing",
    "name": "GetRandomSubGroupEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "GetRandomSubGroupEnum()",
    "documentation": ""
  },
  "GetRandomSubGroup": {
    "original": "function GetRandomSubGroup takes integer count, group sourceGroup returns group",
    "name": "GetRandomSubGroup",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "count",
      "documentation": ""
    }, {
      "type": "group",
      "name": "sourceGroup",
      "documentation": ""
    }],
    "returnType": "group",
    "insertText": "GetRandomSubGroup(count, sourceGroup)",
    "documentation": "随机选 N 个单位在单位组中"
  },
  "LivingPlayerUnitsOfTypeIdFilter": {
    "original": "function LivingPlayerUnitsOfTypeIdFilter takes nothing returns boolean",
    "name": "LivingPlayerUnitsOfTypeIdFilter",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "boolean",
    "insertText": "LivingPlayerUnitsOfTypeIdFilter()",
    "documentation": ""
  },
  "CountLivingPlayerUnitsOfTypeId": {
    "original": "function CountLivingPlayerUnitsOfTypeId takes integer unitId, player whichPlayer returns integer",
    "name": "CountLivingPlayerUnitsOfTypeId",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "unitId",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "CountLivingPlayerUnitsOfTypeId(unitId, whichPlayer)",
    "documentation": "玩家活着的某类型单位的数量"
  },
  "ResetUnitAnimation": {
    "original": "function ResetUnitAnimation takes unit whichUnit returns nothing",
    "name": "ResetUnitAnimation",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ResetUnitAnimation(whichUnit)",
    "documentation": "重置单位动作"
  },
  "SetUnitTimeScalePercent": {
    "original": "function SetUnitTimeScalePercent takes unit whichUnit, real percentScale returns nothing",
    "name": "SetUnitTimeScalePercent",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "percentScale",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitTimeScalePercent(whichUnit, percentScale)",
    "documentation": "改变单位动作速度"
  },
  "SetUnitScalePercent": {
    "original": "function SetUnitScalePercent takes unit whichUnit, real percentScaleX, real percentScaleY, real percentScaleZ returns nothing",
    "name": "SetUnitScalePercent",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "percentScaleX",
      "documentation": ""
    }, {
      "type": "real",
      "name": "percentScaleY",
      "documentation": ""
    }, {
      "type": "real",
      "name": "percentScaleZ",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitScalePercent(whichUnit, percentScaleX, percentScaleY, percentScaleZ)",
    "documentation": "改变单位尺寸"
  },
  "SetUnitVertexColorBJ": {
    "original": "function SetUnitVertexColorBJ takes unit whichUnit, real red, real green, real blue, real transparency returns nothing",
    "name": "SetUnitVertexColorBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "red",
      "documentation": ""
    }, {
      "type": "real",
      "name": "green",
      "documentation": ""
    }, {
      "type": "real",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "real",
      "name": "transparency",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitVertexColorBJ(whichUnit, red, green, blue, transparency)",
    "documentation": "改变单位着色"
  },
  "UnitAddIndicatorBJ": {
    "original": "function UnitAddIndicatorBJ takes unit whichUnit, real red, real green, real blue, real transparency returns nothing",
    "name": "UnitAddIndicatorBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "red",
      "documentation": ""
    }, {
      "type": "real",
      "name": "green",
      "documentation": ""
    }, {
      "type": "real",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "real",
      "name": "transparency",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UnitAddIndicatorBJ(whichUnit, red, green, blue, transparency)",
    "documentation": "闪动指示器为了单位"
  },
  "DestructableAddIndicatorBJ": {
    "original": "function DestructableAddIndicatorBJ takes destructable whichDestructable, real red, real green, real blue, real transparency returns nothing",
    "name": "DestructableAddIndicatorBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "destructable",
      "name": "whichDestructable",
      "documentation": ""
    }, {
      "type": "real",
      "name": "red",
      "documentation": ""
    }, {
      "type": "real",
      "name": "green",
      "documentation": ""
    }, {
      "type": "real",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "real",
      "name": "transparency",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DestructableAddIndicatorBJ(whichDestructable, red, green, blue, transparency)",
    "documentation": "闪动指示器为了可毁坏物"
  },
  "ItemAddIndicatorBJ": {
    "original": "function ItemAddIndicatorBJ takes item whichItem, real red, real green, real blue, real transparency returns nothing",
    "name": "ItemAddIndicatorBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "real",
      "name": "red",
      "documentation": ""
    }, {
      "type": "real",
      "name": "green",
      "documentation": ""
    }, {
      "type": "real",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "real",
      "name": "transparency",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ItemAddIndicatorBJ(whichItem, red, green, blue, transparency)",
    "documentation": "闪动指示器为了物品"
  },
  "SetUnitFacingToFaceLocTimed": {
    "original": "function SetUnitFacingToFaceLocTimed takes unit whichUnit, location target, real duration returns nothing",
    "name": "SetUnitFacingToFaceLocTimed",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "location",
      "name": "target",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitFacingToFaceLocTimed(whichUnit, target, duration)",
    "documentation": "设置单位面对点"
  },
  "SetUnitFacingToFaceUnitTimed": {
    "original": "function SetUnitFacingToFaceUnitTimed takes unit whichUnit, unit target, real duration returns nothing",
    "name": "SetUnitFacingToFaceUnitTimed",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "target",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitFacingToFaceUnitTimed(whichUnit, target, duration)",
    "documentation": "设置单位面对单位"
  },
  "QueueUnitAnimationBJ": {
    "original": "function QueueUnitAnimationBJ takes unit whichUnit, string whichAnimation returns nothing",
    "name": "QueueUnitAnimationBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "string",
      "name": "whichAnimation",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "QueueUnitAnimationBJ(whichUnit, whichAnimation)",
    "documentation": "队列单位动作"
  },
  "SetDestructableAnimationBJ": {
    "original": "function SetDestructableAnimationBJ takes destructable d, string whichAnimation returns nothing",
    "name": "SetDestructableAnimationBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }, {
      "type": "string",
      "name": "whichAnimation",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetDestructableAnimationBJ(d, whichAnimation)",
    "documentation": "播放可毁坏物的动作"
  },
  "QueueDestructableAnimationBJ": {
    "original": "function QueueDestructableAnimationBJ takes destructable d, string whichAnimation returns nothing",
    "name": "QueueDestructableAnimationBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }, {
      "type": "string",
      "name": "whichAnimation",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "QueueDestructableAnimationBJ(d, whichAnimation)",
    "documentation": "排列可毁坏物的动作"
  },
  "SetDestAnimationSpeedPercent": {
    "original": "function SetDestAnimationSpeedPercent takes destructable d, real percentScale returns nothing",
    "name": "SetDestAnimationSpeedPercent",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }, {
      "type": "real",
      "name": "percentScale",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetDestAnimationSpeedPercent(d, percentScale)",
    "documentation": "改变可毁坏物动作速度"
  },
  "DialogDisplayBJ": {
    "original": "function DialogDisplayBJ takes boolean flag, dialog whichDialog, player whichPlayer returns nothing",
    "name": "DialogDisplayBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }, {
      "type": "dialog",
      "name": "whichDialog",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DialogDisplayBJ(flag, whichDialog, whichPlayer)",
    "documentation": "显示/隐藏 对话框"
  },
  "DialogSetMessageBJ": {
    "original": "function DialogSetMessageBJ takes dialog whichDialog, string message returns nothing",
    "name": "DialogSetMessageBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "dialog",
      "name": "whichDialog",
      "documentation": ""
    }, {
      "type": "string",
      "name": "message",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DialogSetMessageBJ(whichDialog, message)",
    "documentation": "改变 对话框 标题"
  },
  "DialogAddButtonBJ": {
    "original": "function DialogAddButtonBJ takes dialog whichDialog, string buttonText returns button",
    "name": "DialogAddButtonBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "dialog",
      "name": "whichDialog",
      "documentation": ""
    }, {
      "type": "string",
      "name": "buttonText",
      "documentation": ""
    }],
    "returnType": "button",
    "insertText": "DialogAddButtonBJ(whichDialog, buttonText)",
    "documentation": "创造对话按钮"
  },
  "DialogAddButtonWithHotkeyBJ": {
    "original": "function DialogAddButtonWithHotkeyBJ takes dialog whichDialog, string buttonText, integer hotkey returns button",
    "name": "DialogAddButtonWithHotkeyBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "dialog",
      "name": "whichDialog",
      "documentation": ""
    }, {
      "type": "string",
      "name": "buttonText",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "hotkey",
      "documentation": ""
    }],
    "returnType": "button",
    "insertText": "DialogAddButtonWithHotkeyBJ(whichDialog, buttonText, hotkey)",
    "documentation": "为 ,~对话框, 添加一个按钮,按钮标题为: ,~文字,,快捷键为: ,~HotKey"
  },
  "DialogClearBJ": {
    "original": "function DialogClearBJ takes dialog whichDialog returns nothing",
    "name": "DialogClearBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "dialog",
      "name": "whichDialog",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DialogClearBJ(whichDialog)",
    "documentation": "清除所有对话的标题和按钮"
  },
  "GetLastCreatedButtonBJ": {
    "original": "function GetLastCreatedButtonBJ takes nothing returns button",
    "name": "GetLastCreatedButtonBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "button",
    "insertText": "GetLastCreatedButtonBJ()",
    "documentation": "最后创建的对话按钮"
  },
  "GetClickedButtonBJ": {
    "original": "function GetClickedButtonBJ takes nothing returns button",
    "name": "GetClickedButtonBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "button",
    "insertText": "GetClickedButtonBJ()",
    "documentation": "事件响应: 单击对话按钮"
  },
  "GetClickedDialogBJ": {
    "original": "function GetClickedDialogBJ takes nothing returns dialog",
    "name": "GetClickedDialogBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "dialog",
    "insertText": "GetClickedDialogBJ()",
    "documentation": "事件响应 - 单击对话"
  },
  "SetPlayerAllianceBJ": {
    "original": "function SetPlayerAllianceBJ takes player sourcePlayer, alliancetype whichAllianceSetting, boolean value, player otherPlayer returns nothing",
    "name": "SetPlayerAllianceBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "sourcePlayer",
      "documentation": ""
    }, {
      "type": "alliancetype",
      "name": "whichAllianceSetting",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "value",
      "documentation": ""
    }, {
      "type": "player",
      "name": "otherPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerAllianceBJ(sourcePlayer, whichAllianceSetting, value, otherPlayer)",
    "documentation": "设置联盟详细状态"
  },
  "SetPlayerAllianceStateAllyBJ": {
    "original": "function SetPlayerAllianceStateAllyBJ takes player sourcePlayer, player otherPlayer, boolean flag returns nothing",
    "name": "SetPlayerAllianceStateAllyBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "sourcePlayer",
      "documentation": ""
    }, {
      "type": "player",
      "name": "otherPlayer",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerAllianceStateAllyBJ(sourcePlayer, otherPlayer, flag)",
    "documentation": ""
  },
  "SetPlayerAllianceStateVisionBJ": {
    "original": "function SetPlayerAllianceStateVisionBJ takes player sourcePlayer, player otherPlayer, boolean flag returns nothing",
    "name": "SetPlayerAllianceStateVisionBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "sourcePlayer",
      "documentation": ""
    }, {
      "type": "player",
      "name": "otherPlayer",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerAllianceStateVisionBJ(sourcePlayer, otherPlayer, flag)",
    "documentation": ""
  },
  "SetPlayerAllianceStateControlBJ": {
    "original": "function SetPlayerAllianceStateControlBJ takes player sourcePlayer, player otherPlayer, boolean flag returns nothing",
    "name": "SetPlayerAllianceStateControlBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "sourcePlayer",
      "documentation": ""
    }, {
      "type": "player",
      "name": "otherPlayer",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerAllianceStateControlBJ(sourcePlayer, otherPlayer, flag)",
    "documentation": ""
  },
  "SetPlayerAllianceStateFullControlBJ": {
    "original": "function SetPlayerAllianceStateFullControlBJ takes player sourcePlayer, player otherPlayer, boolean flag returns nothing",
    "name": "SetPlayerAllianceStateFullControlBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "sourcePlayer",
      "documentation": ""
    }, {
      "type": "player",
      "name": "otherPlayer",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerAllianceStateFullControlBJ(sourcePlayer, otherPlayer, flag)",
    "documentation": ""
  },
  "SetPlayerAllianceStateBJ": {
    "original": "function SetPlayerAllianceStateBJ takes player sourcePlayer, player otherPlayer, integer allianceState returns nothing",
    "name": "SetPlayerAllianceStateBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "sourcePlayer",
      "documentation": ""
    }, {
      "type": "player",
      "name": "otherPlayer",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "allianceState",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerAllianceStateBJ(sourcePlayer, otherPlayer, allianceState)",
    "documentation": "设置联盟状态"
  },
  "SetForceAllianceStateBJ": {
    "original": "function SetForceAllianceStateBJ takes force sourceForce, force targetForce, integer allianceState returns nothing",
    "name": "SetForceAllianceStateBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "force",
      "name": "sourceForce",
      "documentation": ""
    }, {
      "type": "force",
      "name": "targetForce",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "allianceState",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetForceAllianceStateBJ(sourceForce, targetForce, allianceState)",
    "documentation": "设置玩家组联盟状态"
  },
  "PlayersAreCoAllied": {
    "original": "function PlayersAreCoAllied takes player playerA, player playerB returns boolean",
    "name": "PlayersAreCoAllied",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "playerA",
      "documentation": ""
    }, {
      "type": "player",
      "name": "playerB",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "PlayersAreCoAllied(playerA, playerB)",
    "documentation": ""
  },
  "ShareEverythingWithTeamAI": {
    "original": "function ShareEverythingWithTeamAI takes player whichPlayer returns nothing",
    "name": "ShareEverythingWithTeamAI",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ShareEverythingWithTeamAI(whichPlayer)",
    "documentation": ""
  },
  "ShareEverythingWithTeam": {
    "original": "function ShareEverythingWithTeam takes player whichPlayer returns nothing",
    "name": "ShareEverythingWithTeam",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ShareEverythingWithTeam(whichPlayer)",
    "documentation": "同队共享视野与单位控制权"
  },
  "ConfigureNeutralVictim": {
    "original": "function ConfigureNeutralVictim takes nothing returns nothing",
    "name": "ConfigureNeutralVictim",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "ConfigureNeutralVictim()",
    "documentation": ""
  },
  "MakeUnitsPassiveForPlayerEnum": {
    "original": "function MakeUnitsPassiveForPlayerEnum takes nothing returns nothing",
    "name": "MakeUnitsPassiveForPlayerEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MakeUnitsPassiveForPlayerEnum()",
    "documentation": ""
  },
  "MakeUnitsPassiveForPlayer": {
    "original": "function MakeUnitsPassiveForPlayer takes player whichPlayer returns nothing",
    "name": "MakeUnitsPassiveForPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MakeUnitsPassiveForPlayer(whichPlayer)",
    "documentation": "设置玩家所有单位到中立受害者单位"
  },
  "MakeUnitsPassiveForTeam": {
    "original": "function MakeUnitsPassiveForTeam takes player whichPlayer returns nothing",
    "name": "MakeUnitsPassiveForTeam",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MakeUnitsPassiveForTeam(whichPlayer)",
    "documentation": ""
  },
  "AllowVictoryDefeat": {
    "original": "function AllowVictoryDefeat takes playergameresult gameResult returns boolean",
    "name": "AllowVictoryDefeat",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "playergameresult",
      "name": "gameResult",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "AllowVictoryDefeat(gameResult)",
    "documentation": ""
  },
  "EndGameBJ": {
    "original": "function EndGameBJ takes nothing returns nothing",
    "name": "EndGameBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "EndGameBJ()",
    "documentation": ""
  },
  "MeleeVictoryDialogBJ": {
    "original": "function MeleeVictoryDialogBJ takes player whichPlayer, boolean leftGame returns nothing",
    "name": "MeleeVictoryDialogBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "leftGame",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MeleeVictoryDialogBJ(whichPlayer, leftGame)",
    "documentation": ""
  },
  "MeleeDefeatDialogBJ": {
    "original": "function MeleeDefeatDialogBJ takes player whichPlayer, boolean leftGame returns nothing",
    "name": "MeleeDefeatDialogBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "leftGame",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MeleeDefeatDialogBJ(whichPlayer, leftGame)",
    "documentation": ""
  },
  "GameOverDialogBJ": {
    "original": "function GameOverDialogBJ takes player whichPlayer, boolean leftGame returns nothing",
    "name": "GameOverDialogBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "leftGame",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "GameOverDialogBJ(whichPlayer, leftGame)",
    "documentation": ""
  },
  "RemovePlayerPreserveUnitsBJ": {
    "original": "function RemovePlayerPreserveUnitsBJ takes player whichPlayer, playergameresult gameResult, boolean leftGame returns nothing",
    "name": "RemovePlayerPreserveUnitsBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "playergameresult",
      "name": "gameResult",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "leftGame",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RemovePlayerPreserveUnitsBJ(whichPlayer, gameResult, leftGame)",
    "documentation": ""
  },
  "CustomVictoryOkBJ": {
    "original": "function CustomVictoryOkBJ takes nothing returns nothing",
    "name": "CustomVictoryOkBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "CustomVictoryOkBJ()",
    "documentation": ""
  },
  "CustomVictoryQuitBJ": {
    "original": "function CustomVictoryQuitBJ takes nothing returns nothing",
    "name": "CustomVictoryQuitBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "CustomVictoryQuitBJ()",
    "documentation": ""
  },
  "CustomVictoryDialogBJ": {
    "original": "function CustomVictoryDialogBJ takes player whichPlayer returns nothing",
    "name": "CustomVictoryDialogBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CustomVictoryDialogBJ(whichPlayer)",
    "documentation": ""
  },
  "CustomVictorySkipBJ": {
    "original": "function CustomVictorySkipBJ takes player whichPlayer returns nothing",
    "name": "CustomVictorySkipBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CustomVictorySkipBJ(whichPlayer)",
    "documentation": ""
  },
  "CustomVictoryBJ": {
    "original": "function CustomVictoryBJ takes player whichPlayer, boolean showDialog, boolean showScores returns nothing",
    "name": "CustomVictoryBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "showDialog",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "showScores",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CustomVictoryBJ(whichPlayer, showDialog, showScores)",
    "documentation": "胜利"
  },
  "CustomDefeatRestartBJ": {
    "original": "function CustomDefeatRestartBJ takes nothing returns nothing",
    "name": "CustomDefeatRestartBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "CustomDefeatRestartBJ()",
    "documentation": ""
  },
  "CustomDefeatReduceDifficultyBJ": {
    "original": "function CustomDefeatReduceDifficultyBJ takes nothing returns nothing",
    "name": "CustomDefeatReduceDifficultyBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "CustomDefeatReduceDifficultyBJ()",
    "documentation": ""
  },
  "CustomDefeatLoadBJ": {
    "original": "function CustomDefeatLoadBJ takes nothing returns nothing",
    "name": "CustomDefeatLoadBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "CustomDefeatLoadBJ()",
    "documentation": ""
  },
  "CustomDefeatQuitBJ": {
    "original": "function CustomDefeatQuitBJ takes nothing returns nothing",
    "name": "CustomDefeatQuitBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "CustomDefeatQuitBJ()",
    "documentation": ""
  },
  "CustomDefeatDialogBJ": {
    "original": "function CustomDefeatDialogBJ takes player whichPlayer, string message returns nothing",
    "name": "CustomDefeatDialogBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "message",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CustomDefeatDialogBJ(whichPlayer, message)",
    "documentation": ""
  },
  "CustomDefeatBJ": {
    "original": "function CustomDefeatBJ takes player whichPlayer, string message returns nothing",
    "name": "CustomDefeatBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "message",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CustomDefeatBJ(whichPlayer, message)",
    "documentation": "设置 ,~Player, 失败并显示失败信息: ,~文字"
  },
  "SetNextLevelBJ": {
    "original": "function SetNextLevelBJ takes string nextLevel returns nothing",
    "name": "SetNextLevelBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "nextLevel",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetNextLevelBJ(nextLevel)",
    "documentation": "设置下一张地图"
  },
  "SetPlayerOnScoreScreenBJ": {
    "original": "function SetPlayerOnScoreScreenBJ takes boolean flag, player whichPlayer returns nothing",
    "name": "SetPlayerOnScoreScreenBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerOnScoreScreenBJ(flag, whichPlayer)",
    "documentation": "显示/隐藏 得分屏幕"
  },
  "CreateQuestBJ": {
    "original": "function CreateQuestBJ takes integer questType, string title, string description, string iconPath returns quest",
    "name": "CreateQuestBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "questType",
      "documentation": ""
    }, {
      "type": "string",
      "name": "title",
      "documentation": ""
    }, {
      "type": "string",
      "name": "description",
      "documentation": ""
    }, {
      "type": "string",
      "name": "iconPath",
      "documentation": ""
    }],
    "returnType": "quest",
    "insertText": "CreateQuestBJ(questType, title, description, iconPath)",
    "documentation": "创建任务t"
  },
  "DestroyQuestBJ": {
    "original": "function DestroyQuestBJ takes quest whichQuest returns nothing",
    "name": "DestroyQuestBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "quest",
      "name": "whichQuest",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DestroyQuestBJ(whichQuest)",
    "documentation": "删除任务"
  },
  "QuestSetEnabledBJ": {
    "original": "function QuestSetEnabledBJ takes boolean enabled, quest whichQuest returns nothing",
    "name": "QuestSetEnabledBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "enabled",
      "documentation": ""
    }, {
      "type": "quest",
      "name": "whichQuest",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "QuestSetEnabledBJ(enabled, whichQuest)",
    "documentation": "允许/禁止 任务"
  },
  "QuestSetTitleBJ": {
    "original": "function QuestSetTitleBJ takes quest whichQuest, string title returns nothing",
    "name": "QuestSetTitleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "quest",
      "name": "whichQuest",
      "documentation": ""
    }, {
      "type": "string",
      "name": "title",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "QuestSetTitleBJ(whichQuest, title)",
    "documentation": "改变任务标题"
  },
  "QuestSetDescriptionBJ": {
    "original": "function QuestSetDescriptionBJ takes quest whichQuest, string description returns nothing",
    "name": "QuestSetDescriptionBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "quest",
      "name": "whichQuest",
      "documentation": ""
    }, {
      "type": "string",
      "name": "description",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "QuestSetDescriptionBJ(whichQuest, description)",
    "documentation": "改变任务文本内容"
  },
  "QuestSetCompletedBJ": {
    "original": "function QuestSetCompletedBJ takes quest whichQuest, boolean completed returns nothing",
    "name": "QuestSetCompletedBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "quest",
      "name": "whichQuest",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "completed",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "QuestSetCompletedBJ(whichQuest, completed)",
    "documentation": "设置任务为完成"
  },
  "QuestSetFailedBJ": {
    "original": "function QuestSetFailedBJ takes quest whichQuest, boolean failed returns nothing",
    "name": "QuestSetFailedBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "quest",
      "name": "whichQuest",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "failed",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "QuestSetFailedBJ(whichQuest, failed)",
    "documentation": "设置任务为失败"
  },
  "QuestSetDiscoveredBJ": {
    "original": "function QuestSetDiscoveredBJ takes quest whichQuest, boolean discovered returns nothing",
    "name": "QuestSetDiscoveredBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "quest",
      "name": "whichQuest",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "discovered",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "QuestSetDiscoveredBJ(whichQuest, discovered)",
    "documentation": "设置任务被发现"
  },
  "GetLastCreatedQuestBJ": {
    "original": "function GetLastCreatedQuestBJ takes nothing returns quest",
    "name": "GetLastCreatedQuestBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "quest",
    "insertText": "GetLastCreatedQuestBJ()",
    "documentation": "最后创建的任务"
  },
  "CreateQuestItemBJ": {
    "original": "function CreateQuestItemBJ takes quest whichQuest, string description returns questitem",
    "name": "CreateQuestItemBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "quest",
      "name": "whichQuest",
      "documentation": ""
    }, {
      "type": "string",
      "name": "description",
      "documentation": ""
    }],
    "returnType": "questitem",
    "insertText": "CreateQuestItemBJ(whichQuest, description)",
    "documentation": "创建任务完成条件"
  },
  "QuestItemSetDescriptionBJ": {
    "original": "function QuestItemSetDescriptionBJ takes questitem whichQuestItem, string description returns nothing",
    "name": "QuestItemSetDescriptionBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "questitem",
      "name": "whichQuestItem",
      "documentation": ""
    }, {
      "type": "string",
      "name": "description",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "QuestItemSetDescriptionBJ(whichQuestItem, description)",
    "documentation": "改变任务完成条件内容"
  },
  "QuestItemSetCompletedBJ": {
    "original": "function QuestItemSetCompletedBJ takes questitem whichQuestItem, boolean completed returns nothing",
    "name": "QuestItemSetCompletedBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "questitem",
      "name": "whichQuestItem",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "completed",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "QuestItemSetCompletedBJ(whichQuestItem, completed)",
    "documentation": "设置任务完成条件为已完成"
  },
  "GetLastCreatedQuestItemBJ": {
    "original": "function GetLastCreatedQuestItemBJ takes nothing returns questitem",
    "name": "GetLastCreatedQuestItemBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "questitem",
    "insertText": "GetLastCreatedQuestItemBJ()",
    "documentation": "最后创建的任务完成条件"
  },
  "CreateDefeatConditionBJ": {
    "original": "function CreateDefeatConditionBJ takes string description returns defeatcondition",
    "name": "CreateDefeatConditionBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "description",
      "documentation": ""
    }],
    "returnType": "defeatcondition",
    "insertText": "CreateDefeatConditionBJ(description)",
    "documentation": "创建任务失败条件"
  },
  "DestroyDefeatConditionBJ": {
    "original": "function DestroyDefeatConditionBJ takes defeatcondition whichCondition returns nothing",
    "name": "DestroyDefeatConditionBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "defeatcondition",
      "name": "whichCondition",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DestroyDefeatConditionBJ(whichCondition)",
    "documentation": "删除失败条件"
  },
  "DefeatConditionSetDescriptionBJ": {
    "original": "function DefeatConditionSetDescriptionBJ takes defeatcondition whichCondition, string description returns nothing",
    "name": "DefeatConditionSetDescriptionBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "defeatcondition",
      "name": "whichCondition",
      "documentation": ""
    }, {
      "type": "string",
      "name": "description",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DefeatConditionSetDescriptionBJ(whichCondition, description)",
    "documentation": "改变失败条件的内容"
  },
  "GetLastCreatedDefeatConditionBJ": {
    "original": "function GetLastCreatedDefeatConditionBJ takes nothing returns defeatcondition",
    "name": "GetLastCreatedDefeatConditionBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "defeatcondition",
    "insertText": "GetLastCreatedDefeatConditionBJ()",
    "documentation": "最后创建的任务失败条件"
  },
  "FlashQuestDialogButtonBJ": {
    "original": "function FlashQuestDialogButtonBJ takes nothing returns nothing",
    "name": "FlashQuestDialogButtonBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "FlashQuestDialogButtonBJ()",
    "documentation": "使任务按钮发光"
  },
  "QuestMessageBJ": {
    "original": "function QuestMessageBJ takes force f, integer messageType, string message returns nothing",
    "name": "QuestMessageBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "force",
      "name": "f",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "messageType",
      "documentation": ""
    }, {
      "type": "string",
      "name": "message",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "QuestMessageBJ(f, messageType, message)",
    "documentation": "任务消息"
  },
  "StartTimerBJ": {
    "original": "function StartTimerBJ takes timer t, boolean periodic, real timeout returns timer",
    "name": "StartTimerBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "timer",
      "name": "t",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "periodic",
      "documentation": ""
    }, {
      "type": "real",
      "name": "timeout",
      "documentation": ""
    }],
    "returnType": "timer",
    "insertText": "StartTimerBJ(t, periodic, timeout)",
    "documentation": "开启计时器"
  },
  "CreateTimerBJ": {
    "original": "function CreateTimerBJ takes boolean periodic, real timeout returns timer",
    "name": "CreateTimerBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "periodic",
      "documentation": ""
    }, {
      "type": "real",
      "name": "timeout",
      "documentation": ""
    }],
    "returnType": "timer",
    "insertText": "CreateTimerBJ(periodic, timeout)",
    "documentation": ""
  },
  "DestroyTimerBJ": {
    "original": "function DestroyTimerBJ takes timer whichTimer returns nothing",
    "name": "DestroyTimerBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "timer",
      "name": "whichTimer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DestroyTimerBJ(whichTimer)",
    "documentation": ""
  },
  "PauseTimerBJ": {
    "original": "function PauseTimerBJ takes boolean pause, timer whichTimer returns nothing",
    "name": "PauseTimerBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "pause",
      "documentation": ""
    }, {
      "type": "timer",
      "name": "whichTimer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PauseTimerBJ(pause, whichTimer)",
    "documentation": "暂停计时器r"
  },
  "GetLastCreatedTimerBJ": {
    "original": "function GetLastCreatedTimerBJ takes nothing returns timer",
    "name": "GetLastCreatedTimerBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "timer",
    "insertText": "GetLastCreatedTimerBJ()",
    "documentation": "最后创建的计时器"
  },
  "CreateTimerDialogBJ": {
    "original": "function CreateTimerDialogBJ takes timer t, string title returns timerdialog",
    "name": "CreateTimerDialogBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "timer",
      "name": "t",
      "documentation": ""
    }, {
      "type": "string",
      "name": "title",
      "documentation": ""
    }],
    "returnType": "timerdialog",
    "insertText": "CreateTimerDialogBJ(t, title)",
    "documentation": "创造计时器窗口"
  },
  "DestroyTimerDialogBJ": {
    "original": "function DestroyTimerDialogBJ takes timerdialog td returns nothing",
    "name": "DestroyTimerDialogBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "timerdialog",
      "name": "td",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DestroyTimerDialogBJ(td)",
    "documentation": "删除计时器窗口"
  },
  "TimerDialogSetTitleBJ": {
    "original": "function TimerDialogSetTitleBJ takes timerdialog td, string title returns nothing",
    "name": "TimerDialogSetTitleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "timerdialog",
      "name": "td",
      "documentation": ""
    }, {
      "type": "string",
      "name": "title",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TimerDialogSetTitleBJ(td, title)",
    "documentation": "改变计时器窗口标题"
  },
  "TimerDialogSetTitleColorBJ": {
    "original": "function TimerDialogSetTitleColorBJ takes timerdialog td, real red, real green, real blue, real transparency returns nothing",
    "name": "TimerDialogSetTitleColorBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "timerdialog",
      "name": "td",
      "documentation": ""
    }, {
      "type": "real",
      "name": "red",
      "documentation": ""
    }, {
      "type": "real",
      "name": "green",
      "documentation": ""
    }, {
      "type": "real",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "real",
      "name": "transparency",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TimerDialogSetTitleColorBJ(td, red, green, blue, transparency)",
    "documentation": "改变计时器标题颜色"
  },
  "TimerDialogSetTimeColorBJ": {
    "original": "function TimerDialogSetTimeColorBJ takes timerdialog td, real red, real green, real blue, real transparency returns nothing",
    "name": "TimerDialogSetTimeColorBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "timerdialog",
      "name": "td",
      "documentation": ""
    }, {
      "type": "real",
      "name": "red",
      "documentation": ""
    }, {
      "type": "real",
      "name": "green",
      "documentation": ""
    }, {
      "type": "real",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "real",
      "name": "transparency",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TimerDialogSetTimeColorBJ(td, red, green, blue, transparency)",
    "documentation": "改变计时器窗口时间颜色"
  },
  "TimerDialogSetSpeedBJ": {
    "original": "function TimerDialogSetSpeedBJ takes timerdialog td, real speedMultFactor returns nothing",
    "name": "TimerDialogSetSpeedBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "timerdialog",
      "name": "td",
      "documentation": ""
    }, {
      "type": "real",
      "name": "speedMultFactor",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TimerDialogSetSpeedBJ(td, speedMultFactor)",
    "documentation": "改变计时器窗口速度"
  },
  "TimerDialogDisplayForPlayerBJ": {
    "original": "function TimerDialogDisplayForPlayerBJ takes boolean show, timerdialog td, player whichPlayer returns nothing",
    "name": "TimerDialogDisplayForPlayerBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "show",
      "documentation": ""
    }, {
      "type": "timerdialog",
      "name": "td",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TimerDialogDisplayForPlayerBJ(show, td, whichPlayer)",
    "documentation": "显示/隐藏计时器窗口为玩家"
  },
  "TimerDialogDisplayBJ": {
    "original": "function TimerDialogDisplayBJ takes boolean show, timerdialog td returns nothing",
    "name": "TimerDialogDisplayBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "show",
      "documentation": ""
    }, {
      "type": "timerdialog",
      "name": "td",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TimerDialogDisplayBJ(show, td)",
    "documentation": "显示/隐藏计时器窗口"
  },
  "GetLastCreatedTimerDialogBJ": {
    "original": "function GetLastCreatedTimerDialogBJ takes nothing returns timerdialog",
    "name": "GetLastCreatedTimerDialogBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "timerdialog",
    "insertText": "GetLastCreatedTimerDialogBJ()",
    "documentation": "最后创建的计时器窗口"
  },
  "LeaderboardResizeBJ": {
    "original": "function LeaderboardResizeBJ takes leaderboard lb returns nothing",
    "name": "LeaderboardResizeBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardResizeBJ(lb)",
    "documentation": ""
  },
  "LeaderboardSetPlayerItemValueBJ": {
    "original": "function LeaderboardSetPlayerItemValueBJ takes player whichPlayer, leaderboard lb, integer val returns nothing",
    "name": "LeaderboardSetPlayerItemValueBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "val",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardSetPlayerItemValueBJ(whichPlayer, lb, val)",
    "documentation": "改变排行榜中玩家的 数值"
  },
  "LeaderboardSetPlayerItemLabelBJ": {
    "original": "function LeaderboardSetPlayerItemLabelBJ takes player whichPlayer, leaderboard lb, string val returns nothing",
    "name": "LeaderboardSetPlayerItemLabelBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "string",
      "name": "val",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardSetPlayerItemLabelBJ(whichPlayer, lb, val)",
    "documentation": "改变排行榜中玩家 标签"
  },
  "LeaderboardSetPlayerItemStyleBJ": {
    "original": "function LeaderboardSetPlayerItemStyleBJ takes player whichPlayer, leaderboard lb, boolean showLabel, boolean showValue, boolean showIcon returns nothing",
    "name": "LeaderboardSetPlayerItemStyleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "showLabel",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "showValue",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "showIcon",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardSetPlayerItemStyleBJ(whichPlayer, lb, showLabel, showValue, showIcon)",
    "documentation": "改变排行榜中玩家的 风格"
  },
  "LeaderboardSetPlayerItemLabelColorBJ": {
    "original": "function LeaderboardSetPlayerItemLabelColorBJ takes player whichPlayer, leaderboard lb, real red, real green, real blue, real transparency returns nothing",
    "name": "LeaderboardSetPlayerItemLabelColorBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "real",
      "name": "red",
      "documentation": ""
    }, {
      "type": "real",
      "name": "green",
      "documentation": ""
    }, {
      "type": "real",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "real",
      "name": "transparency",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardSetPlayerItemLabelColorBJ(whichPlayer, lb, red, green, blue, transparency)",
    "documentation": "改变排行榜中玩家的 标签颜色"
  },
  "LeaderboardSetPlayerItemValueColorBJ": {
    "original": "function LeaderboardSetPlayerItemValueColorBJ takes player whichPlayer, leaderboard lb, real red, real green, real blue, real transparency returns nothing",
    "name": "LeaderboardSetPlayerItemValueColorBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "real",
      "name": "red",
      "documentation": ""
    }, {
      "type": "real",
      "name": "green",
      "documentation": ""
    }, {
      "type": "real",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "real",
      "name": "transparency",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardSetPlayerItemValueColorBJ(whichPlayer, lb, red, green, blue, transparency)",
    "documentation": "改变排行榜中玩家的 数值颜色"
  },
  "LeaderboardSetLabelColorBJ": {
    "original": "function LeaderboardSetLabelColorBJ takes leaderboard lb, real red, real green, real blue, real transparency returns nothing",
    "name": "LeaderboardSetLabelColorBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "real",
      "name": "red",
      "documentation": ""
    }, {
      "type": "real",
      "name": "green",
      "documentation": ""
    }, {
      "type": "real",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "real",
      "name": "transparency",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardSetLabelColorBJ(lb, red, green, blue, transparency)",
    "documentation": "改变排行榜 标签颜色"
  },
  "LeaderboardSetValueColorBJ": {
    "original": "function LeaderboardSetValueColorBJ takes leaderboard lb, real red, real green, real blue, real transparency returns nothing",
    "name": "LeaderboardSetValueColorBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "real",
      "name": "red",
      "documentation": ""
    }, {
      "type": "real",
      "name": "green",
      "documentation": ""
    }, {
      "type": "real",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "real",
      "name": "transparency",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardSetValueColorBJ(lb, red, green, blue, transparency)",
    "documentation": "改变排行榜 数值颜色"
  },
  "LeaderboardSetLabelBJ": {
    "original": "function LeaderboardSetLabelBJ takes leaderboard lb, string label returns nothing",
    "name": "LeaderboardSetLabelBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "string",
      "name": "label",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardSetLabelBJ(lb, label)",
    "documentation": "改变排行榜标题"
  },
  "LeaderboardSetStyleBJ": {
    "original": "function LeaderboardSetStyleBJ takes leaderboard lb, boolean showLabel, boolean showNames, boolean showValues, boolean showIcons returns nothing",
    "name": "LeaderboardSetStyleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "showLabel",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "showNames",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "showValues",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "showIcons",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardSetStyleBJ(lb, showLabel, showNames, showValues, showIcons)",
    "documentation": "改变排行榜风格"
  },
  "LeaderboardGetItemCountBJ": {
    "original": "function LeaderboardGetItemCountBJ takes leaderboard lb returns integer",
    "name": "LeaderboardGetItemCountBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "LeaderboardGetItemCountBJ(lb)",
    "documentation": ""
  },
  "LeaderboardHasPlayerItemBJ": {
    "original": "function LeaderboardHasPlayerItemBJ takes leaderboard lb, player whichPlayer returns boolean",
    "name": "LeaderboardHasPlayerItemBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "LeaderboardHasPlayerItemBJ(lb, whichPlayer)",
    "documentation": "排行榜包含玩家"
  },
  "ForceSetLeaderboardBJ": {
    "original": "function ForceSetLeaderboardBJ takes leaderboard lb, force toForce returns nothing",
    "name": "ForceSetLeaderboardBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "force",
      "name": "toForce",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ForceSetLeaderboardBJ(lb, toForce)",
    "documentation": ""
  },
  "CreateLeaderboardBJ": {
    "original": "function CreateLeaderboardBJ takes force toForce, string label returns leaderboard",
    "name": "CreateLeaderboardBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "force",
      "name": "toForce",
      "documentation": ""
    }, {
      "type": "string",
      "name": "label",
      "documentation": ""
    }],
    "returnType": "leaderboard",
    "insertText": "CreateLeaderboardBJ(toForce, label)",
    "documentation": "创建排行榜"
  },
  "DestroyLeaderboardBJ": {
    "original": "function DestroyLeaderboardBJ takes leaderboard lb returns nothing",
    "name": "DestroyLeaderboardBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DestroyLeaderboardBJ(lb)",
    "documentation": "删除排行榜"
  },
  "LeaderboardDisplayBJ": {
    "original": "function LeaderboardDisplayBJ takes boolean show, leaderboard lb returns nothing",
    "name": "LeaderboardDisplayBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "show",
      "documentation": ""
    }, {
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardDisplayBJ(show, lb)",
    "documentation": "显示/隐藏 排行榜"
  },
  "LeaderboardAddItemBJ": {
    "original": "function LeaderboardAddItemBJ takes player whichPlayer, leaderboard lb, string label, integer value returns nothing",
    "name": "LeaderboardAddItemBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "string",
      "name": "label",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardAddItemBJ(whichPlayer, lb, label, value)",
    "documentation": "在排行榜中增加玩家"
  },
  "LeaderboardRemovePlayerItemBJ": {
    "original": "function LeaderboardRemovePlayerItemBJ takes player whichPlayer, leaderboard lb returns nothing",
    "name": "LeaderboardRemovePlayerItemBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardRemovePlayerItemBJ(whichPlayer, lb)",
    "documentation": "在排行榜中删除玩家"
  },
  "LeaderboardSortItemsBJ": {
    "original": "function LeaderboardSortItemsBJ takes leaderboard lb, integer sortType, boolean ascending returns nothing",
    "name": "LeaderboardSortItemsBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "sortType",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "ascending",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardSortItemsBJ(lb, sortType, ascending)",
    "documentation": "排行榜分类"
  },
  "LeaderboardSortItemsByPlayerBJ": {
    "original": "function LeaderboardSortItemsByPlayerBJ takes leaderboard lb, boolean ascending returns nothing",
    "name": "LeaderboardSortItemsByPlayerBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "ascending",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardSortItemsByPlayerBJ(lb, ascending)",
    "documentation": ""
  },
  "LeaderboardSortItemsByLabelBJ": {
    "original": "function LeaderboardSortItemsByLabelBJ takes leaderboard lb, boolean ascending returns nothing",
    "name": "LeaderboardSortItemsByLabelBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "ascending",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LeaderboardSortItemsByLabelBJ(lb, ascending)",
    "documentation": ""
  },
  "LeaderboardGetPlayerIndexBJ": {
    "original": "function LeaderboardGetPlayerIndexBJ takes player whichPlayer, leaderboard lb returns integer",
    "name": "LeaderboardGetPlayerIndexBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "LeaderboardGetPlayerIndexBJ(whichPlayer, lb)",
    "documentation": "排行榜位置"
  },
  "LeaderboardGetIndexedPlayerBJ": {
    "original": "function LeaderboardGetIndexedPlayerBJ takes integer position, leaderboard lb returns player",
    "name": "LeaderboardGetIndexedPlayerBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "position",
      "documentation": ""
    }, {
      "type": "leaderboard",
      "name": "lb",
      "documentation": ""
    }],
    "returnType": "player",
    "insertText": "LeaderboardGetIndexedPlayerBJ(position, lb)",
    "documentation": "玩家在排行榜中第N位"
  },
  "PlayerGetLeaderboardBJ": {
    "original": "function PlayerGetLeaderboardBJ takes player whichPlayer returns leaderboard",
    "name": "PlayerGetLeaderboardBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "leaderboard",
    "insertText": "PlayerGetLeaderboardBJ(whichPlayer)",
    "documentation": "玩家排行榜"
  },
  "GetLastCreatedLeaderboard": {
    "original": "function GetLastCreatedLeaderboard takes nothing returns leaderboard",
    "name": "GetLastCreatedLeaderboard",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "leaderboard",
    "insertText": "GetLastCreatedLeaderboard()",
    "documentation": "最后创建的排行榜"
  },
  "CreateMultiboardBJ": {
    "original": "function CreateMultiboardBJ takes integer cols, integer rows, string title returns multiboard",
    "name": "CreateMultiboardBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "cols",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "rows",
      "documentation": ""
    }, {
      "type": "string",
      "name": "title",
      "documentation": ""
    }],
    "returnType": "multiboard",
    "insertText": "CreateMultiboardBJ(cols, rows, title)",
    "documentation": "创建 多列面板"
  },
  "DestroyMultiboardBJ": {
    "original": "function DestroyMultiboardBJ takes multiboard mb returns nothing",
    "name": "DestroyMultiboardBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "multiboard",
      "name": "mb",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DestroyMultiboardBJ(mb)",
    "documentation": "删除 多列面板"
  },
  "GetLastCreatedMultiboard": {
    "original": "function GetLastCreatedMultiboard takes nothing returns multiboard",
    "name": "GetLastCreatedMultiboard",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "multiboard",
    "insertText": "GetLastCreatedMultiboard()",
    "documentation": "最后创建的 多列面板"
  },
  "MultiboardDisplayBJ": {
    "original": "function MultiboardDisplayBJ takes boolean show, multiboard mb returns nothing",
    "name": "MultiboardDisplayBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "show",
      "documentation": ""
    }, {
      "type": "multiboard",
      "name": "mb",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MultiboardDisplayBJ(show, mb)",
    "documentation": "显示/隐藏 多列面板"
  },
  "MultiboardMinimizeBJ": {
    "original": "function MultiboardMinimizeBJ takes boolean minimize, multiboard mb returns nothing",
    "name": "MultiboardMinimizeBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "minimize",
      "documentation": ""
    }, {
      "type": "multiboard",
      "name": "mb",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MultiboardMinimizeBJ(minimize, mb)",
    "documentation": "最大化/最小化 多列面板"
  },
  "MultiboardSetTitleTextColorBJ": {
    "original": "function MultiboardSetTitleTextColorBJ takes multiboard mb, real red, real green, real blue, real transparency returns nothing",
    "name": "MultiboardSetTitleTextColorBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "multiboard",
      "name": "mb",
      "documentation": ""
    }, {
      "type": "real",
      "name": "red",
      "documentation": ""
    }, {
      "type": "real",
      "name": "green",
      "documentation": ""
    }, {
      "type": "real",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "real",
      "name": "transparency",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MultiboardSetTitleTextColorBJ(mb, red, green, blue, transparency)",
    "documentation": "改变 多列面板 标题颜色"
  },
  "MultiboardAllowDisplayBJ": {
    "original": "function MultiboardAllowDisplayBJ takes boolean flag returns nothing",
    "name": "MultiboardAllowDisplayBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MultiboardAllowDisplayBJ(flag)",
    "documentation": "显示/隐藏 所有 多列面板"
  },
  "MultiboardSetItemStyleBJ": {
    "original": "function MultiboardSetItemStyleBJ takes multiboard mb, integer col, integer row, boolean showValue, boolean showIcon returns nothing",
    "name": "MultiboardSetItemStyleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "multiboard",
      "name": "mb",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "col",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "row",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "showValue",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "showIcon",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MultiboardSetItemStyleBJ(mb, col, row, showValue, showIcon)",
    "documentation": "设置多列面板项目显示风格"
  },
  "MultiboardSetItemValueBJ": {
    "original": "function MultiboardSetItemValueBJ takes multiboard mb, integer col, integer row, string val returns nothing",
    "name": "MultiboardSetItemValueBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "multiboard",
      "name": "mb",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "col",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "row",
      "documentation": ""
    }, {
      "type": "string",
      "name": "val",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MultiboardSetItemValueBJ(mb, col, row, val)",
    "documentation": "设置多列面板项目文本"
  },
  "MultiboardSetItemColorBJ": {
    "original": "function MultiboardSetItemColorBJ takes multiboard mb, integer col, integer row, real red, real green, real blue, real transparency returns nothing",
    "name": "MultiboardSetItemColorBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "multiboard",
      "name": "mb",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "col",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "row",
      "documentation": ""
    }, {
      "type": "real",
      "name": "red",
      "documentation": ""
    }, {
      "type": "real",
      "name": "green",
      "documentation": ""
    }, {
      "type": "real",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "real",
      "name": "transparency",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MultiboardSetItemColorBJ(mb, col, row, red, green, blue, transparency)",
    "documentation": "设置多列面板项目颜色"
  },
  "MultiboardSetItemWidthBJ": {
    "original": "function MultiboardSetItemWidthBJ takes multiboard mb, integer col, integer row, real width returns nothing",
    "name": "MultiboardSetItemWidthBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "multiboard",
      "name": "mb",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "col",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "row",
      "documentation": ""
    }, {
      "type": "real",
      "name": "width",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MultiboardSetItemWidthBJ(mb, col, row, width)",
    "documentation": "设置多列面板项目宽度"
  },
  "MultiboardSetItemIconBJ": {
    "original": "function MultiboardSetItemIconBJ takes multiboard mb, integer col, integer row, string iconFileName returns nothing",
    "name": "MultiboardSetItemIconBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "multiboard",
      "name": "mb",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "col",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "row",
      "documentation": ""
    }, {
      "type": "string",
      "name": "iconFileName",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MultiboardSetItemIconBJ(mb, col, row, iconFileName)",
    "documentation": "设置项目图标"
  },
  "TextTagSize2Height": {
    "original": "function TextTagSize2Height takes real size returns real",
    "name": "TextTagSize2Height",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "size",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "TextTagSize2Height(size)",
    "documentation": ""
  },
  "TextTagSpeed2Velocity": {
    "original": "function TextTagSpeed2Velocity takes real speed returns real",
    "name": "TextTagSpeed2Velocity",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "speed",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "TextTagSpeed2Velocity(speed)",
    "documentation": ""
  },
  "SetTextTagColorBJ": {
    "original": "function SetTextTagColorBJ takes texttag tt, real red, real green, real blue, real transparency returns nothing",
    "name": "SetTextTagColorBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "texttag",
      "name": "tt",
      "documentation": ""
    }, {
      "type": "real",
      "name": "red",
      "documentation": ""
    }, {
      "type": "real",
      "name": "green",
      "documentation": ""
    }, {
      "type": "real",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "real",
      "name": "transparency",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTextTagColorBJ(tt, red, green, blue, transparency)",
    "documentation": "改变漂浮文字颜色"
  },
  "SetTextTagVelocityBJ": {
    "original": "function SetTextTagVelocityBJ takes texttag tt, real speed, real angle returns nothing",
    "name": "SetTextTagVelocityBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "texttag",
      "name": "tt",
      "documentation": ""
    }, {
      "type": "real",
      "name": "speed",
      "documentation": ""
    }, {
      "type": "real",
      "name": "angle",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTextTagVelocityBJ(tt, speed, angle)",
    "documentation": "设置漂浮文字速度"
  },
  "SetTextTagTextBJ": {
    "original": "function SetTextTagTextBJ takes texttag tt, string s, real size returns nothing",
    "name": "SetTextTagTextBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "texttag",
      "name": "tt",
      "documentation": ""
    }, {
      "type": "string",
      "name": "s",
      "documentation": ""
    }, {
      "type": "real",
      "name": "size",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTextTagTextBJ(tt, s, size)",
    "documentation": "改变漂浮文字内容"
  },
  "SetTextTagPosBJ": {
    "original": "function SetTextTagPosBJ takes texttag tt, location loc, real zOffset returns nothing",
    "name": "SetTextTagPosBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "texttag",
      "name": "tt",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }, {
      "type": "real",
      "name": "zOffset",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTextTagPosBJ(tt, loc, zOffset)",
    "documentation": "改变漂浮文字位置到指定点"
  },
  "SetTextTagPosUnitBJ": {
    "original": "function SetTextTagPosUnitBJ takes texttag tt, unit whichUnit, real zOffset returns nothing",
    "name": "SetTextTagPosUnitBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "texttag",
      "name": "tt",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "zOffset",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTextTagPosUnitBJ(tt, whichUnit, zOffset)",
    "documentation": "改变漂浮文字位置到指定单位"
  },
  "SetTextTagSuspendedBJ": {
    "original": "function SetTextTagSuspendedBJ takes texttag tt, boolean flag returns nothing",
    "name": "SetTextTagSuspendedBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "texttag",
      "name": "tt",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTextTagSuspendedBJ(tt, flag)",
    "documentation": "暂停/继续漂浮文字"
  },
  "SetTextTagPermanentBJ": {
    "original": "function SetTextTagPermanentBJ takes texttag tt, boolean flag returns nothing",
    "name": "SetTextTagPermanentBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "texttag",
      "name": "tt",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTextTagPermanentBJ(tt, flag)",
    "documentation": "永久存在/允许过期"
  },
  "SetTextTagAgeBJ": {
    "original": "function SetTextTagAgeBJ takes texttag tt, real age returns nothing",
    "name": "SetTextTagAgeBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "texttag",
      "name": "tt",
      "documentation": ""
    }, {
      "type": "real",
      "name": "age",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTextTagAgeBJ(tt, age)",
    "documentation": "改变漂浮文字已存在时间"
  },
  "SetTextTagLifespanBJ": {
    "original": "function SetTextTagLifespanBJ takes texttag tt, real lifespan returns nothing",
    "name": "SetTextTagLifespanBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "texttag",
      "name": "tt",
      "documentation": ""
    }, {
      "type": "real",
      "name": "lifespan",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTextTagLifespanBJ(tt, lifespan)",
    "documentation": "改变漂浮文字存在时限"
  },
  "SetTextTagFadepointBJ": {
    "original": "function SetTextTagFadepointBJ takes texttag tt, real fadepoint returns nothing",
    "name": "SetTextTagFadepointBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "texttag",
      "name": "tt",
      "documentation": ""
    }, {
      "type": "real",
      "name": "fadepoint",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTextTagFadepointBJ(tt, fadepoint)",
    "documentation": "改变漂浮文字淡化点"
  },
  "CreateTextTagLocBJ": {
    "original": "function CreateTextTagLocBJ takes string s, location loc, real zOffset, real size, real red, real green, real blue, real transparency returns texttag",
    "name": "CreateTextTagLocBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "s",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }, {
      "type": "real",
      "name": "zOffset",
      "documentation": ""
    }, {
      "type": "real",
      "name": "size",
      "documentation": ""
    }, {
      "type": "real",
      "name": "red",
      "documentation": ""
    }, {
      "type": "real",
      "name": "green",
      "documentation": ""
    }, {
      "type": "real",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "real",
      "name": "transparency",
      "documentation": ""
    }],
    "returnType": "texttag",
    "insertText": "CreateTextTagLocBJ(s, loc, zOffset, size, red, green, blue, transparency)",
    "documentation": "创建漂浮文字在 点"
  },
  "CreateTextTagUnitBJ": {
    "original": "function CreateTextTagUnitBJ takes string s, unit whichUnit, real zOffset, real size, real red, real green, real blue, real transparency returns texttag",
    "name": "CreateTextTagUnitBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "s",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "zOffset",
      "documentation": ""
    }, {
      "type": "real",
      "name": "size",
      "documentation": ""
    }, {
      "type": "real",
      "name": "red",
      "documentation": ""
    }, {
      "type": "real",
      "name": "green",
      "documentation": ""
    }, {
      "type": "real",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "real",
      "name": "transparency",
      "documentation": ""
    }],
    "returnType": "texttag",
    "insertText": "CreateTextTagUnitBJ(s, whichUnit, zOffset, size, red, green, blue, transparency)",
    "documentation": "创建漂浮文字在单位"
  },
  "DestroyTextTagBJ": {
    "original": "function DestroyTextTagBJ takes texttag tt returns nothing",
    "name": "DestroyTextTagBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "texttag",
      "name": "tt",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DestroyTextTagBJ(tt)",
    "documentation": "删除漂浮文字"
  },
  "ShowTextTagForceBJ": {
    "original": "function ShowTextTagForceBJ takes boolean show, texttag tt, force whichForce returns nothing",
    "name": "ShowTextTagForceBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "show",
      "documentation": ""
    }, {
      "type": "texttag",
      "name": "tt",
      "documentation": ""
    }, {
      "type": "force",
      "name": "whichForce",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ShowTextTagForceBJ(show, tt, whichForce)",
    "documentation": "显示/隐藏 漂浮文字"
  },
  "GetLastCreatedTextTag": {
    "original": "function GetLastCreatedTextTag takes nothing returns texttag",
    "name": "GetLastCreatedTextTag",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "texttag",
    "insertText": "GetLastCreatedTextTag()",
    "documentation": "最后创建的漂浮文字"
  },
  "PauseGameOn": {
    "original": "function PauseGameOn takes nothing returns nothing",
    "name": "PauseGameOn",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "PauseGameOn()",
    "documentation": "暂停游戏"
  },
  "PauseGameOff": {
    "original": "function PauseGameOff takes nothing returns nothing",
    "name": "PauseGameOff",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "PauseGameOff()",
    "documentation": "恢复游戏"
  },
  "SetUserControlForceOn": {
    "original": "function SetUserControlForceOn takes force whichForce returns nothing",
    "name": "SetUserControlForceOn",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "force",
      "name": "whichForce",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUserControlForceOn(whichForce)",
    "documentation": "授予用户控制权"
  },
  "SetUserControlForceOff": {
    "original": "function SetUserControlForceOff takes force whichForce returns nothing",
    "name": "SetUserControlForceOff",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "force",
      "name": "whichForce",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUserControlForceOff(whichForce)",
    "documentation": "禁止用户控制权"
  },
  "ShowInterfaceForceOn": {
    "original": "function ShowInterfaceForceOn takes force whichForce, real fadeDuration returns nothing",
    "name": "ShowInterfaceForceOn",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "force",
      "name": "whichForce",
      "documentation": ""
    }, {
      "type": "real",
      "name": "fadeDuration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ShowInterfaceForceOn(whichForce, fadeDuration)",
    "documentation": "信箱模式关"
  },
  "ShowInterfaceForceOff": {
    "original": "function ShowInterfaceForceOff takes force whichForce, real fadeDuration returns nothing",
    "name": "ShowInterfaceForceOff",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "force",
      "name": "whichForce",
      "documentation": ""
    }, {
      "type": "real",
      "name": "fadeDuration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ShowInterfaceForceOff(whichForce, fadeDuration)",
    "documentation": "信箱模式开"
  },
  "PingMinimapForForce": {
    "original": "function PingMinimapForForce takes force whichForce, real x, real y, real duration returns nothing",
    "name": "PingMinimapForForce",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "force",
      "name": "whichForce",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PingMinimapForForce(whichForce, x, y, duration)",
    "documentation": ""
  },
  "PingMinimapLocForForce": {
    "original": "function PingMinimapLocForForce takes force whichForce, location loc, real duration returns nothing",
    "name": "PingMinimapLocForForce",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "force",
      "name": "whichForce",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PingMinimapLocForForce(whichForce, loc, duration)",
    "documentation": "小地图闪光"
  },
  "PingMinimapForPlayer": {
    "original": "function PingMinimapForPlayer takes player whichPlayer, real x, real y, real duration returns nothing",
    "name": "PingMinimapForPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PingMinimapForPlayer(whichPlayer, x, y, duration)",
    "documentation": ""
  },
  "PingMinimapLocForPlayer": {
    "original": "function PingMinimapLocForPlayer takes player whichPlayer, location loc, real duration returns nothing",
    "name": "PingMinimapLocForPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PingMinimapLocForPlayer(whichPlayer, loc, duration)",
    "documentation": ""
  },
  "PingMinimapForForceEx": {
    "original": "function PingMinimapForForceEx takes force whichForce, real x, real y, real duration, integer style, real red, real green, real blue returns nothing",
    "name": "PingMinimapForForceEx",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "force",
      "name": "whichForce",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "style",
      "documentation": ""
    }, {
      "type": "real",
      "name": "red",
      "documentation": ""
    }, {
      "type": "real",
      "name": "green",
      "documentation": ""
    }, {
      "type": "real",
      "name": "blue",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PingMinimapForForceEx(whichForce, x, y, duration, style, red, green, blue)",
    "documentation": ""
  },
  "PingMinimapLocForForceEx": {
    "original": "function PingMinimapLocForForceEx takes force whichForce, location loc, real duration, integer style, real red, real green, real blue returns nothing",
    "name": "PingMinimapLocForForceEx",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "force",
      "name": "whichForce",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "style",
      "documentation": ""
    }, {
      "type": "real",
      "name": "red",
      "documentation": ""
    }, {
      "type": "real",
      "name": "green",
      "documentation": ""
    }, {
      "type": "real",
      "name": "blue",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PingMinimapLocForForceEx(whichForce, loc, duration, style, red, green, blue)",
    "documentation": "小地图闪光有颜色"
  },
  "EnableWorldFogBoundaryBJ": {
    "original": "function EnableWorldFogBoundaryBJ takes boolean enable, force f returns nothing",
    "name": "EnableWorldFogBoundaryBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "enable",
      "documentation": ""
    }, {
      "type": "force",
      "name": "f",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "EnableWorldFogBoundaryBJ(enable, f)",
    "documentation": "允许/禁止 边界色彩"
  },
  "EnableOcclusionBJ": {
    "original": "function EnableOcclusionBJ takes boolean enable, force f returns nothing",
    "name": "EnableOcclusionBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "enable",
      "documentation": ""
    }, {
      "type": "force",
      "name": "f",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "EnableOcclusionBJ(enable, f)",
    "documentation": "允许/禁止 闭合"
  },
  "CancelCineSceneBJ": {
    "original": "function CancelCineSceneBJ takes nothing returns nothing",
    "name": "CancelCineSceneBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "CancelCineSceneBJ()",
    "documentation": ""
  },
  "TryInitCinematicBehaviorBJ": {
    "original": "function TryInitCinematicBehaviorBJ takes nothing returns nothing",
    "name": "TryInitCinematicBehaviorBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "TryInitCinematicBehaviorBJ()",
    "documentation": ""
  },
  "SetCinematicSceneBJ": {
    "original": "function SetCinematicSceneBJ takes sound soundHandle, integer portraitUnitId, playercolor color, string speakerTitle, string text, real sceneDuration, real voiceoverDuration returns nothing",
    "name": "SetCinematicSceneBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "portraitUnitId",
      "documentation": ""
    }, {
      "type": "playercolor",
      "name": "color",
      "documentation": ""
    }, {
      "type": "string",
      "name": "speakerTitle",
      "documentation": ""
    }, {
      "type": "string",
      "name": "text",
      "documentation": ""
    }, {
      "type": "real",
      "name": "sceneDuration",
      "documentation": ""
    }, {
      "type": "real",
      "name": "voiceoverDuration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCinematicSceneBJ(soundHandle, portraitUnitId, color, speakerTitle, text, sceneDuration, voiceoverDuration)",
    "documentation": ""
  },
  "GetTransmissionDuration": {
    "original": "function GetTransmissionDuration takes sound soundHandle, integer timeType, real timeVal returns real",
    "name": "GetTransmissionDuration",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "timeType",
      "documentation": ""
    }, {
      "type": "real",
      "name": "timeVal",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetTransmissionDuration(soundHandle, timeType, timeVal)",
    "documentation": ""
  },
  "WaitTransmissionDuration": {
    "original": "function WaitTransmissionDuration takes sound soundHandle, integer timeType, real timeVal returns nothing",
    "name": "WaitTransmissionDuration",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "timeType",
      "documentation": ""
    }, {
      "type": "real",
      "name": "timeVal",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "WaitTransmissionDuration(soundHandle, timeType, timeVal)",
    "documentation": ""
  },
  "DoTransmissionBasicsXYBJ": {
    "original": "function DoTransmissionBasicsXYBJ takes integer unitId, playercolor color, real x, real y, sound soundHandle, string unitName, string message, real duration returns nothing",
    "name": "DoTransmissionBasicsXYBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "unitId",
      "documentation": ""
    }, {
      "type": "playercolor",
      "name": "color",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "string",
      "name": "unitName",
      "documentation": ""
    }, {
      "type": "string",
      "name": "message",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DoTransmissionBasicsXYBJ(unitId, color, x, y, soundHandle, unitName, message, duration)",
    "documentation": ""
  },
  "TransmissionFromUnitWithNameBJ": {
    "original": "function TransmissionFromUnitWithNameBJ takes force toForce, unit whichUnit, string unitName, sound soundHandle, string message, integer timeType, real timeVal, boolean wait returns nothing",
    "name": "TransmissionFromUnitWithNameBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "force",
      "name": "toForce",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "string",
      "name": "unitName",
      "documentation": ""
    }, {
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "string",
      "name": "message",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "timeType",
      "documentation": ""
    }, {
      "type": "real",
      "name": "timeVal",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "wait",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TransmissionFromUnitWithNameBJ(toForce, whichUnit, unitName, soundHandle, message, timeType, timeVal, wait)",
    "documentation": "播送 单位消息"
  },
  "TransmissionFromUnitTypeWithNameBJ": {
    "original": "function TransmissionFromUnitTypeWithNameBJ takes force toForce, player fromPlayer, integer unitId, string unitName, location loc, sound soundHandle, string message, integer timeType, real timeVal, boolean wait returns nothing",
    "name": "TransmissionFromUnitTypeWithNameBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "force",
      "name": "toForce",
      "documentation": ""
    }, {
      "type": "player",
      "name": "fromPlayer",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitId",
      "documentation": ""
    }, {
      "type": "string",
      "name": "unitName",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }, {
      "type": "sound",
      "name": "soundHandle",
      "documentation": ""
    }, {
      "type": "string",
      "name": "message",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "timeType",
      "documentation": ""
    }, {
      "type": "real",
      "name": "timeVal",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "wait",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TransmissionFromUnitTypeWithNameBJ(toForce, fromPlayer, unitId, unitName, loc, soundHandle, message, timeType, timeVal, wait)",
    "documentation": "播送 单位[类型]消息"
  },
  "GetLastTransmissionDurationBJ": {
    "original": "function GetLastTransmissionDurationBJ takes nothing returns real",
    "name": "GetLastTransmissionDurationBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "real",
    "insertText": "GetLastTransmissionDurationBJ()",
    "documentation": "最后 播送的 单位消息 的时间长度"
  },
  "ForceCinematicSubtitlesBJ": {
    "original": "function ForceCinematicSubtitlesBJ takes boolean flag returns nothing",
    "name": "ForceCinematicSubtitlesBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ForceCinematicSubtitlesBJ(flag)",
    "documentation": "副标题显示超过"
  },
  "CinematicModeExBJ": {
    "original": "function CinematicModeExBJ takes boolean cineMode, force forForce, real interfaceFadeTime returns nothing",
    "name": "CinematicModeExBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "cineMode",
      "documentation": ""
    }, {
      "type": "force",
      "name": "forForce",
      "documentation": ""
    }, {
      "type": "real",
      "name": "interfaceFadeTime",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CinematicModeExBJ(cineMode, forForce, interfaceFadeTime)",
    "documentation": "切换影片模式(时间)"
  },
  "CinematicModeBJ": {
    "original": "function CinematicModeBJ takes boolean cineMode, force forForce returns nothing",
    "name": "CinematicModeBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "cineMode",
      "documentation": ""
    }, {
      "type": "force",
      "name": "forForce",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CinematicModeBJ(cineMode, forForce)",
    "documentation": "切换影片模式"
  },
  "DisplayCineFilterBJ": {
    "original": "function DisplayCineFilterBJ takes boolean flag returns nothing",
    "name": "DisplayCineFilterBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DisplayCineFilterBJ(flag)",
    "documentation": "显示/隐藏过滤器"
  },
  "CinematicFadeCommonBJ": {
    "original": "function CinematicFadeCommonBJ takes real red, real green, real blue, real duration, string tex, real startTrans, real endTrans returns nothing",
    "name": "CinematicFadeCommonBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "red",
      "documentation": ""
    }, {
      "type": "real",
      "name": "green",
      "documentation": ""
    }, {
      "type": "real",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }, {
      "type": "string",
      "name": "tex",
      "documentation": ""
    }, {
      "type": "real",
      "name": "startTrans",
      "documentation": ""
    }, {
      "type": "real",
      "name": "endTrans",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CinematicFadeCommonBJ(red, green, blue, duration, tex, startTrans, endTrans)",
    "documentation": ""
  },
  "FinishCinematicFadeBJ": {
    "original": "function FinishCinematicFadeBJ takes nothing returns nothing",
    "name": "FinishCinematicFadeBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "FinishCinematicFadeBJ()",
    "documentation": ""
  },
  "FinishCinematicFadeAfterBJ": {
    "original": "function FinishCinematicFadeAfterBJ takes real duration returns nothing",
    "name": "FinishCinematicFadeAfterBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "duration",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "FinishCinematicFadeAfterBJ(duration)",
    "documentation": ""
  },
  "ContinueCinematicFadeBJ": {
    "original": "function ContinueCinematicFadeBJ takes nothing returns nothing",
    "name": "ContinueCinematicFadeBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "ContinueCinematicFadeBJ()",
    "documentation": ""
  },
  "ContinueCinematicFadeAfterBJ": {
    "original": "function ContinueCinematicFadeAfterBJ takes real duration, real red, real green, real blue, real trans, string tex returns nothing",
    "name": "ContinueCinematicFadeAfterBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "duration",
      "documentation": ""
    }, {
      "type": "real",
      "name": "red",
      "documentation": ""
    }, {
      "type": "real",
      "name": "green",
      "documentation": ""
    }, {
      "type": "real",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "real",
      "name": "trans",
      "documentation": ""
    }, {
      "type": "string",
      "name": "tex",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ContinueCinematicFadeAfterBJ(duration, red, green, blue, trans, tex)",
    "documentation": ""
  },
  "AbortCinematicFadeBJ": {
    "original": "function AbortCinematicFadeBJ takes nothing returns nothing",
    "name": "AbortCinematicFadeBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "AbortCinematicFadeBJ()",
    "documentation": ""
  },
  "CinematicFadeBJ": {
    "original": "function CinematicFadeBJ takes integer fadetype, real duration, string tex, real red, real green, real blue, real trans returns nothing",
    "name": "CinematicFadeBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "fadetype",
      "documentation": ""
    }, {
      "type": "real",
      "name": "duration",
      "documentation": ""
    }, {
      "type": "string",
      "name": "tex",
      "documentation": ""
    }, {
      "type": "real",
      "name": "red",
      "documentation": ""
    }, {
      "type": "real",
      "name": "green",
      "documentation": ""
    }, {
      "type": "real",
      "name": "blue",
      "documentation": ""
    }, {
      "type": "real",
      "name": "trans",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CinematicFadeBJ(fadetype, duration, tex, red, green, blue, trans)",
    "documentation": "淡化的过滤器"
  },
  "CinematicFilterGenericBJ": {
    "original": "function CinematicFilterGenericBJ takes real duration, blendmode bmode, string tex, real red0, real green0, real blue0, real trans0, real red1, real green1, real blue1, real trans1 returns nothing",
    "name": "CinematicFilterGenericBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "duration",
      "documentation": ""
    }, {
      "type": "blendmode",
      "name": "bmode",
      "documentation": ""
    }, {
      "type": "string",
      "name": "tex",
      "documentation": ""
    }, {
      "type": "real",
      "name": "red0",
      "documentation": ""
    }, {
      "type": "real",
      "name": "green0",
      "documentation": ""
    }, {
      "type": "real",
      "name": "blue0",
      "documentation": ""
    }, {
      "type": "real",
      "name": "trans0",
      "documentation": ""
    }, {
      "type": "real",
      "name": "red1",
      "documentation": ""
    }, {
      "type": "real",
      "name": "green1",
      "documentation": ""
    }, {
      "type": "real",
      "name": "blue1",
      "documentation": ""
    }, {
      "type": "real",
      "name": "trans1",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CinematicFilterGenericBJ(duration, bmode, tex, red0, green0, blue0, trans0, red1, green1, blue1, trans1)",
    "documentation": "高级的过滤器"
  },
  "RescueUnitBJ": {
    "original": "function RescueUnitBJ takes unit whichUnit, player rescuer, boolean changeColor returns nothing",
    "name": "RescueUnitBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "player",
      "name": "rescuer",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "changeColor",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RescueUnitBJ(whichUnit, rescuer, changeColor)",
    "documentation": "营救单位"
  },
  "TriggerActionUnitRescuedBJ": {
    "original": "function TriggerActionUnitRescuedBJ takes nothing returns nothing",
    "name": "TriggerActionUnitRescuedBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "TriggerActionUnitRescuedBJ()",
    "documentation": ""
  },
  "TryInitRescuableTriggersBJ": {
    "original": "function TryInitRescuableTriggersBJ takes nothing returns nothing",
    "name": "TryInitRescuableTriggersBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "TryInitRescuableTriggersBJ()",
    "documentation": ""
  },
  "SetRescueUnitColorChangeBJ": {
    "original": "function SetRescueUnitColorChangeBJ takes boolean changeColor returns nothing",
    "name": "SetRescueUnitColorChangeBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "changeColor",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetRescueUnitColorChangeBJ(changeColor)",
    "documentation": "安排营救单位行为"
  },
  "SetRescueBuildingColorChangeBJ": {
    "original": "function SetRescueBuildingColorChangeBJ takes boolean changeColor returns nothing",
    "name": "SetRescueBuildingColorChangeBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "changeColor",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetRescueBuildingColorChangeBJ(changeColor)",
    "documentation": "设置建筑 ,~Change/Retain Color, 当被营救时"
  },
  "MakeUnitRescuableToForceBJEnum": {
    "original": "function MakeUnitRescuableToForceBJEnum takes nothing returns nothing",
    "name": "MakeUnitRescuableToForceBJEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MakeUnitRescuableToForceBJEnum()",
    "documentation": ""
  },
  "MakeUnitRescuableToForceBJ": {
    "original": "function MakeUnitRescuableToForceBJ takes unit whichUnit, boolean isRescuable, force whichForce returns nothing",
    "name": "MakeUnitRescuableToForceBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "isRescuable",
      "documentation": ""
    }, {
      "type": "force",
      "name": "whichForce",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MakeUnitRescuableToForceBJ(whichUnit, isRescuable, whichForce)",
    "documentation": "安排营救单位"
  },
  "InitRescuableBehaviorBJ": {
    "original": "function InitRescuableBehaviorBJ takes nothing returns nothing",
    "name": "InitRescuableBehaviorBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "InitRescuableBehaviorBJ()",
    "documentation": ""
  },
  "SetPlayerTechResearchedSwap": {
    "original": "function SetPlayerTechResearchedSwap takes integer techid, integer levels, player whichPlayer returns nothing",
    "name": "SetPlayerTechResearchedSwap",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "techid",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "levels",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerTechResearchedSwap(techid, levels, whichPlayer)",
    "documentation": "设置当前科技级别"
  },
  "SetPlayerTechMaxAllowedSwap": {
    "original": "function SetPlayerTechMaxAllowedSwap takes integer techid, integer maximum, player whichPlayer returns nothing",
    "name": "SetPlayerTechMaxAllowedSwap",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "techid",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "maximum",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerTechMaxAllowedSwap(techid, maximum, whichPlayer)",
    "documentation": "设置最高科技级别"
  },
  "SetPlayerMaxHeroesAllowed": {
    "original": "function SetPlayerMaxHeroesAllowed takes integer maximum, player whichPlayer returns nothing",
    "name": "SetPlayerMaxHeroesAllowed",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "maximum",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerMaxHeroesAllowed(maximum, whichPlayer)",
    "documentation": "设置英雄 的训练限制"
  },
  "GetPlayerTechCountSimple": {
    "original": "function GetPlayerTechCountSimple takes integer techid, player whichPlayer returns integer",
    "name": "GetPlayerTechCountSimple",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "techid",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetPlayerTechCountSimple(techid, whichPlayer)",
    "documentation": "科技等级"
  },
  "GetPlayerTechMaxAllowedSwap": {
    "original": "function GetPlayerTechMaxAllowedSwap takes integer techid, player whichPlayer returns integer",
    "name": "GetPlayerTechMaxAllowedSwap",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "techid",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetPlayerTechMaxAllowedSwap(techid, whichPlayer)",
    "documentation": "最大科技等级"
  },
  "SetPlayerAbilityAvailableBJ": {
    "original": "function SetPlayerAbilityAvailableBJ takes boolean avail, integer abilid, player whichPlayer returns nothing",
    "name": "SetPlayerAbilityAvailableBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "avail",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "abilid",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerAbilityAvailableBJ(avail, abilid, whichPlayer)",
    "documentation": "允许/禁止 技能"
  },
  "SetCampaignMenuRaceBJ": {
    "original": "function SetCampaignMenuRaceBJ takes integer campaignNumber returns nothing",
    "name": "SetCampaignMenuRaceBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "campaignNumber",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCampaignMenuRaceBJ(campaignNumber)",
    "documentation": "设置读取地图画面"
  },
  "SetMissionAvailableBJ": {
    "original": "function SetMissionAvailableBJ takes boolean available, integer missionIndex returns nothing",
    "name": "SetMissionAvailableBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "available",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionIndex",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetMissionAvailableBJ(available, missionIndex)",
    "documentation": "允许/禁止 任务"
  },
  "SetCampaignAvailableBJ": {
    "original": "function SetCampaignAvailableBJ takes boolean available, integer campaignNumber returns nothing",
    "name": "SetCampaignAvailableBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "available",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "campaignNumber",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCampaignAvailableBJ(available, campaignNumber)",
    "documentation": "允许/禁止 战役"
  },
  "SetCinematicAvailableBJ": {
    "original": "function SetCinematicAvailableBJ takes boolean available, integer cinematicIndex returns nothing",
    "name": "SetCinematicAvailableBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "available",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "cinematicIndex",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCinematicAvailableBJ(available, cinematicIndex)",
    "documentation": "允许/禁止 过场电影"
  },
  "InitGameCacheBJ": {
    "original": "function InitGameCacheBJ takes string campaignFile returns gamecache",
    "name": "InitGameCacheBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "campaignFile",
      "documentation": ""
    }],
    "returnType": "gamecache",
    "insertText": "InitGameCacheBJ(campaignFile)",
    "documentation": "创建游戏缓存"
  },
  "SaveGameCacheBJ": {
    "original": "function SaveGameCacheBJ takes gamecache cache returns boolean",
    "name": "SaveGameCacheBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveGameCacheBJ(cache)",
    "documentation": "存储游戏缓存"
  },
  "GetLastCreatedGameCacheBJ": {
    "original": "function GetLastCreatedGameCacheBJ takes nothing returns gamecache",
    "name": "GetLastCreatedGameCacheBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "gamecache",
    "insertText": "GetLastCreatedGameCacheBJ()",
    "documentation": "最后创建的游戏缓存"
  },
  "InitHashtableBJ": {
    "original": "function InitHashtableBJ takes nothing returns hashtable",
    "name": "InitHashtableBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "hashtable",
    "insertText": "InitHashtableBJ()",
    "documentation": "创建一个新的哈希表"
  },
  "GetLastCreatedHashtableBJ": {
    "original": "function GetLastCreatedHashtableBJ takes nothing returns hashtable",
    "name": "GetLastCreatedHashtableBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "hashtable",
    "insertText": "GetLastCreatedHashtableBJ()",
    "documentation": "最后创建的哈希表"
  },
  "StoreRealBJ": {
    "original": "function StoreRealBJ takes real value, string key, string missionKey, gamecache cache returns nothing",
    "name": "StoreRealBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "value",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "StoreRealBJ(value, key, missionKey, cache)",
    "documentation": "贮藏 实数"
  },
  "StoreIntegerBJ": {
    "original": "function StoreIntegerBJ takes integer value, string key, string missionKey, gamecache cache returns nothing",
    "name": "StoreIntegerBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "value",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "StoreIntegerBJ(value, key, missionKey, cache)",
    "documentation": "贮藏 整数"
  },
  "StoreBooleanBJ": {
    "original": "function StoreBooleanBJ takes boolean value, string key, string missionKey, gamecache cache returns nothing",
    "name": "StoreBooleanBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "value",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "StoreBooleanBJ(value, key, missionKey, cache)",
    "documentation": "贮藏 布尔变量"
  },
  "StoreStringBJ": {
    "original": "function StoreStringBJ takes string value, string key, string missionKey, gamecache cache returns boolean",
    "name": "StoreStringBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "value",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "StoreStringBJ(value, key, missionKey, cache)",
    "documentation": "贮藏 字串符"
  },
  "StoreUnitBJ": {
    "original": "function StoreUnitBJ takes unit whichUnit, string key, string missionKey, gamecache cache returns boolean",
    "name": "StoreUnitBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "StoreUnitBJ(whichUnit, key, missionKey, cache)",
    "documentation": "贮藏 单位"
  },
  "SaveRealBJ": {
    "original": "function SaveRealBJ takes real value, integer key, integer missionKey, hashtable table returns nothing",
    "name": "SaveRealBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "value",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SaveRealBJ(value, key, missionKey, table)",
    "documentation": "保存实数 ,~Value, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable, 之内"
  },
  "SaveIntegerBJ": {
    "original": "function SaveIntegerBJ takes integer value, integer key, integer missionKey, hashtable table returns nothing",
    "name": "SaveIntegerBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "value",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SaveIntegerBJ(value, key, missionKey, table)",
    "documentation": "保存整数 ,~Value, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable, 之内"
  },
  "SaveBooleanBJ": {
    "original": "function SaveBooleanBJ takes boolean value, integer key, integer missionKey, hashtable table returns nothing",
    "name": "SaveBooleanBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "value",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SaveBooleanBJ(value, key, missionKey, table)",
    "documentation": "保存布尔 ,~Value, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable, 之内"
  },
  "SaveStringBJ": {
    "original": "function SaveStringBJ takes string value, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveStringBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "value",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveStringBJ(value, key, missionKey, table)",
    "documentation": "保存字符串 ,~Value, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SavePlayerHandleBJ": {
    "original": "function SavePlayerHandleBJ takes player whichPlayer, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SavePlayerHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SavePlayerHandleBJ(whichPlayer, key, missionKey, table)",
    "documentation": "保存玩家 ,~Player, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveWidgetHandleBJ": {
    "original": "function SaveWidgetHandleBJ takes widget whichWidget, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveWidgetHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "widget",
      "name": "whichWidget",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveWidgetHandleBJ(whichWidget, key, missionKey, table)",
    "documentation": ""
  },
  "SaveDestructableHandleBJ": {
    "original": "function SaveDestructableHandleBJ takes destructable whichDestructable, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveDestructableHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "destructable",
      "name": "whichDestructable",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveDestructableHandleBJ(whichDestructable, key, missionKey, table)",
    "documentation": "保存可破坏物 ,~Destructable, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveItemHandleBJ": {
    "original": "function SaveItemHandleBJ takes item whichItem, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveItemHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveItemHandleBJ(whichItem, key, missionKey, table)",
    "documentation": "保存物品 ,~Item, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveUnitHandleBJ": {
    "original": "function SaveUnitHandleBJ takes unit whichUnit, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveUnitHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveUnitHandleBJ(whichUnit, key, missionKey, table)",
    "documentation": "保存单位 ,~Unit, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveAbilityHandleBJ": {
    "original": "function SaveAbilityHandleBJ takes ability whichAbility, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveAbilityHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "ability",
      "name": "whichAbility",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveAbilityHandleBJ(whichAbility, key, missionKey, table)",
    "documentation": ""
  },
  "SaveTimerHandleBJ": {
    "original": "function SaveTimerHandleBJ takes timer whichTimer, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveTimerHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "timer",
      "name": "whichTimer",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveTimerHandleBJ(whichTimer, key, missionKey, table)",
    "documentation": "保存计时器 ,~Timer, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveTriggerHandleBJ": {
    "original": "function SaveTriggerHandleBJ takes trigger whichTrigger, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveTriggerHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trigger",
      "name": "whichTrigger",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveTriggerHandleBJ(whichTrigger, key, missionKey, table)",
    "documentation": "保存触发器 ,~Trigger, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveTriggerConditionHandleBJ": {
    "original": "function SaveTriggerConditionHandleBJ takes triggercondition whichTriggercondition, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveTriggerConditionHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "triggercondition",
      "name": "whichTriggercondition",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveTriggerConditionHandleBJ(whichTriggercondition, key, missionKey, table)",
    "documentation": "保存触发条件 ,~Triggercondition, 在子索引 ,~Value, of ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveTriggerActionHandleBJ": {
    "original": "function SaveTriggerActionHandleBJ takes triggeraction whichTriggeraction, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveTriggerActionHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "triggeraction",
      "name": "whichTriggeraction",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveTriggerActionHandleBJ(whichTriggeraction, key, missionKey, table)",
    "documentation": "保存触发动作 ,~Triggeraction, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveTriggerEventHandleBJ": {
    "original": "function SaveTriggerEventHandleBJ takes event whichEvent, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveTriggerEventHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "event",
      "name": "whichEvent",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveTriggerEventHandleBJ(whichEvent, key, missionKey, table)",
    "documentation": "保存触发事件 ,~Event, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveForceHandleBJ": {
    "original": "function SaveForceHandleBJ takes force whichForce, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveForceHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "force",
      "name": "whichForce",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveForceHandleBJ(whichForce, key, missionKey, table)",
    "documentation": "保存玩家组 ,~Force, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveGroupHandleBJ": {
    "original": "function SaveGroupHandleBJ takes group whichGroup, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveGroupHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveGroupHandleBJ(whichGroup, key, missionKey, table)",
    "documentation": "保存单位组,~Group, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveLocationHandleBJ": {
    "original": "function SaveLocationHandleBJ takes location whichLocation, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveLocationHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "location",
      "name": "whichLocation",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveLocationHandleBJ(whichLocation, key, missionKey, table)",
    "documentation": "保存点 ,~Location, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveRectHandleBJ": {
    "original": "function SaveRectHandleBJ takes rect whichRect, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveRectHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "rect",
      "name": "whichRect",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveRectHandleBJ(whichRect, key, missionKey, table)",
    "documentation": "保存区域(矩型) ,~Rect, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveBooleanExprHandleBJ": {
    "original": "function SaveBooleanExprHandleBJ takes boolexpr whichBoolexpr, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveBooleanExprHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolexpr",
      "name": "whichBoolexpr",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveBooleanExprHandleBJ(whichBoolexpr, key, missionKey, table)",
    "documentation": "保存布尔表达式 ,~Boolexpr, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveSoundHandleBJ": {
    "original": "function SaveSoundHandleBJ takes sound whichSound, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveSoundHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "sound",
      "name": "whichSound",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveSoundHandleBJ(whichSound, key, missionKey, table)",
    "documentation": "保存音效 ,~Sound, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveEffectHandleBJ": {
    "original": "function SaveEffectHandleBJ takes effect whichEffect, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveEffectHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "effect",
      "name": "whichEffect",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveEffectHandleBJ(whichEffect, key, missionKey, table)",
    "documentation": "保存特效,~Effect, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveUnitPoolHandleBJ": {
    "original": "function SaveUnitPoolHandleBJ takes unitpool whichUnitpool, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveUnitPoolHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unitpool",
      "name": "whichUnitpool",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveUnitPoolHandleBJ(whichUnitpool, key, missionKey, table)",
    "documentation": "保存单位池 ,~Unitpool, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveItemPoolHandleBJ": {
    "original": "function SaveItemPoolHandleBJ takes itempool whichItempool, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveItemPoolHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "itempool",
      "name": "whichItempool",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveItemPoolHandleBJ(whichItempool, key, missionKey, table)",
    "documentation": "保存物品池 ,~Itempool, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveQuestHandleBJ": {
    "original": "function SaveQuestHandleBJ takes quest whichQuest, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveQuestHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "quest",
      "name": "whichQuest",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveQuestHandleBJ(whichQuest, key, missionKey, table)",
    "documentation": "保存任务 ,~Quest, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveQuestItemHandleBJ": {
    "original": "function SaveQuestItemHandleBJ takes questitem whichQuestitem, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveQuestItemHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "questitem",
      "name": "whichQuestitem",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveQuestItemHandleBJ(whichQuestitem, key, missionKey, table)",
    "documentation": "保存任务要求 ,~Questitem, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveDefeatConditionHandleBJ": {
    "original": "function SaveDefeatConditionHandleBJ takes defeatcondition whichDefeatcondition, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveDefeatConditionHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "defeatcondition",
      "name": "whichDefeatcondition",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveDefeatConditionHandleBJ(whichDefeatcondition, key, missionKey, table)",
    "documentation": "保存失败条件 ,~Defeatcondition, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveTimerDialogHandleBJ": {
    "original": "function SaveTimerDialogHandleBJ takes timerdialog whichTimerdialog, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveTimerDialogHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "timerdialog",
      "name": "whichTimerdialog",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveTimerDialogHandleBJ(whichTimerdialog, key, missionKey, table)",
    "documentation": "保存计时器窗口 ,~Timerdialog, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveLeaderboardHandleBJ": {
    "original": "function SaveLeaderboardHandleBJ takes leaderboard whichLeaderboard, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveLeaderboardHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "leaderboard",
      "name": "whichLeaderboard",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveLeaderboardHandleBJ(whichLeaderboard, key, missionKey, table)",
    "documentation": "保存排行榜 ,~Leaderboard, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveMultiboardHandleBJ": {
    "original": "function SaveMultiboardHandleBJ takes multiboard whichMultiboard, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveMultiboardHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "multiboard",
      "name": "whichMultiboard",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveMultiboardHandleBJ(whichMultiboard, key, missionKey, table)",
    "documentation": "保存多面板 ,~Multiboard, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveMultiboardItemHandleBJ": {
    "original": "function SaveMultiboardItemHandleBJ takes multiboarditem whichMultiboarditem, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveMultiboardItemHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "multiboarditem",
      "name": "whichMultiboarditem",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveMultiboardItemHandleBJ(whichMultiboarditem, key, missionKey, table)",
    "documentation": "保存多面板项目 ,~Multiboarditem, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveTrackableHandleBJ": {
    "original": "function SaveTrackableHandleBJ takes trackable whichTrackable, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveTrackableHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "trackable",
      "name": "whichTrackable",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveTrackableHandleBJ(whichTrackable, key, missionKey, table)",
    "documentation": "保存可追踪物 ,~Trackable, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveDialogHandleBJ": {
    "original": "function SaveDialogHandleBJ takes dialog whichDialog, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveDialogHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "dialog",
      "name": "whichDialog",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveDialogHandleBJ(whichDialog, key, missionKey, table)",
    "documentation": "保存对话框 ,~Dialog, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveButtonHandleBJ": {
    "original": "function SaveButtonHandleBJ takes button whichButton, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveButtonHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "button",
      "name": "whichButton",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveButtonHandleBJ(whichButton, key, missionKey, table)",
    "documentation": "保存对话框按钮 ,~Button, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveTextTagHandleBJ": {
    "original": "function SaveTextTagHandleBJ takes texttag whichTexttag, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveTextTagHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "texttag",
      "name": "whichTexttag",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveTextTagHandleBJ(whichTexttag, key, missionKey, table)",
    "documentation": "保存漂浮文字 ,~Texttag, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveLightningHandleBJ": {
    "original": "function SaveLightningHandleBJ takes lightning whichLightning, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveLightningHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "lightning",
      "name": "whichLightning",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveLightningHandleBJ(whichLightning, key, missionKey, table)",
    "documentation": "保存闪电效果 ,~Lightning, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveImageHandleBJ": {
    "original": "function SaveImageHandleBJ takes image whichImage, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveImageHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "image",
      "name": "whichImage",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveImageHandleBJ(whichImage, key, missionKey, table)",
    "documentation": "保存图像 ,~Image, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveUbersplatHandleBJ": {
    "original": "function SaveUbersplatHandleBJ takes ubersplat whichUbersplat, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveUbersplatHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "ubersplat",
      "name": "whichUbersplat",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveUbersplatHandleBJ(whichUbersplat, key, missionKey, table)",
    "documentation": "保存地面纹理变化 ,~Ubersplat, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveRegionHandleBJ": {
    "original": "function SaveRegionHandleBJ takes region whichRegion, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveRegionHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "region",
      "name": "whichRegion",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveRegionHandleBJ(whichRegion, key, missionKey, table)",
    "documentation": "保存区域(不规则) ,~Region, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveFogStateHandleBJ": {
    "original": "function SaveFogStateHandleBJ takes fogstate whichFogState, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveFogStateHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "fogstate",
      "name": "whichFogState",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveFogStateHandleBJ(whichFogState, key, missionKey, table)",
    "documentation": "保存迷雾状态 ,~Fogstate, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveFogModifierHandleBJ": {
    "original": "function SaveFogModifierHandleBJ takes fogmodifier whichFogModifier, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveFogModifierHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "fogmodifier",
      "name": "whichFogModifier",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveFogModifierHandleBJ(whichFogModifier, key, missionKey, table)",
    "documentation": "保存可见度修正器 ,~Fogmodifier, 在子索引 ,~Value, 主索引 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "SaveAgentHandleBJ": {
    "original": "function SaveAgentHandleBJ takes agent whichAgent, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveAgentHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "agent",
      "name": "whichAgent",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveAgentHandleBJ(whichAgent, key, missionKey, table)",
    "documentation": ""
  },
  "SaveHashtableHandleBJ": {
    "original": "function SaveHashtableHandleBJ takes hashtable whichHashtable, integer key, integer missionKey, hashtable table returns boolean",
    "name": "SaveHashtableHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "hashtable",
      "name": "whichHashtable",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SaveHashtableHandleBJ(whichHashtable, key, missionKey, table)",
    "documentation": ""
  },
  "GetStoredRealBJ": {
    "original": "function GetStoredRealBJ takes string key, string missionKey, gamecache cache returns real",
    "name": "GetStoredRealBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetStoredRealBJ(key, missionKey, cache)",
    "documentation": "读取实数值"
  },
  "GetStoredIntegerBJ": {
    "original": "function GetStoredIntegerBJ takes string key, string missionKey, gamecache cache returns integer",
    "name": "GetStoredIntegerBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetStoredIntegerBJ(key, missionKey, cache)",
    "documentation": "读取整数数据"
  },
  "GetStoredBooleanBJ": {
    "original": "function GetStoredBooleanBJ takes string key, string missionKey, gamecache cache returns boolean",
    "name": "GetStoredBooleanBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "GetStoredBooleanBJ(key, missionKey, cache)",
    "documentation": "读取布尔值"
  },
  "GetStoredStringBJ": {
    "original": "function GetStoredStringBJ takes string key, string missionKey, gamecache cache returns string",
    "name": "GetStoredStringBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "GetStoredStringBJ(key, missionKey, cache)",
    "documentation": "度曲字串符数据"
  },
  "LoadRealBJ": {
    "original": "function LoadRealBJ takes integer key, integer missionKey, hashtable table returns real",
    "name": "LoadRealBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "LoadRealBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取实数"
  },
  "LoadIntegerBJ": {
    "original": "function LoadIntegerBJ takes integer key, integer missionKey, hashtable table returns integer",
    "name": "LoadIntegerBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "LoadIntegerBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取整数"
  },
  "LoadBooleanBJ": {
    "original": "function LoadBooleanBJ takes integer key, integer missionKey, hashtable table returns boolean",
    "name": "LoadBooleanBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "LoadBooleanBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取布尔"
  },
  "LoadStringBJ": {
    "original": "function LoadStringBJ takes integer key, integer missionKey, hashtable table returns string",
    "name": "LoadStringBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "LoadStringBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取字符串"
  },
  "LoadPlayerHandleBJ": {
    "original": "function LoadPlayerHandleBJ takes integer key, integer missionKey, hashtable table returns player",
    "name": "LoadPlayerHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "player",
    "insertText": "LoadPlayerHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取玩家"
  },
  "LoadWidgetHandleBJ": {
    "original": "function LoadWidgetHandleBJ takes integer key, integer missionKey, hashtable table returns widget",
    "name": "LoadWidgetHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "widget",
    "insertText": "LoadWidgetHandleBJ(key, missionKey, table)",
    "documentation": ""
  },
  "LoadDestructableHandleBJ": {
    "original": "function LoadDestructableHandleBJ takes integer key, integer missionKey, hashtable table returns destructable",
    "name": "LoadDestructableHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "destructable",
    "insertText": "LoadDestructableHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取可破坏物"
  },
  "LoadItemHandleBJ": {
    "original": "function LoadItemHandleBJ takes integer key, integer missionKey, hashtable table returns item",
    "name": "LoadItemHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "item",
    "insertText": "LoadItemHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取物品"
  },
  "LoadUnitHandleBJ": {
    "original": "function LoadUnitHandleBJ takes integer key, integer missionKey, hashtable table returns unit",
    "name": "LoadUnitHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "unit",
    "insertText": "LoadUnitHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取单位"
  },
  "LoadAbilityHandleBJ": {
    "original": "function LoadAbilityHandleBJ takes integer key, integer missionKey, hashtable table returns ability",
    "name": "LoadAbilityHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "ability",
    "insertText": "LoadAbilityHandleBJ(key, missionKey, table)",
    "documentation": ""
  },
  "LoadTimerHandleBJ": {
    "original": "function LoadTimerHandleBJ takes integer key, integer missionKey, hashtable table returns timer",
    "name": "LoadTimerHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "timer",
    "insertText": "LoadTimerHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取计时器"
  },
  "LoadTriggerHandleBJ": {
    "original": "function LoadTriggerHandleBJ takes integer key, integer missionKey, hashtable table returns trigger",
    "name": "LoadTriggerHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "trigger",
    "insertText": "LoadTriggerHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取触发器"
  },
  "LoadTriggerConditionHandleBJ": {
    "original": "function LoadTriggerConditionHandleBJ takes integer key, integer missionKey, hashtable table returns triggercondition",
    "name": "LoadTriggerConditionHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "triggercondition",
    "insertText": "LoadTriggerConditionHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取触发条件"
  },
  "LoadTriggerActionHandleBJ": {
    "original": "function LoadTriggerActionHandleBJ takes integer key, integer missionKey, hashtable table returns triggeraction",
    "name": "LoadTriggerActionHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "triggeraction",
    "insertText": "LoadTriggerActionHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取触发动作"
  },
  "LoadTriggerEventHandleBJ": {
    "original": "function LoadTriggerEventHandleBJ takes integer key, integer missionKey, hashtable table returns event",
    "name": "LoadTriggerEventHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "event",
    "insertText": "LoadTriggerEventHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取触发事件"
  },
  "LoadForceHandleBJ": {
    "original": "function LoadForceHandleBJ takes integer key, integer missionKey, hashtable table returns force",
    "name": "LoadForceHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "force",
    "insertText": "LoadForceHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取玩家组"
  },
  "LoadGroupHandleBJ": {
    "original": "function LoadGroupHandleBJ takes integer key, integer missionKey, hashtable table returns group",
    "name": "LoadGroupHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "group",
    "insertText": "LoadGroupHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取单位组"
  },
  "LoadLocationHandleBJ": {
    "original": "function LoadLocationHandleBJ takes integer key, integer missionKey, hashtable table returns location",
    "name": "LoadLocationHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "location",
    "insertText": "LoadLocationHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取点"
  },
  "LoadRectHandleBJ": {
    "original": "function LoadRectHandleBJ takes integer key, integer missionKey, hashtable table returns rect",
    "name": "LoadRectHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "rect",
    "insertText": "LoadRectHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取区域(矩型)"
  },
  "LoadBooleanExprHandleBJ": {
    "original": "function LoadBooleanExprHandleBJ takes integer key, integer missionKey, hashtable table returns boolexpr",
    "name": "LoadBooleanExprHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolexpr",
    "insertText": "LoadBooleanExprHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取布尔表达式"
  },
  "LoadSoundHandleBJ": {
    "original": "function LoadSoundHandleBJ takes integer key, integer missionKey, hashtable table returns sound",
    "name": "LoadSoundHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "sound",
    "insertText": "LoadSoundHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取音效"
  },
  "LoadEffectHandleBJ": {
    "original": "function LoadEffectHandleBJ takes integer key, integer missionKey, hashtable table returns effect",
    "name": "LoadEffectHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "effect",
    "insertText": "LoadEffectHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取特效"
  },
  "LoadUnitPoolHandleBJ": {
    "original": "function LoadUnitPoolHandleBJ takes integer key, integer missionKey, hashtable table returns unitpool",
    "name": "LoadUnitPoolHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "unitpool",
    "insertText": "LoadUnitPoolHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取单位池"
  },
  "LoadItemPoolHandleBJ": {
    "original": "function LoadItemPoolHandleBJ takes integer key, integer missionKey, hashtable table returns itempool",
    "name": "LoadItemPoolHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "itempool",
    "insertText": "LoadItemPoolHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取物品池"
  },
  "LoadQuestHandleBJ": {
    "original": "function LoadQuestHandleBJ takes integer key, integer missionKey, hashtable table returns quest",
    "name": "LoadQuestHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "quest",
    "insertText": "LoadQuestHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取任务"
  },
  "LoadQuestItemHandleBJ": {
    "original": "function LoadQuestItemHandleBJ takes integer key, integer missionKey, hashtable table returns questitem",
    "name": "LoadQuestItemHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "questitem",
    "insertText": "LoadQuestItemHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取任务要求"
  },
  "LoadDefeatConditionHandleBJ": {
    "original": "function LoadDefeatConditionHandleBJ takes integer key, integer missionKey, hashtable table returns defeatcondition",
    "name": "LoadDefeatConditionHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "defeatcondition",
    "insertText": "LoadDefeatConditionHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取失败条件"
  },
  "LoadTimerDialogHandleBJ": {
    "original": "function LoadTimerDialogHandleBJ takes integer key, integer missionKey, hashtable table returns timerdialog",
    "name": "LoadTimerDialogHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "timerdialog",
    "insertText": "LoadTimerDialogHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取计时器窗口"
  },
  "LoadLeaderboardHandleBJ": {
    "original": "function LoadLeaderboardHandleBJ takes integer key, integer missionKey, hashtable table returns leaderboard",
    "name": "LoadLeaderboardHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "leaderboard",
    "insertText": "LoadLeaderboardHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取排行榜"
  },
  "LoadMultiboardHandleBJ": {
    "original": "function LoadMultiboardHandleBJ takes integer key, integer missionKey, hashtable table returns multiboard",
    "name": "LoadMultiboardHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "multiboard",
    "insertText": "LoadMultiboardHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取多面板"
  },
  "LoadMultiboardItemHandleBJ": {
    "original": "function LoadMultiboardItemHandleBJ takes integer key, integer missionKey, hashtable table returns multiboarditem",
    "name": "LoadMultiboardItemHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "multiboarditem",
    "insertText": "LoadMultiboardItemHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取多面板项目"
  },
  "LoadTrackableHandleBJ": {
    "original": "function LoadTrackableHandleBJ takes integer key, integer missionKey, hashtable table returns trackable",
    "name": "LoadTrackableHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "trackable",
    "insertText": "LoadTrackableHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取可追踪物"
  },
  "LoadDialogHandleBJ": {
    "original": "function LoadDialogHandleBJ takes integer key, integer missionKey, hashtable table returns dialog",
    "name": "LoadDialogHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "dialog",
    "insertText": "LoadDialogHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取对话框"
  },
  "LoadButtonHandleBJ": {
    "original": "function LoadButtonHandleBJ takes integer key, integer missionKey, hashtable table returns button",
    "name": "LoadButtonHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "button",
    "insertText": "LoadButtonHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取对话框按钮"
  },
  "LoadTextTagHandleBJ": {
    "original": "function LoadTextTagHandleBJ takes integer key, integer missionKey, hashtable table returns texttag",
    "name": "LoadTextTagHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "texttag",
    "insertText": "LoadTextTagHandleBJ(key, missionKey, table)",
    "documentation": "如果不存在则返回空,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取漂浮文字"
  },
  "LoadLightningHandleBJ": {
    "original": "function LoadLightningHandleBJ takes integer key, integer missionKey, hashtable table returns lightning",
    "name": "LoadLightningHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "lightning",
    "insertText": "LoadLightningHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取闪电效果"
  },
  "LoadImageHandleBJ": {
    "original": "function LoadImageHandleBJ takes integer key, integer missionKey, hashtable table returns image",
    "name": "LoadImageHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "image",
    "insertText": "LoadImageHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取图象"
  },
  "LoadUbersplatHandleBJ": {
    "original": "function LoadUbersplatHandleBJ takes integer key, integer missionKey, hashtable table returns ubersplat",
    "name": "LoadUbersplatHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "ubersplat",
    "insertText": "LoadUbersplatHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取地面纹理变化"
  },
  "LoadRegionHandleBJ": {
    "original": "function LoadRegionHandleBJ takes integer key, integer missionKey, hashtable table returns region",
    "name": "LoadRegionHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "region",
    "insertText": "LoadRegionHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取区域(不规则)"
  },
  "LoadFogStateHandleBJ": {
    "original": "function LoadFogStateHandleBJ takes integer key, integer missionKey, hashtable table returns fogstate",
    "name": "LoadFogStateHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "fogstate",
    "insertText": "LoadFogStateHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取迷雾状态"
  },
  "LoadFogModifierHandleBJ": {
    "original": "function LoadFogModifierHandleBJ takes integer key, integer missionKey, hashtable table returns fogmodifier",
    "name": "LoadFogModifierHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "fogmodifier",
    "insertText": "LoadFogModifierHandleBJ(key, missionKey, table)",
    "documentation": "在子索引 ,~Value, 主索引 ,~Value, 的 ,~Hashtable, 内提取可见度修正器"
  },
  "LoadHashtableHandleBJ": {
    "original": "function LoadHashtableHandleBJ takes integer key, integer missionKey, hashtable table returns hashtable",
    "name": "LoadHashtableHandleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "hashtable",
    "insertText": "LoadHashtableHandleBJ(key, missionKey, table)",
    "documentation": ""
  },
  "RestoreUnitLocFacingAngleBJ": {
    "original": "function RestoreUnitLocFacingAngleBJ takes string key, string missionKey, gamecache cache, player forWhichPlayer, location loc, real facing returns unit",
    "name": "RestoreUnitLocFacingAngleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }, {
      "type": "player",
      "name": "forWhichPlayer",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }, {
      "type": "real",
      "name": "facing",
      "documentation": ""
    }],
    "returnType": "unit",
    "insertText": "RestoreUnitLocFacingAngleBJ(key, missionKey, cache, forWhichPlayer, loc, facing)",
    "documentation": "读取单位 (有角度)"
  },
  "RestoreUnitLocFacingPointBJ": {
    "original": "function RestoreUnitLocFacingPointBJ takes string key, string missionKey, gamecache cache, player forWhichPlayer, location loc, location lookAt returns unit",
    "name": "RestoreUnitLocFacingPointBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }, {
      "type": "player",
      "name": "forWhichPlayer",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }, {
      "type": "location",
      "name": "lookAt",
      "documentation": ""
    }],
    "returnType": "unit",
    "insertText": "RestoreUnitLocFacingPointBJ(key, missionKey, cache, forWhichPlayer, loc, lookAt)",
    "documentation": "读取单位 (有位置方向)"
  },
  "GetLastRestoredUnitBJ": {
    "original": "function GetLastRestoredUnitBJ takes nothing returns unit",
    "name": "GetLastRestoredUnitBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "unit",
    "insertText": "GetLastRestoredUnitBJ()",
    "documentation": "最后恢复的单位"
  },
  "FlushGameCacheBJ": {
    "original": "function FlushGameCacheBJ takes gamecache cache returns nothing",
    "name": "FlushGameCacheBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "FlushGameCacheBJ(cache)",
    "documentation": "清除所有缓存"
  },
  "FlushStoredMissionBJ": {
    "original": "function FlushStoredMissionBJ takes string missionKey, gamecache cache returns nothing",
    "name": "FlushStoredMissionBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "FlushStoredMissionBJ(missionKey, cache)",
    "documentation": "清除缓存[分类]"
  },
  "FlushParentHashtableBJ": {
    "original": "function FlushParentHashtableBJ takes hashtable table returns nothing",
    "name": "FlushParentHashtableBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "FlushParentHashtableBJ(table)",
    "documentation": "<1.24> 清空 ,~Hashtable"
  },
  "FlushChildHashtableBJ": {
    "original": "function FlushChildHashtableBJ takes integer missionKey, hashtable table returns nothing",
    "name": "FlushChildHashtableBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "FlushChildHashtableBJ(missionKey, table)",
    "documentation": "<1.24> 清空 ,~Value, 位于 ,~Hashtable,  之内"
  },
  "HaveStoredValue": {
    "original": "function HaveStoredValue takes string key, integer valueType, string missionKey, gamecache cache returns boolean",
    "name": "HaveStoredValue",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "valueType",
      "documentation": ""
    }, {
      "type": "string",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "gamecache",
      "name": "cache",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "HaveStoredValue(key, valueType, missionKey, cache)",
    "documentation": "游戏缓存的数据"
  },
  "HaveSavedValue": {
    "original": "function HaveSavedValue takes integer key, integer valueType, integer missionKey, hashtable table returns boolean",
    "name": "HaveSavedValue",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "valueType",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "missionKey",
      "documentation": ""
    }, {
      "type": "hashtable",
      "name": "table",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "HaveSavedValue(key, valueType, missionKey, table)",
    "documentation": "子索引为 ,~Value, 的 ,~Type, 类数据被保存在主索引为 ,~Value, 的 ,~Hashtable, 中"
  },
  "ShowCustomCampaignButton": {
    "original": "function ShowCustomCampaignButton takes boolean show, integer whichButton returns nothing",
    "name": "ShowCustomCampaignButton",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "show",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "whichButton",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ShowCustomCampaignButton(show, whichButton)",
    "documentation": "显示/隐藏自定义战役按钮"
  },
  "IsCustomCampaignButtonVisibile": {
    "original": "function IsCustomCampaignButtonVisibile takes integer whichButton returns boolean",
    "name": "IsCustomCampaignButtonVisibile",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "whichButton",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsCustomCampaignButtonVisibile(whichButton)",
    "documentation": "自定义战役按钮是可见的"
  },
  "LoadGameBJ": {
    "original": "function LoadGameBJ takes string loadFileName, boolean doScoreScreen returns nothing",
    "name": "LoadGameBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "loadFileName",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "doScoreScreen",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LoadGameBJ(loadFileName, doScoreScreen)",
    "documentation": "读取游戏进度"
  },
  "SaveAndChangeLevelBJ": {
    "original": "function SaveAndChangeLevelBJ takes string saveFileName, string newLevel, boolean doScoreScreen returns nothing",
    "name": "SaveAndChangeLevelBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "saveFileName",
      "documentation": ""
    }, {
      "type": "string",
      "name": "newLevel",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "doScoreScreen",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SaveAndChangeLevelBJ(saveFileName, newLevel, doScoreScreen)",
    "documentation": "保存进度同时设置下一张地图"
  },
  "SaveAndLoadGameBJ": {
    "original": "function SaveAndLoadGameBJ takes string saveFileName, string loadFileName, boolean doScoreScreen returns nothing",
    "name": "SaveAndLoadGameBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "saveFileName",
      "documentation": ""
    }, {
      "type": "string",
      "name": "loadFileName",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "doScoreScreen",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SaveAndLoadGameBJ(saveFileName, loadFileName, doScoreScreen)",
    "documentation": "保存进度同时读取进度"
  },
  "RenameSaveDirectoryBJ": {
    "original": "function RenameSaveDirectoryBJ takes string sourceDirName, string destDirName returns boolean",
    "name": "RenameSaveDirectoryBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "sourceDirName",
      "documentation": ""
    }, {
      "type": "string",
      "name": "destDirName",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "RenameSaveDirectoryBJ(sourceDirName, destDirName)",
    "documentation": "重命名游戏进度文件夹"
  },
  "RemoveSaveDirectoryBJ": {
    "original": "function RemoveSaveDirectoryBJ takes string sourceDirName returns boolean",
    "name": "RemoveSaveDirectoryBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "sourceDirName",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "RemoveSaveDirectoryBJ(sourceDirName)",
    "documentation": "删除游戏进度文件夹"
  },
  "CopySaveGameBJ": {
    "original": "function CopySaveGameBJ takes string sourceSaveName, string destSaveName returns boolean",
    "name": "CopySaveGameBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "sourceSaveName",
      "documentation": ""
    }, {
      "type": "string",
      "name": "destSaveName",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "CopySaveGameBJ(sourceSaveName, destSaveName)",
    "documentation": "复制游戏进度"
  },
  "GetPlayerStartLocationX": {
    "original": "function GetPlayerStartLocationX takes player whichPlayer returns real",
    "name": "GetPlayerStartLocationX",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetPlayerStartLocationX(whichPlayer)",
    "documentation": ""
  },
  "GetPlayerStartLocationY": {
    "original": "function GetPlayerStartLocationY takes player whichPlayer returns real",
    "name": "GetPlayerStartLocationY",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetPlayerStartLocationY(whichPlayer)",
    "documentation": ""
  },
  "GetPlayerStartLocationLoc": {
    "original": "function GetPlayerStartLocationLoc takes player whichPlayer returns location",
    "name": "GetPlayerStartLocationLoc",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "location",
    "insertText": "GetPlayerStartLocationLoc(whichPlayer)",
    "documentation": "玩家的初始位置"
  },
  "GetRectCenter": {
    "original": "function GetRectCenter takes rect whichRect returns location",
    "name": "GetRectCenter",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "rect",
      "name": "whichRect",
      "documentation": ""
    }],
    "returnType": "location",
    "insertText": "GetRectCenter(whichRect)",
    "documentation": "区域中心"
  },
  "IsPlayerSlotState": {
    "original": "function IsPlayerSlotState takes player whichPlayer, playerslotstate whichState returns boolean",
    "name": "IsPlayerSlotState",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "playerslotstate",
      "name": "whichState",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsPlayerSlotState(whichPlayer, whichState)",
    "documentation": ""
  },
  "GetFadeFromSeconds": {
    "original": "function GetFadeFromSeconds takes real seconds returns integer",
    "name": "GetFadeFromSeconds",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "seconds",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetFadeFromSeconds(seconds)",
    "documentation": ""
  },
  "GetFadeFromSecondsAsReal": {
    "original": "function GetFadeFromSecondsAsReal takes real seconds returns real",
    "name": "GetFadeFromSecondsAsReal",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "seconds",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetFadeFromSecondsAsReal(seconds)",
    "documentation": ""
  },
  "AdjustPlayerStateSimpleBJ": {
    "original": "function AdjustPlayerStateSimpleBJ takes player whichPlayer, playerstate whichPlayerState, integer delta returns nothing",
    "name": "AdjustPlayerStateSimpleBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "playerstate",
      "name": "whichPlayerState",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "delta",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "AdjustPlayerStateSimpleBJ(whichPlayer, whichPlayerState, delta)",
    "documentation": ""
  },
  "AdjustPlayerStateBJ": {
    "original": "function AdjustPlayerStateBJ takes integer delta, player whichPlayer, playerstate whichPlayerState returns nothing",
    "name": "AdjustPlayerStateBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "delta",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "playerstate",
      "name": "whichPlayerState",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "AdjustPlayerStateBJ(delta, whichPlayer, whichPlayerState)",
    "documentation": "增加玩家属性值"
  },
  "SetPlayerStateBJ": {
    "original": "function SetPlayerStateBJ takes player whichPlayer, playerstate whichPlayerState, integer value returns nothing",
    "name": "SetPlayerStateBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "playerstate",
      "name": "whichPlayerState",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerStateBJ(whichPlayer, whichPlayerState, value)",
    "documentation": ""
  },
  "SetPlayerFlagBJ": {
    "original": "function SetPlayerFlagBJ takes playerstate whichPlayerFlag, boolean flag, player whichPlayer returns nothing",
    "name": "SetPlayerFlagBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "playerstate",
      "name": "whichPlayerFlag",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flag",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerFlagBJ(whichPlayerFlag, flag, whichPlayer)",
    "documentation": "打开/关闭 玩家参数"
  },
  "SetPlayerTaxRateBJ": {
    "original": "function SetPlayerTaxRateBJ takes integer rate, playerstate whichResource, player sourcePlayer, player otherPlayer returns nothing",
    "name": "SetPlayerTaxRateBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "rate",
      "documentation": ""
    }, {
      "type": "playerstate",
      "name": "whichResource",
      "documentation": ""
    }, {
      "type": "player",
      "name": "sourcePlayer",
      "documentation": ""
    }, {
      "type": "player",
      "name": "otherPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerTaxRateBJ(rate, whichResource, sourcePlayer, otherPlayer)",
    "documentation": "截留玩家收入 (税率)"
  },
  "GetPlayerTaxRateBJ": {
    "original": "function GetPlayerTaxRateBJ takes playerstate whichResource, player sourcePlayer, player otherPlayer returns integer",
    "name": "GetPlayerTaxRateBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "playerstate",
      "name": "whichResource",
      "documentation": ""
    }, {
      "type": "player",
      "name": "sourcePlayer",
      "documentation": ""
    }, {
      "type": "player",
      "name": "otherPlayer",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetPlayerTaxRateBJ(whichResource, sourcePlayer, otherPlayer)",
    "documentation": "获得玩家税率"
  },
  "IsPlayerFlagSetBJ": {
    "original": "function IsPlayerFlagSetBJ takes playerstate whichPlayerFlag, player whichPlayer returns boolean",
    "name": "IsPlayerFlagSetBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "playerstate",
      "name": "whichPlayerFlag",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsPlayerFlagSetBJ(whichPlayerFlag, whichPlayer)",
    "documentation": "玩家旗是打开的"
  },
  "AddResourceAmountBJ": {
    "original": "function AddResourceAmountBJ takes integer delta, unit whichUnit returns nothing",
    "name": "AddResourceAmountBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "delta",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "AddResourceAmountBJ(delta, whichUnit)",
    "documentation": "增加黄金到金矿"
  },
  "GetConvertedPlayerId": {
    "original": "function GetConvertedPlayerId takes player whichPlayer returns integer",
    "name": "GetConvertedPlayerId",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetConvertedPlayerId(whichPlayer)",
    "documentation": "玩家索引"
  },
  "ConvertedPlayer": {
    "original": "function ConvertedPlayer takes integer convertedPlayerId returns player",
    "name": "ConvertedPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "convertedPlayerId",
      "documentation": ""
    }],
    "returnType": "player",
    "insertText": "ConvertedPlayer(convertedPlayerId)",
    "documentation": "将玩家索引转换为玩家"
  },
  "GetRectWidthBJ": {
    "original": "function GetRectWidthBJ takes rect r returns real",
    "name": "GetRectWidthBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "rect",
      "name": "r",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetRectWidthBJ(r)",
    "documentation": "区域宽度"
  },
  "GetRectHeightBJ": {
    "original": "function GetRectHeightBJ takes rect r returns real",
    "name": "GetRectHeightBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "rect",
      "name": "r",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "GetRectHeightBJ(r)",
    "documentation": "区域高度"
  },
  "BlightGoldMineForPlayerBJ": {
    "original": "function BlightGoldMineForPlayerBJ takes unit goldMine, player whichPlayer returns unit",
    "name": "BlightGoldMineForPlayerBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "goldMine",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "unit",
    "insertText": "BlightGoldMineForPlayerBJ(goldMine, whichPlayer)",
    "documentation": ""
  },
  "BlightGoldMineForPlayer": {
    "original": "function BlightGoldMineForPlayer takes unit goldMine, player whichPlayer returns unit",
    "name": "BlightGoldMineForPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "goldMine",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "unit",
    "insertText": "BlightGoldMineForPlayer(goldMine, whichPlayer)",
    "documentation": "设置金矿为不死族金矿"
  },
  "GetLastHauntedGoldMine": {
    "original": "function GetLastHauntedGoldMine takes nothing returns unit",
    "name": "GetLastHauntedGoldMine",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "unit",
    "insertText": "GetLastHauntedGoldMine()",
    "documentation": "最后建造的不死族金矿"
  },
  "IsPointBlightedBJ": {
    "original": "function IsPointBlightedBJ takes location where returns boolean",
    "name": "IsPointBlightedBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "location",
      "name": "where",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsPointBlightedBJ(where)",
    "documentation": "点是不死族的地表"
  },
  "SetPlayerColorBJEnum": {
    "original": "function SetPlayerColorBJEnum takes nothing returns nothing",
    "name": "SetPlayerColorBJEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "SetPlayerColorBJEnum()",
    "documentation": ""
  },
  "SetPlayerColorBJ": {
    "original": "function SetPlayerColorBJ takes player whichPlayer, playercolor color, boolean changeExisting returns nothing",
    "name": "SetPlayerColorBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "playercolor",
      "name": "color",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "changeExisting",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerColorBJ(whichPlayer, color, changeExisting)",
    "documentation": "改变玩家颜色"
  },
  "SetPlayerUnitAvailableBJ": {
    "original": "function SetPlayerUnitAvailableBJ takes integer unitId, boolean allowed, player whichPlayer returns nothing",
    "name": "SetPlayerUnitAvailableBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "unitId",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "allowed",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerUnitAvailableBJ(unitId, allowed, whichPlayer)",
    "documentation": "设置训练/建造单位可用性"
  },
  "LockGameSpeedBJ": {
    "original": "function LockGameSpeedBJ takes nothing returns nothing",
    "name": "LockGameSpeedBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "LockGameSpeedBJ()",
    "documentation": "锁定游戏速度"
  },
  "UnlockGameSpeedBJ": {
    "original": "function UnlockGameSpeedBJ takes nothing returns nothing",
    "name": "UnlockGameSpeedBJ",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "UnlockGameSpeedBJ()",
    "documentation": "解锁游戏速度"
  },
  "IssueTargetOrderBJ": {
    "original": "function IssueTargetOrderBJ takes unit whichUnit, string order, widget targetWidget returns boolean",
    "name": "IssueTargetOrderBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "string",
      "name": "order",
      "documentation": ""
    }, {
      "type": "widget",
      "name": "targetWidget",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IssueTargetOrderBJ(whichUnit, order, targetWidget)",
    "documentation": ""
  },
  "IssuePointOrderLocBJ": {
    "original": "function IssuePointOrderLocBJ takes unit whichUnit, string order, location whichLocation returns boolean",
    "name": "IssuePointOrderLocBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "string",
      "name": "order",
      "documentation": ""
    }, {
      "type": "location",
      "name": "whichLocation",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IssuePointOrderLocBJ(whichUnit, order, whichLocation)",
    "documentation": ""
  },
  "IssueTargetDestructableOrder": {
    "original": "function IssueTargetDestructableOrder takes unit whichUnit, string order, widget targetWidget returns boolean",
    "name": "IssueTargetDestructableOrder",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "string",
      "name": "order",
      "documentation": ""
    }, {
      "type": "widget",
      "name": "targetWidget",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IssueTargetDestructableOrder(whichUnit, order, targetWidget)",
    "documentation": "给单位发送命令到 可毁坏物"
  },
  "IssueTargetItemOrder": {
    "original": "function IssueTargetItemOrder takes unit whichUnit, string order, widget targetWidget returns boolean",
    "name": "IssueTargetItemOrder",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "string",
      "name": "order",
      "documentation": ""
    }, {
      "type": "widget",
      "name": "targetWidget",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IssueTargetItemOrder(whichUnit, order, targetWidget)",
    "documentation": "给单位发送命令到 物品"
  },
  "IssueImmediateOrderBJ": {
    "original": "function IssueImmediateOrderBJ takes unit whichUnit, string order returns boolean",
    "name": "IssueImmediateOrderBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "string",
      "name": "order",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IssueImmediateOrderBJ(whichUnit, order)",
    "documentation": ""
  },
  "GroupTargetOrderBJ": {
    "original": "function GroupTargetOrderBJ takes group whichGroup, string order, widget targetWidget returns boolean",
    "name": "GroupTargetOrderBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }, {
      "type": "string",
      "name": "order",
      "documentation": ""
    }, {
      "type": "widget",
      "name": "targetWidget",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "GroupTargetOrderBJ(whichGroup, order, targetWidget)",
    "documentation": ""
  },
  "GroupPointOrderLocBJ": {
    "original": "function GroupPointOrderLocBJ takes group whichGroup, string order, location whichLocation returns boolean",
    "name": "GroupPointOrderLocBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }, {
      "type": "string",
      "name": "order",
      "documentation": ""
    }, {
      "type": "location",
      "name": "whichLocation",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "GroupPointOrderLocBJ(whichGroup, order, whichLocation)",
    "documentation": ""
  },
  "GroupImmediateOrderBJ": {
    "original": "function GroupImmediateOrderBJ takes group whichGroup, string order returns boolean",
    "name": "GroupImmediateOrderBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }, {
      "type": "string",
      "name": "order",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "GroupImmediateOrderBJ(whichGroup, order)",
    "documentation": ""
  },
  "GroupTargetDestructableOrder": {
    "original": "function GroupTargetDestructableOrder takes group whichGroup, string order, widget targetWidget returns boolean",
    "name": "GroupTargetDestructableOrder",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }, {
      "type": "string",
      "name": "order",
      "documentation": ""
    }, {
      "type": "widget",
      "name": "targetWidget",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "GroupTargetDestructableOrder(whichGroup, order, targetWidget)",
    "documentation": "发送单位组命令到 可毁坏物"
  },
  "GroupTargetItemOrder": {
    "original": "function GroupTargetItemOrder takes group whichGroup, string order, widget targetWidget returns boolean",
    "name": "GroupTargetItemOrder",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "group",
      "name": "whichGroup",
      "documentation": ""
    }, {
      "type": "string",
      "name": "order",
      "documentation": ""
    }, {
      "type": "widget",
      "name": "targetWidget",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "GroupTargetItemOrder(whichGroup, order, targetWidget)",
    "documentation": "发送单位组命令到 物品"
  },
  "GetDyingDestructable": {
    "original": "function GetDyingDestructable takes nothing returns destructable",
    "name": "GetDyingDestructable",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "destructable",
    "insertText": "GetDyingDestructable()",
    "documentation": "垂死的可毁坏物"
  },
  "SetUnitRallyPoint": {
    "original": "function SetUnitRallyPoint takes unit whichUnit, location targPos returns nothing",
    "name": "SetUnitRallyPoint",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "location",
      "name": "targPos",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitRallyPoint(whichUnit, targPos)",
    "documentation": "设置 聚集点 在点"
  },
  "SetUnitRallyUnit": {
    "original": "function SetUnitRallyUnit takes unit whichUnit, unit targUnit returns nothing",
    "name": "SetUnitRallyUnit",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "targUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitRallyUnit(whichUnit, targUnit)",
    "documentation": "设置 聚集点 在单位"
  },
  "SetUnitRallyDestructable": {
    "original": "function SetUnitRallyDestructable takes unit whichUnit, destructable targDest returns nothing",
    "name": "SetUnitRallyDestructable",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "destructable",
      "name": "targDest",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitRallyDestructable(whichUnit, targDest)",
    "documentation": "设置 聚集点 在可毁坏物"
  },
  "SaveDyingWidget": {
    "original": "function SaveDyingWidget takes nothing returns nothing",
    "name": "SaveDyingWidget",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "SaveDyingWidget()",
    "documentation": ""
  },
  "SetBlightRectBJ": {
    "original": "function SetBlightRectBJ takes boolean addBlight, player whichPlayer, rect r returns nothing",
    "name": "SetBlightRectBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "addBlight",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "rect",
      "name": "r",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetBlightRectBJ(addBlight, whichPlayer, r)",
    "documentation": "创造/删除 不死族地表在区域"
  },
  "SetBlightRadiusLocBJ": {
    "original": "function SetBlightRadiusLocBJ takes boolean addBlight, player whichPlayer, location loc, real radius returns nothing",
    "name": "SetBlightRadiusLocBJ",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "addBlight",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }, {
      "type": "real",
      "name": "radius",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetBlightRadiusLocBJ(addBlight, whichPlayer, loc, radius)",
    "documentation": "创造/删除 不死族地表在圆周"
  },
  "GetAbilityName": {
    "original": "function GetAbilityName takes integer abilcode returns string",
    "name": "GetAbilityName",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "abilcode",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "GetAbilityName(abilcode)",
    "documentation": "技能名字"
  },
  "MeleeStartingVisibility": {
    "original": "function MeleeStartingVisibility takes nothing returns nothing",
    "name": "MeleeStartingVisibility",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MeleeStartingVisibility()",
    "documentation": "对用对战的时间设置"
  },
  "MeleeStartingResources": {
    "original": "function MeleeStartingResources takes nothing returns nothing",
    "name": "MeleeStartingResources",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MeleeStartingResources()",
    "documentation": "设置初始资源"
  },
  "ReducePlayerTechMaxAllowed": {
    "original": "function ReducePlayerTechMaxAllowed takes player whichPlayer, integer techId, integer limit returns nothing",
    "name": "ReducePlayerTechMaxAllowed",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "techId",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "limit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ReducePlayerTechMaxAllowed(whichPlayer, techId, limit)",
    "documentation": ""
  },
  "MeleeStartingHeroLimit": {
    "original": "function MeleeStartingHeroLimit takes nothing returns nothing",
    "name": "MeleeStartingHeroLimit",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MeleeStartingHeroLimit()",
    "documentation": "英雄数量限制"
  },
  "MeleeTrainedUnitIsHeroBJFilter": {
    "original": "function MeleeTrainedUnitIsHeroBJFilter takes nothing returns boolean",
    "name": "MeleeTrainedUnitIsHeroBJFilter",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "boolean",
    "insertText": "MeleeTrainedUnitIsHeroBJFilter()",
    "documentation": ""
  },
  "MeleeGrantItemsToHero": {
    "original": "function MeleeGrantItemsToHero takes unit whichUnit returns nothing",
    "name": "MeleeGrantItemsToHero",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MeleeGrantItemsToHero(whichUnit)",
    "documentation": ""
  },
  "MeleeGrantItemsToTrainedHero": {
    "original": "function MeleeGrantItemsToTrainedHero takes nothing returns nothing",
    "name": "MeleeGrantItemsToTrainedHero",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MeleeGrantItemsToTrainedHero()",
    "documentation": ""
  },
  "MeleeGrantItemsToHiredHero": {
    "original": "function MeleeGrantItemsToHiredHero takes nothing returns nothing",
    "name": "MeleeGrantItemsToHiredHero",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MeleeGrantItemsToHiredHero()",
    "documentation": ""
  },
  "MeleeGrantHeroItems": {
    "original": "function MeleeGrantHeroItems takes nothing returns nothing",
    "name": "MeleeGrantHeroItems",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MeleeGrantHeroItems()",
    "documentation": "英雄初始物品"
  },
  "MeleeClearExcessUnit": {
    "original": "function MeleeClearExcessUnit takes nothing returns nothing",
    "name": "MeleeClearExcessUnit",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MeleeClearExcessUnit()",
    "documentation": ""
  },
  "MeleeClearNearbyUnits": {
    "original": "function MeleeClearNearbyUnits takes real x, real y, real range returns nothing",
    "name": "MeleeClearNearbyUnits",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }, {
      "type": "real",
      "name": "range",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MeleeClearNearbyUnits(x, y, range)",
    "documentation": ""
  },
  "MeleeClearExcessUnits": {
    "original": "function MeleeClearExcessUnits takes nothing returns nothing",
    "name": "MeleeClearExcessUnits",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MeleeClearExcessUnits()",
    "documentation": "删除多余单位"
  },
  "MeleeEnumFindNearestMine": {
    "original": "function MeleeEnumFindNearestMine takes nothing returns nothing",
    "name": "MeleeEnumFindNearestMine",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MeleeEnumFindNearestMine()",
    "documentation": ""
  },
  "MeleeFindNearestMine": {
    "original": "function MeleeFindNearestMine takes location src, real range returns unit",
    "name": "MeleeFindNearestMine",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "location",
      "name": "src",
      "documentation": ""
    }, {
      "type": "real",
      "name": "range",
      "documentation": ""
    }],
    "returnType": "unit",
    "insertText": "MeleeFindNearestMine(src, range)",
    "documentation": ""
  },
  "MeleeRandomHeroLoc": {
    "original": "function MeleeRandomHeroLoc takes player p, integer id1, integer id2, integer id3, integer id4, location loc returns unit",
    "name": "MeleeRandomHeroLoc",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "p",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "id1",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "id2",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "id3",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "id4",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }],
    "returnType": "unit",
    "insertText": "MeleeRandomHeroLoc(p, id1, id2, id3, id4, loc)",
    "documentation": ""
  },
  "MeleeGetProjectedLoc": {
    "original": "function MeleeGetProjectedLoc takes location src, location targ, real distance, real deltaAngle returns location",
    "name": "MeleeGetProjectedLoc",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "location",
      "name": "src",
      "documentation": ""
    }, {
      "type": "location",
      "name": "targ",
      "documentation": ""
    }, {
      "type": "real",
      "name": "distance",
      "documentation": ""
    }, {
      "type": "real",
      "name": "deltaAngle",
      "documentation": ""
    }],
    "returnType": "location",
    "insertText": "MeleeGetProjectedLoc(src, targ, distance, deltaAngle)",
    "documentation": ""
  },
  "MeleeGetNearestValueWithin": {
    "original": "function MeleeGetNearestValueWithin takes real val, real minVal, real maxVal returns real",
    "name": "MeleeGetNearestValueWithin",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "val",
      "documentation": ""
    }, {
      "type": "real",
      "name": "minVal",
      "documentation": ""
    }, {
      "type": "real",
      "name": "maxVal",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "MeleeGetNearestValueWithin(val, minVal, maxVal)",
    "documentation": ""
  },
  "MeleeGetLocWithinRect": {
    "original": "function MeleeGetLocWithinRect takes location src, rect r returns location",
    "name": "MeleeGetLocWithinRect",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "location",
      "name": "src",
      "documentation": ""
    }, {
      "type": "rect",
      "name": "r",
      "documentation": ""
    }],
    "returnType": "location",
    "insertText": "MeleeGetLocWithinRect(src, r)",
    "documentation": ""
  },
  "MeleeStartingUnitsHuman": {
    "original": "function MeleeStartingUnitsHuman takes player whichPlayer, location startLoc, boolean doHeroes, boolean doCamera, boolean doPreload returns nothing",
    "name": "MeleeStartingUnitsHuman",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "location",
      "name": "startLoc",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "doHeroes",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "doCamera",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "doPreload",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MeleeStartingUnitsHuman(whichPlayer, startLoc, doHeroes, doCamera, doPreload)",
    "documentation": ""
  },
  "MeleeStartingUnitsOrc": {
    "original": "function MeleeStartingUnitsOrc takes player whichPlayer, location startLoc, boolean doHeroes, boolean doCamera, boolean doPreload returns nothing",
    "name": "MeleeStartingUnitsOrc",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "location",
      "name": "startLoc",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "doHeroes",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "doCamera",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "doPreload",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MeleeStartingUnitsOrc(whichPlayer, startLoc, doHeroes, doCamera, doPreload)",
    "documentation": ""
  },
  "MeleeStartingUnitsUndead": {
    "original": "function MeleeStartingUnitsUndead takes player whichPlayer, location startLoc, boolean doHeroes, boolean doCamera, boolean doPreload returns nothing",
    "name": "MeleeStartingUnitsUndead",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "location",
      "name": "startLoc",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "doHeroes",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "doCamera",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "doPreload",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MeleeStartingUnitsUndead(whichPlayer, startLoc, doHeroes, doCamera, doPreload)",
    "documentation": ""
  },
  "MeleeStartingUnitsNightElf": {
    "original": "function MeleeStartingUnitsNightElf takes player whichPlayer, location startLoc, boolean doHeroes, boolean doCamera, boolean doPreload returns nothing",
    "name": "MeleeStartingUnitsNightElf",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "location",
      "name": "startLoc",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "doHeroes",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "doCamera",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "doPreload",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MeleeStartingUnitsNightElf(whichPlayer, startLoc, doHeroes, doCamera, doPreload)",
    "documentation": ""
  },
  "MeleeStartingUnitsUnknownRace": {
    "original": "function MeleeStartingUnitsUnknownRace takes player whichPlayer, location startLoc, boolean doHeroes, boolean doCamera, boolean doPreload returns nothing",
    "name": "MeleeStartingUnitsUnknownRace",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "location",
      "name": "startLoc",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "doHeroes",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "doCamera",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "doPreload",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MeleeStartingUnitsUnknownRace(whichPlayer, startLoc, doHeroes, doCamera, doPreload)",
    "documentation": ""
  },
  "MeleeStartingUnits": {
    "original": "function MeleeStartingUnits takes nothing returns nothing",
    "name": "MeleeStartingUnits",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MeleeStartingUnits()",
    "documentation": "创建初始单位"
  },
  "MeleeStartingUnitsForPlayer": {
    "original": "function MeleeStartingUnitsForPlayer takes race whichRace, player whichPlayer, location loc, boolean doHeroes returns nothing",
    "name": "MeleeStartingUnitsForPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "race",
      "name": "whichRace",
      "documentation": ""
    }, {
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "location",
      "name": "loc",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "doHeroes",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MeleeStartingUnitsForPlayer(whichRace, whichPlayer, loc, doHeroes)",
    "documentation": "创建初始单位为了玩家"
  },
  "PickMeleeAI": {
    "original": "function PickMeleeAI takes player num, string s1, string s2, string s3 returns nothing",
    "name": "PickMeleeAI",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "num",
      "documentation": ""
    }, {
      "type": "string",
      "name": "s1",
      "documentation": ""
    }, {
      "type": "string",
      "name": "s2",
      "documentation": ""
    }, {
      "type": "string",
      "name": "s3",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "PickMeleeAI(num, s1, s2, s3)",
    "documentation": ""
  },
  "MeleeStartingAI": {
    "original": "function MeleeStartingAI takes nothing returns nothing",
    "name": "MeleeStartingAI",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MeleeStartingAI()",
    "documentation": "运行对战 AI"
  },
  "LockGuardPosition": {
    "original": "function LockGuardPosition takes unit targ returns nothing",
    "name": "LockGuardPosition",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "targ",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LockGuardPosition(targ)",
    "documentation": "锁定的防守职责"
  },
  "MeleePlayerIsOpponent": {
    "original": "function MeleePlayerIsOpponent takes integer playerIndex, integer opponentIndex returns boolean",
    "name": "MeleePlayerIsOpponent",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "playerIndex",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "opponentIndex",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "MeleePlayerIsOpponent(playerIndex, opponentIndex)",
    "documentation": ""
  },
  "MeleeGetAllyStructureCount": {
    "original": "function MeleeGetAllyStructureCount takes player whichPlayer returns integer",
    "name": "MeleeGetAllyStructureCount",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "MeleeGetAllyStructureCount(whichPlayer)",
    "documentation": ""
  },
  "MeleeGetAllyCount": {
    "original": "function MeleeGetAllyCount takes player whichPlayer returns integer",
    "name": "MeleeGetAllyCount",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "MeleeGetAllyCount(whichPlayer)",
    "documentation": ""
  },
  "MeleeGetAllyKeyStructureCount": {
    "original": "function MeleeGetAllyKeyStructureCount takes player whichPlayer returns integer",
    "name": "MeleeGetAllyKeyStructureCount",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "MeleeGetAllyKeyStructureCount(whichPlayer)",
    "documentation": ""
  },
  "MeleeDoDrawEnum": {
    "original": "function MeleeDoDrawEnum takes nothing returns nothing",
    "name": "MeleeDoDrawEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MeleeDoDrawEnum()",
    "documentation": ""
  },
  "MeleeDoVictoryEnum": {
    "original": "function MeleeDoVictoryEnum takes nothing returns nothing",
    "name": "MeleeDoVictoryEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MeleeDoVictoryEnum()",
    "documentation": ""
  },
  "MeleeDoDefeat": {
    "original": "function MeleeDoDefeat takes player whichPlayer returns nothing",
    "name": "MeleeDoDefeat",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MeleeDoDefeat(whichPlayer)",
    "documentation": ""
  },
  "MeleeDoDefeatEnum": {
    "original": "function MeleeDoDefeatEnum takes nothing returns nothing",
    "name": "MeleeDoDefeatEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MeleeDoDefeatEnum()",
    "documentation": ""
  },
  "MeleeDoLeave": {
    "original": "function MeleeDoLeave takes player whichPlayer returns nothing",
    "name": "MeleeDoLeave",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MeleeDoLeave(whichPlayer)",
    "documentation": ""
  },
  "MeleeRemoveObservers": {
    "original": "function MeleeRemoveObservers takes nothing returns nothing",
    "name": "MeleeRemoveObservers",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MeleeRemoveObservers()",
    "documentation": ""
  },
  "MeleeCheckForVictors": {
    "original": "function MeleeCheckForVictors takes nothing returns force",
    "name": "MeleeCheckForVictors",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "force",
    "insertText": "MeleeCheckForVictors()",
    "documentation": ""
  },
  "MeleeCheckForLosersAndVictors": {
    "original": "function MeleeCheckForLosersAndVictors takes nothing returns nothing",
    "name": "MeleeCheckForLosersAndVictors",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MeleeCheckForLosersAndVictors()",
    "documentation": ""
  },
  "MeleeGetCrippledWarningMessage": {
    "original": "function MeleeGetCrippledWarningMessage takes player whichPlayer returns string",
    "name": "MeleeGetCrippledWarningMessage",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "MeleeGetCrippledWarningMessage(whichPlayer)",
    "documentation": ""
  },
  "MeleeGetCrippledTimerMessage": {
    "original": "function MeleeGetCrippledTimerMessage takes player whichPlayer returns string",
    "name": "MeleeGetCrippledTimerMessage",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "MeleeGetCrippledTimerMessage(whichPlayer)",
    "documentation": ""
  },
  "MeleeGetCrippledRevealedMessage": {
    "original": "function MeleeGetCrippledRevealedMessage takes player whichPlayer returns string",
    "name": "MeleeGetCrippledRevealedMessage",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "MeleeGetCrippledRevealedMessage(whichPlayer)",
    "documentation": ""
  },
  "MeleeExposePlayer": {
    "original": "function MeleeExposePlayer takes player whichPlayer, boolean expose returns nothing",
    "name": "MeleeExposePlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "expose",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MeleeExposePlayer(whichPlayer, expose)",
    "documentation": ""
  },
  "MeleeExposeAllPlayers": {
    "original": "function MeleeExposeAllPlayers takes nothing returns nothing",
    "name": "MeleeExposeAllPlayers",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MeleeExposeAllPlayers()",
    "documentation": ""
  },
  "MeleeCrippledPlayerTimeout": {
    "original": "function MeleeCrippledPlayerTimeout takes nothing returns nothing",
    "name": "MeleeCrippledPlayerTimeout",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MeleeCrippledPlayerTimeout()",
    "documentation": ""
  },
  "MeleePlayerIsCrippled": {
    "original": "function MeleePlayerIsCrippled takes player whichPlayer returns boolean",
    "name": "MeleePlayerIsCrippled",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "MeleePlayerIsCrippled(whichPlayer)",
    "documentation": ""
  },
  "MeleeCheckForCrippledPlayers": {
    "original": "function MeleeCheckForCrippledPlayers takes nothing returns nothing",
    "name": "MeleeCheckForCrippledPlayers",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MeleeCheckForCrippledPlayers()",
    "documentation": ""
  },
  "MeleeCheckLostUnit": {
    "original": "function MeleeCheckLostUnit takes unit lostUnit returns nothing",
    "name": "MeleeCheckLostUnit",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "lostUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MeleeCheckLostUnit(lostUnit)",
    "documentation": ""
  },
  "MeleeCheckAddedUnit": {
    "original": "function MeleeCheckAddedUnit takes unit addedUnit returns nothing",
    "name": "MeleeCheckAddedUnit",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "addedUnit",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MeleeCheckAddedUnit(addedUnit)",
    "documentation": ""
  },
  "MeleeTriggerActionConstructCancel": {
    "original": "function MeleeTriggerActionConstructCancel takes nothing returns nothing",
    "name": "MeleeTriggerActionConstructCancel",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MeleeTriggerActionConstructCancel()",
    "documentation": ""
  },
  "MeleeTriggerActionUnitDeath": {
    "original": "function MeleeTriggerActionUnitDeath takes nothing returns nothing",
    "name": "MeleeTriggerActionUnitDeath",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MeleeTriggerActionUnitDeath()",
    "documentation": ""
  },
  "MeleeTriggerActionUnitConstructionStart": {
    "original": "function MeleeTriggerActionUnitConstructionStart takes nothing returns nothing",
    "name": "MeleeTriggerActionUnitConstructionStart",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MeleeTriggerActionUnitConstructionStart()",
    "documentation": ""
  },
  "MeleeTriggerActionPlayerDefeated": {
    "original": "function MeleeTriggerActionPlayerDefeated takes nothing returns nothing",
    "name": "MeleeTriggerActionPlayerDefeated",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MeleeTriggerActionPlayerDefeated()",
    "documentation": ""
  },
  "MeleeTriggerActionPlayerLeft": {
    "original": "function MeleeTriggerActionPlayerLeft takes nothing returns nothing",
    "name": "MeleeTriggerActionPlayerLeft",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MeleeTriggerActionPlayerLeft()",
    "documentation": ""
  },
  "MeleeTriggerActionAllianceChange": {
    "original": "function MeleeTriggerActionAllianceChange takes nothing returns nothing",
    "name": "MeleeTriggerActionAllianceChange",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MeleeTriggerActionAllianceChange()",
    "documentation": ""
  },
  "MeleeTriggerTournamentFinishSoon": {
    "original": "function MeleeTriggerTournamentFinishSoon takes nothing returns nothing",
    "name": "MeleeTriggerTournamentFinishSoon",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MeleeTriggerTournamentFinishSoon()",
    "documentation": ""
  },
  "MeleeWasUserPlayer": {
    "original": "function MeleeWasUserPlayer takes player whichPlayer returns boolean",
    "name": "MeleeWasUserPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "MeleeWasUserPlayer(whichPlayer)",
    "documentation": ""
  },
  "MeleeTournamentFinishNowRuleA": {
    "original": "function MeleeTournamentFinishNowRuleA takes integer multiplier returns nothing",
    "name": "MeleeTournamentFinishNowRuleA",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "multiplier",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MeleeTournamentFinishNowRuleA(multiplier)",
    "documentation": ""
  },
  "MeleeTriggerTournamentFinishNow": {
    "original": "function MeleeTriggerTournamentFinishNow takes nothing returns nothing",
    "name": "MeleeTriggerTournamentFinishNow",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MeleeTriggerTournamentFinishNow()",
    "documentation": ""
  },
  "MeleeInitVictoryDefeat": {
    "original": "function MeleeInitVictoryDefeat takes nothing returns nothing",
    "name": "MeleeInitVictoryDefeat",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MeleeInitVictoryDefeat()",
    "documentation": "胜利/失败条件"
  },
  "CheckInitPlayerSlotAvailability": {
    "original": "function CheckInitPlayerSlotAvailability takes nothing returns nothing",
    "name": "CheckInitPlayerSlotAvailability",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "CheckInitPlayerSlotAvailability()",
    "documentation": ""
  },
  "SetPlayerSlotAvailable": {
    "original": "function SetPlayerSlotAvailable takes player whichPlayer, mapcontrol control returns nothing",
    "name": "SetPlayerSlotAvailable",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "mapcontrol",
      "name": "control",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPlayerSlotAvailable(whichPlayer, control)",
    "documentation": ""
  },
  "TeamInitPlayerSlots": {
    "original": "function TeamInitPlayerSlots takes integer teamCount returns nothing",
    "name": "TeamInitPlayerSlots",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "teamCount",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TeamInitPlayerSlots(teamCount)",
    "documentation": ""
  },
  "MeleeInitPlayerSlots": {
    "original": "function MeleeInitPlayerSlots takes nothing returns nothing",
    "name": "MeleeInitPlayerSlots",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MeleeInitPlayerSlots()",
    "documentation": ""
  },
  "FFAInitPlayerSlots": {
    "original": "function FFAInitPlayerSlots takes nothing returns nothing",
    "name": "FFAInitPlayerSlots",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "FFAInitPlayerSlots()",
    "documentation": ""
  },
  "OneOnOneInitPlayerSlots": {
    "original": "function OneOnOneInitPlayerSlots takes nothing returns nothing",
    "name": "OneOnOneInitPlayerSlots",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "OneOnOneInitPlayerSlots()",
    "documentation": ""
  },
  "InitGenericPlayerSlots": {
    "original": "function InitGenericPlayerSlots takes nothing returns nothing",
    "name": "InitGenericPlayerSlots",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "InitGenericPlayerSlots()",
    "documentation": ""
  },
  "SetDNCSoundsDawn": {
    "original": "function SetDNCSoundsDawn takes nothing returns nothing",
    "name": "SetDNCSoundsDawn",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "SetDNCSoundsDawn()",
    "documentation": ""
  },
  "SetDNCSoundsDusk": {
    "original": "function SetDNCSoundsDusk takes nothing returns nothing",
    "name": "SetDNCSoundsDusk",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "SetDNCSoundsDusk()",
    "documentation": ""
  },
  "SetDNCSoundsDay": {
    "original": "function SetDNCSoundsDay takes nothing returns nothing",
    "name": "SetDNCSoundsDay",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "SetDNCSoundsDay()",
    "documentation": ""
  },
  "SetDNCSoundsNight": {
    "original": "function SetDNCSoundsNight takes nothing returns nothing",
    "name": "SetDNCSoundsNight",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "SetDNCSoundsNight()",
    "documentation": ""
  },
  "InitDNCSounds": {
    "original": "function InitDNCSounds takes nothing returns nothing",
    "name": "InitDNCSounds",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "InitDNCSounds()",
    "documentation": ""
  },
  "InitBlizzardGlobals": {
    "original": "function InitBlizzardGlobals takes nothing returns nothing",
    "name": "InitBlizzardGlobals",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "InitBlizzardGlobals()",
    "documentation": ""
  },
  "InitQueuedTriggers": {
    "original": "function InitQueuedTriggers takes nothing returns nothing",
    "name": "InitQueuedTriggers",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "InitQueuedTriggers()",
    "documentation": ""
  },
  "InitMapRects": {
    "original": "function InitMapRects takes nothing returns nothing",
    "name": "InitMapRects",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "InitMapRects()",
    "documentation": ""
  },
  "InitSummonableCaps": {
    "original": "function InitSummonableCaps takes nothing returns nothing",
    "name": "InitSummonableCaps",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "InitSummonableCaps()",
    "documentation": ""
  },
  "UpdateStockAvailability": {
    "original": "function UpdateStockAvailability takes item whichItem returns nothing",
    "name": "UpdateStockAvailability",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "item",
      "name": "whichItem",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UpdateStockAvailability(whichItem)",
    "documentation": ""
  },
  "UpdateEachStockBuildingEnum": {
    "original": "function UpdateEachStockBuildingEnum takes nothing returns nothing",
    "name": "UpdateEachStockBuildingEnum",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "UpdateEachStockBuildingEnum()",
    "documentation": ""
  },
  "UpdateEachStockBuilding": {
    "original": "function UpdateEachStockBuilding takes itemtype iType, integer iLevel returns nothing",
    "name": "UpdateEachStockBuilding",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "itemtype",
      "name": "iType",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "iLevel",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UpdateEachStockBuilding(iType, iLevel)",
    "documentation": ""
  },
  "PerformStockUpdates": {
    "original": "function PerformStockUpdates takes nothing returns nothing",
    "name": "PerformStockUpdates",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "PerformStockUpdates()",
    "documentation": ""
  },
  "StartStockUpdates": {
    "original": "function StartStockUpdates takes nothing returns nothing",
    "name": "StartStockUpdates",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "StartStockUpdates()",
    "documentation": ""
  },
  "RemovePurchasedItem": {
    "original": "function RemovePurchasedItem takes nothing returns nothing",
    "name": "RemovePurchasedItem",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "RemovePurchasedItem()",
    "documentation": ""
  },
  "InitNeutralBuildings": {
    "original": "function InitNeutralBuildings takes nothing returns nothing",
    "name": "InitNeutralBuildings",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "InitNeutralBuildings()",
    "documentation": ""
  },
  "MarkGameStarted": {
    "original": "function MarkGameStarted takes nothing returns nothing",
    "name": "MarkGameStarted",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MarkGameStarted()",
    "documentation": ""
  },
  "DetectGameStarted": {
    "original": "function DetectGameStarted takes nothing returns nothing",
    "name": "DetectGameStarted",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "DetectGameStarted()",
    "documentation": ""
  },
  "InitBlizzard": {
    "original": "function InitBlizzard takes nothing returns nothing",
    "name": "InitBlizzard",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "InitBlizzard()",
    "documentation": ""
  },
  "RandomDistReset": {
    "original": "function RandomDistReset takes nothing returns nothing",
    "name": "RandomDistReset",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "RandomDistReset()",
    "documentation": ""
  },
  "RandomDistAddItem": {
    "original": "function RandomDistAddItem takes integer inID, integer inChance returns nothing",
    "name": "RandomDistAddItem",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "inID",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "inChance",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "RandomDistAddItem(inID, inChance)",
    "documentation": ""
  },
  "RandomDistChoose": {
    "original": "function RandomDistChoose takes nothing returns integer",
    "name": "RandomDistChoose",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "integer",
    "insertText": "RandomDistChoose()",
    "documentation": ""
  },
  "UnitDropItem": {
    "original": "function UnitDropItem takes unit inUnit, integer inItemID returns item",
    "name": "UnitDropItem",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "inUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "inItemID",
      "documentation": ""
    }],
    "returnType": "item",
    "insertText": "UnitDropItem(inUnit, inItemID)",
    "documentation": "让 ,~单位, 掉落一件 ,~物品"
  },
  "WidgetDropItem": {
    "original": "function WidgetDropItem takes widget inWidget, integer inItemID returns item",
    "name": "WidgetDropItem",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "widget",
      "name": "inWidget",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "inItemID",
      "documentation": ""
    }],
    "returnType": "item",
    "insertText": "WidgetDropItem(inWidget, inItemID)",
    "documentation": ""
  },
  "DebugS": {
    "original": "native DebugS takes string str returns nothing",
    "name": "DebugS",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "str",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DebugS(str)",
    "documentation": ""
  },
  "DebugFI": {
    "original": "native DebugFI takes string str, integer val returns nothing",
    "name": "DebugFI",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "str",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "val",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DebugFI(str, val)",
    "documentation": ""
  },
  "DebugUnitID": {
    "original": "native DebugUnitID takes string str, integer val returns nothing",
    "name": "DebugUnitID",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "str",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "val",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DebugUnitID(str, val)",
    "documentation": ""
  },
  "DisplayText": {
    "original": "native DisplayText takes integer p, string str returns nothing",
    "name": "DisplayText",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "p",
      "documentation": ""
    }, {
      "type": "string",
      "name": "str",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DisplayText(p, str)",
    "documentation": ""
  },
  "DisplayTextI": {
    "original": "native DisplayTextI takes integer p, string str, integer val returns nothing",
    "name": "DisplayTextI",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "p",
      "documentation": ""
    }, {
      "type": "string",
      "name": "str",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "val",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DisplayTextI(p, str, val)",
    "documentation": ""
  },
  "DisplayTextII": {
    "original": "native DisplayTextII takes integer p, string str, integer v1, integer v2 returns nothing",
    "name": "DisplayTextII",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "p",
      "documentation": ""
    }, {
      "type": "string",
      "name": "str",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "v1",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "v2",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DisplayTextII(p, str, v1, v2)",
    "documentation": ""
  },
  "DisplayTextIII": {
    "original": "native DisplayTextIII takes integer p, string str, integer v1, integer v2, integer v3 returns nothing",
    "name": "DisplayTextIII",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "p",
      "documentation": ""
    }, {
      "type": "string",
      "name": "str",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "v1",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "v2",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "v3",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DisplayTextIII(p, str, v1, v2, v3)",
    "documentation": ""
  },
  "DoAiScriptDebug": {
    "original": "native DoAiScriptDebug takes nothing returns boolean",
    "name": "DoAiScriptDebug",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "boolean",
    "insertText": "DoAiScriptDebug()",
    "documentation": ""
  },
  "GetAiPlayer": {
    "original": "native GetAiPlayer takes nothing returns integer",
    "name": "GetAiPlayer",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "GetAiPlayer()",
    "documentation": ""
  },
  "GetHeroId": {
    "original": "native GetHeroId takes nothing returns integer",
    "name": "GetHeroId",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "GetHeroId()",
    "documentation": ""
  },
  "GetHeroLevelAI": {
    "original": "native GetHeroLevelAI takes nothing returns integer",
    "name": "GetHeroLevelAI",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "GetHeroLevelAI()",
    "documentation": ""
  },
  "GetUnitCount": {
    "original": "native GetUnitCount takes integer unitid returns integer",
    "name": "GetUnitCount",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetUnitCount(unitid)",
    "documentation": "对应类型的单位数"
  },
  "GetPlayerUnitTypeCount": {
    "original": "native GetPlayerUnitTypeCount takes player p, integer unitid returns integer",
    "name": "GetPlayerUnitTypeCount",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "p",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetPlayerUnitTypeCount(p, unitid)",
    "documentation": ""
  },
  "GetUnitCountDone": {
    "original": "native GetUnitCountDone takes integer unitid returns integer",
    "name": "GetUnitCountDone",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetUnitCountDone(unitid)",
    "documentation": "对应类型的单位数 - 仅完成的"
  },
  "GetTownUnitCount": {
    "original": "native GetTownUnitCount takes integer id, integer tn, boolean dn returns integer",
    "name": "GetTownUnitCount",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "id",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "tn",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "dn",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetTownUnitCount(id, tn, dn)",
    "documentation": "对应类型的单位数 - 按基地"
  },
  "GetUnitGoldCost": {
    "original": "native GetUnitGoldCost takes integer unitid returns integer",
    "name": "GetUnitGoldCost",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetUnitGoldCost(unitid)",
    "documentation": "单位金钱消耗"
  },
  "GetUnitWoodCost": {
    "original": "native GetUnitWoodCost takes integer unitid returns integer",
    "name": "GetUnitWoodCost",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetUnitWoodCost(unitid)",
    "documentation": "单位木材消耗"
  },
  "GetUnitBuildTime": {
    "original": "native GetUnitBuildTime takes integer unitid returns integer",
    "name": "GetUnitBuildTime",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetUnitBuildTime(unitid)",
    "documentation": "单位建造事件"
  },
  "GetMinesOwned": {
    "original": "native GetMinesOwned takes nothing returns integer",
    "name": "GetMinesOwned",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "GetMinesOwned()",
    "documentation": "拥有的金矿数"
  },
  "GetGoldOwned": {
    "original": "native GetGoldOwned takes nothing returns integer",
    "name": "GetGoldOwned",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "GetGoldOwned()",
    "documentation": "拥有的金矿金钱数量"
  },
  "TownWithMine": {
    "original": "native TownWithMine takes nothing returns integer",
    "name": "TownWithMine",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "TownWithMine()",
    "documentation": "有金矿的基地"
  },
  "TownHasMine": {
    "original": "native TownHasMine takes integer townid returns boolean",
    "name": "TownHasMine",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "townid",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "TownHasMine(townid)",
    "documentation": "基地有金矿"
  },
  "TownHasHall": {
    "original": "native TownHasHall takes integer townid returns boolean",
    "name": "TownHasHall",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "townid",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "TownHasHall(townid)",
    "documentation": "基地有主城镇"
  },
  "GetUpgradeLevel": {
    "original": "native GetUpgradeLevel takes integer id returns integer",
    "name": "GetUpgradeLevel",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "id",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetUpgradeLevel(id)",
    "documentation": "当前升级的等级"
  },
  "GetUpgradeGoldCost": {
    "original": "native GetUpgradeGoldCost takes integer id returns integer",
    "name": "GetUpgradeGoldCost",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "id",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetUpgradeGoldCost(id)",
    "documentation": "升级金钱消耗"
  },
  "GetUpgradeWoodCost": {
    "original": "native GetUpgradeWoodCost takes integer id returns integer",
    "name": "GetUpgradeWoodCost",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "id",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetUpgradeWoodCost(id)",
    "documentation": "升级木材消耗"
  },
  "GetNextExpansion": {
    "original": "native GetNextExpansion takes nothing returns integer",
    "name": "GetNextExpansion",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "GetNextExpansion()",
    "documentation": "下一个扩张基地"
  },
  "GetMegaTarget": {
    "original": "native GetMegaTarget takes nothing returns unit",
    "name": "GetMegaTarget",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetMegaTarget()",
    "documentation": ""
  },
  "GetBuilding": {
    "original": "native GetBuilding takes player p returns unit",
    "name": "GetBuilding",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "p",
      "documentation": ""
    }],
    "returnType": "unit",
    "insertText": "GetBuilding(p)",
    "documentation": ""
  },
  "GetEnemyPower": {
    "original": "native GetEnemyPower takes nothing returns integer",
    "name": "GetEnemyPower",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "GetEnemyPower()",
    "documentation": ""
  },
  "SetAllianceTarget": {
    "original": "native SetAllianceTarget takes unit id returns nothing",
    "name": "SetAllianceTarget",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "id",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetAllianceTarget(id)",
    "documentation": ""
  },
  "GetAllianceTarget": {
    "original": "native GetAllianceTarget takes nothing returns unit",
    "name": "GetAllianceTarget",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetAllianceTarget()",
    "documentation": ""
  },
  "SetProduce": {
    "original": "native SetProduce takes integer qty, integer id, integer town returns boolean",
    "name": "SetProduce",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "qty",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "id",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "town",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SetProduce(qty, id, town)",
    "documentation": ""
  },
  "Unsummon": {
    "original": "native Unsummon takes unit unitid returns nothing",
    "name": "Unsummon",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "Unsummon(unitid)",
    "documentation": ""
  },
  "SetExpansion": {
    "original": "native SetExpansion takes unit peon, integer id returns boolean",
    "name": "SetExpansion",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "peon",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "id",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SetExpansion(peon, id)",
    "documentation": ""
  },
  "SetUpgrade": {
    "original": "native SetUpgrade takes integer id returns boolean",
    "name": "SetUpgrade",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "id",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SetUpgrade(id)",
    "documentation": ""
  },
  "SetHeroLevels": {
    "original": "native SetHeroLevels takes code func returns nothing",
    "name": "SetHeroLevels",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "code",
      "name": "func",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetHeroLevels(func)",
    "documentation": ""
  },
  "SetNewHeroes": {
    "original": "native SetNewHeroes takes boolean state returns nothing",
    "name": "SetNewHeroes",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "state",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetNewHeroes(state)",
    "documentation": ""
  },
  "PurchaseZeppelin": {
    "original": "native PurchaseZeppelin takes nothing returns nothing",
    "name": "PurchaseZeppelin",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "PurchaseZeppelin()",
    "documentation": ""
  },
  "MergeUnits": {
    "original": "native MergeUnits takes integer qty, integer a, integer b, integer make returns boolean",
    "name": "MergeUnits",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "qty",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "a",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "b",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "make",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "MergeUnits(qty, a, b, make)",
    "documentation": ""
  },
  "ConvertUnits": {
    "original": "native ConvertUnits takes integer qty, integer id returns boolean",
    "name": "ConvertUnits",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "qty",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "id",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "ConvertUnits(qty, id)",
    "documentation": ""
  },
  "SetCampaignAI": {
    "original": "native SetCampaignAI takes nothing returns nothing",
    "name": "SetCampaignAI",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "SetCampaignAI()",
    "documentation": ""
  },
  "SetMeleeAI": {
    "original": "native SetMeleeAI takes nothing returns nothing",
    "name": "SetMeleeAI",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "SetMeleeAI()",
    "documentation": ""
  },
  "SetTargetHeroes": {
    "original": "native SetTargetHeroes takes boolean state returns nothing",
    "name": "SetTargetHeroes",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "state",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetTargetHeroes(state)",
    "documentation": ""
  },
  "SetPeonsRepair": {
    "original": "native SetPeonsRepair takes boolean state returns nothing",
    "name": "SetPeonsRepair",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "state",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetPeonsRepair(state)",
    "documentation": ""
  },
  "SetRandomPaths": {
    "original": "native SetRandomPaths takes boolean state returns nothing",
    "name": "SetRandomPaths",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "state",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetRandomPaths(state)",
    "documentation": ""
  },
  "SetDefendPlayer": {
    "original": "native SetDefendPlayer takes boolean state returns nothing",
    "name": "SetDefendPlayer",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "state",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetDefendPlayer(state)",
    "documentation": ""
  },
  "SetHeroesFlee": {
    "original": "native SetHeroesFlee takes boolean state returns nothing",
    "name": "SetHeroesFlee",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "state",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetHeroesFlee(state)",
    "documentation": ""
  },
  "SetHeroesBuyItems": {
    "original": "native SetHeroesBuyItems takes boolean state returns nothing",
    "name": "SetHeroesBuyItems",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "state",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetHeroesBuyItems(state)",
    "documentation": ""
  },
  "SetWatchMegaTargets": {
    "original": "native SetWatchMegaTargets takes boolean state returns nothing",
    "name": "SetWatchMegaTargets",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "state",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetWatchMegaTargets(state)",
    "documentation": ""
  },
  "SetIgnoreInjured": {
    "original": "native SetIgnoreInjured takes boolean state returns nothing",
    "name": "SetIgnoreInjured",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "state",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetIgnoreInjured(state)",
    "documentation": ""
  },
  "SetHeroesTakeItems": {
    "original": "native SetHeroesTakeItems takes boolean state returns nothing",
    "name": "SetHeroesTakeItems",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "state",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetHeroesTakeItems(state)",
    "documentation": ""
  },
  "SetUnitsFlee": {
    "original": "native SetUnitsFlee takes boolean state returns nothing",
    "name": "SetUnitsFlee",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "state",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetUnitsFlee(state)",
    "documentation": ""
  },
  "SetGroupsFlee": {
    "original": "native SetGroupsFlee takes boolean state returns nothing",
    "name": "SetGroupsFlee",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "state",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetGroupsFlee(state)",
    "documentation": ""
  },
  "SetSlowChopping": {
    "original": "native SetSlowChopping takes boolean state returns nothing",
    "name": "SetSlowChopping",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "state",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetSlowChopping(state)",
    "documentation": ""
  },
  "SetCaptainChanges": {
    "original": "native SetCaptainChanges takes boolean allow returns nothing",
    "name": "SetCaptainChanges",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "allow",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCaptainChanges(allow)",
    "documentation": ""
  },
  "SetSmartArtillery": {
    "original": "native SetSmartArtillery takes boolean state returns nothing",
    "name": "SetSmartArtillery",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "state",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetSmartArtillery(state)",
    "documentation": ""
  },
  "SetReplacementCount": {
    "original": "native SetReplacementCount takes integer qty returns nothing",
    "name": "SetReplacementCount",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "qty",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetReplacementCount(qty)",
    "documentation": ""
  },
  "GroupTimedLife": {
    "original": "native GroupTimedLife takes boolean allow returns nothing",
    "name": "GroupTimedLife",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "allow",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "GroupTimedLife(allow)",
    "documentation": ""
  },
  "RemoveInjuries": {
    "original": "native RemoveInjuries takes nothing returns nothing",
    "name": "RemoveInjuries",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "RemoveInjuries()",
    "documentation": ""
  },
  "RemoveSiege": {
    "original": "native RemoveSiege takes nothing returns nothing",
    "name": "RemoveSiege",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "RemoveSiege()",
    "documentation": ""
  },
  "InitAssault": {
    "original": "native InitAssault takes nothing returns nothing",
    "name": "InitAssault",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "InitAssault()",
    "documentation": ""
  },
  "AddAssault": {
    "original": "native AddAssault takes integer qty, integer id returns boolean",
    "name": "AddAssault",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "qty",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "id",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "AddAssault(qty, id)",
    "documentation": ""
  },
  "AddDefenders": {
    "original": "native AddDefenders takes integer qty, integer id returns boolean",
    "name": "AddDefenders",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "qty",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "id",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "AddDefenders(qty, id)",
    "documentation": ""
  },
  "GetCreepCamp": {
    "original": "native GetCreepCamp takes integer min, integer max, boolean flyers_ok returns unit",
    "name": "GetCreepCamp",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "min",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "max",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "flyers_ok",
      "documentation": ""
    }],
    "returnType": "unit",
    "insertText": "GetCreepCamp(min, max, flyers_ok)",
    "documentation": ""
  },
  "StartGetEnemyBase": {
    "original": "native StartGetEnemyBase takes nothing returns nothing",
    "name": "StartGetEnemyBase",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "StartGetEnemyBase()",
    "documentation": ""
  },
  "WaitGetEnemyBase": {
    "original": "native WaitGetEnemyBase takes nothing returns boolean",
    "name": "WaitGetEnemyBase",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "boolean",
    "insertText": "WaitGetEnemyBase()",
    "documentation": ""
  },
  "GetEnemyBase": {
    "original": "native GetEnemyBase takes nothing returns unit",
    "name": "GetEnemyBase",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetEnemyBase()",
    "documentation": ""
  },
  "GetExpansionFoe": {
    "original": "native GetExpansionFoe takes nothing returns unit",
    "name": "GetExpansionFoe",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetExpansionFoe()",
    "documentation": ""
  },
  "GetEnemyExpansion": {
    "original": "native GetEnemyExpansion takes nothing returns unit",
    "name": "GetEnemyExpansion",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetEnemyExpansion()",
    "documentation": ""
  },
  "GetExpansionX": {
    "original": "native GetExpansionX takes nothing returns integer",
    "name": "GetExpansionX",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "GetExpansionX()",
    "documentation": ""
  },
  "GetExpansionY": {
    "original": "native GetExpansionY takes nothing returns integer",
    "name": "GetExpansionY",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "GetExpansionY()",
    "documentation": ""
  },
  "SetStagePoint": {
    "original": "native SetStagePoint takes real x, real y returns nothing",
    "name": "SetStagePoint",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetStagePoint(x, y)",
    "documentation": ""
  },
  "AttackMoveKill": {
    "original": "native AttackMoveKill takes unit target returns nothing",
    "name": "AttackMoveKill",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "target",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "AttackMoveKill(target)",
    "documentation": ""
  },
  "AttackMoveXY": {
    "original": "native AttackMoveXY takes integer x, integer y returns nothing",
    "name": "AttackMoveXY",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "x",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "AttackMoveXY(x, y)",
    "documentation": ""
  },
  "LoadZepWave": {
    "original": "native LoadZepWave takes integer x, integer y returns nothing",
    "name": "LoadZepWave",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "x",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "LoadZepWave(x, y)",
    "documentation": ""
  },
  "SuicidePlayer": {
    "original": "native SuicidePlayer takes player id, boolean check_full returns boolean",
    "name": "SuicidePlayer",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "id",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "check_full",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SuicidePlayer(id, check_full)",
    "documentation": ""
  },
  "SuicidePlayerUnits": {
    "original": "native SuicidePlayerUnits takes player id, boolean check_full returns boolean",
    "name": "SuicidePlayerUnits",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "id",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "check_full",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "SuicidePlayerUnits(id, check_full)",
    "documentation": ""
  },
  "CaptainInCombat": {
    "original": "native CaptainInCombat takes boolean attack_captain returns boolean",
    "name": "CaptainInCombat",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "attack_captain",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "CaptainInCombat(attack_captain)",
    "documentation": "进攻统帅在战斗"
  },
  "IsTowered": {
    "original": "native IsTowered takes unit target returns boolean",
    "name": "IsTowered",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "target",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "IsTowered(target)",
    "documentation": ""
  },
  "ClearHarvestAI": {
    "original": "native ClearHarvestAI takes nothing returns nothing",
    "name": "ClearHarvestAI",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "ClearHarvestAI()",
    "documentation": ""
  },
  "HarvestGold": {
    "original": "native HarvestGold takes integer town, integer peons returns nothing",
    "name": "HarvestGold",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "town",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "peons",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "HarvestGold(town, peons)",
    "documentation": ""
  },
  "HarvestWood": {
    "original": "native HarvestWood takes integer town, integer peons returns nothing",
    "name": "HarvestWood",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "town",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "peons",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "HarvestWood(town, peons)",
    "documentation": ""
  },
  "GetExpansionPeon": {
    "original": "native GetExpansionPeon takes nothing returns unit",
    "name": "GetExpansionPeon",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "GetExpansionPeon()",
    "documentation": ""
  },
  "StopGathering": {
    "original": "native StopGathering takes nothing returns nothing",
    "name": "StopGathering",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "StopGathering()",
    "documentation": ""
  },
  "AddGuardPost": {
    "original": "native AddGuardPost takes integer id, real x, real y returns nothing",
    "name": "AddGuardPost",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "id",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "AddGuardPost(id, x, y)",
    "documentation": ""
  },
  "FillGuardPosts": {
    "original": "native FillGuardPosts takes nothing returns nothing",
    "name": "FillGuardPosts",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "FillGuardPosts()",
    "documentation": ""
  },
  "ReturnGuardPosts": {
    "original": "native ReturnGuardPosts takes nothing returns nothing",
    "name": "ReturnGuardPosts",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "ReturnGuardPosts()",
    "documentation": ""
  },
  "CreateCaptains": {
    "original": "native CreateCaptains takes nothing returns nothing",
    "name": "CreateCaptains",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "CreateCaptains()",
    "documentation": ""
  },
  "SetCaptainHome": {
    "original": "native SetCaptainHome takes integer which, real x, real y returns nothing",
    "name": "SetCaptainHome",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "which",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetCaptainHome(which, x, y)",
    "documentation": ""
  },
  "ResetCaptainLocs": {
    "original": "native ResetCaptainLocs takes nothing returns nothing",
    "name": "ResetCaptainLocs",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "ResetCaptainLocs()",
    "documentation": ""
  },
  "ShiftTownSpot": {
    "original": "native ShiftTownSpot takes real x, real y returns nothing",
    "name": "ShiftTownSpot",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ShiftTownSpot(x, y)",
    "documentation": ""
  },
  "TeleportCaptain": {
    "original": "native TeleportCaptain takes real x, real y returns nothing",
    "name": "TeleportCaptain",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TeleportCaptain(x, y)",
    "documentation": ""
  },
  "ClearCaptainTargets": {
    "original": "native ClearCaptainTargets takes nothing returns nothing",
    "name": "ClearCaptainTargets",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "ClearCaptainTargets()",
    "documentation": ""
  },
  "CaptainAttack": {
    "original": "native CaptainAttack takes real x, real y returns nothing",
    "name": "CaptainAttack",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CaptainAttack(x, y)",
    "documentation": ""
  },
  "CaptainVsUnits": {
    "original": "native CaptainVsUnits takes player id returns nothing",
    "name": "CaptainVsUnits",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "id",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CaptainVsUnits(id)",
    "documentation": ""
  },
  "CaptainVsPlayer": {
    "original": "native CaptainVsPlayer takes player id returns nothing",
    "name": "CaptainVsPlayer",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "id",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CaptainVsPlayer(id)",
    "documentation": ""
  },
  "CaptainGoHome": {
    "original": "native CaptainGoHome takes nothing returns nothing",
    "name": "CaptainGoHome",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "CaptainGoHome()",
    "documentation": ""
  },
  "CaptainIsHome": {
    "original": "native CaptainIsHome takes nothing returns boolean",
    "name": "CaptainIsHome",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "boolean",
    "insertText": "CaptainIsHome()",
    "documentation": "进攻统帅在家"
  },
  "CaptainIsFull": {
    "original": "native CaptainIsFull takes nothing returns boolean",
    "name": "CaptainIsFull",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "boolean",
    "insertText": "CaptainIsFull()",
    "documentation": "进攻组队完整"
  },
  "CaptainIsEmpty": {
    "original": "native CaptainIsEmpty takes nothing returns boolean",
    "name": "CaptainIsEmpty",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "boolean",
    "insertText": "CaptainIsEmpty()",
    "documentation": "进攻组队为空"
  },
  "CaptainGroupSize": {
    "original": "native CaptainGroupSize takes nothing returns integer",
    "name": "CaptainGroupSize",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "CaptainGroupSize()",
    "documentation": "进攻组队规模"
  },
  "CaptainReadiness": {
    "original": "native CaptainReadiness takes nothing returns integer",
    "name": "CaptainReadiness",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "CaptainReadiness()",
    "documentation": ""
  },
  "CaptainRetreating": {
    "original": "native CaptainRetreating takes nothing returns boolean",
    "name": "CaptainRetreating",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "boolean",
    "insertText": "CaptainRetreating()",
    "documentation": "进攻统帅在撤退"
  },
  "CaptainReadinessHP": {
    "original": "native CaptainReadinessHP takes nothing returns integer",
    "name": "CaptainReadinessHP",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "CaptainReadinessHP()",
    "documentation": "进攻组队健康程度"
  },
  "CaptainReadinessMa": {
    "original": "native CaptainReadinessMa takes nothing returns integer",
    "name": "CaptainReadinessMa",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "CaptainReadinessMa()",
    "documentation": "进攻组队魔法程度"
  },
  "CaptainAtGoal": {
    "original": "native CaptainAtGoal takes nothing returns boolean",
    "name": "CaptainAtGoal",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "boolean",
    "insertText": "CaptainAtGoal()",
    "documentation": "进攻统帅到达目标"
  },
  "CreepsOnMap": {
    "original": "native CreepsOnMap takes nothing returns boolean",
    "name": "CreepsOnMap",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "boolean",
    "insertText": "CreepsOnMap()",
    "documentation": "地图上还有野外生物"
  },
  "SuicideUnit": {
    "original": "native SuicideUnit takes integer count, integer unitid returns nothing",
    "name": "SuicideUnit",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "count",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SuicideUnit(count, unitid)",
    "documentation": ""
  },
  "SuicideUnitEx": {
    "original": "native SuicideUnitEx takes integer ct, integer uid, integer pid returns nothing",
    "name": "SuicideUnitEx",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "ct",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "uid",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "pid",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SuicideUnitEx(ct, uid, pid)",
    "documentation": ""
  },
  "StartThread": {
    "original": "native StartThread takes code func returns nothing",
    "name": "StartThread",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "code",
      "name": "func",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "StartThread(func)",
    "documentation": ""
  },
  "Sleep": {
    "original": "native Sleep takes real seconds returns nothing",
    "name": "Sleep",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "seconds",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "Sleep(seconds)",
    "documentation": ""
  },
  "UnitAlive": {
    "original": "native UnitAlive takes unit id returns boolean",
    "name": "UnitAlive",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "id",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitAlive(id)",
    "documentation": ""
  },
  "UnitInvis": {
    "original": "native UnitInvis takes unit id returns boolean",
    "name": "UnitInvis",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "id",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "UnitInvis(id)",
    "documentation": ""
  },
  "IgnoredUnits": {
    "original": "native IgnoredUnits takes integer unitid returns integer",
    "name": "IgnoredUnits",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "IgnoredUnits(unitid)",
    "documentation": ""
  },
  "TownThreatened": {
    "original": "native TownThreatened takes nothing returns boolean",
    "name": "TownThreatened",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "boolean",
    "insertText": "TownThreatened()",
    "documentation": "基地被攻击"
  },
  "DisablePathing": {
    "original": "native DisablePathing takes nothing returns nothing",
    "name": "DisablePathing",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "DisablePathing()",
    "documentation": ""
  },
  "SetAmphibious": {
    "original": "native SetAmphibious takes nothing returns nothing",
    "name": "SetAmphibious",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "SetAmphibious()",
    "documentation": ""
  },
  "CommandsWaiting": {
    "original": "native CommandsWaiting takes nothing returns integer",
    "name": "CommandsWaiting",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "CommandsWaiting()",
    "documentation": "等待中指令数"
  },
  "GetLastCommand": {
    "original": "native GetLastCommand takes nothing returns integer",
    "name": "GetLastCommand",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "GetLastCommand()",
    "documentation": ""
  },
  "GetLastData": {
    "original": "native GetLastData takes nothing returns integer",
    "name": "GetLastData",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "GetLastData()",
    "documentation": ""
  },
  "PopLastCommand": {
    "original": "native PopLastCommand takes nothing returns nothing",
    "name": "PopLastCommand",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "PopLastCommand()",
    "documentation": ""
  },
  "MeleeDifficulty": {
    "original": "native MeleeDifficulty takes nothing returns integer",
    "name": "MeleeDifficulty",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "MeleeDifficulty()",
    "documentation": "对战难度"
  },
  "PlayerEx": {
    "original": "function PlayerEx takes integer slot returns player",
    "name": "PlayerEx",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "slot",
      "documentation": ""
    }],
    "returnType": "player",
    "insertText": "PlayerEx(slot)",
    "documentation": ""
  },
  "Trace": {
    "original": "function Trace takes string message returns nothing",
    "name": "Trace",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "message",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "Trace(message)",
    "documentation": ""
  },
  "TraceI": {
    "original": "function TraceI takes string message, integer val returns nothing",
    "name": "TraceI",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "message",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "val",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TraceI(message, val)",
    "documentation": ""
  },
  "TraceII": {
    "original": "function TraceII takes string message, integer v1, integer v2 returns nothing",
    "name": "TraceII",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "message",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "v1",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "v2",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TraceII(message, v1, v2)",
    "documentation": ""
  },
  "TraceIII": {
    "original": "function TraceIII takes string message, integer v1, integer v2, integer v3 returns nothing",
    "name": "TraceIII",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "string",
      "name": "message",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "v1",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "v2",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "v3",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "TraceIII(message, v1, v2, v3)",
    "documentation": ""
  },
  "InitAI": {
    "original": "function InitAI takes nothing returns nothing",
    "name": "InitAI",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "InitAI()",
    "documentation": ""
  },
  "StandardAI": {
    "original": "function StandardAI takes code heroes, code peons, code attacks returns nothing",
    "name": "StandardAI",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "code",
      "name": "heroes",
      "documentation": ""
    }, {
      "type": "code",
      "name": "peons",
      "documentation": ""
    }, {
      "type": "code",
      "name": "attacks",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "StandardAI(heroes, peons, attacks)",
    "documentation": ""
  },
  "Min": {
    "original": "function Min takes integer A, integer B returns integer",
    "name": "Min",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "A",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "B",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "Min(A, B)",
    "documentation": ""
  },
  "Max": {
    "original": "function Max takes integer A, integer B returns integer",
    "name": "Max",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "A",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "B",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "Max(A, B)",
    "documentation": ""
  },
  "SetZepNextWave": {
    "original": "function SetZepNextWave takes nothing returns nothing",
    "name": "SetZepNextWave",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "SetZepNextWave()",
    "documentation": ""
  },
  "SuicideSleep": {
    "original": "function SuicideSleep takes integer seconds returns nothing",
    "name": "SuicideSleep",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "seconds",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SuicideSleep(seconds)",
    "documentation": ""
  },
  "WaitForSignal": {
    "original": "function WaitForSignal takes nothing returns integer",
    "name": "WaitForSignal",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "integer",
    "insertText": "WaitForSignal()",
    "documentation": ""
  },
  "SetWoodPeons": {
    "original": "function SetWoodPeons takes integer count returns nothing",
    "name": "SetWoodPeons",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "count",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetWoodPeons(count)",
    "documentation": ""
  },
  "SetGoldPeons": {
    "original": "function SetGoldPeons takes integer count returns nothing",
    "name": "SetGoldPeons",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "count",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetGoldPeons(count)",
    "documentation": ""
  },
  "SetHarvestLumber": {
    "original": "function SetHarvestLumber takes boolean harvest returns nothing",
    "name": "SetHarvestLumber",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "harvest",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetHarvestLumber(harvest)",
    "documentation": ""
  },
  "SetFormGroupTimeouts": {
    "original": "function SetFormGroupTimeouts takes boolean state returns nothing",
    "name": "SetFormGroupTimeouts",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "state",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetFormGroupTimeouts(state)",
    "documentation": ""
  },
  "DoCampaignFarms": {
    "original": "function DoCampaignFarms takes boolean state returns nothing",
    "name": "DoCampaignFarms",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "state",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DoCampaignFarms(state)",
    "documentation": ""
  },
  "GetMinorCreep": {
    "original": "function GetMinorCreep takes nothing returns unit",
    "name": "GetMinorCreep",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "unit",
    "insertText": "GetMinorCreep()",
    "documentation": ""
  },
  "GetMajorCreep": {
    "original": "function GetMajorCreep takes nothing returns unit",
    "name": "GetMajorCreep",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "unit",
    "insertText": "GetMajorCreep()",
    "documentation": ""
  },
  "GetGold": {
    "original": "function GetGold takes nothing returns integer",
    "name": "GetGold",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "integer",
    "insertText": "GetGold()",
    "documentation": "当前金钱数"
  },
  "GetWood": {
    "original": "function GetWood takes nothing returns integer",
    "name": "GetWood",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "integer",
    "insertText": "GetWood()",
    "documentation": "当前木材数"
  },
  "InitBuildArray": {
    "original": "function InitBuildArray takes nothing returns nothing",
    "name": "InitBuildArray",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "InitBuildArray()",
    "documentation": ""
  },
  "InitAssaultGroup": {
    "original": "function InitAssaultGroup takes nothing returns nothing",
    "name": "InitAssaultGroup",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "InitAssaultGroup()",
    "documentation": ""
  },
  "InitDefenseGroup": {
    "original": "function InitDefenseGroup takes nothing returns nothing",
    "name": "InitDefenseGroup",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "InitDefenseGroup()",
    "documentation": ""
  },
  "InitMeleeGroup": {
    "original": "function InitMeleeGroup takes nothing returns nothing",
    "name": "InitMeleeGroup",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "InitMeleeGroup()",
    "documentation": ""
  },
  "PrepFullSuicide": {
    "original": "function PrepFullSuicide takes nothing returns nothing",
    "name": "PrepFullSuicide",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "PrepFullSuicide()",
    "documentation": ""
  },
  "SetReplacements": {
    "original": "function SetReplacements takes integer easy, integer med, integer hard returns nothing",
    "name": "SetReplacements",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "easy",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "med",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "hard",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetReplacements(easy, med, hard)",
    "documentation": ""
  },
  "StartTownBuilder": {
    "original": "function StartTownBuilder takes code func returns nothing",
    "name": "StartTownBuilder",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "code",
      "name": "func",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "StartTownBuilder(func)",
    "documentation": ""
  },
  "SetBuildAll": {
    "original": "function SetBuildAll takes integer t, integer qty, integer unitid, integer town returns nothing",
    "name": "SetBuildAll",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "t",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "qty",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "town",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetBuildAll(t, qty, unitid, town)",
    "documentation": ""
  },
  "SetBuildUnit": {
    "original": "function SetBuildUnit takes integer qty, integer unitid returns nothing",
    "name": "SetBuildUnit",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "qty",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetBuildUnit(qty, unitid)",
    "documentation": ""
  },
  "SetBuildNext": {
    "original": "function SetBuildNext takes integer qty, integer unitid returns nothing",
    "name": "SetBuildNext",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "qty",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetBuildNext(qty, unitid)",
    "documentation": ""
  },
  "SetBuildUnitEx": {
    "original": "function SetBuildUnitEx takes integer easy, integer med, integer hard, integer unitid returns nothing",
    "name": "SetBuildUnitEx",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "easy",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "med",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "hard",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetBuildUnitEx(easy, med, hard, unitid)",
    "documentation": ""
  },
  "SecondaryTown": {
    "original": "function SecondaryTown takes integer town, integer qty, integer unitid returns nothing",
    "name": "SecondaryTown",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "town",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "qty",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SecondaryTown(town, qty, unitid)",
    "documentation": ""
  },
  "SecTown": {
    "original": "function SecTown takes integer town, integer qty, integer unitid returns nothing",
    "name": "SecTown",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "town",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "qty",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SecTown(town, qty, unitid)",
    "documentation": ""
  },
  "SetBuildUpgr": {
    "original": "function SetBuildUpgr takes integer qty, integer unitid returns nothing",
    "name": "SetBuildUpgr",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "qty",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetBuildUpgr(qty, unitid)",
    "documentation": ""
  },
  "SetBuildUpgrEx": {
    "original": "function SetBuildUpgrEx takes integer easy, integer med, integer hard, integer unitid returns nothing",
    "name": "SetBuildUpgrEx",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "easy",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "med",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "hard",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetBuildUpgrEx(easy, med, hard, unitid)",
    "documentation": ""
  },
  "SetBuildExpa": {
    "original": "function SetBuildExpa takes integer qty, integer unitid returns nothing",
    "name": "SetBuildExpa",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "qty",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetBuildExpa(qty, unitid)",
    "documentation": ""
  },
  "StartUpgrade": {
    "original": "function StartUpgrade takes integer level, integer upgid returns boolean",
    "name": "StartUpgrade",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "level",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "upgid",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "StartUpgrade(level, upgid)",
    "documentation": ""
  },
  "BuildFactory": {
    "original": "function BuildFactory takes integer unitid returns nothing",
    "name": "BuildFactory",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BuildFactory(unitid)",
    "documentation": ""
  },
  "HallsCompleted": {
    "original": "function HallsCompleted takes integer unitid returns boolean",
    "name": "HallsCompleted",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "HallsCompleted(unitid)",
    "documentation": ""
  },
  "GuardSecondary": {
    "original": "function GuardSecondary takes integer townid, integer qty, integer unitid returns nothing",
    "name": "GuardSecondary",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "townid",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "qty",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "GuardSecondary(townid, qty, unitid)",
    "documentation": ""
  },
  "GetUnitCountEx": {
    "original": "function GetUnitCountEx takes integer unitid, boolean only_done, integer townid returns integer",
    "name": "GetUnitCountEx",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "only_done",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "townid",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetUnitCountEx(unitid, only_done, townid)",
    "documentation": ""
  },
  "TownCountEx": {
    "original": "function TownCountEx takes integer unitid, boolean only_done, integer townid returns integer",
    "name": "TownCountEx",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "only_done",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "townid",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "TownCountEx(unitid, only_done, townid)",
    "documentation": ""
  },
  "TownCountDone": {
    "original": "function TownCountDone takes integer base returns integer",
    "name": "TownCountDone",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "base",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "TownCountDone(base)",
    "documentation": ""
  },
  "TownCount": {
    "original": "function TownCount takes integer base returns integer",
    "name": "TownCount",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "base",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "TownCount(base)",
    "documentation": ""
  },
  "BasicExpansion": {
    "original": "function BasicExpansion takes boolean build_it, integer unitid returns nothing",
    "name": "BasicExpansion",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "build_it",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "BasicExpansion(build_it, unitid)",
    "documentation": ""
  },
  "UpgradeAll": {
    "original": "function UpgradeAll takes integer baseid, integer newid returns nothing",
    "name": "UpgradeAll",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "baseid",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "newid",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "UpgradeAll(baseid, newid)",
    "documentation": ""
  },
  "TownCountTown": {
    "original": "function TownCountTown takes integer base, integer townid returns integer",
    "name": "TownCountTown",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "base",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "townid",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "TownCountTown(base, townid)",
    "documentation": ""
  },
  "FoodPool": {
    "original": "function FoodPool takes integer food, boolean weak, integer id1, integer use1, boolean strong, integer id2, integer use2 returns nothing",
    "name": "FoodPool",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "food",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "weak",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "id1",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "use1",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "strong",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "id2",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "use2",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "FoodPool(food, weak, id1, use1, strong, id2, use2)",
    "documentation": ""
  },
  "MeleeTownHall": {
    "original": "function MeleeTownHall takes integer townid, integer unitid returns nothing",
    "name": "MeleeTownHall",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "townid",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "MeleeTownHall(townid, unitid)",
    "documentation": ""
  },
  "WaitForUnits": {
    "original": "function WaitForUnits takes integer unitid, integer qty returns nothing",
    "name": "WaitForUnits",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "qty",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "WaitForUnits(unitid, qty)",
    "documentation": ""
  },
  "StartUnit": {
    "original": "function StartUnit takes integer ask_qty, integer unitid, integer town returns boolean",
    "name": "StartUnit",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "ask_qty",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "town",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "StartUnit(ask_qty, unitid, town)",
    "documentation": ""
  },
  "WaitForTown": {
    "original": "function WaitForTown takes integer towns, integer townid returns nothing",
    "name": "WaitForTown",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "towns",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "townid",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "WaitForTown(towns, townid)",
    "documentation": ""
  },
  "StartExpansion": {
    "original": "function StartExpansion takes integer qty, integer hall returns boolean",
    "name": "StartExpansion",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "qty",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "hall",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "StartExpansion(qty, hall)",
    "documentation": ""
  },
  "OneBuildLoop": {
    "original": "function OneBuildLoop takes nothing returns nothing",
    "name": "OneBuildLoop",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "OneBuildLoop()",
    "documentation": ""
  },
  "StaggerSleep": {
    "original": "function StaggerSleep takes real base, real spread returns nothing",
    "name": "StaggerSleep",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "real",
      "name": "base",
      "documentation": ""
    }, {
      "type": "real",
      "name": "spread",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "StaggerSleep(base, spread)",
    "documentation": ""
  },
  "BuildLoop": {
    "original": "function BuildLoop takes nothing returns nothing",
    "name": "BuildLoop",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "BuildLoop()",
    "documentation": ""
  },
  "StartBuildLoop": {
    "original": "function StartBuildLoop takes nothing returns nothing",
    "name": "StartBuildLoop",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "StartBuildLoop()",
    "documentation": ""
  },
  "SetInitialWave": {
    "original": "function SetInitialWave takes integer seconds returns nothing",
    "name": "SetInitialWave",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "seconds",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetInitialWave(seconds)",
    "documentation": ""
  },
  "AddSleepSeconds": {
    "original": "function AddSleepSeconds takes integer seconds returns nothing",
    "name": "AddSleepSeconds",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "seconds",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "AddSleepSeconds(seconds)",
    "documentation": ""
  },
  "SleepForever": {
    "original": "function SleepForever takes nothing returns nothing",
    "name": "SleepForever",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "SleepForever()",
    "documentation": ""
  },
  "PlayGame": {
    "original": "function PlayGame takes nothing returns nothing",
    "name": "PlayGame",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "PlayGame()",
    "documentation": ""
  },
  "ConvertNeeds": {
    "original": "function ConvertNeeds takes integer unitid returns nothing",
    "name": "ConvertNeeds",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ConvertNeeds(unitid)",
    "documentation": ""
  },
  "Conversions": {
    "original": "function Conversions takes integer desire, integer unitid returns nothing",
    "name": "Conversions",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "desire",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "Conversions(desire, unitid)",
    "documentation": ""
  },
  "SetAssaultGroup": {
    "original": "function SetAssaultGroup takes integer qty, integer max, integer unitid returns nothing",
    "name": "SetAssaultGroup",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "qty",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "max",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetAssaultGroup(qty, max, unitid)",
    "documentation": ""
  },
  "Interleave3": {
    "original": "function Interleave3 takes integer e1, integer m1, integer h1, integer u1, integer e2, integer m2, integer h2, integer u2, integer e3, integer m3, integer h3, integer u3 returns nothing",
    "name": "Interleave3",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "e1",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "m1",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "h1",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "u1",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "e2",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "m2",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "h2",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "u2",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "e3",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "m3",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "h3",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "u3",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "Interleave3(e1, m1, h1, u1, e2, m2, h2, u2, e3, m3, h3, u3)",
    "documentation": ""
  },
  "SetMeleeGroup": {
    "original": "function SetMeleeGroup takes integer unitid returns nothing",
    "name": "SetMeleeGroup",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetMeleeGroup(unitid)",
    "documentation": ""
  },
  "CampaignDefender": {
    "original": "function CampaignDefender takes integer level, integer qty, integer unitid returns nothing",
    "name": "CampaignDefender",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "level",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "qty",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CampaignDefender(level, qty, unitid)",
    "documentation": ""
  },
  "CampaignDefenderEx": {
    "original": "function CampaignDefenderEx takes integer easy, integer med, integer hard, integer unitid returns nothing",
    "name": "CampaignDefenderEx",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "easy",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "med",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "hard",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CampaignDefenderEx(easy, med, hard, unitid)",
    "documentation": ""
  },
  "CampaignAttacker": {
    "original": "function CampaignAttacker takes integer level, integer qty, integer unitid returns nothing",
    "name": "CampaignAttacker",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "level",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "qty",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CampaignAttacker(level, qty, unitid)",
    "documentation": ""
  },
  "CampaignAttackerEx": {
    "original": "function CampaignAttackerEx takes integer easy, integer med, integer hard, integer unitid returns nothing",
    "name": "CampaignAttackerEx",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "easy",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "med",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "hard",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CampaignAttackerEx(easy, med, hard, unitid)",
    "documentation": ""
  },
  "FormGroup": {
    "original": "function FormGroup takes integer seconds, boolean testReady returns nothing",
    "name": "FormGroup",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "seconds",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "testReady",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "FormGroup(seconds, testReady)",
    "documentation": ""
  },
  "WavePrepare": {
    "original": "function WavePrepare takes integer unitid returns integer",
    "name": "WavePrepare",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "WavePrepare(unitid)",
    "documentation": ""
  },
  "PrepTime": {
    "original": "function PrepTime takes nothing returns integer",
    "name": "PrepTime",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "integer",
    "insertText": "PrepTime()",
    "documentation": ""
  },
  "PrepSuicideOnPlayer": {
    "original": "function PrepSuicideOnPlayer takes integer seconds returns boolean",
    "name": "PrepSuicideOnPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "seconds",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "PrepSuicideOnPlayer(seconds)",
    "documentation": ""
  },
  "SleepUntilAtGoal": {
    "original": "function SleepUntilAtGoal takes nothing returns nothing",
    "name": "SleepUntilAtGoal",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "SleepUntilAtGoal()",
    "documentation": ""
  },
  "SleepInCombat": {
    "original": "function SleepInCombat takes nothing returns nothing",
    "name": "SleepInCombat",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "SleepInCombat()",
    "documentation": ""
  },
  "AttackMoveXYA": {
    "original": "function AttackMoveXYA takes integer x, integer y returns nothing",
    "name": "AttackMoveXYA",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "x",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "AttackMoveXYA(x, y)",
    "documentation": ""
  },
  "SuicideOnPlayerWave": {
    "original": "function SuicideOnPlayerWave takes nothing returns nothing",
    "name": "SuicideOnPlayerWave",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "SuicideOnPlayerWave()",
    "documentation": ""
  },
  "CommonSuicideOnPlayer": {
    "original": "function CommonSuicideOnPlayer takes boolean standard, boolean bldgs, integer seconds, player p, integer x, integer y returns nothing",
    "name": "CommonSuicideOnPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "standard",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "bldgs",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "seconds",
      "documentation": ""
    }, {
      "type": "player",
      "name": "p",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "x",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CommonSuicideOnPlayer(standard, bldgs, seconds, p, x, y)",
    "documentation": ""
  },
  "SuicideOnPlayer": {
    "original": "function SuicideOnPlayer takes integer seconds, player p returns nothing",
    "name": "SuicideOnPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "seconds",
      "documentation": ""
    }, {
      "type": "player",
      "name": "p",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SuicideOnPlayer(seconds, p)",
    "documentation": ""
  },
  "SuicideOnUnits": {
    "original": "function SuicideOnUnits takes integer seconds, player p returns nothing",
    "name": "SuicideOnUnits",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "seconds",
      "documentation": ""
    }, {
      "type": "player",
      "name": "p",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SuicideOnUnits(seconds, p)",
    "documentation": ""
  },
  "SuicideOnPoint": {
    "original": "function SuicideOnPoint takes integer seconds, player p, integer x, integer y returns nothing",
    "name": "SuicideOnPoint",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "seconds",
      "documentation": ""
    }, {
      "type": "player",
      "name": "p",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "x",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SuicideOnPoint(seconds, p, x, y)",
    "documentation": ""
  },
  "SuicideUntilSignal": {
    "original": "function SuicideUntilSignal takes integer seconds, player p returns nothing",
    "name": "SuicideUntilSignal",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "seconds",
      "documentation": ""
    }, {
      "type": "player",
      "name": "p",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SuicideUntilSignal(seconds, p)",
    "documentation": ""
  },
  "SuicideOnce": {
    "original": "function SuicideOnce takes integer easy, integer med, integer hard, integer unitid returns nothing",
    "name": "SuicideOnce",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "easy",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "med",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "hard",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SuicideOnce(easy, med, hard, unitid)",
    "documentation": ""
  },
  "SuicideUnitA": {
    "original": "function SuicideUnitA takes integer unitid returns nothing",
    "name": "SuicideUnitA",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SuicideUnitA(unitid)",
    "documentation": ""
  },
  "SuicideUnitB": {
    "original": "function SuicideUnitB takes integer unitid, integer playerid returns nothing",
    "name": "SuicideUnitB",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "unitid",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "playerid",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SuicideUnitB(unitid, playerid)",
    "documentation": ""
  },
  "SuicideUnits": {
    "original": "function SuicideUnits takes integer u1, integer u2, integer u3, integer u4, integer u5, integer u6, integer u7, integer u8, integer u9, integer uA returns nothing",
    "name": "SuicideUnits",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "u1",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "u2",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "u3",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "u4",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "u5",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "u6",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "u7",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "u8",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "u9",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "uA",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SuicideUnits(u1, u2, u3, u4, u5, u6, u7, u8, u9, uA)",
    "documentation": ""
  },
  "SuicideUnitsEx": {
    "original": "function SuicideUnitsEx takes integer playerid, integer u1, integer u2, integer u3, integer u4, integer u5, integer u6, integer u7, integer u8, integer u9, integer uA returns nothing",
    "name": "SuicideUnitsEx",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "playerid",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "u1",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "u2",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "u3",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "u4",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "u5",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "u6",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "u7",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "u8",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "u9",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "uA",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SuicideUnitsEx(playerid, u1, u2, u3, u4, u5, u6, u7, u8, u9, uA)",
    "documentation": ""
  },
  "SuicideOnPlayerEx": {
    "original": "function SuicideOnPlayerEx takes integer easy, integer med, integer hard, player p returns nothing",
    "name": "SuicideOnPlayerEx",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "easy",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "med",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "hard",
      "documentation": ""
    }, {
      "type": "player",
      "name": "p",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SuicideOnPlayerEx(easy, med, hard, p)",
    "documentation": ""
  },
  "SuicideOnUnitsEx": {
    "original": "function SuicideOnUnitsEx takes integer easy, integer med, integer hard, player p returns nothing",
    "name": "SuicideOnUnitsEx",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "easy",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "med",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "hard",
      "documentation": ""
    }, {
      "type": "player",
      "name": "p",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SuicideOnUnitsEx(easy, med, hard, p)",
    "documentation": ""
  },
  "SuicideOnPointEx": {
    "original": "function SuicideOnPointEx takes integer easy, integer med, integer hard, player p, integer x, integer y returns nothing",
    "name": "SuicideOnPointEx",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "easy",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "med",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "hard",
      "documentation": ""
    }, {
      "type": "player",
      "name": "p",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "x",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SuicideOnPointEx(easy, med, hard, p, x, y)",
    "documentation": ""
  },
  "ForeverSuicideOnPlayer": {
    "original": "function ForeverSuicideOnPlayer takes integer seconds, player p returns nothing",
    "name": "ForeverSuicideOnPlayer",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "seconds",
      "documentation": ""
    }, {
      "type": "player",
      "name": "p",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ForeverSuicideOnPlayer(seconds, p)",
    "documentation": ""
  },
  "CommonSleepUntilTargetDead": {
    "original": "function CommonSleepUntilTargetDead takes unit target, boolean reform returns nothing",
    "name": "CommonSleepUntilTargetDead",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "target",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "reform",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CommonSleepUntilTargetDead(target, reform)",
    "documentation": ""
  },
  "SleepUntilTargetDead": {
    "original": "function SleepUntilTargetDead takes unit target returns nothing",
    "name": "SleepUntilTargetDead",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "target",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SleepUntilTargetDead(target)",
    "documentation": ""
  },
  "ReformUntilTargetDead": {
    "original": "function ReformUntilTargetDead takes unit target returns nothing",
    "name": "ReformUntilTargetDead",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "target",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "ReformUntilTargetDead(target)",
    "documentation": ""
  },
  "AttackMoveKillA": {
    "original": "function AttackMoveKillA takes unit target returns nothing",
    "name": "AttackMoveKillA",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "unit",
      "name": "target",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "AttackMoveKillA(target)",
    "documentation": ""
  },
  "MinorCreepAttack": {
    "original": "function MinorCreepAttack takes nothing returns nothing",
    "name": "MinorCreepAttack",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MinorCreepAttack()",
    "documentation": ""
  },
  "MajorCreepAttack": {
    "original": "function MajorCreepAttack takes nothing returns nothing",
    "name": "MajorCreepAttack",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "MajorCreepAttack()",
    "documentation": ""
  },
  "CreepAttackEx": {
    "original": "function CreepAttackEx takes nothing returns nothing",
    "name": "CreepAttackEx",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "CreepAttackEx()",
    "documentation": ""
  },
  "AnyPlayerAttack": {
    "original": "function AnyPlayerAttack takes nothing returns nothing",
    "name": "AnyPlayerAttack",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "AnyPlayerAttack()",
    "documentation": ""
  },
  "ExpansionAttack": {
    "original": "function ExpansionAttack takes nothing returns nothing",
    "name": "ExpansionAttack",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "ExpansionAttack()",
    "documentation": ""
  },
  "AddSiege": {
    "original": "function AddSiege takes nothing returns nothing",
    "name": "AddSiege",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "AddSiege()",
    "documentation": ""
  },
  "GetAllyCount": {
    "original": "function GetAllyCount takes player whichPlayer returns integer",
    "name": "GetAllyCount",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "GetAllyCount(whichPlayer)",
    "documentation": ""
  },
  "SingleMeleeAttack": {
    "original": "function SingleMeleeAttack takes boolean needs_exp, boolean has_siege, boolean major_ok, boolean air_units returns nothing",
    "name": "SingleMeleeAttack",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "boolean",
      "name": "needs_exp",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "has_siege",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "major_ok",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "air_units",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SingleMeleeAttack(needs_exp, has_siege, major_ok, air_units)",
    "documentation": ""
  },
  "GetZeppelin": {
    "original": "function GetZeppelin takes nothing returns nothing",
    "name": "GetZeppelin",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "GetZeppelin()",
    "documentation": ""
  },
  "FoodUsed": {
    "original": "function FoodUsed takes nothing returns integer",
    "name": "FoodUsed",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "integer",
    "insertText": "FoodUsed()",
    "documentation": "当前AI玩家的人口使用量"
  },
  "FoodCap": {
    "original": "function FoodCap takes nothing returns integer",
    "name": "FoodCap",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "integer",
    "insertText": "FoodCap()",
    "documentation": ""
  },
  "FoodSpace": {
    "original": "function FoodSpace takes nothing returns integer",
    "name": "FoodSpace",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "integer",
    "insertText": "FoodSpace()",
    "documentation": ""
  },
  "FoodAvail": {
    "original": "function FoodAvail takes integer base returns integer",
    "name": "FoodAvail",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "base",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "FoodAvail(base)",
    "documentation": ""
  },
  "BuildAttackers": {
    "original": "function BuildAttackers takes nothing returns nothing",
    "name": "BuildAttackers",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "BuildAttackers()",
    "documentation": ""
  },
  "BuildDefenders": {
    "original": "function BuildDefenders takes nothing returns nothing",
    "name": "BuildDefenders",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "BuildDefenders()",
    "documentation": ""
  },
  "CampaignBasicsA": {
    "original": "function CampaignBasicsA takes nothing returns nothing",
    "name": "CampaignBasicsA",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "CampaignBasicsA()",
    "documentation": ""
  },
  "CampaignBasics": {
    "original": "function CampaignBasics takes nothing returns nothing",
    "name": "CampaignBasics",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "CampaignBasics()",
    "documentation": ""
  },
  "CampaignAI": {
    "original": "function CampaignAI takes integer farms, code heroes returns nothing",
    "name": "CampaignAI",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "farms",
      "documentation": ""
    }, {
      "type": "code",
      "name": "heroes",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "CampaignAI(farms, heroes)",
    "documentation": ""
  },
  "UnsummonAll": {
    "original": "function UnsummonAll takes nothing returns nothing",
    "name": "UnsummonAll",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "UnsummonAll()",
    "documentation": ""
  },
  "SkillArrays": {
    "original": "function SkillArrays takes nothing returns integer",
    "name": "SkillArrays",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": "integer",
    "insertText": "SkillArrays()",
    "documentation": ""
  },
  "SetSkillArray": {
    "original": "function SetSkillArray takes integer index, integer id returns nothing",
    "name": "SetSkillArray",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "integer",
      "name": "index",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "id",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "SetSkillArray(index, id)",
    "documentation": ""
  },
  "AwaitMeleeHeroes": {
    "original": "function AwaitMeleeHeroes takes nothing returns nothing",
    "name": "AwaitMeleeHeroes",
    "isConstant": false,
    "isNative": false,
    "args": null,
    "returnType": null,
    "insertText": "AwaitMeleeHeroes()",
    "documentation": ""
  },
  "PickMeleeHero": {
    "original": "function PickMeleeHero takes race raceid returns integer",
    "name": "PickMeleeHero",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "race",
      "name": "raceid",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "PickMeleeHero(raceid)",
    "documentation": ""
  },
  "DzAPI_Map_SaveServerValue": {
    "original": " native DzAPI_Map_SaveServerValue takes player whichPlayer, string key, string value returns boolean",
    "name": "DzAPI_Map_SaveServerValue",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "string",
      "name": "value",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "DzAPI_Map_SaveServerValue(whichPlayer, key, value)",
    "documentation": "DzAPI: ,~玩家,保存存档[,~存档名称,][,~存档内容,]"
  },
  "DzAPI_Map_GetServerValue": {
    "original": " native DzAPI_Map_GetServerValue takes player whichPlayer, string key returns string",
    "name": "DzAPI_Map_GetServerValue",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "DzAPI_Map_GetServerValue(whichPlayer, key)",
    "documentation": "获取 ,~whichPlayer, ,~key, 里的数据"
  },
  "DzAPI_Map_Ladder_SetStat": {
    "original": " native DzAPI_Map_Ladder_SetStat takes player whichPlayer, string key, string value returns nothing",
    "name": "DzAPI_Map_Ladder_SetStat",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "string",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzAPI_Map_Ladder_SetStat(whichPlayer, key, value)",
    "documentation": "提交 ,~whichPlayer, 天梯项目:,~key, 的值为:,~value"
  },
  "DzAPI_Map_IsRPGLadder": {
    "original": " native DzAPI_Map_IsRPGLadder takes nothing returns boolean",
    "name": "DzAPI_Map_IsRPGLadder",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "boolean",
    "insertText": "DzAPI_Map_IsRPGLadder()",
    "documentation": "判断地图是否在RPG天梯"
  },
  "DzAPI_Map_GetGameStartTime": {
    "original": " native DzAPI_Map_GetGameStartTime takes nothing returns integer",
    "name": "DzAPI_Map_GetGameStartTime",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "DzAPI_Map_GetGameStartTime()",
    "documentation": "获取创建地图的游戏时间"
  },
  "DzAPI_Map_Stat_SetStat": {
    "original": " native DzAPI_Map_Stat_SetStat takes player whichPlayer, string key, string value returns nothing",
    "name": "DzAPI_Map_Stat_SetStat",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "string",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzAPI_Map_Stat_SetStat(whichPlayer, key, value)",
    "documentation": "设置 ,~whichPlayer, 房间的 ,~key, 项目显示 ,~value"
  },
  "DzAPI_Map_GetMatchType": {
    "original": " native DzAPI_Map_GetMatchType takes nothing returns integer",
    "name": "DzAPI_Map_GetMatchType",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "DzAPI_Map_GetMatchType()",
    "documentation": "获取天梯匹配模式"
  },
  "DzAPI_Map_Ladder_SetPlayerStat": {
    "original": " native DzAPI_Map_Ladder_SetPlayerStat takes player whichPlayer, string key, string value returns nothing",
    "name": "DzAPI_Map_Ladder_SetPlayerStat",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "string",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzAPI_Map_Ladder_SetPlayerStat(whichPlayer, key, value)",
    "documentation": ""
  },
  "DzAPI_Map_GetServerValueErrorCode": {
    "original": " native DzAPI_Map_GetServerValueErrorCode takes player whichPlayer returns integer",
    "name": "DzAPI_Map_GetServerValueErrorCode",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "DzAPI_Map_GetServerValueErrorCode(whichPlayer)",
    "documentation": ""
  },
  "DzAPI_Map_GetLadderLevel": {
    "original": " native DzAPI_Map_GetLadderLevel takes player whichPlayer returns integer",
    "name": "DzAPI_Map_GetLadderLevel",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "DzAPI_Map_GetLadderLevel(whichPlayer)",
    "documentation": "获取 ,~player, 天梯等级"
  },
  "DzAPI_Map_IsRedVIP": {
    "original": " native DzAPI_Map_IsRedVIP takes player whichPlayer returns boolean",
    "name": "DzAPI_Map_IsRedVIP",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "DzAPI_Map_IsRedVIP(whichPlayer)",
    "documentation": "判断 ,~player, 是否是红V"
  },
  "DzAPI_Map_IsBlueVIP": {
    "original": " native DzAPI_Map_IsBlueVIP takes player whichPlayer returns boolean",
    "name": "DzAPI_Map_IsBlueVIP",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "DzAPI_Map_IsBlueVIP(whichPlayer)",
    "documentation": "判断 ,~player, 是否是蓝V"
  },
  "DzAPI_Map_GetLadderRank": {
    "original": " native DzAPI_Map_GetLadderRank takes player whichPlayer returns integer",
    "name": "DzAPI_Map_GetLadderRank",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "DzAPI_Map_GetLadderRank(whichPlayer)",
    "documentation": "获取 ,~player, 天梯排名"
  },
  "DzAPI_Map_GetMapLevelRank": {
    "original": " native DzAPI_Map_GetMapLevelRank takes player whichPlayer returns integer",
    "name": "DzAPI_Map_GetMapLevelRank",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "DzAPI_Map_GetMapLevelRank(whichPlayer)",
    "documentation": "获取 ,~player, 的地图等级排名"
  },
  "DzAPI_Map_GetGuildName": {
    "original": " native DzAPI_Map_GetGuildName takes player whichPlayer returns string",
    "name": "DzAPI_Map_GetGuildName",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "DzAPI_Map_GetGuildName(whichPlayer)",
    "documentation": "获取 ,~whichPlayer, 公会名称"
  },
  "DzAPI_Map_GetGuildRole": {
    "original": " native DzAPI_Map_GetGuildRole takes player whichPlayer returns integer",
    "name": "DzAPI_Map_GetGuildRole",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "DzAPI_Map_GetGuildRole(whichPlayer)",
    "documentation": "获取 ,~whichPlayer, 公会职责"
  },
  "DzAPI_Map_IsRPGLobby": {
    "original": " native DzAPI_Map_IsRPGLobby takes nothing returns boolean",
    "name": "DzAPI_Map_IsRPGLobby",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "boolean",
    "insertText": "DzAPI_Map_IsRPGLobby()",
    "documentation": "判断当前地图是否rpg大厅来的"
  },
  "DzAPI_Map_GetMapLevel": {
    "original": " native DzAPI_Map_GetMapLevel takes player whichPlayer returns integer",
    "name": "DzAPI_Map_GetMapLevel",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "DzAPI_Map_GetMapLevel(whichPlayer)",
    "documentation": "获取 ,~player, 的地图等级"
  },
  "DzAPI_Map_MissionComplete": {
    "original": " native DzAPI_Map_MissionComplete takes player whichPlayer, string key, string value returns nothing",
    "name": "DzAPI_Map_MissionComplete",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "string",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzAPI_Map_MissionComplete(whichPlayer, key, value)",
    "documentation": ""
  },
  "DzAPI_Map_GetActivityData": {
    "original": " native DzAPI_Map_GetActivityData takes nothing returns string",
    "name": "DzAPI_Map_GetActivityData",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "string",
    "insertText": "DzAPI_Map_GetActivityData()",
    "documentation": ""
  },
  "DzAPI_Map_GetMapConfig": {
    "original": " native DzAPI_Map_GetMapConfig takes string key returns string",
    "name": "DzAPI_Map_GetMapConfig",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "DzAPI_Map_GetMapConfig(key)",
    "documentation": "获取全局存档名称:,~key, 里存储的字符串."
  },
  "DzAPI_Map_HasMallItem": {
    "original": " native DzAPI_Map_HasMallItem takes player whichPlayer, string key returns boolean",
    "name": "DzAPI_Map_HasMallItem",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "DzAPI_Map_HasMallItem(whichPlayer, key)",
    "documentation": ""
  },
  "DzAPI_Map_SavePublicArchive": {
    "original": " native DzAPI_Map_SavePublicArchive takes player whichPlayer, string key, string value returns boolean",
    "name": "DzAPI_Map_SavePublicArchive",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "string",
      "name": "value",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "DzAPI_Map_SavePublicArchive(whichPlayer, key, value)",
    "documentation": "在公共存档:存储 ,~whichPlayer, 数据,名称：,~key,,值:,~value"
  },
  "DzAPI_Map_GetPublicArchive": {
    "original": " native DzAPI_Map_GetPublicArchive takes player whichPlayer, string key returns string",
    "name": "DzAPI_Map_GetPublicArchive",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "DzAPI_Map_GetPublicArchive(whichPlayer, key)",
    "documentation": "在公共存档读取 ,~whichPlayer,,名称:,~key, 里的数据"
  },
  "DzAPI_Map_UseConsumablesItem": {
    "original": " native DzAPI_Map_UseConsumablesItem takes player whichPlayer, string key returns nothing",
    "name": "DzAPI_Map_UseConsumablesItem",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzAPI_Map_UseConsumablesItem(whichPlayer, key)",
    "documentation": "设置该局消耗 ,~whichPlayer, 的商品：,~key, 一个"
  },
  "DzAPI_Map_OrpgTrigger": {
    "original": " native DzAPI_Map_OrpgTrigger takes player whichPlayer, string key returns nothing",
    "name": "DzAPI_Map_OrpgTrigger",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzAPI_Map_OrpgTrigger(whichPlayer, key)",
    "documentation": "设置 ,~whichPlayer, 触发击杀 ,~bosskey"
  },
  "DzAPI_Map_GetServerArchiveDrop": {
    "original": " native DzAPI_Map_GetServerArchiveDrop takes player whichPlayer, string key returns string",
    "name": "DzAPI_Map_GetServerArchiveDrop",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "DzAPI_Map_GetServerArchiveDrop(whichPlayer, key)",
    "documentation": "获取 ,~whichPlayer, 服务器里 ,~bosskey, 掉落的装备"
  },
  "DzAPI_Map_GetServerArchiveEquip": {
    "original": " native DzAPI_Map_GetServerArchiveEquip takes player whichPlayer, string key returns integer",
    "name": "DzAPI_Map_GetServerArchiveEquip",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "DzAPI_Map_GetServerArchiveEquip(whichPlayer, key)",
    "documentation": ""
  },
  "DzGetMouseTerrainX": {
    "original": " native DzGetMouseTerrainX takes nothing returns real",
    "name": "DzGetMouseTerrainX",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "real",
    "insertText": "DzGetMouseTerrainX()",
    "documentation": "获取鼠标在游戏内的 X 坐标"
  },
  "DzGetMouseTerrainY": {
    "original": " native DzGetMouseTerrainY takes nothing returns real",
    "name": "DzGetMouseTerrainY",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "real",
    "insertText": "DzGetMouseTerrainY()",
    "documentation": "获取鼠标在游戏内的 Y 坐标"
  },
  "DzGetMouseTerrainZ": {
    "original": " native DzGetMouseTerrainZ takes nothing returns real",
    "name": "DzGetMouseTerrainZ",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "real",
    "insertText": "DzGetMouseTerrainZ()",
    "documentation": "获取鼠标在游戏内的 Z 坐标"
  },
  "DzIsMouseOverUI": {
    "original": " native DzIsMouseOverUI takes nothing returns boolean",
    "name": "DzIsMouseOverUI",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "boolean",
    "insertText": "DzIsMouseOverUI()",
    "documentation": "鼠标是否在游戏内"
  },
  "DzGetMouseX": {
    "original": " native DzGetMouseX takes nothing returns integer",
    "name": "DzGetMouseX",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "DzGetMouseX()",
    "documentation": "获取鼠标屏幕 X 坐标"
  },
  "DzGetMouseY": {
    "original": " native DzGetMouseY takes nothing returns integer",
    "name": "DzGetMouseY",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "DzGetMouseY()",
    "documentation": "获取鼠标屏幕 Y 坐标"
  },
  "DzGetMouseXRelative": {
    "original": " native DzGetMouseXRelative takes nothing returns integer",
    "name": "DzGetMouseXRelative",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "DzGetMouseXRelative()",
    "documentation": "获取鼠标游戏窗口 X 坐标"
  },
  "DzGetMouseYRelative": {
    "original": " native DzGetMouseYRelative takes nothing returns integer",
    "name": "DzGetMouseYRelative",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "DzGetMouseYRelative()",
    "documentation": "获取鼠标游戏窗口 Y 坐标"
  },
  "DzSetMousePos": {
    "original": " native DzSetMousePos takes integer x, integer y returns nothing",
    "name": "DzSetMousePos",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "x",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzSetMousePos(x, y)",
    "documentation": "设置鼠标位置: ,~x, , ,~y, "
  },
  "DzTriggerRegisterMouseEvent": {
    "original": " native DzTriggerRegisterMouseEvent takes trigger trig, integer btn, integer status, boolean sync, string func returns nothing",
    "name": "DzTriggerRegisterMouseEvent",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "btn",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "status",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "sync",
      "documentation": ""
    }, {
      "type": "string",
      "name": "func",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzTriggerRegisterMouseEvent(trig, btn, status, sync, func)",
    "documentation": "为 ,~trig, 注册 ,~btn, ,~status, 事件,触发方式为 ,~sync,,执行函数名:,~func"
  },
  "DzTriggerRegisterMouseEventByCode": {
    "original": " native DzTriggerRegisterMouseEventByCode takes trigger trig, integer btn, integer status, boolean sync, code funcHandle returns nothing",
    "name": "DzTriggerRegisterMouseEventByCode",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "btn",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "status",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "sync",
      "documentation": ""
    }, {
      "type": "code",
      "name": "funcHandle",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzTriggerRegisterMouseEventByCode(trig, btn, status, sync, funcHandle)",
    "documentation": ""
  },
  "DzTriggerRegisterKeyEvent": {
    "original": " native DzTriggerRegisterKeyEvent takes trigger trig, integer key, integer status, boolean sync, string func returns nothing",
    "name": "DzTriggerRegisterKeyEvent",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "status",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "sync",
      "documentation": ""
    }, {
      "type": "string",
      "name": "func",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzTriggerRegisterKeyEvent(trig, key, status, sync, func)",
    "documentation": "为 ,~trig, 注册 ,~key, ,~status, 事件,执行方式为 ,~sync,,执行函数:,~func"
  },
  "DzTriggerRegisterKeyEventByCode": {
    "original": " native DzTriggerRegisterKeyEventByCode takes trigger trig, integer key, integer status, boolean sync, code funcHandle returns nothing",
    "name": "DzTriggerRegisterKeyEventByCode",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "status",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "sync",
      "documentation": ""
    }, {
      "type": "code",
      "name": "funcHandle",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzTriggerRegisterKeyEventByCode(trig, key, status, sync, funcHandle)",
    "documentation": ""
  },
  "DzTriggerRegisterMouseWheelEvent": {
    "original": " native DzTriggerRegisterMouseWheelEvent takes trigger trig, boolean sync, string func returns nothing",
    "name": "DzTriggerRegisterMouseWheelEvent",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "sync",
      "documentation": ""
    }, {
      "type": "string",
      "name": "func",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzTriggerRegisterMouseWheelEvent(trig, sync, func)",
    "documentation": "为 ,~trig, 注册滚轮事件,执行方式为 ,~sync, ,执行函数名:,~func"
  },
  "DzTriggerRegisterMouseWheelEventByCode": {
    "original": " native DzTriggerRegisterMouseWheelEventByCode takes trigger trig, boolean sync, code funcHandle returns nothing",
    "name": "DzTriggerRegisterMouseWheelEventByCode",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "sync",
      "documentation": ""
    }, {
      "type": "code",
      "name": "funcHandle",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzTriggerRegisterMouseWheelEventByCode(trig, sync, funcHandle)",
    "documentation": ""
  },
  "DzTriggerRegisterMouseMoveEvent": {
    "original": " native DzTriggerRegisterMouseMoveEvent takes trigger trig, boolean sync, string func returns nothing",
    "name": "DzTriggerRegisterMouseMoveEvent",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "sync",
      "documentation": ""
    }, {
      "type": "string",
      "name": "func",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzTriggerRegisterMouseMoveEvent(trig, sync, func)",
    "documentation": "为 ,~trig, 注册鼠标移动事件,执行方式 ,~sync,,执行函数名:,~func"
  },
  "DzTriggerRegisterMouseMoveEventByCode": {
    "original": " native DzTriggerRegisterMouseMoveEventByCode takes trigger trig, boolean sync, code funcHandle returns nothing",
    "name": "DzTriggerRegisterMouseMoveEventByCode",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "sync",
      "documentation": ""
    }, {
      "type": "code",
      "name": "funcHandle",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzTriggerRegisterMouseMoveEventByCode(trig, sync, funcHandle)",
    "documentation": ""
  },
  "DzGetTriggerKey": {
    "original": " native DzGetTriggerKey takes nothing returns integer",
    "name": "DzGetTriggerKey",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "DzGetTriggerKey()",
    "documentation": "获取触发的按键码"
  },
  "DzGetWheelDelta": {
    "original": " native DzGetWheelDelta takes nothing returns integer",
    "name": "DzGetWheelDelta",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "DzGetWheelDelta()",
    "documentation": "获取滚轮变化值"
  },
  "DzIsKeyDown": {
    "original": " native DzIsKeyDown takes integer iKey returns boolean",
    "name": "DzIsKeyDown",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "iKey",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "DzIsKeyDown(iKey)",
    "documentation": "~iKey, 被按下"
  },
  "DzGetTriggerKeyPlayer": {
    "original": " native DzGetTriggerKeyPlayer takes nothing returns player",
    "name": "DzGetTriggerKeyPlayer",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "player",
    "insertText": "DzGetTriggerKeyPlayer()",
    "documentation": "触发键盘事件玩家[API]"
  },
  "DzGetWindowWidth": {
    "original": " native DzGetWindowWidth takes nothing returns integer",
    "name": "DzGetWindowWidth",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "DzGetWindowWidth()",
    "documentation": "获取War3窗口宽度"
  },
  "DzGetWindowHeight": {
    "original": " native DzGetWindowHeight takes nothing returns integer",
    "name": "DzGetWindowHeight",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "DzGetWindowHeight()",
    "documentation": "获取war3窗口高度"
  },
  "DzGetWindowX": {
    "original": " native DzGetWindowX takes nothing returns integer",
    "name": "DzGetWindowX",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "DzGetWindowX()",
    "documentation": "获取war3窗口X坐标"
  },
  "DzGetWindowY": {
    "original": " native DzGetWindowY takes nothing returns integer",
    "name": "DzGetWindowY",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "DzGetWindowY()",
    "documentation": "获取war3窗口Y坐标"
  },
  "DzTriggerRegisterWindowResizeEvent": {
    "original": " native DzTriggerRegisterWindowResizeEvent takes trigger trig, boolean sync, string func returns nothing",
    "name": "DzTriggerRegisterWindowResizeEvent",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "sync",
      "documentation": ""
    }, {
      "type": "string",
      "name": "func",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzTriggerRegisterWindowResizeEvent(trig, sync, func)",
    "documentation": "为 ,~trig, 注册窗口变化事件,执行方式 ,~sync,,执行函数:,~func"
  },
  "DzTriggerRegisterWindowResizeEventByCode": {
    "original": " native DzTriggerRegisterWindowResizeEventByCode takes trigger trig, boolean sync, code funcHandle returns nothing",
    "name": "DzTriggerRegisterWindowResizeEventByCode",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "sync",
      "documentation": ""
    }, {
      "type": "code",
      "name": "funcHandle",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzTriggerRegisterWindowResizeEventByCode(trig, sync, funcHandle)",
    "documentation": ""
  },
  "DzIsWindowActive": {
    "original": " native DzIsWindowActive takes nothing returns boolean",
    "name": "DzIsWindowActive",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "boolean",
    "insertText": "DzIsWindowActive()",
    "documentation": "窗口模式激活"
  },
  "DzDestructablePosition": {
    "original": " native DzDestructablePosition takes destructable d, real x, real y returns nothing",
    "name": "DzDestructablePosition",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "destructable",
      "name": "d",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzDestructablePosition(d, x, y)",
    "documentation": ""
  },
  "DzSetUnitPosition": {
    "original": " native DzSetUnitPosition takes unit whichUnit, real x, real y returns nothing",
    "name": "DzSetUnitPosition",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzSetUnitPosition(whichUnit, x, y)",
    "documentation": ""
  },
  "DzExecuteFunc": {
    "original": " native DzExecuteFunc takes string funcName returns nothing",
    "name": "DzExecuteFunc",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "funcName",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzExecuteFunc(funcName)",
    "documentation": ""
  },
  "DzGetUnitUnderMouse": {
    "original": " native DzGetUnitUnderMouse takes nothing returns unit",
    "name": "DzGetUnitUnderMouse",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "unit",
    "insertText": "DzGetUnitUnderMouse()",
    "documentation": ""
  },
  "DzSetUnitTexture": {
    "original": " native DzSetUnitTexture takes unit whichUnit, string path, integer texId returns nothing",
    "name": "DzSetUnitTexture",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "string",
      "name": "path",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "texId",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzSetUnitTexture(whichUnit, path, texId)",
    "documentation": ""
  },
  "DzSetMemory": {
    "original": " native DzSetMemory takes integer frame,real r returns nothing",
    "name": "DzSetMemory",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }, {
      "type": "real",
      "name": "r",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzSetMemory(frame, r)",
    "documentation": ""
  },
  "DzSetUnitID": {
    "original": " native DzSetUnitID takes unit whichUnit, integer id returns nothing",
    "name": "DzSetUnitID",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "id",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzSetUnitID(whichUnit, id)",
    "documentation": ""
  },
  "DzSetUnitModel": {
    "original": " native DzSetUnitModel takes unit whichUnit, string path returns nothing",
    "name": "DzSetUnitModel",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "unit",
      "name": "whichUnit",
      "documentation": ""
    }, {
      "type": "string",
      "name": "path",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzSetUnitModel(whichUnit, path)",
    "documentation": ""
  },
  "DzSetWar3MapMap": {
    "original": " native DzSetWar3MapMap takes string map returns nothing",
    "name": "DzSetWar3MapMap",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "map",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzSetWar3MapMap(map)",
    "documentation": "设置小地图地形背景为：,~map"
  },
  "DzTriggerRegisterSyncData": {
    "original": " native DzTriggerRegisterSyncData takes trigger trig, string prefix, boolean server returns nothing",
    "name": "DzTriggerRegisterSyncData",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "trigger",
      "name": "trig",
      "documentation": ""
    }, {
      "type": "string",
      "name": "prefix",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "server",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzTriggerRegisterSyncData(trig, prefix, server)",
    "documentation": ""
  },
  "DzSyncData": {
    "original": " native DzSyncData takes string prefix, string data returns nothing",
    "name": "DzSyncData",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "prefix",
      "documentation": ""
    }, {
      "type": "string",
      "name": "data",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzSyncData(prefix, data)",
    "documentation": ""
  },
  "DzGetTriggerSyncData": {
    "original": " native DzGetTriggerSyncData takes nothing returns string",
    "name": "DzGetTriggerSyncData",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "string",
    "insertText": "DzGetTriggerSyncData()",
    "documentation": ""
  },
  "DzGetTriggerSyncPlayer": {
    "original": " native DzGetTriggerSyncPlayer takes nothing returns player",
    "name": "DzGetTriggerSyncPlayer",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "player",
    "insertText": "DzGetTriggerSyncPlayer()",
    "documentation": "获取同步数据的玩家"
  },
  "DzFrameHideInterface": {
    "original": " native DzFrameHideInterface takes nothing returns nothing",
    "name": "DzFrameHideInterface",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": null,
    "insertText": "DzFrameHideInterface()",
    "documentation": "隐藏界面元素"
  },
  "DzFrameEditBlackBorders": {
    "original": " native DzFrameEditBlackBorders takes real upperHeight, real bottomHeight returns nothing",
    "name": "DzFrameEditBlackBorders",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "upperHeight",
      "documentation": ""
    }, {
      "type": "real",
      "name": "bottomHeight",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzFrameEditBlackBorders(upperHeight, bottomHeight)",
    "documentation": "修改游戏黑边范围（,~upperHeight,,,~bottomHeight,）"
  },
  "DzFrameGetPortrait": {
    "original": " native DzFrameGetPortrait takes nothing returns integer",
    "name": "DzFrameGetPortrait",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "DzFrameGetPortrait()",
    "documentation": "获取英雄头像Frame"
  },
  "DzFrameGetMinimap": {
    "original": " native DzFrameGetMinimap takes nothing returns integer",
    "name": "DzFrameGetMinimap",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "DzFrameGetMinimap()",
    "documentation": "获取小地图Frame"
  },
  "DzFrameGetCommandBarButton": {
    "original": " native DzFrameGetCommandBarButton takes integer row, integer column returns integer",
    "name": "DzFrameGetCommandBarButton",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "row",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "column",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "DzFrameGetCommandBarButton(row, column)",
    "documentation": "获取位置为第 ,~row, 排,和第 ,~column, 列的技能Frame"
  },
  "DzFrameGetHeroBarButton": {
    "original": " native DzFrameGetHeroBarButton takes integer buttonId returns integer",
    "name": "DzFrameGetHeroBarButton",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "buttonId",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "DzFrameGetHeroBarButton(buttonId)",
    "documentation": "获取左上角第 ,~buttonId, 个英雄图标"
  },
  "DzFrameGetHeroHPBar": {
    "original": " native DzFrameGetHeroHPBar takes integer buttonId returns integer",
    "name": "DzFrameGetHeroHPBar",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "buttonId",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "DzFrameGetHeroHPBar(buttonId)",
    "documentation": "获取第 ,~buttonId, 个英雄的血条"
  },
  "DzFrameGetHeroManaBar": {
    "original": " native DzFrameGetHeroManaBar takes integer buttonId returns integer",
    "name": "DzFrameGetHeroManaBar",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "buttonId",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "DzFrameGetHeroManaBar(buttonId)",
    "documentation": "获取第 ,~buttonId, 个英雄的蓝条"
  },
  "DzFrameGetItemBarButton": {
    "original": " native DzFrameGetItemBarButton takes integer buttonId returns integer",
    "name": "DzFrameGetItemBarButton",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "buttonId",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "DzFrameGetItemBarButton(buttonId)",
    "documentation": "获取第 ,~buttonId, 个物品栏按钮"
  },
  "DzFrameGetMinimapButton": {
    "original": " native DzFrameGetMinimapButton takes integer buttonId returns integer",
    "name": "DzFrameGetMinimapButton",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "buttonId",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "DzFrameGetMinimapButton(buttonId)",
    "documentation": "获取小地图第 ,~buttonId, 个按钮"
  },
  "DzFrameGetUpperButtonBarButton": {
    "original": " native DzFrameGetUpperButtonBarButton takes integer buttonId returns integer",
    "name": "DzFrameGetUpperButtonBarButton",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "buttonId",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "DzFrameGetUpperButtonBarButton(buttonId)",
    "documentation": "获取左上角第 ,~buttonId, 个菜单按钮"
  },
  "DzFrameGetTooltip": {
    "original": " native DzFrameGetTooltip takes nothing returns integer",
    "name": "DzFrameGetTooltip",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "DzFrameGetTooltip()",
    "documentation": "鼠标提示框"
  },
  "DzFrameGetChatMessage": {
    "original": " native DzFrameGetChatMessage takes nothing returns integer",
    "name": "DzFrameGetChatMessage",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "DzFrameGetChatMessage()",
    "documentation": "聊天信息框"
  },
  "DzFrameGetUnitMessage": {
    "original": " native DzFrameGetUnitMessage takes nothing returns integer",
    "name": "DzFrameGetUnitMessage",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "DzFrameGetUnitMessage()",
    "documentation": "单位信息框"
  },
  "DzFrameGetTopMessage": {
    "original": " native DzFrameGetTopMessage takes nothing returns integer",
    "name": "DzFrameGetTopMessage",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "DzFrameGetTopMessage()",
    "documentation": "提示信息框"
  },
  "DzGetColor": {
    "original": " native DzGetColor takes integer r, integer g, integer b, integer a returns integer",
    "name": "DzGetColor",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "r",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "g",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "b",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "a",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "DzGetColor(r, g, b, a)",
    "documentation": "将RGB(Alph:,~r,,R:,~g,,G:,~b,,B:,~a,)转换为色值"
  },
  "DzFrameSetUpdateCallback": {
    "original": " native DzFrameSetUpdateCallback takes string func returns nothing",
    "name": "DzFrameSetUpdateCallback",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "func",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzFrameSetUpdateCallback(func)",
    "documentation": ""
  },
  "DzFrameSetUpdateCallbackByCode": {
    "original": " native DzFrameSetUpdateCallbackByCode takes code funcHandle returns nothing",
    "name": "DzFrameSetUpdateCallbackByCode",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "code",
      "name": "funcHandle",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzFrameSetUpdateCallbackByCode(funcHandle)",
    "documentation": ""
  },
  "DzFrameShow": {
    "original": " native DzFrameShow takes integer frame, boolean enable returns nothing",
    "name": "DzFrameShow",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "enable",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzFrameShow(frame, enable)",
    "documentation": "设置 ,~frame, ,~enable"
  },
  "DzCreateFrame": {
    "original": " native DzCreateFrame takes string frame, integer parent, integer id returns integer",
    "name": "DzCreateFrame",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "frame",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parent",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "id",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "DzCreateFrame(frame, parent, id)",
    "documentation": "创建Frame:模板名“,~frame,”,在 ,~parent, 里,并设置id为 ,~id"
  },
  "DzCreateSimpleFrame": {
    "original": " native DzCreateSimpleFrame takes string frame, integer parent, integer id returns integer",
    "name": "DzCreateSimpleFrame",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "frame",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parent",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "id",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "DzCreateSimpleFrame(frame, parent, id)",
    "documentation": "创建SimpleFrame:模板名“,~frame,”,在 ,~parent, 里,并设置id为 ,~id"
  },
  "DzDestroyFrame": {
    "original": " native DzDestroyFrame takes integer frame returns nothing",
    "name": "DzDestroyFrame",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzDestroyFrame(frame)",
    "documentation": "删除 ,~frame"
  },
  "DzLoadToc": {
    "original": " native DzLoadToc takes string fileName returns nothing",
    "name": "DzLoadToc",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "fileName",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzLoadToc(fileName)",
    "documentation": "加载:,~fileName"
  },
  "DzFrameSetPoint": {
    "original": " native DzFrameSetPoint takes integer frame, integer point, integer relativeFrame, integer relativePoint, real x, real y returns nothing",
    "name": "DzFrameSetPoint",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "point",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "relativeFrame",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "relativePoint",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzFrameSetPoint(frame, point, relativeFrame, relativePoint, x, y)",
    "documentation": "设置 ,~frame, 的 ,~point, 跟 ,~relativeFrame, 的 ,~relativePoint, 对齐,然后平移(,~x,,,~y,)"
  },
  "DzFrameSetAbsolutePoint": {
    "original": " native DzFrameSetAbsolutePoint takes integer frame, integer point, real x, real y returns nothing",
    "name": "DzFrameSetAbsolutePoint",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "point",
      "documentation": ""
    }, {
      "type": "real",
      "name": "x",
      "documentation": ""
    }, {
      "type": "real",
      "name": "y",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzFrameSetAbsolutePoint(frame, point, x, y)",
    "documentation": "设置 ,~frame, 的 ,~point, 在坐标(,~x,,,~y,)点"
  },
  "DzFrameClearAllPoints": {
    "original": " native DzFrameClearAllPoints takes integer frame returns nothing",
    "name": "DzFrameClearAllPoints",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzFrameClearAllPoints(frame)",
    "documentation": "清空 ,~frame, 的锚点"
  },
  "DzFrameSetEnable": {
    "original": " native DzFrameSetEnable takes integer name, boolean enable returns nothing",
    "name": "DzFrameSetEnable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "name",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "enable",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzFrameSetEnable(name, enable)",
    "documentation": "设置 ,~name, ,~enable"
  },
  "DzFrameSetScript": {
    "original": " native DzFrameSetScript takes integer frame, integer eventId, string func, boolean sync returns nothing",
    "name": "DzFrameSetScript",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "eventId",
      "documentation": ""
    }, {
      "type": "string",
      "name": "func",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "sync",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzFrameSetScript(frame, eventId, func, sync)",
    "documentation": "为 ,~frame, 注册 ,~eventId, 事件,并执行函数 ,~func,,触发方式为:,~sync"
  },
  "DzFrameSetScriptByCode": {
    "original": " native DzFrameSetScriptByCode takes integer frame, integer eventId, code funcHandle, boolean sync returns nothing",
    "name": "DzFrameSetScriptByCode",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "eventId",
      "documentation": ""
    }, {
      "type": "code",
      "name": "funcHandle",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "sync",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzFrameSetScriptByCode(frame, eventId, funcHandle, sync)",
    "documentation": "为 ,~frame, 添加 ,~eventId, 事件,触发后执行函数 ,~funcHandle,,并设置事件 ,~sync"
  },
  "DzGetTriggerUIEventPlayer": {
    "original": " native DzGetTriggerUIEventPlayer takes nothing returns player",
    "name": "DzGetTriggerUIEventPlayer",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "player",
    "insertText": "DzGetTriggerUIEventPlayer()",
    "documentation": "获取触发ui的玩家"
  },
  "DzGetTriggerUIEventFrame": {
    "original": " native DzGetTriggerUIEventFrame takes nothing returns integer",
    "name": "DzGetTriggerUIEventFrame",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "DzGetTriggerUIEventFrame()",
    "documentation": "获取触发的Frame"
  },
  "DzFrameFindByName": {
    "original": " native DzFrameFindByName takes string name, integer id returns integer",
    "name": "DzFrameFindByName",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "name",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "id",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "DzFrameFindByName(name, id)",
    "documentation": "查找名字为 ,~name, 里,id为 ,~id, 的子Frame"
  },
  "DzSimpleFrameFindByName": {
    "original": " native DzSimpleFrameFindByName takes string name, integer id returns integer",
    "name": "DzSimpleFrameFindByName",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "name",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "id",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "DzSimpleFrameFindByName(name, id)",
    "documentation": "查找名称为 ,~name, 且id为 ,~id, 的Frame"
  },
  "DzSimpleFontStringFindByName": {
    "original": " native DzSimpleFontStringFindByName takes string name, integer id returns integer",
    "name": "DzSimpleFontStringFindByName",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "name",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "id",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "DzSimpleFontStringFindByName(name, id)",
    "documentation": "查找名字为 ,~name, 的SimpleFontFrame，且id为 ,~id"
  },
  "DzSimpleTextureFindByName": {
    "original": " native DzSimpleTextureFindByName takes string name, integer id returns integer",
    "name": "DzSimpleTextureFindByName",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "name",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "id",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "DzSimpleTextureFindByName(name, id)",
    "documentation": "查找名称为 ,~name, 的SimpleTextureFrame，且对应id为 ,~id"
  },
  "DzGetGameUI": {
    "original": " native DzGetGameUI takes nothing returns integer",
    "name": "DzGetGameUI",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "DzGetGameUI()",
    "documentation": "获取War3屏幕"
  },
  "DzClickFrame": {
    "original": " native DzClickFrame takes integer frame returns nothing",
    "name": "DzClickFrame",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzClickFrame(frame)",
    "documentation": "点击Frame ,~frame"
  },
  "DzSetCustomFovFix": {
    "original": " native DzSetCustomFovFix takes real value returns nothing",
    "name": "DzSetCustomFovFix",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "real",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzSetCustomFovFix(value)",
    "documentation": "设置屏幕比例为 ,~value"
  },
  "DzEnableWideScreen": {
    "original": " native DzEnableWideScreen takes boolean enable returns nothing",
    "name": "DzEnableWideScreen",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "enable",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzEnableWideScreen(enable)",
    "documentation": "~enable, 宽屏模式"
  },
  "DzFrameSetText": {
    "original": " native DzFrameSetText takes integer frame, string text returns nothing",
    "name": "DzFrameSetText",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }, {
      "type": "string",
      "name": "text",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzFrameSetText(frame, text)",
    "documentation": "设置 ,~frame, 里的文本为:,~text"
  },
  "DzFrameGetText": {
    "original": " native DzFrameGetText takes integer frame returns string",
    "name": "DzFrameGetText",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "DzFrameGetText(frame)",
    "documentation": "获取 ,~frame, 文本"
  },
  "DzFrameSetTextSizeLimit": {
    "original": " native DzFrameSetTextSizeLimit takes integer frame, integer size returns nothing",
    "name": "DzFrameSetTextSizeLimit",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "size",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzFrameSetTextSizeLimit(frame, size)",
    "documentation": "设置 ,~frame, 字数限制为 ,~size, 个"
  },
  "DzFrameGetTextSizeLimit": {
    "original": " native DzFrameGetTextSizeLimit takes integer frame returns integer",
    "name": "DzFrameGetTextSizeLimit",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "DzFrameGetTextSizeLimit(frame)",
    "documentation": "获取 ,~frame, 里字数限制数量"
  },
  "DzFrameSetTextColor": {
    "original": " native DzFrameSetTextColor takes integer frame, integer color returns nothing",
    "name": "DzFrameSetTextColor",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "color",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzFrameSetTextColor(frame, color)",
    "documentation": "设置 ,~frame, 的文字颜色为 ,~color"
  },
  "DzGetMouseFocus": {
    "original": " native DzGetMouseFocus takes nothing returns integer",
    "name": "DzGetMouseFocus",
    "isConstant": false,
    "isNative": true,
    "args": null,
    "returnType": "integer",
    "insertText": "DzGetMouseFocus()",
    "documentation": "获取鼠标所在位置的ui控件指针"
  },
  "DzFrameSetAllPoints": {
    "original": " native DzFrameSetAllPoints takes integer frame, integer relativeFrame returns boolean",
    "name": "DzFrameSetAllPoints",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "relativeFrame",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "DzFrameSetAllPoints(frame, relativeFrame)",
    "documentation": "设置 ,~frame, 所有锚点到 ,~relativeFrame, 上"
  },
  "DzFrameSetFocus": {
    "original": " native DzFrameSetFocus takes integer frame, boolean enable returns boolean",
    "name": "DzFrameSetFocus",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "enable",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "DzFrameSetFocus(frame, enable)",
    "documentation": "设置 ,~frame, 的焦点,~enable"
  },
  "DzFrameSetModel": {
    "original": " native DzFrameSetModel takes integer frame, string modelFile, integer modelType, integer flag returns nothing",
    "name": "DzFrameSetModel",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }, {
      "type": "string",
      "name": "modelFile",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "modelType",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzFrameSetModel(frame, modelFile, modelType, flag)",
    "documentation": "~frame, 的模型文件为 ,~modelFile, 模型类型: ,~modelType, Flag:,~flag"
  },
  "DzFrameGetEnable": {
    "original": " native DzFrameGetEnable takes integer frame returns boolean",
    "name": "DzFrameGetEnable",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "DzFrameGetEnable(frame)",
    "documentation": "~frame, 上启用状态"
  },
  "DzFrameSetAlpha": {
    "original": " native DzFrameSetAlpha takes integer frame, integer alpha returns nothing",
    "name": "DzFrameSetAlpha",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "alpha",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzFrameSetAlpha(frame, alpha)",
    "documentation": "设置 ,~frame, 的透明度为 ,~alpha"
  },
  "DzFrameGetAlpha": {
    "original": " native DzFrameGetAlpha takes integer frame returns integer",
    "name": "DzFrameGetAlpha",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "DzFrameGetAlpha(frame)",
    "documentation": "获取 ,~frame, 透明度"
  },
  "DzFrameSetAnimate": {
    "original": " native DzFrameSetAnimate takes integer frame, integer animId, boolean autocast returns nothing",
    "name": "DzFrameSetAnimate",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "animId",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "autocast",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzFrameSetAnimate(frame, animId, autocast)",
    "documentation": "设置 ,~frame, 播放序号,~animId,  的动画  自动播放: ,~autocast"
  },
  "DzFrameSetAnimateOffset": {
    "original": " native DzFrameSetAnimateOffset takes integer frame, real offset returns nothing",
    "name": "DzFrameSetAnimateOffset",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }, {
      "type": "real",
      "name": "offset",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzFrameSetAnimateOffset(frame, offset)",
    "documentation": "设置 ,~frame, 的动画进度为:,~offset"
  },
  "DzFrameSetTexture": {
    "original": " native DzFrameSetTexture takes integer frame, string texture, integer flag returns nothing",
    "name": "DzFrameSetTexture",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }, {
      "type": "string",
      "name": "texture",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzFrameSetTexture(frame, texture, flag)",
    "documentation": "设置 ,~frame, 的图片为:,~texture,,填充方式为:,~flag"
  },
  "DzFrameSetScale": {
    "original": " native DzFrameSetScale takes integer frame, real scale returns nothing",
    "name": "DzFrameSetScale",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }, {
      "type": "real",
      "name": "scale",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzFrameSetScale(frame, scale)",
    "documentation": "设置 ,~frame, 的缩放 ,~scale"
  },
  "DzFrameSetTooltip": {
    "original": " native DzFrameSetTooltip takes integer frame, integer tooltip returns nothing",
    "name": "DzFrameSetTooltip",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "tooltip",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzFrameSetTooltip(frame, tooltip)",
    "documentation": "设置 ,~frame, 的提示Frame为:,~tooltip"
  },
  "DzFrameCageMouse": {
    "original": " native DzFrameCageMouse takes integer frame, boolean enable returns nothing",
    "name": "DzFrameCageMouse",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "enable",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzFrameCageMouse(frame, enable)",
    "documentation": "~frame, ,~enable, 限制鼠标在内"
  },
  "DzFrameGetValue": {
    "original": " native DzFrameGetValue takes integer frame returns real",
    "name": "DzFrameGetValue",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "DzFrameGetValue(frame)",
    "documentation": "获取 ,~frame, 当前值"
  },
  "DzFrameSetMinMaxValue": {
    "original": " native DzFrameSetMinMaxValue takes integer frame, real minValue, real maxValue returns nothing",
    "name": "DzFrameSetMinMaxValue",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }, {
      "type": "real",
      "name": "minValue",
      "documentation": ""
    }, {
      "type": "real",
      "name": "maxValue",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzFrameSetMinMaxValue(frame, minValue, maxValue)",
    "documentation": "设置 ,~frame, 最小值：,~minValue, 最大值：,~maxValue"
  },
  "DzFrameSetStepValue": {
    "original": " native DzFrameSetStepValue takes integer frame, real step returns nothing",
    "name": "DzFrameSetStepValue",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }, {
      "type": "real",
      "name": "step",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzFrameSetStepValue(frame, step)",
    "documentation": "设置 ,~frame, Step值为：,~step"
  },
  "DzFrameSetValue": {
    "original": " native DzFrameSetValue takes integer frame, real value returns nothing",
    "name": "DzFrameSetValue",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }, {
      "type": "real",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzFrameSetValue(frame, value)",
    "documentation": "设置 ,~frame, 当前值为 ,~value"
  },
  "DzFrameSetSize": {
    "original": " native DzFrameSetSize takes integer frame, real w, real h returns nothing",
    "name": "DzFrameSetSize",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }, {
      "type": "real",
      "name": "w",
      "documentation": ""
    }, {
      "type": "real",
      "name": "h",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzFrameSetSize(frame, w, h)",
    "documentation": "设置 ,~frame, 的大小,宽:,~w, 高:,~h"
  },
  "DzCreateFrameByTagName": {
    "original": " native DzCreateFrameByTagName takes string frameType, string name, integer parent, string template, integer id returns integer",
    "name": "DzCreateFrameByTagName",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "string",
      "name": "frameType",
      "documentation": ""
    }, {
      "type": "string",
      "name": "name",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parent",
      "documentation": ""
    }, {
      "type": "string",
      "name": "template",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "id",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "DzCreateFrameByTagName(frameType, name, parent, template, id)",
    "documentation": "Frame类型：,~frameType, Frame名：,~name, 父Frame：,~parent, 目标名称：,~template, 设置id为：,~id"
  },
  "DzFrameSetVertexColor": {
    "original": " native DzFrameSetVertexColor takes integer frame, integer color returns nothing",
    "name": "DzFrameSetVertexColor",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "color",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzFrameSetVertexColor(frame, color)",
    "documentation": "设置 ,~frame, 的颜色为 ,~color"
  },
  "DzOriginalUIAutoResetPoint": {
    "original": " native DzOriginalUIAutoResetPoint takes boolean enable returns nothing",
    "name": "DzOriginalUIAutoResetPoint",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "boolean",
      "name": "enable",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzOriginalUIAutoResetPoint(enable)",
    "documentation": "设置原生UI ,~enable, 会自动重设位置大小"
  },
  "DzFrameSetPriority": {
    "original": " native DzFrameSetPriority takes integer frame, integer priority returns nothing",
    "name": "DzFrameSetPriority",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "priority",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzFrameSetPriority(frame, priority)",
    "documentation": "设置 ,~frame, 的优先级为 ,~priority"
  },
  "DzFrameSetParent": {
    "original": " native DzFrameSetParent takes integer frame, integer parent returns nothing",
    "name": "DzFrameSetParent",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "parent",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzFrameSetParent(frame, parent)",
    "documentation": "设置 ,~frame, 在 ,~parent, 之上"
  },
  "DzFrameSetFont": {
    "original": " native DzFrameSetFont takes integer frame, string fileName, real height, integer flag returns nothing",
    "name": "DzFrameSetFont",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }, {
      "type": "string",
      "name": "fileName",
      "documentation": ""
    }, {
      "type": "real",
      "name": "height",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "flag",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzFrameSetFont(frame, fileName, height, flag)",
    "documentation": ""
  },
  "DzFrameGetHeight": {
    "original": " native DzFrameGetHeight takes integer frame returns real",
    "name": "DzFrameGetHeight",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "DzFrameGetHeight(frame)",
    "documentation": "获取 ,~, 的高度"
  },
  "DzFrameSetTextAlignment": {
    "original": " native DzFrameSetTextAlignment takes integer frame, integer align returns nothing",
    "name": "DzFrameSetTextAlignment",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "align",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzFrameSetTextAlignment(frame, align)",
    "documentation": "设置 ,~frame, 的对齐方式为:,~align"
  },
  "DzFrameGetParent": {
    "original": " native DzFrameGetParent takes integer frame returns integer",
    "name": "DzFrameGetParent",
    "isConstant": false,
    "isNative": true,
    "args": [{
      "type": "integer",
      "name": "frame",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "DzFrameGetParent(frame)",
    "documentation": "获取 ,~frame, 的父窗口"
  },
  "GetPlayerServerValueSuccess": {
    "original": " function GetPlayerServerValueSuccess takes player whichPlayer returns boolean",
    "name": "GetPlayerServerValueSuccess",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "GetPlayerServerValueSuccess(whichPlayer)",
    "documentation": "获取,~whichPlayer, 服务器存档成功."
  },
  "DzAPI_Map_StoreInteger": {
    "original": " function DzAPI_Map_StoreInteger takes player whichPlayer, string key, integer value returns nothing",
    "name": "DzAPI_Map_StoreInteger",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzAPI_Map_StoreInteger(whichPlayer, key, value)",
    "documentation": "服务器存档:存储 ,~whichPlayer, 数据,名称：,~key,,值:,~value"
  },
  "DzAPI_Map_GetStoredInteger": {
    "original": " function DzAPI_Map_GetStoredInteger takes player whichPlayer, string key returns integer",
    "name": "DzAPI_Map_GetStoredInteger",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "DzAPI_Map_GetStoredInteger(whichPlayer, key)",
    "documentation": "获取,~whichPlayer, 数据名称:,~key, 里存储的整数."
  },
  "DzAPI_Map_StoreReal": {
    "original": " function DzAPI_Map_StoreReal takes player whichPlayer, string key, real value returns nothing",
    "name": "DzAPI_Map_StoreReal",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "real",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzAPI_Map_StoreReal(whichPlayer, key, value)",
    "documentation": "服务器存档:存储 ,~whichPlayer, 数据,名称：,~key,,值:,~value"
  },
  "DzAPI_Map_GetStoredReal": {
    "original": " function DzAPI_Map_GetStoredReal takes player whichPlayer, string key returns real",
    "name": "DzAPI_Map_GetStoredReal",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": "real",
    "insertText": "DzAPI_Map_GetStoredReal(whichPlayer, key)",
    "documentation": "获取 ,~whichPlayer, 数据名称:,~key, 里存储的实数"
  },
  "DzAPI_Map_StoreBoolean": {
    "original": " function DzAPI_Map_StoreBoolean takes player whichPlayer, string key, boolean value returns nothing",
    "name": "DzAPI_Map_StoreBoolean",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzAPI_Map_StoreBoolean(whichPlayer, key, value)",
    "documentation": "服务器存档:存储 ,~whichPlayer, 数据,名称:,~key,,值:,~value"
  },
  "DzAPI_Map_GetStoredBoolean": {
    "original": " function DzAPI_Map_GetStoredBoolean takes player whichPlayer, string key returns boolean",
    "name": "DzAPI_Map_GetStoredBoolean",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": "boolean",
    "insertText": "DzAPI_Map_GetStoredBoolean(whichPlayer, key)",
    "documentation": "获取 ,~whichPlayer, 数据名称:,~key, 里存储的布尔值"
  },
  "DzAPI_Map_StoreString": {
    "original": " function DzAPI_Map_StoreString takes player whichPlayer, string key, string value returns nothing",
    "name": "DzAPI_Map_StoreString",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "string",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzAPI_Map_StoreString(whichPlayer, key, value)",
    "documentation": "服务器存档:存储 ,~whichPlayer, 数据,名称:,~key,,值:,~value"
  },
  "DzAPI_Map_GetStoredString": {
    "original": " function DzAPI_Map_GetStoredString takes player whichPlayer, string key returns string",
    "name": "DzAPI_Map_GetStoredString",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": "string",
    "insertText": "DzAPI_Map_GetStoredString(whichPlayer, key)",
    "documentation": "获取 ,~whichPlayer, 数据名称:,~key, 里存储的字符串"
  },
  "DzAPI_Map_GetStoredUnitType": {
    "original": " function DzAPI_Map_GetStoredUnitType takes player whichPlayer, string key returns integer",
    "name": "DzAPI_Map_GetStoredUnitType",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "DzAPI_Map_GetStoredUnitType(whichPlayer, key)",
    "documentation": "获取 ,~whichPlayer, 数据名称:,~key, 里存储的单位类型"
  },
  "DzAPI_Map_GetStoredAbilityId": {
    "original": " function DzAPI_Map_GetStoredAbilityId takes player whichPlayer, string key returns integer",
    "name": "DzAPI_Map_GetStoredAbilityId",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": "integer",
    "insertText": "DzAPI_Map_GetStoredAbilityId(whichPlayer, key)",
    "documentation": "获取 ,~whichPlayer, 数据名称:,~key, 里存储的技能类型"
  },
  "DzAPI_Map_FlushStoredMission": {
    "original": " function DzAPI_Map_FlushStoredMission takes player whichPlayer, string key returns nothing",
    "name": "DzAPI_Map_FlushStoredMission",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzAPI_Map_FlushStoredMission(whichPlayer, key)",
    "documentation": "服务器数据：清理,~whichPlayer,数据,名称： ,~key"
  },
  "DzAPI_Map_Ladder_SubmitIntegerData": {
    "original": " function DzAPI_Map_Ladder_SubmitIntegerData takes player whichPlayer, string key, integer value returns nothing",
    "name": "DzAPI_Map_Ladder_SubmitIntegerData",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzAPI_Map_Ladder_SubmitIntegerData(whichPlayer, key, value)",
    "documentation": "提交 ,~whichPlayer, 天梯项目:,~key, 的值为:,~value"
  },
  "DzAPI_Map_Stat_SubmitUnitIdData": {
    "original": " function DzAPI_Map_Stat_SubmitUnitIdData takes player whichPlayer, string key,integer value returns nothing",
    "name": "DzAPI_Map_Stat_SubmitUnitIdData",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzAPI_Map_Stat_SubmitUnitIdData(whichPlayer, key, value)",
    "documentation": "提高 ,~whichPlayer, 天梯项目:,~key, 的值为:,~value"
  },
  "DzAPI_Map_Stat_SubmitUnitData": {
    "original": " function DzAPI_Map_Stat_SubmitUnitData takes player whichPlayer, string key,unit value returns nothing",
    "name": "DzAPI_Map_Stat_SubmitUnitData",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "unit",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzAPI_Map_Stat_SubmitUnitData(whichPlayer, key, value)",
    "documentation": ""
  },
  "DzAPI_Map_Ladder_SubmitAblityIdData": {
    "original": " function DzAPI_Map_Ladder_SubmitAblityIdData takes player whichPlayer, string key, integer value returns nothing",
    "name": "DzAPI_Map_Ladder_SubmitAblityIdData",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzAPI_Map_Ladder_SubmitAblityIdData(whichPlayer, key, value)",
    "documentation": "提交 ,~whichPlayer, 天梯项目:,~key, 的值为:,~value"
  },
  "DzAPI_Map_Ladder_SubmitItemIdData": {
    "original": " function DzAPI_Map_Ladder_SubmitItemIdData takes player whichPlayer, string key, integer value returns nothing",
    "name": "DzAPI_Map_Ladder_SubmitItemIdData",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzAPI_Map_Ladder_SubmitItemIdData(whichPlayer, key, value)",
    "documentation": "提交 ,~whichPlayer, 天梯项目:,~key, 的值为:,~value"
  },
  "DzAPI_Map_Ladder_SubmitItemData": {
    "original": " function DzAPI_Map_Ladder_SubmitItemData takes player whichPlayer, string key, item value returns nothing",
    "name": "DzAPI_Map_Ladder_SubmitItemData",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "item",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzAPI_Map_Ladder_SubmitItemData(whichPlayer, key, value)",
    "documentation": ""
  },
  "DzAPI_Map_Ladder_SubmitBooleanData": {
    "original": " function DzAPI_Map_Ladder_SubmitBooleanData takes player whichPlayer, string key,boolean value returns nothing",
    "name": "DzAPI_Map_Ladder_SubmitBooleanData",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "key",
      "documentation": ""
    }, {
      "type": "boolean",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzAPI_Map_Ladder_SubmitBooleanData(whichPlayer, key, value)",
    "documentation": "提交 ,~whichPlayer, 天梯项目:,~key, 的目的  ,~value"
  },
  "DzAPI_Map_Ladder_SubmitTitle": {
    "original": " function DzAPI_Map_Ladder_SubmitTitle takes player whichPlayer, string value returns nothing",
    "name": "DzAPI_Map_Ladder_SubmitTitle",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "string",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzAPI_Map_Ladder_SubmitTitle(whichPlayer, value)",
    "documentation": "提交 ,~whichPlayer, 获得称号:,~key"
  },
  "DzAPI_Map_Ladder_SubmitPlayerRank": {
    "original": " function DzAPI_Map_Ladder_SubmitPlayerRank takes player whichPlayer, integer value returns nothing",
    "name": "DzAPI_Map_Ladder_SubmitPlayerRank",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzAPI_Map_Ladder_SubmitPlayerRank(whichPlayer, value)",
    "documentation": "设置 ,~whichPlayer, 的游戏排名为:,~value"
  },
  "DzAPI_Map_Ladder_SubmitPlayerExtraExp": {
    "original": " function DzAPI_Map_Ladder_SubmitPlayerExtraExp takes player whichPlayer, integer value returns nothing",
    "name": "DzAPI_Map_Ladder_SubmitPlayerExtraExp",
    "isConstant": false,
    "isNative": false,
    "args": [{
      "type": "player",
      "name": "whichPlayer",
      "documentation": ""
    }, {
      "type": "integer",
      "name": "value",
      "documentation": ""
    }],
    "returnType": null,
    "insertText": "DzAPI_Map_Ladder_SubmitPlayerExtraExp(whichPlayer, value)",
    "documentation": "设置 ,~whichPlayer, 的额外分为 ,~value"
  }
}