"themes": [
      {
        "label": "jass",
        "path": "./src/settings/jass-color-theme.json"
      }
    ],

    aaaaaaaaaaaaa,dd   //         " //aaaaaaaaaaaaa  "
    // 
vscode.languages.registerSignatureHelpProvider(language, {
    /**
     * 
     * @param {vscode.TextDocument} document 
     * @param {vscode.Position} position 
     * @param {vscode.CancellationToken} token 
     * @param {vscode.SignatureHelpContext} context 
     * @returns {vscode.ProviderResult<vscode.SignatureHelp>}
     */
    provideSignatureHelp(document, position, token, context) {
      let sh = new vscode.SignatureHelp()
      sh.signatures = [new vscode.SignatureInformation("degrees", "hahahahaha")]
      return sh
    }
  }, "(", '  ,')


// format
for (let i = 0; i < words.length; i++) {
    let word = words[i];
    let p1 = words[i - 1]
    let p2 = words[i - 2]
    let n1 = words[i + 1]
    let n2 = words[i + 2]
    let length = word.length
    // 右边只能有一个空格
    if (word == "function" ||
      word == "takes" ||
      word == "returns" ||
      word == "native" ||
      word == "constant" ||
      word == "return" ||
      word == "if" ||
      word == "elseif" ||
      word == "exitwhen" ||
      word == "local" ||
      word == "call" ||
      word == "set" ||
      word == "type" ||
      word == "extends" ||
      word == "not" ||
      word == "and" ||
      word == "or" ||
      word == "," ||
      (word == "=" && n1 != "=") ||
      (word == ">" && n1 != "=") ||
      (word == "<" && n1 != "=") ||
      word == "+" ||
      (word == "-" && isSpace(n1)) ||
      word == "*" ||
      word == "/" ||
      word == "%" ||
      word == "mod") {
      if (isSpace(n1)) {
        if (n1.length != 1) {
          let range = new vscode.Range(line, colume + length, line, colume + length + n1.length)
          edits.push(edit.replace(range, " "))
        }
      } else {
        edits.push(edit.insert(new vscode.Position(line, colume + length), " "))
      }
    }
    // 左边只能有一个空格
    if (word == "or" ||
      word == "and" ||
      word == "not" ||
      (word == "=" && p1 != "=" && p1 != "!" && p1 != "<" && p1 != ">") ||
      (word == "!" && n1 == "=") ||
      word == ">" ||
      word == "<" ||
      word == "extends" ||
      word == "takes" ||
      word == "returns" ||
      word == "then" ||
      word == "+" ||
      (word == "-" && isSpace(n1)) ||
      word == "*" ||
      word == "/" ||
      word == "%" ||
      word == "mod") {
      if (isSpace(p1)) {
        if (p1.length != 1) {
          let range = new vscode.Range(line, colume - p1.length, line, colume)
          edits.push(edit.replace(range, " "))
        }
      } else {
        edits.push(edit.insert(new vscode.Position(line, colume), " "))
      }
    }
    // 右边不能是空格
    if (
      word == "(" ||
      word == "[") {
      if (isSpace(n1)) {
        let range = new vscode.Range(line, colume + length, line, colume + length + n1.length)
        edits.push(edit.delete(range))
      }
    }
    // 左边不能是空格
    if (
      word == ")" ||
      word == "]") {
      if (isSpace(p1)) {
        let range = new vscode.Range(line, colume - p1.length, line, colume)
        edits.push(edit.delete(range))
      }
    }
    // 右边必须是换行
    /*
     if (word == "globals" ||
     word == "endglobals" ||
     word == "endfunction" ||
     word == "then" ||
     word == "loop") {
     if (!isNewLine(n1)) {
     if (isSpace(n1) && !isNewLine(n2)) {
     edits.push(edit.insert(new vscode.Position(line, colume + length), "\n"))
     }
     }
     }
     // 左边必须是换行
     if (word == "globals" ||
     word == "endglobals" ||
     word == "endfunction") {
     if (!isNewLine(p1)) {
     if (isSpace(p1) && !isNewLine(p2)) {
     edits.push(edit.insert(new vscode.Position(line, colume), "\n"))
     }
     }
     }*/
    colume += length
    if (word == "\n") {
      line++;
      colume = 0
    }
  }

  [a-zA-Z]\\w*\\s*(?==)|[a-zA-Z]\\w*\\s*(?=\\+)|[a-zA-Z]\\w*\\s*(?=-)|[a-zA-Z]\\w*\\s*(?=\\*)|[a-zA-Z]\\w*\\s*(?=/)|[a-zA-Z]\\w*\\s*(?=%)|[a-zA-Z]\\w*\\s*(?=>)|[a-zA-Z]\\w*\\s*(?=<)|[a-zA-Z]\\w*\\s*(?=\\[)|[a-zA-Z]\\w*\\s*(?=\\])
    