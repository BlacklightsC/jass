else if (/^\s*struct/.test(lineText)) {
          const struct = Struct.parse(lineText);
          if (struct) {
            if (struct.name) {
              const nameIndex = lineText.indexOf(struct.name);
              struct.start = new vscode.Position(i, nameIndex);
              struct.nameRange = new vscode.Range(i, nameIndex, i, nameIndex + struct.name.length);
            }
            struct.description = findDescription();
            struct.start = new vscode.Position(i, getStartIndex());
            jass.structs.push(struct);
          }
          inStruct = true;
        } else if (/^\s*endstruct/.test(lineText)) {
          if (inStruct) {
            const struct = jass.structs[jass.structs.length - 1];
            if (struct) struct.end = new vscode.Position(i, getStartIndex());
          }
          inStruct = false;
        } else if (inStruct) {
          if (/\bmethod\b/.test(lineText)) {
            const method = Method.parse(lineText);
            if (method) {
              if (method.name) {
                const nameIndex = lineText.indexOf(method.name);
                if (nameIndex > -1) method.nameRange = new vscode.Range(i, nameIndex, i, nameIndex + method.name.length);
              }
              method.description = findDescription();
              method.start = new vscode.Position(i, getStartIndex());
              const struct = jass.structs[jass.structs.length - 1];
              if (struct) {
                struct.methods.push(method);
              }
            }
          } else {
            const member = Member.parse(lineText);
            if (member) {
              if (member.name) {
                const nameIndex = lineText.indexOf(member.name);
                if (nameIndex > -1) member.nameRange = new vscode.Range(i, nameIndex, i, nameIndex + member.name.length);
              }
              member.description = findDescription();
              member.range = new vscode.Range(i, getStartIndex(), i, lineText.length);
              const struct = jass.structs[jass.structs.length - 1];
              if (struct) {
                struct.members.push(member);
              }
            }
          }
        } 