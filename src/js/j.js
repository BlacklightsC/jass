/*
本翻译借用WorldEdit v1.2.3里面的内容。
by:十月
*/ 
module.exports ={
	"YDWEBlightGoldMineForPlayerNull": {
		"original": "function YDWEBlightGoldMineForPlayerNull takes unit goldMine, player whichPlayer returns unit",
		"fileName": "BlightGoldMineForPlayer.j",
		"name": "YDWEBlightGoldMineForPlayerNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "goldMine"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "unit",
		"insertText": "YDWEBlightGoldMineForPlayerNull(goldMine, whichPlayer)",
		"documentation": ""
	},
	"YDWEBlightGoldMineForPlayerBJNull": {
		"original": "function YDWEBlightGoldMineForPlayerBJNull takes unit goldMine, player whichPlayer returns unit",
		"fileName": "BlightGoldMineForPlayerBJ.j",
		"name": "YDWEBlightGoldMineForPlayerBJNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "goldMine"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "unit",
		"insertText": "YDWEBlightGoldMineForPlayerBJNull(goldMine, whichPlayer)",
		"documentation": ""
	},
	"BJDebugMsg": {
		"original": "function BJDebugMsg takes string msg returns nothing",
		"fileName": "blizzard.j",
		"name": "BJDebugMsg",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "msg"
		}],
		"insertText": "BJDebugMsg(msg)",
		"documentation": "打印debug信息，用于调试"
	},
	"RMinBJ": {
		"original": "function RMinBJ takes real a, real b returns real",
		"fileName": "blizzard.j",
		"name": "RMinBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "a"
		}, {
			"type": "real",
			"name": "b"
		}],
		"returnType": "real",
		"insertText": "RMinBJ(a, b)",
		"documentation": "最小值"
	},
	"RMaxBJ": {
		"original": "function RMaxBJ takes real a, real b returns real",
		"fileName": "blizzard.j",
		"name": "RMaxBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "a"
		}, {
			"type": "real",
			"name": "b"
		}],
		"returnType": "real",
		"insertText": "RMaxBJ(a, b)",
		"documentation": "最大值"
	},
	"RAbsBJ": {
		"original": "function RAbsBJ takes real a returns real",
		"fileName": "blizzard.j",
		"name": "RAbsBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "a"
		}],
		"returnType": "real",
		"insertText": "RAbsBJ(a)",
		"documentation": "绝对值Abs"
	},
	"RSignBJ": {
		"original": "function RSignBJ takes real a returns real",
		"fileName": "blizzard.j",
		"name": "RSignBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "a"
		}],
		"returnType": "real",
		"insertText": "RSignBJ(a)",
		"documentation": "标记"
	},
	"IMinBJ": {
		"original": "function IMinBJ takes integer a, integer b returns integer",
		"fileName": "blizzard.j",
		"name": "IMinBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "a"
		}, {
			"type": "integer",
			"name": "b"
		}],
		"returnType": "integer",
		"insertText": "IMinBJ(a, b)",
		"documentation": "取最小值"
	},
	"IMaxBJ": {
		"original": "function IMaxBJ takes integer a, integer b returns integer",
		"fileName": "blizzard.j",
		"name": "IMaxBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "a"
		}, {
			"type": "integer",
			"name": "b"
		}],
		"returnType": "integer",
		"insertText": "IMaxBJ(a, b)",
		"documentation": "取最大值"
	},
	"IAbsBJ": {
		"original": "function IAbsBJ takes integer a returns integer",
		"fileName": "blizzard.j",
		"name": "IAbsBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "a"
		}],
		"returnType": "integer",
		"insertText": "IAbsBJ(a)",
		"documentation": "绝对值Abs"
	},
	"ISignBJ": {
		"original": "function ISignBJ takes integer a returns integer",
		"fileName": "blizzard.j",
		"name": "ISignBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "a"
		}],
		"returnType": "integer",
		"insertText": "ISignBJ(a)",
		"documentation": "标记"
	},
	"SinBJ": {
		"original": "function SinBJ takes real degrees returns real",
		"fileName": "blizzard.j",
		"name": "SinBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "degrees"
		}],
		"returnType": "real",
		"insertText": "SinBJ(degrees)",
		"documentation": "正弦"
	},
	"CosBJ": {
		"original": "function CosBJ takes real degrees returns real",
		"fileName": "blizzard.j",
		"name": "CosBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "degrees"
		}],
		"returnType": "real",
		"insertText": "CosBJ(degrees)",
		"documentation": "余弦"
	},
	"TanBJ": {
		"original": "function TanBJ takes real degrees returns real",
		"fileName": "blizzard.j",
		"name": "TanBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "degrees"
		}],
		"returnType": "real",
		"insertText": "TanBJ(degrees)",
		"documentation": "正切"
	},
	"AsinBJ": {
		"original": "function AsinBJ takes real degrees returns real",
		"fileName": "blizzard.j",
		"name": "AsinBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "degrees"
		}],
		"returnType": "real",
		"insertText": "AsinBJ(degrees)",
		"documentation": "反正弦"
	},
	"AcosBJ": {
		"original": "function AcosBJ takes real degrees returns real",
		"fileName": "blizzard.j",
		"name": "AcosBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "degrees"
		}],
		"returnType": "real",
		"insertText": "AcosBJ(degrees)",
		"documentation": "反余弦"
	},
	"AtanBJ": {
		"original": "function AtanBJ takes real degrees returns real",
		"fileName": "blizzard.j",
		"name": "AtanBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "degrees"
		}],
		"returnType": "real",
		"insertText": "AtanBJ(degrees)",
		"documentation": "反正切 (From Angle)"
	},
	"Atan2BJ": {
		"original": "function Atan2BJ takes real y, real x returns real",
		"fileName": "blizzard.j",
		"name": "Atan2BJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "x"
		}],
		"returnType": "real",
		"insertText": "Atan2BJ(y, x)",
		"documentation": "和正半轴角度"
	},
	"AngleBetweenPoints": {
		"original": "function AngleBetweenPoints takes location locA, location locB returns real",
		"fileName": "blizzard.j",
		"name": "AngleBetweenPoints",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "location",
			"name": "locA"
		}, {
			"type": "location",
			"name": "locB"
		}],
		"returnType": "real",
		"insertText": "AngleBetweenPoints(locA, locB)",
		"documentation": "两个坐标之间的角度"
	},
	"DistanceBetweenPoints": {
		"original": "function DistanceBetweenPoints takes location locA, location locB returns real",
		"fileName": "blizzard.j",
		"name": "DistanceBetweenPoints",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "location",
			"name": "locA"
		}, {
			"type": "location",
			"name": "locB"
		}],
		"returnType": "real",
		"insertText": "DistanceBetweenPoints(locA, locB)",
		"documentation": "坐标之间的距离"
	},
	"PolarProjectionBJ": {
		"original": "function PolarProjectionBJ takes location source, real dist, real angle returns location",
		"fileName": "blizzard.j",
		"name": "PolarProjectionBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "location",
			"name": "source"
		}, {
			"type": "real",
			"name": "dist"
		}, {
			"type": "real",
			"name": "angle"
		}],
		"returnType": "location",
		"insertText": "PolarProjectionBJ(source, dist, angle)",
		"documentation": "点向方向 位移 "
	},
	"GetRandomDirectionDeg": {
		"original": "function GetRandomDirectionDeg takes nothing returns real",
		"fileName": "blizzard.j",
		"name": "GetRandomDirectionDeg",
		"isConstant": false,
		"isNative": false,
		"returnType": "real",
		"insertText": "GetRandomDirectionDeg()",
		"documentation": "随机角度"
	},
	"GetRandomPercentageBJ": {
		"original": "function GetRandomPercentageBJ takes nothing returns real",
		"fileName": "blizzard.j",
		"name": "GetRandomPercentageBJ",
		"isConstant": false,
		"isNative": false,
		"returnType": "real",
		"insertText": "GetRandomPercentageBJ()",
		"documentation": "随机百分数"
	},
	"GetRandomLocInRect": {
		"original": "function GetRandomLocInRect takes rect whichRect returns location",
		"fileName": "blizzard.j",
		"name": "GetRandomLocInRect",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "rect",
			"name": "whichRect"
		}],
		"returnType": "location",
		"insertText": "GetRandomLocInRect(whichRect)",
		"documentation": "区域内的随机地点"
	},
	"ModuloInteger": {
		"original": "function ModuloInteger takes integer dividend, integer divisor returns integer",
		"fileName": "blizzard.j",
		"name": "ModuloInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "dividend"
		}, {
			"type": "integer",
			"name": "divisor"
		}],
		"returnType": "integer",
		"insertText": "ModuloInteger(dividend, divisor)",
		"documentation": "取余数"
	},
	"ModuloReal": {
		"original": "function ModuloReal takes real dividend, real divisor returns real",
		"fileName": "blizzard.j",
		"name": "ModuloReal",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "dividend"
		}, {
			"type": "real",
			"name": "divisor"
		}],
		"returnType": "real",
		"insertText": "ModuloReal(dividend, divisor)",
		"documentation": "取余数"
	},
	"OffsetLocation": {
		"original": "function OffsetLocation takes location loc, real dx, real dy returns location",
		"fileName": "blizzard.j",
		"name": "OffsetLocation",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "location",
			"name": "loc"
		}, {
			"type": "real",
			"name": "dx"
		}, {
			"type": "real",
			"name": "dy"
		}],
		"returnType": "location",
		"insertText": "OffsetLocation(loc, dx, dy)",
		"documentation": "点的坐标"
	},
	"OffsetRectBJ": {
		"original": "function OffsetRectBJ takes rect r, real dx, real dy returns rect",
		"fileName": "blizzard.j",
		"name": "OffsetRectBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "rect",
			"name": "r"
		}, {
			"type": "real",
			"name": "dx"
		}, {
			"type": "real",
			"name": "dy"
		}],
		"returnType": "rect",
		"insertText": "OffsetRectBJ(r, dx, dy)",
		"documentation": "区域位移"
	},
	"RectFromCenterSizeBJ": {
		"original": "function RectFromCenterSizeBJ takes location center, real width, real height returns rect",
		"fileName": "blizzard.j",
		"name": "RectFromCenterSizeBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "location",
			"name": "center"
		}, {
			"type": "real",
			"name": "width"
		}, {
			"type": "real",
			"name": "height"
		}],
		"returnType": "rect",
		"insertText": "RectFromCenterSizeBJ(center, width, height)",
		"documentation": "将点,大小转换为区域"
	},
	"RectContainsCoords": {
		"original": "function RectContainsCoords takes rect r, real x, real y returns boolean",
		"fileName": "blizzard.j",
		"name": "RectContainsCoords",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "rect",
			"name": "r"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"returnType": "boolean",
		"insertText": "RectContainsCoords(r, x, y)",
		"documentation": "矩形是否包含坐标"
	},
	"RectContainsLoc": {
		"original": "function RectContainsLoc takes rect r, location loc returns boolean",
		"fileName": "blizzard.j",
		"name": "RectContainsLoc",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "rect",
			"name": "r"
		}, {
			"type": "location",
			"name": "loc"
		}],
		"returnType": "boolean",
		"insertText": "RectContainsLoc(r, loc)",
		"documentation": "区域是否包含点"
	},
	"RectContainsUnit": {
		"original": "function RectContainsUnit takes rect r, unit whichUnit returns boolean",
		"fileName": "blizzard.j",
		"name": "RectContainsUnit",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "rect",
			"name": "r"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "boolean",
		"insertText": "RectContainsUnit(r, whichUnit)",
		"documentation": "单位在区域"
	},
	"RectContainsItem": {
		"original": "function RectContainsItem takes item whichItem, rect r returns boolean",
		"fileName": "blizzard.j",
		"name": "RectContainsItem",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}, {
			"type": "rect",
			"name": "r"
		}],
		"returnType": "boolean",
		"insertText": "RectContainsItem(whichItem, r)",
		"documentation": "物品在区域"
	},
	"ConditionalTriggerExecute": {
		"original": "function ConditionalTriggerExecute takes trigger trig returns nothing",
		"fileName": "blizzard.j",
		"name": "ConditionalTriggerExecute",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}],
		"insertText": "ConditionalTriggerExecute(trig)",
		"documentation": "运行触发器 (检查条件)"
	},
	"TriggerExecuteBJ": {
		"original": "function TriggerExecuteBJ takes trigger trig, boolean checkConditions returns boolean",
		"fileName": "blizzard.j",
		"name": "TriggerExecuteBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "boolean",
			"name": "checkConditions"
		}],
		"returnType": "boolean",
		"insertText": "TriggerExecuteBJ(trig, checkConditions)",
		"documentation": "运行触发器"
	},
	"PostTriggerExecuteBJ": {
		"original": "function PostTriggerExecuteBJ takes trigger trig, boolean checkConditions returns boolean",
		"fileName": "blizzard.j",
		"name": "PostTriggerExecuteBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "boolean",
			"name": "checkConditions"
		}],
		"returnType": "boolean",
		"insertText": "PostTriggerExecuteBJ(trig, checkConditions)",
		"documentation": "执行触发器"
	},
	"QueuedTriggerCheck": {
		"original": "function QueuedTriggerCheck takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "QueuedTriggerCheck",
		"isConstant": false,
		"isNative": false,
		"insertText": "QueuedTriggerCheck()",
		"documentation": "队列触发器检查"
	},
	"QueuedTriggerGetIndex": {
		"original": "function QueuedTriggerGetIndex takes trigger trig returns integer",
		"fileName": "blizzard.j",
		"name": "QueuedTriggerGetIndex",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}],
		"returnType": "integer",
		"insertText": "QueuedTriggerGetIndex(trig)",
		"documentation": "队列中获取触发器下标"
	},
	"QueuedTriggerRemoveByIndex": {
		"original": "function QueuedTriggerRemoveByIndex takes integer trigIndex returns boolean",
		"fileName": "blizzard.j",
		"name": "QueuedTriggerRemoveByIndex",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "trigIndex"
		}],
		"returnType": "boolean",
		"insertText": "QueuedTriggerRemoveByIndex(trigIndex)",
		"documentation": "队列中移除下标对应的触发器"
	},
	"QueuedTriggerAttemptExec": {
		"original": "function QueuedTriggerAttemptExec takes nothing returns boolean",
		"fileName": "blizzard.j",
		"name": "QueuedTriggerAttemptExec",
		"isConstant": false,
		"isNative": false,
		"returnType": "boolean",
		"insertText": "QueuedTriggerAttemptExec()",
		"documentation": "队列中尝试执行触发器"
	},
	"QueuedTriggerAddBJ": {
		"original": "function QueuedTriggerAddBJ takes trigger trig, boolean checkConditions returns boolean",
		"fileName": "blizzard.j",
		"name": "QueuedTriggerAddBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "boolean",
			"name": "checkConditions"
		}],
		"returnType": "boolean",
		"insertText": "QueuedTriggerAddBJ(trig, checkConditions)",
		"documentation": "增加触发器到队列"
	},
	"QueuedTriggerRemoveBJ": {
		"original": "function QueuedTriggerRemoveBJ takes trigger trig returns nothing",
		"fileName": "blizzard.j",
		"name": "QueuedTriggerRemoveBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}],
		"insertText": "QueuedTriggerRemoveBJ(trig)",
		"documentation": "清除触发器队列"
	},
	"QueuedTriggerDoneBJ": {
		"original": "function QueuedTriggerDoneBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "QueuedTriggerDoneBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "QueuedTriggerDoneBJ()",
		"documentation": "触发器队列完成"
	},
	"QueuedTriggerClearBJ": {
		"original": "function QueuedTriggerClearBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "QueuedTriggerClearBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "QueuedTriggerClearBJ()",
		"documentation": "清除触发器所有队列"
	},
	"QueuedTriggerClearInactiveBJ": {
		"original": "function QueuedTriggerClearInactiveBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "QueuedTriggerClearInactiveBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "QueuedTriggerClearInactiveBJ()",
		"documentation": "清除触发器队列中未执行任务"
	},
	"QueuedTriggerCountBJ": {
		"original": "function QueuedTriggerCountBJ takes nothing returns integer",
		"fileName": "blizzard.j",
		"name": "QueuedTriggerCountBJ",
		"isConstant": false,
		"isNative": false,
		"returnType": "integer",
		"insertText": "QueuedTriggerCountBJ()",
		"documentation": "触发器队列中触发器的数量"
	},
	"IsTriggerQueueEmptyBJ": {
		"original": "function IsTriggerQueueEmptyBJ takes nothing returns boolean",
		"fileName": "blizzard.j",
		"name": "IsTriggerQueueEmptyBJ",
		"isConstant": false,
		"isNative": false,
		"returnType": "boolean",
		"insertText": "IsTriggerQueueEmptyBJ()",
		"documentation": "触发器队列是空的"
	},
	"IsTriggerQueuedBJ": {
		"original": "function IsTriggerQueuedBJ takes trigger trig returns boolean",
		"fileName": "blizzard.j",
		"name": "IsTriggerQueuedBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}],
		"returnType": "boolean",
		"insertText": "IsTriggerQueuedBJ(trig)",
		"documentation": "触发器在队列中"
	},
	"GetForLoopIndexA": {
		"original": "function GetForLoopIndexA takes nothing returns integer",
		"fileName": "blizzard.j",
		"name": "GetForLoopIndexA",
		"isConstant": false,
		"isNative": false,
		"returnType": "integer",
		"insertText": "GetForLoopIndexA()",
		"documentation": "循环整数 A"
	},
	"SetForLoopIndexA": {
		"original": "function SetForLoopIndexA takes integer newIndex returns nothing",
		"fileName": "blizzard.j",
		"name": "SetForLoopIndexA",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "newIndex"
		}],
		"insertText": "SetForLoopIndexA(newIndex)",
		"documentation": "设置循环索引 A"
	},
	"GetForLoopIndexB": {
		"original": "function GetForLoopIndexB takes nothing returns integer",
		"fileName": "blizzard.j",
		"name": "GetForLoopIndexB",
		"isConstant": false,
		"isNative": false,
		"returnType": "integer",
		"insertText": "GetForLoopIndexB()",
		"documentation": "循环整数 B"
	},
	"SetForLoopIndexB": {
		"original": "function SetForLoopIndexB takes integer newIndex returns nothing",
		"fileName": "blizzard.j",
		"name": "SetForLoopIndexB",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "newIndex"
		}],
		"insertText": "SetForLoopIndexB(newIndex)",
		"documentation": "设置循环索引 B"
	},
	"PolledWait": {
		"original": "function PolledWait takes real duration returns nothing",
		"fileName": "blizzard.j",
		"name": "PolledWait",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "duration"
		}],
		"insertText": "PolledWait(duration)",
		"documentation": "等待 (游戏时间)"
	},
	"IntegerTertiaryOp": {
		"original": "function IntegerTertiaryOp takes boolean flag, integer valueA, integer valueB returns integer",
		"fileName": "blizzard.j",
		"name": "IntegerTertiaryOp",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "flag"
		}, {
			"type": "integer",
			"name": "valueA"
		}, {
			"type": "integer",
			"name": "valueB"
		}],
		"returnType": "integer",
		"insertText": "IntegerTertiaryOp(flag, valueA, valueB)",
		"documentation": ""
	},
	"DoNothing": {
		"original": "function DoNothing takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "DoNothing",
		"isConstant": false,
		"isNative": false,
		"insertText": "DoNothing()",
		"documentation": "不做任何动作"
	},
	"CommentString": {
		"original": "function CommentString takes string commentString returns nothing",
		"fileName": "blizzard.j",
		"name": "CommentString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "commentString"
		}],
		"insertText": "CommentString(commentString)",
		"documentation": "注释"
	},
	"StringIdentity": {
		"original": "function StringIdentity takes string theString returns string",
		"fileName": "blizzard.j",
		"name": "StringIdentity",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "theString"
		}],
		"returnType": "string",
		"insertText": "StringIdentity(theString)",
		"documentation": "格式化字串符"
	},
	"GetBooleanAnd": {
		"original": "function GetBooleanAnd takes boolean valueA, boolean valueB returns boolean",
		"fileName": "blizzard.j",
		"name": "GetBooleanAnd",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "valueA"
		}, {
			"type": "boolean",
			"name": "valueB"
		}],
		"returnType": "boolean",
		"insertText": "GetBooleanAnd(valueA, valueB)",
		"documentation": "条件A和条件B    比较"
	},
	"GetBooleanOr": {
		"original": "function GetBooleanOr takes boolean valueA, boolean valueB returns boolean",
		"fileName": "blizzard.j",
		"name": "GetBooleanOr",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "valueA"
		}, {
			"type": "boolean",
			"name": "valueB"
		}],
		"returnType": "boolean",
		"insertText": "GetBooleanOr(valueA, valueB)",
		"documentation": "条件A或条件B    比较"
	},
	"PercentToInt": {
		"original": "function PercentToInt takes real percentage, integer max returns integer",
		"fileName": "blizzard.j",
		"name": "PercentToInt",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "percentage"
		}, {
			"type": "integer",
			"name": "max"
		}],
		"returnType": "integer",
		"insertText": "PercentToInt(percentage, max)",
		"documentation": ""
	},
	"PercentTo255": {
		"original": "function PercentTo255 takes real percentage returns integer",
		"fileName": "blizzard.j",
		"name": "PercentTo255",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "percentage"
		}],
		"returnType": "integer",
		"insertText": "PercentTo255(percentage)",
		"documentation": "百分比小数(0-1)转(0-255)"
	},
	"GetTimeOfDay": {
		"original": "function GetTimeOfDay takes nothing returns real",
		"fileName": "blizzard.j",
		"name": "GetTimeOfDay",
		"isConstant": false,
		"isNative": false,
		"returnType": "real",
		"insertText": "GetTimeOfDay()",
		"documentation": "游戏当前的时间"
	},
	"SetTimeOfDay": {
		"original": "function SetTimeOfDay takes real whatTime returns nothing",
		"fileName": "blizzard.j",
		"name": "SetTimeOfDay",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "whatTime"
		}],
		"insertText": "SetTimeOfDay(whatTime)",
		"documentation": "设置游戏的时间"
	},
	"SetTimeOfDayScalePercentBJ": {
		"original": "function SetTimeOfDayScalePercentBJ takes real scalePercent returns nothing",
		"fileName": "blizzard.j",
		"name": "SetTimeOfDayScalePercentBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "scalePercent"
		}],
		"insertText": "SetTimeOfDayScalePercentBJ(scalePercent)",
		"documentation": "设置时间流逝速度"
	},
	"GetTimeOfDayScalePercentBJ": {
		"original": "function GetTimeOfDayScalePercentBJ takes nothing returns real",
		"fileName": "blizzard.j",
		"name": "GetTimeOfDayScalePercentBJ",
		"isConstant": false,
		"isNative": false,
		"returnType": "real",
		"insertText": "GetTimeOfDayScalePercentBJ()",
		"documentation": "游戏时间的速度"
	},
	"PlaySound": {
		"original": "function PlaySound takes string soundName returns nothing",
		"fileName": "blizzard.j",
		"name": "PlaySound",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "soundName"
		}],
		"insertText": "PlaySound(soundName)",
		"documentation": "播放声音"
	},
	"CompareLocationsBJ": {
		"original": "function CompareLocationsBJ takes location A, location B returns boolean",
		"fileName": "blizzard.j",
		"name": "CompareLocationsBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "location",
			"name": "A"
		}, {
			"type": "location",
			"name": "B"
		}],
		"returnType": "boolean",
		"insertText": "CompareLocationsBJ(A, B)",
		"documentation": "比对两个点是否是同一个"
	},
	"CompareRectsBJ": {
		"original": "function CompareRectsBJ takes rect A, rect B returns boolean",
		"fileName": "blizzard.j",
		"name": "CompareRectsBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "rect",
			"name": "A"
		}, {
			"type": "rect",
			"name": "B"
		}],
		"returnType": "boolean",
		"insertText": "CompareRectsBJ(A, B)",
		"documentation": "比对两个矩形是否是同一个"
	},
	"GetRectFromCircleBJ": {
		"original": "function GetRectFromCircleBJ takes location center, real radius returns rect",
		"fileName": "blizzard.j",
		"name": "GetRectFromCircleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "location",
			"name": "center"
		}, {
			"type": "real",
			"name": "radius"
		}],
		"returnType": "rect",
		"insertText": "GetRectFromCircleBJ(center, radius)",
		"documentation": "内切圆矩形"
	},
	"GetCurrentCameraSetup": {
		"original": "function GetCurrentCameraSetup takes nothing returns camerasetup",
		"fileName": "blizzard.j",
		"name": "GetCurrentCameraSetup",
		"isConstant": false,
		"isNative": false,
		"returnType": "camerasetup",
		"insertText": "GetCurrentCameraSetup()",
		"documentation": "当前的视角"
	},
	"CameraSetupApplyForPlayer": {
		"original": "function CameraSetupApplyForPlayer takes boolean doPan, camerasetup whichSetup, player whichPlayer, real duration returns nothing",
		"fileName": "blizzard.j",
		"name": "CameraSetupApplyForPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "doPan"
		}, {
			"type": "camerasetup",
			"name": "whichSetup"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "CameraSetupApplyForPlayer(doPan, whichSetup, whichPlayer, duration)",
		"documentation": "应用摄像机 (限时)"
	},
	"CameraSetupGetFieldSwap": {
		"original": "function CameraSetupGetFieldSwap takes camerafield whichField, camerasetup whichSetup returns real",
		"fileName": "blizzard.j",
		"name": "CameraSetupGetFieldSwap",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "camerafield",
			"name": "whichField"
		}, {
			"type": "camerasetup",
			"name": "whichSetup"
		}],
		"returnType": "real",
		"insertText": "CameraSetupGetFieldSwap(whichField, whichSetup)",
		"documentation": "摄像机的数值"
	},
	"SetCameraFieldForPlayer": {
		"original": "function SetCameraFieldForPlayer takes player whichPlayer, camerafield whichField, real value, real duration returns nothing",
		"fileName": "blizzard.j",
		"name": "SetCameraFieldForPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "camerafield",
			"name": "whichField"
		}, {
			"type": "real",
			"name": "value"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "SetCameraFieldForPlayer(whichPlayer, whichField, value, duration)",
		"documentation": "设定摄像机属性 (限时)"
	},
	"SetCameraTargetControllerNoZForPlayer": {
		"original": "function SetCameraTargetControllerNoZForPlayer takes player whichPlayer, unit whichUnit, real xoffset, real yoffset, boolean inheritOrientation returns nothing",
		"fileName": "blizzard.j",
		"name": "SetCameraTargetControllerNoZForPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "xoffset"
		}, {
			"type": "real",
			"name": "yoffset"
		}, {
			"type": "boolean",
			"name": "inheritOrientation"
		}],
		"insertText": "SetCameraTargetControllerNoZForPlayer(whichPlayer, whichUnit, xoffset, yoffset, inheritOrientation)",
		"documentation": "锁定摄像机目标到单位"
	},
	"SetCameraPositionForPlayer": {
		"original": "function SetCameraPositionForPlayer takes player whichPlayer, real x, real y returns nothing",
		"fileName": "blizzard.j",
		"name": "SetCameraPositionForPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"insertText": "SetCameraPositionForPlayer(whichPlayer, x, y)",
		"documentation": "设置玩家的镜头位置"
	},
	"SetCameraPositionLocForPlayer": {
		"original": "function SetCameraPositionLocForPlayer takes player whichPlayer, location loc returns nothing",
		"fileName": "blizzard.j",
		"name": "SetCameraPositionLocForPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "location",
			"name": "loc"
		}],
		"insertText": "SetCameraPositionLocForPlayer(whichPlayer, loc)",
		"documentation": "设置玩家的镜头位置"
	},
	"RotateCameraAroundLocBJ": {
		"original": "function RotateCameraAroundLocBJ takes real degrees, location loc, player whichPlayer, real duration returns nothing",
		"fileName": "blizzard.j",
		"name": "RotateCameraAroundLocBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "degrees"
		}, {
			"type": "location",
			"name": "loc"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "RotateCameraAroundLocBJ(degrees, loc, whichPlayer, duration)",
		"documentation": "旋转摄像机 (限时)"
	},
	"PanCameraToForPlayer": {
		"original": "function PanCameraToForPlayer takes player whichPlayer, real x, real y returns nothing",
		"fileName": "blizzard.j",
		"name": "PanCameraToForPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"insertText": "PanCameraToForPlayer(whichPlayer, x, y)",
		"documentation": "平移摄像机"
	},
	"PanCameraToLocForPlayer": {
		"original": "function PanCameraToLocForPlayer takes player whichPlayer, location loc returns nothing",
		"fileName": "blizzard.j",
		"name": "PanCameraToLocForPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "location",
			"name": "loc"
		}],
		"insertText": "PanCameraToLocForPlayer(whichPlayer, loc)",
		"documentation": "平移摄像机"
	},
	"PanCameraToTimedForPlayer": {
		"original": "function PanCameraToTimedForPlayer takes player whichPlayer, real x, real y, real duration returns nothing",
		"fileName": "blizzard.j",
		"name": "PanCameraToTimedForPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "PanCameraToTimedForPlayer(whichPlayer, x, y, duration)",
		"documentation": "平移摄像机 定时"
	},
	"PanCameraToTimedLocForPlayer": {
		"original": "function PanCameraToTimedLocForPlayer takes player whichPlayer, location loc, real duration returns nothing",
		"fileName": "blizzard.j",
		"name": "PanCameraToTimedLocForPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "location",
			"name": "loc"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "PanCameraToTimedLocForPlayer(whichPlayer, loc, duration)",
		"documentation": "平移摄像机 (限时)"
	},
	"PanCameraToTimedLocWithZForPlayer": {
		"original": "function PanCameraToTimedLocWithZForPlayer takes player whichPlayer, location loc, real zOffset, real duration returns nothing",
		"fileName": "blizzard.j",
		"name": "PanCameraToTimedLocWithZForPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "location",
			"name": "loc"
		}, {
			"type": "real",
			"name": "zOffset"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "PanCameraToTimedLocWithZForPlayer(whichPlayer, loc, zOffset, duration)",
		"documentation": "在指定高度平移摄像机 (限时)"
	},
	"SmartCameraPanBJ": {
		"original": "function SmartCameraPanBJ takes player whichPlayer, location loc, real duration returns nothing",
		"fileName": "blizzard.j",
		"name": "SmartCameraPanBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "location",
			"name": "loc"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "SmartCameraPanBJ(whichPlayer, loc, duration)",
		"documentation": "必要时平移摄像机 (限时)"
	},
	"SetCinematicCameraForPlayer": {
		"original": "function SetCinematicCameraForPlayer takes player whichPlayer, string cameraModelFile returns nothing",
		"fileName": "blizzard.j",
		"name": "SetCinematicCameraForPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "cameraModelFile"
		}],
		"insertText": "SetCinematicCameraForPlayer(whichPlayer, cameraModelFile)",
		"documentation": "播放动画摄像机"
	},
	"ResetToGameCameraForPlayer": {
		"original": "function ResetToGameCameraForPlayer takes player whichPlayer, real duration returns nothing",
		"fileName": "blizzard.j",
		"name": "ResetToGameCameraForPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "ResetToGameCameraForPlayer(whichPlayer, duration)",
		"documentation": "重置游戏摄像机"
	},
	"CameraSetSourceNoiseForPlayer": {
		"original": "function CameraSetSourceNoiseForPlayer takes player whichPlayer, real magnitude, real velocity returns nothing",
		"fileName": "blizzard.j",
		"name": "CameraSetSourceNoiseForPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "real",
			"name": "magnitude"
		}, {
			"type": "real",
			"name": "velocity"
		}],
		"insertText": "CameraSetSourceNoiseForPlayer(whichPlayer, magnitude, velocity)",
		"documentation": "摇摆摄像机来源"
	},
	"CameraSetTargetNoiseForPlayer": {
		"original": "function CameraSetTargetNoiseForPlayer takes player whichPlayer, real magnitude, real velocity returns nothing",
		"fileName": "blizzard.j",
		"name": "CameraSetTargetNoiseForPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "real",
			"name": "magnitude"
		}, {
			"type": "real",
			"name": "velocity"
		}],
		"insertText": "CameraSetTargetNoiseForPlayer(whichPlayer, magnitude, velocity)",
		"documentation": "摇摆摄像机目标"
	},
	"CameraSetEQNoiseForPlayer": {
		"original": "function CameraSetEQNoiseForPlayer takes player whichPlayer, real magnitude returns nothing",
		"fileName": "blizzard.j",
		"name": "CameraSetEQNoiseForPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "real",
			"name": "magnitude"
		}],
		"insertText": "CameraSetEQNoiseForPlayer(whichPlayer, magnitude)",
		"documentation": "摇动摄像机"
	},
	"CameraClearNoiseForPlayer": {
		"original": "function CameraClearNoiseForPlayer takes player whichPlayer returns nothing",
		"fileName": "blizzard.j",
		"name": "CameraClearNoiseForPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "CameraClearNoiseForPlayer(whichPlayer)",
		"documentation": "停止 摇摆/摇动 摄像机"
	},
	"GetCurrentCameraBoundsMapRectBJ": {
		"original": "function GetCurrentCameraBoundsMapRectBJ takes nothing returns rect",
		"fileName": "blizzard.j",
		"name": "GetCurrentCameraBoundsMapRectBJ",
		"isConstant": false,
		"isNative": false,
		"returnType": "rect",
		"insertText": "GetCurrentCameraBoundsMapRectBJ()",
		"documentation": "当前的摄象机范围"
	},
	"GetCameraBoundsMapRect": {
		"original": "function GetCameraBoundsMapRect takes nothing returns rect",
		"fileName": "blizzard.j",
		"name": "GetCameraBoundsMapRect",
		"isConstant": false,
		"isNative": false,
		"returnType": "rect",
		"insertText": "GetCameraBoundsMapRect()",
		"documentation": "初始游戏时的摄象机范围"
	},
	"GetPlayableMapRect": {
		"original": "function GetPlayableMapRect takes nothing returns rect",
		"fileName": "blizzard.j",
		"name": "GetPlayableMapRect",
		"isConstant": false,
		"isNative": false,
		"returnType": "rect",
		"insertText": "GetPlayableMapRect()",
		"documentation": "可玩的地图区域"
	},
	"GetEntireMapRect": {
		"original": "function GetEntireMapRect takes nothing returns rect",
		"fileName": "blizzard.j",
		"name": "GetEntireMapRect",
		"isConstant": false,
		"isNative": false,
		"returnType": "rect",
		"insertText": "GetEntireMapRect()",
		"documentation": "全地图"
	},
	"SetCameraBoundsToRect": {
		"original": "function SetCameraBoundsToRect takes rect r returns nothing",
		"fileName": "blizzard.j",
		"name": "SetCameraBoundsToRect",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "rect",
			"name": "r"
		}],
		"insertText": "SetCameraBoundsToRect(r)",
		"documentation": "设置摄像机边界"
	},
	"SetCameraBoundsToRectForPlayerBJ": {
		"original": "function SetCameraBoundsToRectForPlayerBJ takes player whichPlayer, rect r returns nothing",
		"fileName": "blizzard.j",
		"name": "SetCameraBoundsToRectForPlayerBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "rect",
			"name": "r"
		}],
		"insertText": "SetCameraBoundsToRectForPlayerBJ(whichPlayer, r)",
		"documentation": "设置镜头范围"
	},
	"AdjustCameraBoundsBJ": {
		"original": "function AdjustCameraBoundsBJ takes integer adjustMethod, real dxWest, real dxEast, real dyNorth, real dySouth returns nothing",
		"fileName": "blizzard.j",
		"name": "AdjustCameraBoundsBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "adjustMethod"
		}, {
			"type": "real",
			"name": "dxWest"
		}, {
			"type": "real",
			"name": "dxEast"
		}, {
			"type": "real",
			"name": "dyNorth"
		}, {
			"type": "real",
			"name": "dySouth"
		}],
		"insertText": "AdjustCameraBoundsBJ(adjustMethod, dxWest, dxEast, dyNorth, dySouth)",
		"documentation": "调整相机边界"
	},
	"AdjustCameraBoundsForPlayerBJ": {
		"original": "function AdjustCameraBoundsForPlayerBJ takes integer adjustMethod, player whichPlayer, real dxWest, real dxEast, real dyNorth, real dySouth returns nothing",
		"fileName": "blizzard.j",
		"name": "AdjustCameraBoundsForPlayerBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "adjustMethod"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "real",
			"name": "dxWest"
		}, {
			"type": "real",
			"name": "dxEast"
		}, {
			"type": "real",
			"name": "dyNorth"
		}, {
			"type": "real",
			"name": "dySouth"
		}],
		"insertText": "AdjustCameraBoundsForPlayerBJ(adjustMethod, whichPlayer, dxWest, dxEast, dyNorth, dySouth)",
		"documentation": "扩展/收缩摄像绑定"
	},
	"SetCameraQuickPositionForPlayer": {
		"original": "function SetCameraQuickPositionForPlayer takes player whichPlayer, real x, real y returns nothing",
		"fileName": "blizzard.j",
		"name": "SetCameraQuickPositionForPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"insertText": "SetCameraQuickPositionForPlayer(whichPlayer, x, y)",
		"documentation": "设置相机位置 (快速)"
	},
	"SetCameraQuickPositionLocForPlayer": {
		"original": "function SetCameraQuickPositionLocForPlayer takes player whichPlayer, location loc returns nothing",
		"fileName": "blizzard.j",
		"name": "SetCameraQuickPositionLocForPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "location",
			"name": "loc"
		}],
		"insertText": "SetCameraQuickPositionLocForPlayer(whichPlayer, loc)",
		"documentation": "设置空格点击 切换镜头目标"
	},
	"SetCameraQuickPositionLoc": {
		"original": "function SetCameraQuickPositionLoc takes location loc returns nothing",
		"fileName": "blizzard.j",
		"name": "SetCameraQuickPositionLoc",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "location",
			"name": "loc"
		}],
		"insertText": "SetCameraQuickPositionLoc(loc)",
		"documentation": "设置相机位置 (快速)"
	},
	"StopCameraForPlayerBJ": {
		"original": "function StopCameraForPlayerBJ takes player whichPlayer returns nothing",
		"fileName": "blizzard.j",
		"name": "StopCameraForPlayerBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "StopCameraForPlayerBJ(whichPlayer)",
		"documentation": "停止摄像机"
	},
	"SetCameraOrientControllerForPlayerBJ": {
		"original": "function SetCameraOrientControllerForPlayerBJ takes player whichPlayer, unit whichUnit, real xoffset, real yoffset returns nothing",
		"fileName": "blizzard.j",
		"name": "SetCameraOrientControllerForPlayerBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "xoffset"
		}, {
			"type": "real",
			"name": "yoffset"
		}],
		"insertText": "SetCameraOrientControllerForPlayerBJ(whichPlayer, whichUnit, xoffset, yoffset)",
		"documentation": "锁定摄像机方向到单位"
	},
	"CameraSetSmoothingFactorBJ": {
		"original": "function CameraSetSmoothingFactorBJ takes real factor returns nothing",
		"fileName": "blizzard.j",
		"name": "CameraSetSmoothingFactorBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "factor"
		}],
		"insertText": "CameraSetSmoothingFactorBJ(factor)",
		"documentation": "改变摄像机平滑参数"
	},
	"CameraResetSmoothingFactorBJ": {
		"original": "function CameraResetSmoothingFactorBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "CameraResetSmoothingFactorBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "CameraResetSmoothingFactorBJ()",
		"documentation": "重置摄像机平滑参数"
	},
	"DisplayTextToForce": {
		"original": "function DisplayTextToForce takes force toForce, string message returns nothing",
		"fileName": "blizzard.j",
		"name": "DisplayTextToForce",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "force",
			"name": "toForce"
		}, {
			"type": "string",
			"name": "message"
		}],
		"insertText": "DisplayTextToForce(toForce, message)",
		"documentation": "文本消息(自动计时)"
	},
	"DisplayTimedTextToForce": {
		"original": "function DisplayTimedTextToForce takes force toForce, real duration, string message returns nothing",
		"fileName": "blizzard.j",
		"name": "DisplayTimedTextToForce",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "force",
			"name": "toForce"
		}, {
			"type": "real",
			"name": "duration"
		}, {
			"type": "string",
			"name": "message"
		}],
		"insertText": "DisplayTimedTextToForce(toForce, duration, message)",
		"documentation": "文本消息(指定计时)"
	},
	"ClearTextMessagesBJ": {
		"original": "function ClearTextMessagesBJ takes force toForce returns nothing",
		"fileName": "blizzard.j",
		"name": "ClearTextMessagesBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "force",
			"name": "toForce"
		}],
		"insertText": "ClearTextMessagesBJ(toForce)",
		"documentation": "清空文本信息"
	},
	"SubStringBJ": {
		"original": "function SubStringBJ takes string source, integer start, integer end returns string",
		"fileName": "blizzard.j",
		"name": "SubStringBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "source"
		}, {
			"type": "integer",
			"name": "start"
		}, {
			"type": "integer",
			"name": "end"
		}],
		"returnType": "string",
		"insertText": "SubStringBJ(source, start, end)",
		"documentation": "切割字符串"
	},
	"GetHandleIdBJ": {
		"original": "function GetHandleIdBJ takes handle h returns integer",
		"fileName": "blizzard.j",
		"name": "GetHandleIdBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "handle",
			"name": "h"
		}],
		"returnType": "integer",
		"insertText": "GetHandleIdBJ(h)",
		"documentation": "获取句柄整数地址"
	},
	"StringHashBJ": {
		"original": "function StringHashBJ takes string s returns integer",
		"fileName": "blizzard.j",
		"name": "StringHashBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}],
		"returnType": "integer",
		"insertText": "StringHashBJ(s)",
		"documentation": "字符串哈希"
	},
	"TriggerRegisterTimerEventPeriodic": {
		"original": "function TriggerRegisterTimerEventPeriodic takes trigger trig, real timeout returns event",
		"fileName": "blizzard.j",
		"name": "TriggerRegisterTimerEventPeriodic",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "real",
			"name": "timeout"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterTimerEventPeriodic(trig, timeout)",
		"documentation": "循环逝去的时间"
	},
	"TriggerRegisterTimerEventSingle": {
		"original": "function TriggerRegisterTimerEventSingle takes trigger trig, real timeout returns event",
		"fileName": "blizzard.j",
		"name": "TriggerRegisterTimerEventSingle",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "real",
			"name": "timeout"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterTimerEventSingle(trig, timeout)",
		"documentation": "游戏开始逝去的时间"
	},
	"TriggerRegisterTimerExpireEventBJ": {
		"original": "function TriggerRegisterTimerExpireEventBJ takes trigger trig, timer t returns event",
		"fileName": "blizzard.j",
		"name": "TriggerRegisterTimerExpireEventBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "timer",
			"name": "t"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterTimerExpireEventBJ(trig, t)",
		"documentation": "计时器期满"
	},
	"TriggerRegisterPlayerUnitEventSimple": {
		"original": "function TriggerRegisterPlayerUnitEventSimple takes trigger trig, player whichPlayer, playerunitevent whichEvent returns event",
		"fileName": "blizzard.j",
		"name": "TriggerRegisterPlayerUnitEventSimple",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "playerunitevent",
			"name": "whichEvent"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterPlayerUnitEventSimple(trig, whichPlayer, whichEvent)",
		"documentation": "玩家单位的事件"
	},
	"TriggerRegisterAnyUnitEventBJ": {
		"original": "function TriggerRegisterAnyUnitEventBJ takes trigger trig, playerunitevent whichEvent returns nothing",
		"fileName": "blizzard.j",
		"name": "TriggerRegisterAnyUnitEventBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "playerunitevent",
			"name": "whichEvent"
		}],
		"insertText": "TriggerRegisterAnyUnitEventBJ(trig, whichEvent)",
		"documentation": "单位的事件"
	},
	"TriggerRegisterPlayerSelectionEventBJ": {
		"original": "function TriggerRegisterPlayerSelectionEventBJ takes trigger trig, player whichPlayer, boolean selected returns event",
		"fileName": "blizzard.j",
		"name": "TriggerRegisterPlayerSelectionEventBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "boolean",
			"name": "selected"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterPlayerSelectionEventBJ(trig, whichPlayer, selected)",
		"documentation": "选择单位事件"
	},
	"TriggerRegisterPlayerKeyEventBJ": {
		"original": "function TriggerRegisterPlayerKeyEventBJ takes trigger trig, player whichPlayer, integer keType, integer keKey returns event",
		"fileName": "blizzard.j",
		"name": "TriggerRegisterPlayerKeyEventBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "integer",
			"name": "keType"
		}, {
			"type": "integer",
			"name": "keKey"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterPlayerKeyEventBJ(trig, whichPlayer, keType, keKey)",
		"documentation": "键盘事件"
	},
	"TriggerRegisterPlayerEventVictory": {
		"original": "function TriggerRegisterPlayerEventVictory takes trigger trig, player whichPlayer returns event",
		"fileName": "blizzard.j",
		"name": "TriggerRegisterPlayerEventVictory",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterPlayerEventVictory(trig, whichPlayer)",
		"documentation": "胜利"
	},
	"TriggerRegisterPlayerEventDefeat": {
		"original": "function TriggerRegisterPlayerEventDefeat takes trigger trig, player whichPlayer returns event",
		"fileName": "blizzard.j",
		"name": "TriggerRegisterPlayerEventDefeat",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterPlayerEventDefeat(trig, whichPlayer)",
		"documentation": "失败"
	},
	"TriggerRegisterPlayerEventLeave": {
		"original": "function TriggerRegisterPlayerEventLeave takes trigger trig, player whichPlayer returns event",
		"fileName": "blizzard.j",
		"name": "TriggerRegisterPlayerEventLeave",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterPlayerEventLeave(trig, whichPlayer)",
		"documentation": "玩家离开游戏"
	},
	"TriggerRegisterPlayerEventAllianceChanged": {
		"original": "function TriggerRegisterPlayerEventAllianceChanged takes trigger trig, player whichPlayer returns event",
		"fileName": "blizzard.j",
		"name": "TriggerRegisterPlayerEventAllianceChanged",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterPlayerEventAllianceChanged(trig, whichPlayer)",
		"documentation": "联盟状态改变(任何状态)"
	},
	"TriggerRegisterPlayerEventEndCinematic": {
		"original": "function TriggerRegisterPlayerEventEndCinematic takes trigger trig, player whichPlayer returns event",
		"fileName": "blizzard.j",
		"name": "TriggerRegisterPlayerEventEndCinematic",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterPlayerEventEndCinematic(trig, whichPlayer)",
		"documentation": "按ESC键(跳过动画)"
	},
	"TriggerRegisterGameStateEventTimeOfDay": {
		"original": "function TriggerRegisterGameStateEventTimeOfDay takes trigger trig, limitop opcode, real limitval returns event",
		"fileName": "blizzard.j",
		"name": "TriggerRegisterGameStateEventTimeOfDay",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "limitop",
			"name": "opcode"
		}, {
			"type": "real",
			"name": "limitval"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterGameStateEventTimeOfDay(trig, opcode, limitval)",
		"documentation": "游戏时间改变"
	},
	"TriggerRegisterEnterRegionSimple": {
		"original": "function TriggerRegisterEnterRegionSimple takes trigger trig, region whichRegion returns event",
		"fileName": "blizzard.j",
		"name": "TriggerRegisterEnterRegionSimple",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "region",
			"name": "whichRegion"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterEnterRegionSimple(trig, whichRegion)",
		"documentation": "单位-任意单位进入不规则区域"
	},
	"TriggerRegisterLeaveRegionSimple": {
		"original": "function TriggerRegisterLeaveRegionSimple takes trigger trig, region whichRegion returns event",
		"fileName": "blizzard.j",
		"name": "TriggerRegisterLeaveRegionSimple",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "region",
			"name": "whichRegion"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterLeaveRegionSimple(trig, whichRegion)",
		"documentation": "单位-任意单位离开不规则区域"
	},
	"TriggerRegisterEnterRectSimple": {
		"original": "function TriggerRegisterEnterRectSimple takes trigger trig, rect r returns event",
		"fileName": "blizzard.j",
		"name": "TriggerRegisterEnterRectSimple",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "rect",
			"name": "r"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterEnterRectSimple(trig, r)",
		"documentation": "单位进入区域"
	},
	"TriggerRegisterLeaveRectSimple": {
		"original": "function TriggerRegisterLeaveRectSimple takes trigger trig, rect r returns event",
		"fileName": "blizzard.j",
		"name": "TriggerRegisterLeaveRectSimple",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "rect",
			"name": "r"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterLeaveRectSimple(trig, r)",
		"documentation": "单位离开区域"
	},
	"TriggerRegisterDistanceBetweenUnits": {
		"original": "function TriggerRegisterDistanceBetweenUnits takes trigger trig, unit whichUnit, boolexpr condition, real range returns event",
		"fileName": "blizzard.j",
		"name": "TriggerRegisterDistanceBetweenUnits",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "boolexpr",
			"name": "condition"
		}, {
			"type": "real",
			"name": "range"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterDistanceBetweenUnits(trig, whichUnit, condition, range)",
		"documentation": "两单位之间的距离"
	},
	"TriggerRegisterUnitInRangeSimple": {
		"original": "function TriggerRegisterUnitInRangeSimple takes trigger trig, real range, unit whichUnit returns event",
		"fileName": "blizzard.j",
		"name": "TriggerRegisterUnitInRangeSimple",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "real",
			"name": "range"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterUnitInRangeSimple(trig, range, whichUnit)",
		"documentation": "进入单位的范围"
	},
	"TriggerRegisterUnitLifeEvent": {
		"original": "function TriggerRegisterUnitLifeEvent takes trigger trig, unit whichUnit, limitop opcode, real limitval returns event",
		"fileName": "blizzard.j",
		"name": "TriggerRegisterUnitLifeEvent",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "limitop",
			"name": "opcode"
		}, {
			"type": "real",
			"name": "limitval"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterUnitLifeEvent(trig, whichUnit, opcode, limitval)",
		"documentation": "单位生命值"
	},
	"TriggerRegisterUnitManaEvent": {
		"original": "function TriggerRegisterUnitManaEvent takes trigger trig, unit whichUnit, limitop opcode, real limitval returns event",
		"fileName": "blizzard.j",
		"name": "TriggerRegisterUnitManaEvent",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "limitop",
			"name": "opcode"
		}, {
			"type": "real",
			"name": "limitval"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterUnitManaEvent(trig, whichUnit, opcode, limitval)",
		"documentation": "单位魔法值"
	},
	"TriggerRegisterDialogEventBJ": {
		"original": "function TriggerRegisterDialogEventBJ takes trigger trig, dialog whichDialog returns event",
		"fileName": "blizzard.j",
		"name": "TriggerRegisterDialogEventBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "dialog",
			"name": "whichDialog"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterDialogEventBJ(trig, whichDialog)",
		"documentation": "对话框按钮点击"
	},
	"TriggerRegisterShowSkillEventBJ": {
		"original": "function TriggerRegisterShowSkillEventBJ takes trigger trig returns event",
		"fileName": "blizzard.j",
		"name": "TriggerRegisterShowSkillEventBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterShowSkillEventBJ(trig)",
		"documentation": "英雄学习技能按钮被点击"
	},
	"TriggerRegisterBuildSubmenuEventBJ": {
		"original": "function TriggerRegisterBuildSubmenuEventBJ takes trigger trig returns event",
		"fileName": "blizzard.j",
		"name": "TriggerRegisterBuildSubmenuEventBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterBuildSubmenuEventBJ(trig)",
		"documentation": "建造建筑物按钮被点击"
	},
	"TriggerRegisterGameLoadedEventBJ": {
		"original": "function TriggerRegisterGameLoadedEventBJ takes trigger trig returns event",
		"fileName": "blizzard.j",
		"name": "TriggerRegisterGameLoadedEventBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterGameLoadedEventBJ(trig)",
		"documentation": "读取游戏"
	},
	"TriggerRegisterGameSavedEventBJ": {
		"original": "function TriggerRegisterGameSavedEventBJ takes trigger trig returns event",
		"fileName": "blizzard.j",
		"name": "TriggerRegisterGameSavedEventBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterGameSavedEventBJ(trig)",
		"documentation": "储存游戏"
	},
	"RegisterDestDeathInRegionEnum": {
		"original": "function RegisterDestDeathInRegionEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "RegisterDestDeathInRegionEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "RegisterDestDeathInRegionEnum()",
		"documentation": "注册可破坏物在区域内死亡(矩形区域)"
	},
	"TriggerRegisterDestDeathInRegionEvent": {
		"original": "function TriggerRegisterDestDeathInRegionEvent takes trigger trig, rect r returns nothing",
		"fileName": "blizzard.j",
		"name": "TriggerRegisterDestDeathInRegionEvent",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "rect",
			"name": "r"
		}],
		"insertText": "TriggerRegisterDestDeathInRegionEvent(trig, r)",
		"documentation": "可毁坏物在 区域 死亡"
	},
	"AddWeatherEffectSaveLast": {
		"original": "function AddWeatherEffectSaveLast takes rect where, integer effectID returns weathereffect",
		"fileName": "blizzard.j",
		"name": "AddWeatherEffectSaveLast",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "rect",
			"name": "where"
		}, {
			"type": "integer",
			"name": "effectID"
		}],
		"returnType": "weathereffect",
		"insertText": "AddWeatherEffectSaveLast(where, effectID)",
		"documentation": "创造天气效果"
	},
	"GetLastCreatedWeatherEffect": {
		"original": "function GetLastCreatedWeatherEffect takes nothing returns weathereffect",
		"fileName": "blizzard.j",
		"name": "GetLastCreatedWeatherEffect",
		"isConstant": false,
		"isNative": false,
		"returnType": "weathereffect",
		"insertText": "GetLastCreatedWeatherEffect()",
		"documentation": "最后创建的天气效果"
	},
	"RemoveWeatherEffectBJ": {
		"original": "function RemoveWeatherEffectBJ takes weathereffect whichWeatherEffect returns nothing",
		"fileName": "blizzard.j",
		"name": "RemoveWeatherEffectBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "weathereffect",
			"name": "whichWeatherEffect"
		}],
		"insertText": "RemoveWeatherEffectBJ(whichWeatherEffect)",
		"documentation": "删除天气效果"
	},
	"TerrainDeformationCraterBJ": {
		"original": "function TerrainDeformationCraterBJ takes real duration, boolean permanent, location where, real radius, real depth returns terraindeformation",
		"fileName": "blizzard.j",
		"name": "TerrainDeformationCraterBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "duration"
		}, {
			"type": "boolean",
			"name": "permanent"
		}, {
			"type": "location",
			"name": "where"
		}, {
			"type": "real",
			"name": "radius"
		}, {
			"type": "real",
			"name": "depth"
		}],
		"returnType": "terraindeformation",
		"insertText": "TerrainDeformationCraterBJ(duration, permanent, where, radius, depth)",
		"documentation": "创造地域变形 :弹坑"
	},
	"TerrainDeformationRippleBJ": {
		"original": "function TerrainDeformationRippleBJ takes real duration, boolean limitNeg, location where, real startRadius, real endRadius, real depth, real wavePeriod, real waveWidth returns terraindeformation",
		"fileName": "blizzard.j",
		"name": "TerrainDeformationRippleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "duration"
		}, {
			"type": "boolean",
			"name": "limitNeg"
		}, {
			"type": "location",
			"name": "where"
		}, {
			"type": "real",
			"name": "startRadius"
		}, {
			"type": "real",
			"name": "endRadius"
		}, {
			"type": "real",
			"name": "depth"
		}, {
			"type": "real",
			"name": "wavePeriod"
		}, {
			"type": "real",
			"name": "waveWidth"
		}],
		"returnType": "terraindeformation",
		"insertText": "TerrainDeformationRippleBJ(duration, limitNeg, where, startRadius, endRadius, depth, wavePeriod, waveWidth)",
		"documentation": "创造地域变形: 波纹"
	},
	"TerrainDeformationWaveBJ": {
		"original": "function TerrainDeformationWaveBJ takes real duration, location source, location target, real radius, real depth, real trailDelay returns terraindeformation",
		"fileName": "blizzard.j",
		"name": "TerrainDeformationWaveBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "duration"
		}, {
			"type": "location",
			"name": "source"
		}, {
			"type": "location",
			"name": "target"
		}, {
			"type": "real",
			"name": "radius"
		}, {
			"type": "real",
			"name": "depth"
		}, {
			"type": "real",
			"name": "trailDelay"
		}],
		"returnType": "terraindeformation",
		"insertText": "TerrainDeformationWaveBJ(duration, source, target, radius, depth, trailDelay)",
		"documentation": "创造地域变形: 波"
	},
	"TerrainDeformationRandomBJ": {
		"original": "function TerrainDeformationRandomBJ takes real duration, location where, real radius, real minDelta, real maxDelta, real updateInterval returns terraindeformation",
		"fileName": "blizzard.j",
		"name": "TerrainDeformationRandomBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "duration"
		}, {
			"type": "location",
			"name": "where"
		}, {
			"type": "real",
			"name": "radius"
		}, {
			"type": "real",
			"name": "minDelta"
		}, {
			"type": "real",
			"name": "maxDelta"
		}, {
			"type": "real",
			"name": "updateInterval"
		}],
		"returnType": "terraindeformation",
		"insertText": "TerrainDeformationRandomBJ(duration, where, radius, minDelta, maxDelta, updateInterval)",
		"documentation": "创造地域变形: 随机"
	},
	"TerrainDeformationStopBJ": {
		"original": "function TerrainDeformationStopBJ takes terraindeformation deformation, real duration returns nothing",
		"fileName": "blizzard.j",
		"name": "TerrainDeformationStopBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "terraindeformation",
			"name": "deformation"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "TerrainDeformationStopBJ(deformation, duration)",
		"documentation": "停止地域变形"
	},
	"GetLastCreatedTerrainDeformation": {
		"original": "function GetLastCreatedTerrainDeformation takes nothing returns terraindeformation",
		"fileName": "blizzard.j",
		"name": "GetLastCreatedTerrainDeformation",
		"isConstant": false,
		"isNative": false,
		"returnType": "terraindeformation",
		"insertText": "GetLastCreatedTerrainDeformation()",
		"documentation": "最后创建的可毁坏物"
	},
	"AddLightningLoc": {
		"original": "function AddLightningLoc takes string codeName, location where1, location where2 returns lightning",
		"fileName": "blizzard.j",
		"name": "AddLightningLoc",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "codeName"
		}, {
			"type": "location",
			"name": "where1"
		}, {
			"type": "location",
			"name": "where2"
		}],
		"returnType": "lightning",
		"insertText": "AddLightningLoc(codeName, where1, where2)",
		"documentation": "创建闪电效果于指定点"
	},
	"DestroyLightningBJ": {
		"original": "function DestroyLightningBJ takes lightning whichBolt returns boolean",
		"fileName": "blizzard.j",
		"name": "DestroyLightningBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "lightning",
			"name": "whichBolt"
		}],
		"returnType": "boolean",
		"insertText": "DestroyLightningBJ(whichBolt)",
		"documentation": "删除闪电效果"
	},
	"MoveLightningLoc": {
		"original": "function MoveLightningLoc takes lightning whichBolt, location where1, location where2 returns boolean",
		"fileName": "blizzard.j",
		"name": "MoveLightningLoc",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "lightning",
			"name": "whichBolt"
		}, {
			"type": "location",
			"name": "where1"
		}, {
			"type": "location",
			"name": "where2"
		}],
		"returnType": "boolean",
		"insertText": "MoveLightningLoc(whichBolt, where1, where2)",
		"documentation": "移动闪电效果到指定点"
	},
	"GetLightningColorABJ": {
		"original": "function GetLightningColorABJ takes lightning whichBolt returns real",
		"fileName": "blizzard.j",
		"name": "GetLightningColorABJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "lightning",
			"name": "whichBolt"
		}],
		"returnType": "real",
		"insertText": "GetLightningColorABJ(whichBolt)",
		"documentation": "闪电的Alpha通道颜色"
	},
	"GetLightningColorRBJ": {
		"original": "function GetLightningColorRBJ takes lightning whichBolt returns real",
		"fileName": "blizzard.j",
		"name": "GetLightningColorRBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "lightning",
			"name": "whichBolt"
		}],
		"returnType": "real",
		"insertText": "GetLightningColorRBJ(whichBolt)",
		"documentation": "闪电的红色通道颜色"
	},
	"GetLightningColorGBJ": {
		"original": "function GetLightningColorGBJ takes lightning whichBolt returns real",
		"fileName": "blizzard.j",
		"name": "GetLightningColorGBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "lightning",
			"name": "whichBolt"
		}],
		"returnType": "real",
		"insertText": "GetLightningColorGBJ(whichBolt)",
		"documentation": "闪电的绿色通道颜色"
	},
	"GetLightningColorBBJ": {
		"original": "function GetLightningColorBBJ takes lightning whichBolt returns real",
		"fileName": "blizzard.j",
		"name": "GetLightningColorBBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "lightning",
			"name": "whichBolt"
		}],
		"returnType": "real",
		"insertText": "GetLightningColorBBJ(whichBolt)",
		"documentation": "闪电的蓝色通道颜色"
	},
	"SetLightningColorBJ": {
		"original": "function SetLightningColorBJ takes lightning whichBolt, real r, real g, real b, real a returns boolean",
		"fileName": "blizzard.j",
		"name": "SetLightningColorBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "lightning",
			"name": "whichBolt"
		}, {
			"type": "real",
			"name": "r"
		}, {
			"type": "real",
			"name": "g"
		}, {
			"type": "real",
			"name": "b"
		}, {
			"type": "real",
			"name": "a"
		}],
		"returnType": "boolean",
		"insertText": "SetLightningColorBJ(whichBolt, r, g, b, a)",
		"documentation": "设置闪电效果颜色"
	},
	"GetLastCreatedLightningBJ": {
		"original": "function GetLastCreatedLightningBJ takes nothing returns lightning",
		"fileName": "blizzard.j",
		"name": "GetLastCreatedLightningBJ",
		"isConstant": false,
		"isNative": false,
		"returnType": "lightning",
		"insertText": "GetLastCreatedLightningBJ()",
		"documentation": "最后创建的闪电效果"
	},
	"GetAbilityEffectBJ": {
		"original": "function GetAbilityEffectBJ takes integer abilcode, effecttype t, integer index returns string",
		"fileName": "blizzard.j",
		"name": "GetAbilityEffectBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "abilcode"
		}, {
			"type": "effecttype",
			"name": "t"
		}, {
			"type": "integer",
			"name": "index"
		}],
		"returnType": "string",
		"insertText": "GetAbilityEffectBJ(abilcode, t, index)",
		"documentation": "技能效果图像"
	},
	"GetAbilitySoundBJ": {
		"original": "function GetAbilitySoundBJ takes integer abilcode, soundtype t returns string",
		"fileName": "blizzard.j",
		"name": "GetAbilitySoundBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "abilcode"
		}, {
			"type": "soundtype",
			"name": "t"
		}],
		"returnType": "string",
		"insertText": "GetAbilitySoundBJ(abilcode, t)",
		"documentation": "技能效果音"
	},
	"GetTerrainCliffLevelBJ": {
		"original": "function GetTerrainCliffLevelBJ takes location where returns integer",
		"fileName": "blizzard.j",
		"name": "GetTerrainCliffLevelBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "location",
			"name": "where"
		}],
		"returnType": "integer",
		"insertText": "GetTerrainCliffLevelBJ(where)",
		"documentation": "悬崖的高度"
	},
	"GetTerrainTypeBJ": {
		"original": "function GetTerrainTypeBJ takes location where returns integer",
		"fileName": "blizzard.j",
		"name": "GetTerrainTypeBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "location",
			"name": "where"
		}],
		"returnType": "integer",
		"insertText": "GetTerrainTypeBJ(where)",
		"documentation": "地形类型"
	},
	"GetTerrainVarianceBJ": {
		"original": "function GetTerrainVarianceBJ takes location where returns integer",
		"fileName": "blizzard.j",
		"name": "GetTerrainVarianceBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "location",
			"name": "where"
		}],
		"returnType": "integer",
		"insertText": "GetTerrainVarianceBJ(where)",
		"documentation": "地形形态"
	},
	"SetTerrainTypeBJ": {
		"original": "function SetTerrainTypeBJ takes location where, integer terrainType, integer variation, integer area, integer shape returns nothing",
		"fileName": "blizzard.j",
		"name": "SetTerrainTypeBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "location",
			"name": "where"
		}, {
			"type": "integer",
			"name": "terrainType"
		}, {
			"type": "integer",
			"name": "variation"
		}, {
			"type": "integer",
			"name": "area"
		}, {
			"type": "integer",
			"name": "shape"
		}],
		"insertText": "SetTerrainTypeBJ(where, terrainType, variation, area, shape)",
		"documentation": "改变地形类型"
	},
	"IsTerrainPathableBJ": {
		"original": "function IsTerrainPathableBJ takes location where, pathingtype t returns boolean",
		"fileName": "blizzard.j",
		"name": "IsTerrainPathableBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "location",
			"name": "where"
		}, {
			"type": "pathingtype",
			"name": "t"
		}],
		"returnType": "boolean",
		"insertText": "IsTerrainPathableBJ(where, t)",
		"documentation": "地形是否为对应路径"
	},
	"SetTerrainPathableBJ": {
		"original": "function SetTerrainPathableBJ takes location where, pathingtype t, boolean flag returns nothing",
		"fileName": "blizzard.j",
		"name": "SetTerrainPathableBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "location",
			"name": "where"
		}, {
			"type": "pathingtype",
			"name": "t"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "SetTerrainPathableBJ(where, t, flag)",
		"documentation": "设置 地形路径 开/关"
	},
	"SetWaterBaseColorBJ": {
		"original": "function SetWaterBaseColorBJ takes real red, real green, real blue, real transparency returns nothing",
		"fileName": "blizzard.j",
		"name": "SetWaterBaseColorBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}, {
			"type": "real",
			"name": "transparency"
		}],
		"insertText": "SetWaterBaseColorBJ(red, green, blue, transparency)",
		"documentation": "设置 水 颜色"
	},
	"CreateFogModifierRectSimple": {
		"original": "function CreateFogModifierRectSimple takes player whichPlayer, fogstate whichFogState, rect r, boolean afterUnits returns fogmodifier",
		"fileName": "blizzard.j",
		"name": "CreateFogModifierRectSimple",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "fogstate",
			"name": "whichFogState"
		}, {
			"type": "rect",
			"name": "r"
		}, {
			"type": "boolean",
			"name": "afterUnits"
		}],
		"returnType": "fogmodifier",
		"insertText": "CreateFogModifierRectSimple(whichPlayer, whichFogState, r, afterUnits)",
		"documentation": "创建可见度修正器(矩形区域)"
	},
	"CreateFogModifierRadiusLocSimple": {
		"original": "function CreateFogModifierRadiusLocSimple takes player whichPlayer, fogstate whichFogState, location center, real radius, boolean afterUnits returns fogmodifier",
		"fileName": "blizzard.j",
		"name": "CreateFogModifierRadiusLocSimple",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "fogstate",
			"name": "whichFogState"
		}, {
			"type": "location",
			"name": "center"
		}, {
			"type": "real",
			"name": "radius"
		}, {
			"type": "boolean",
			"name": "afterUnits"
		}],
		"returnType": "fogmodifier",
		"insertText": "CreateFogModifierRadiusLocSimple(whichPlayer, whichFogState, center, radius, afterUnits)",
		"documentation": "创建可见度修正器(圆范围)"
	},
	"CreateFogModifierRectBJ": {
		"original": "function CreateFogModifierRectBJ takes boolean enabled, player whichPlayer, fogstate whichFogState, rect r returns fogmodifier",
		"fileName": "blizzard.j",
		"name": "CreateFogModifierRectBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "enabled"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "fogstate",
			"name": "whichFogState"
		}, {
			"type": "rect",
			"name": "r"
		}],
		"returnType": "fogmodifier",
		"insertText": "CreateFogModifierRectBJ(enabled, whichPlayer, whichFogState, r)",
		"documentation": "创造 区域 可见度修正器"
	},
	"CreateFogModifierRadiusLocBJ": {
		"original": "function CreateFogModifierRadiusLocBJ takes boolean enabled, player whichPlayer, fogstate whichFogState, location center, real radius returns fogmodifier",
		"fileName": "blizzard.j",
		"name": "CreateFogModifierRadiusLocBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "enabled"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "fogstate",
			"name": "whichFogState"
		}, {
			"type": "location",
			"name": "center"
		}, {
			"type": "real",
			"name": "radius"
		}],
		"returnType": "fogmodifier",
		"insertText": "CreateFogModifierRadiusLocBJ(enabled, whichPlayer, whichFogState, center, radius)",
		"documentation": "创造 圆周 可见度修正器"
	},
	"GetLastCreatedFogModifier": {
		"original": "function GetLastCreatedFogModifier takes nothing returns fogmodifier",
		"fileName": "blizzard.j",
		"name": "GetLastCreatedFogModifier",
		"isConstant": false,
		"isNative": false,
		"returnType": "fogmodifier",
		"insertText": "GetLastCreatedFogModifier()",
		"documentation": "最后创建的可见度修正器"
	},
	"FogEnableOn": {
		"original": "function FogEnableOn takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "FogEnableOn",
		"isConstant": false,
		"isNative": false,
		"insertText": "FogEnableOn()",
		"documentation": "允许战争迷雾"
	},
	"FogEnableOff": {
		"original": "function FogEnableOff takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "FogEnableOff",
		"isConstant": false,
		"isNative": false,
		"insertText": "FogEnableOff()",
		"documentation": "禁止战争迷雾"
	},
	"FogMaskEnableOn": {
		"original": "function FogMaskEnableOn takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "FogMaskEnableOn",
		"isConstant": false,
		"isNative": false,
		"insertText": "FogMaskEnableOn()",
		"documentation": "允许黑色阴影"
	},
	"FogMaskEnableOff": {
		"original": "function FogMaskEnableOff takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "FogMaskEnableOff",
		"isConstant": false,
		"isNative": false,
		"insertText": "FogMaskEnableOff()",
		"documentation": "禁止黑色阴影"
	},
	"UseTimeOfDayBJ": {
		"original": "function UseTimeOfDayBJ takes boolean flag returns nothing",
		"fileName": "blizzard.j",
		"name": "UseTimeOfDayBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "UseTimeOfDayBJ(flag)",
		"documentation": "打开/关闭日夜循环"
	},
	"SetTerrainFogExBJ": {
		"original": "function SetTerrainFogExBJ takes integer style, real zstart, real zend, real density, real red, real green, real blue returns nothing",
		"fileName": "blizzard.j",
		"name": "SetTerrainFogExBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "style"
		}, {
			"type": "real",
			"name": "zstart"
		}, {
			"type": "real",
			"name": "zend"
		}, {
			"type": "real",
			"name": "density"
		}, {
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}],
		"insertText": "SetTerrainFogExBJ(style, zstart, zend, density, red, green, blue)",
		"documentation": "设置 迷雾 "
	},
	"ResetTerrainFogBJ": {
		"original": "function ResetTerrainFogBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "ResetTerrainFogBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "ResetTerrainFogBJ()",
		"documentation": "重置 迷雾"
	},
	"SetDoodadAnimationBJ": {
		"original": "function SetDoodadAnimationBJ takes string animName, integer doodadID, real radius, location center returns nothing",
		"fileName": "blizzard.j",
		"name": "SetDoodadAnimationBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "animName"
		}, {
			"type": "integer",
			"name": "doodadID"
		}, {
			"type": "real",
			"name": "radius"
		}, {
			"type": "location",
			"name": "center"
		}],
		"insertText": "SetDoodadAnimationBJ(animName, doodadID, radius, center)",
		"documentation": "播放圆周内地形装饰物的动作"
	},
	"SetDoodadAnimationRectBJ": {
		"original": "function SetDoodadAnimationRectBJ takes string animName, integer doodadID, rect r returns nothing",
		"fileName": "blizzard.j",
		"name": "SetDoodadAnimationRectBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "animName"
		}, {
			"type": "integer",
			"name": "doodadID"
		}, {
			"type": "rect",
			"name": "r"
		}],
		"insertText": "SetDoodadAnimationRectBJ(animName, doodadID, r)",
		"documentation": "播放区域内地形装饰物的动作"
	},
	"AddUnitAnimationPropertiesBJ": {
		"original": "function AddUnitAnimationPropertiesBJ takes boolean add, string animProperties, unit whichUnit returns nothing",
		"fileName": "blizzard.j",
		"name": "AddUnitAnimationPropertiesBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "add"
		}, {
			"type": "string",
			"name": "animProperties"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"insertText": "AddUnitAnimationPropertiesBJ(add, animProperties, whichUnit)",
		"documentation": "添加/删除 单位动画 标签"
	},
	"CreateImageBJ": {
		"original": "function CreateImageBJ takes string file, real size, location where, real zOffset, integer imageType returns image",
		"fileName": "blizzard.j",
		"name": "CreateImageBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "file"
		}, {
			"type": "real",
			"name": "size"
		}, {
			"type": "location",
			"name": "where"
		}, {
			"type": "real",
			"name": "zOffset"
		}, {
			"type": "integer",
			"name": "imageType"
		}],
		"returnType": "image",
		"insertText": "CreateImageBJ(file, size, where, zOffset, imageType)",
		"documentation": "创建图像"
	},
	"ShowImageBJ": {
		"original": "function ShowImageBJ takes boolean flag, image whichImage returns nothing",
		"fileName": "blizzard.j",
		"name": "ShowImageBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "flag"
		}, {
			"type": "image",
			"name": "whichImage"
		}],
		"insertText": "ShowImageBJ(flag, whichImage)",
		"documentation": "显示/隐藏图像"
	},
	"SetImagePositionBJ": {
		"original": "function SetImagePositionBJ takes image whichImage, location where, real zOffset returns nothing",
		"fileName": "blizzard.j",
		"name": "SetImagePositionBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "image",
			"name": "whichImage"
		}, {
			"type": "location",
			"name": "where"
		}, {
			"type": "real",
			"name": "zOffset"
		}],
		"insertText": "SetImagePositionBJ(whichImage, where, zOffset)",
		"documentation": "改变图像位置"
	},
	"SetImageColorBJ": {
		"original": "function SetImageColorBJ takes image whichImage, real red, real green, real blue, real alpha returns nothing",
		"fileName": "blizzard.j",
		"name": "SetImageColorBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "image",
			"name": "whichImage"
		}, {
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}, {
			"type": "real",
			"name": "alpha"
		}],
		"insertText": "SetImageColorBJ(whichImage, red, green, blue, alpha)",
		"documentation": "改变图像颜色"
	},
	"GetLastCreatedImage": {
		"original": "function GetLastCreatedImage takes nothing returns image",
		"fileName": "blizzard.j",
		"name": "GetLastCreatedImage",
		"isConstant": false,
		"isNative": false,
		"returnType": "image",
		"insertText": "GetLastCreatedImage()",
		"documentation": "最后创建的图像"
	},
	"CreateUbersplatBJ": {
		"original": "function CreateUbersplatBJ takes location where, string name, real red, real green, real blue, real alpha, boolean forcePaused, boolean noBirthTime returns ubersplat",
		"fileName": "blizzard.j",
		"name": "CreateUbersplatBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "location",
			"name": "where"
		}, {
			"type": "string",
			"name": "name"
		}, {
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}, {
			"type": "real",
			"name": "alpha"
		}, {
			"type": "boolean",
			"name": "forcePaused"
		}, {
			"type": "boolean",
			"name": "noBirthTime"
		}],
		"returnType": "ubersplat",
		"insertText": "CreateUbersplatBJ(where, name, red, green, blue, alpha, forcePaused, noBirthTime)",
		"documentation": "创建地面纹理"
	},
	"ShowUbersplatBJ": {
		"original": "function ShowUbersplatBJ takes boolean flag, ubersplat whichSplat returns nothing",
		"fileName": "blizzard.j",
		"name": "ShowUbersplatBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "flag"
		}, {
			"type": "ubersplat",
			"name": "whichSplat"
		}],
		"insertText": "ShowUbersplatBJ(flag, whichSplat)",
		"documentation": "显示/隐藏地面纹理"
	},
	"GetLastCreatedUbersplat": {
		"original": "function GetLastCreatedUbersplat takes nothing returns ubersplat",
		"fileName": "blizzard.j",
		"name": "GetLastCreatedUbersplat",
		"isConstant": false,
		"isNative": false,
		"returnType": "ubersplat",
		"insertText": "GetLastCreatedUbersplat()",
		"documentation": "最后创建的地面纹理"
	},
	"PlaySoundBJ": {
		"original": "function PlaySoundBJ takes sound soundHandle returns nothing",
		"fileName": "blizzard.j",
		"name": "PlaySoundBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}],
		"insertText": "PlaySoundBJ(soundHandle)",
		"documentation": "播放声音"
	},
	"StopSoundBJ": {
		"original": "function StopSoundBJ takes sound soundHandle, boolean fadeOut returns nothing",
		"fileName": "blizzard.j",
		"name": "StopSoundBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "boolean",
			"name": "fadeOut"
		}],
		"insertText": "StopSoundBJ(soundHandle, fadeOut)",
		"documentation": "停止声音"
	},
	"SetSoundVolumeBJ": {
		"original": "function SetSoundVolumeBJ takes sound soundHandle, real volumePercent returns nothing",
		"fileName": "blizzard.j",
		"name": "SetSoundVolumeBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "real",
			"name": "volumePercent"
		}],
		"insertText": "SetSoundVolumeBJ(soundHandle, volumePercent)",
		"documentation": "设置声音音量"
	},
	"SetSoundOffsetBJ": {
		"original": "function SetSoundOffsetBJ takes real newOffset, sound soundHandle returns nothing",
		"fileName": "blizzard.j",
		"name": "SetSoundOffsetBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "newOffset"
		}, {
			"type": "sound",
			"name": "soundHandle"
		}],
		"insertText": "SetSoundOffsetBJ(newOffset, soundHandle)",
		"documentation": "跳跃播放声音"
	},
	"SetSoundDistanceCutoffBJ": {
		"original": "function SetSoundDistanceCutoffBJ takes sound soundHandle, real cutoff returns nothing",
		"fileName": "blizzard.j",
		"name": "SetSoundDistanceCutoffBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "real",
			"name": "cutoff"
		}],
		"insertText": "SetSoundDistanceCutoffBJ(soundHandle, cutoff)",
		"documentation": "设置声音距离"
	},
	"SetSoundPitchBJ": {
		"original": "function SetSoundPitchBJ takes sound soundHandle, real pitch returns nothing",
		"fileName": "blizzard.j",
		"name": "SetSoundPitchBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "real",
			"name": "pitch"
		}],
		"insertText": "SetSoundPitchBJ(soundHandle, pitch)",
		"documentation": "设置声音定调"
	},
	"SetSoundPositionLocBJ": {
		"original": "function SetSoundPositionLocBJ takes sound soundHandle, location loc, real z returns nothing",
		"fileName": "blizzard.j",
		"name": "SetSoundPositionLocBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "location",
			"name": "loc"
		}, {
			"type": "real",
			"name": "z"
		}],
		"insertText": "SetSoundPositionLocBJ(soundHandle, loc, z)",
		"documentation": "设置3D声音位置"
	},
	"AttachSoundToUnitBJ": {
		"original": "function AttachSoundToUnitBJ takes sound soundHandle, unit whichUnit returns nothing",
		"fileName": "blizzard.j",
		"name": "AttachSoundToUnitBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"insertText": "AttachSoundToUnitBJ(soundHandle, whichUnit)",
		"documentation": "捆绑3D声音到单位"
	},
	"SetSoundConeAnglesBJ": {
		"original": "function SetSoundConeAnglesBJ takes sound soundHandle, real inside, real outside, real outsideVolumePercent returns nothing",
		"fileName": "blizzard.j",
		"name": "SetSoundConeAnglesBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "real",
			"name": "inside"
		}, {
			"type": "real",
			"name": "outside"
		}, {
			"type": "real",
			"name": "outsideVolumePercent"
		}],
		"insertText": "SetSoundConeAnglesBJ(soundHandle, inside, outside, outsideVolumePercent)",
		"documentation": ""
	},
	"KillSoundWhenDoneBJ": {
		"original": "function KillSoundWhenDoneBJ takes sound soundHandle returns nothing",
		"fileName": "blizzard.j",
		"name": "KillSoundWhenDoneBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}],
		"insertText": "KillSoundWhenDoneBJ(soundHandle)",
		"documentation": "破坏声音"
	},
	"PlaySoundAtPointBJ": {
		"original": "function PlaySoundAtPointBJ takes sound soundHandle, real volumePercent, location loc, real z returns nothing",
		"fileName": "blizzard.j",
		"name": "PlaySoundAtPointBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "real",
			"name": "volumePercent"
		}, {
			"type": "location",
			"name": "loc"
		}, {
			"type": "real",
			"name": "z"
		}],
		"insertText": "PlaySoundAtPointBJ(soundHandle, volumePercent, loc, z)",
		"documentation": "播放声音在点"
	},
	"PlaySoundOnUnitBJ": {
		"original": "function PlaySoundOnUnitBJ takes sound soundHandle, real volumePercent, unit whichUnit returns nothing",
		"fileName": "blizzard.j",
		"name": "PlaySoundOnUnitBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "real",
			"name": "volumePercent"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"insertText": "PlaySoundOnUnitBJ(soundHandle, volumePercent, whichUnit)",
		"documentation": "播放声音单位"
	},
	"PlaySoundFromOffsetBJ": {
		"original": "function PlaySoundFromOffsetBJ takes sound soundHandle, real volumePercent, real startingOffset returns nothing",
		"fileName": "blizzard.j",
		"name": "PlaySoundFromOffsetBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "real",
			"name": "volumePercent"
		}, {
			"type": "real",
			"name": "startingOffset"
		}],
		"insertText": "PlaySoundFromOffsetBJ(soundHandle, volumePercent, startingOffset)",
		"documentation": "播放声音 有等待时间"
	},
	"PlayMusicBJ": {
		"original": "function PlayMusicBJ takes string musicFileName returns nothing",
		"fileName": "blizzard.j",
		"name": "PlayMusicBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "musicFileName"
		}],
		"insertText": "PlayMusicBJ(musicFileName)",
		"documentation": "播放音乐"
	},
	"PlayMusicExBJ": {
		"original": "function PlayMusicExBJ takes string musicFileName, real startingOffset, real fadeInTime returns nothing",
		"fileName": "blizzard.j",
		"name": "PlayMusicExBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "musicFileName"
		}, {
			"type": "real",
			"name": "startingOffset"
		}, {
			"type": "real",
			"name": "fadeInTime"
		}],
		"insertText": "PlayMusicExBJ(musicFileName, startingOffset, fadeInTime)",
		"documentation": "播放音乐(跳跃)"
	},
	"SetMusicOffsetBJ": {
		"original": "function SetMusicOffsetBJ takes real newOffset returns nothing",
		"fileName": "blizzard.j",
		"name": "SetMusicOffsetBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "newOffset"
		}],
		"insertText": "SetMusicOffsetBJ(newOffset)",
		"documentation": "跳越音乐"
	},
	"PlayThematicMusicBJ": {
		"original": "function PlayThematicMusicBJ takes string musicName returns nothing",
		"fileName": "blizzard.j",
		"name": "PlayThematicMusicBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "musicName"
		}],
		"insertText": "PlayThematicMusicBJ(musicName)",
		"documentation": "播放主题音乐"
	},
	"PlayThematicMusicExBJ": {
		"original": "function PlayThematicMusicExBJ takes string musicName, real startingOffset returns nothing",
		"fileName": "blizzard.j",
		"name": "PlayThematicMusicExBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "musicName"
		}, {
			"type": "real",
			"name": "startingOffset"
		}],
		"insertText": "PlayThematicMusicExBJ(musicName, startingOffset)",
		"documentation": "播放主题音乐(跳跃)"
	},
	"SetThematicMusicOffsetBJ": {
		"original": "function SetThematicMusicOffsetBJ takes real newOffset returns nothing",
		"fileName": "blizzard.j",
		"name": "SetThematicMusicOffsetBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "newOffset"
		}],
		"insertText": "SetThematicMusicOffsetBJ(newOffset)",
		"documentation": "跳越音乐主题曲"
	},
	"EndThematicMusicBJ": {
		"original": "function EndThematicMusicBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "EndThematicMusicBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "EndThematicMusicBJ()",
		"documentation": "停放主题曲"
	},
	"StopMusicBJ": {
		"original": "function StopMusicBJ takes boolean fadeOut returns nothing",
		"fileName": "blizzard.j",
		"name": "StopMusicBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "fadeOut"
		}],
		"insertText": "StopMusicBJ(fadeOut)",
		"documentation": "停止音乐"
	},
	"ResumeMusicBJ": {
		"original": "function ResumeMusicBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "ResumeMusicBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "ResumeMusicBJ()",
		"documentation": "继续音乐"
	},
	"SetMusicVolumeBJ": {
		"original": "function SetMusicVolumeBJ takes real volumePercent returns nothing",
		"fileName": "blizzard.j",
		"name": "SetMusicVolumeBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "volumePercent"
		}],
		"insertText": "SetMusicVolumeBJ(volumePercent)",
		"documentation": "设置音乐音量"
	},
	"GetSoundDurationBJ": {
		"original": "function GetSoundDurationBJ takes sound soundHandle returns real",
		"fileName": "blizzard.j",
		"name": "GetSoundDurationBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}],
		"returnType": "real",
		"insertText": "GetSoundDurationBJ(soundHandle)",
		"documentation": "声音长度"
	},
	"GetSoundFileDurationBJ": {
		"original": "function GetSoundFileDurationBJ takes string musicFileName returns real",
		"fileName": "blizzard.j",
		"name": "GetSoundFileDurationBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "musicFileName"
		}],
		"returnType": "real",
		"insertText": "GetSoundFileDurationBJ(musicFileName)",
		"documentation": "音乐长度"
	},
	"GetLastPlayedSound": {
		"original": "function GetLastPlayedSound takes nothing returns sound",
		"fileName": "blizzard.j",
		"name": "GetLastPlayedSound",
		"isConstant": false,
		"isNative": false,
		"returnType": "sound",
		"insertText": "GetLastPlayedSound()",
		"documentation": "最后播放的声音"
	},
	"GetLastPlayedMusic": {
		"original": "function GetLastPlayedMusic takes nothing returns string",
		"fileName": "blizzard.j",
		"name": "GetLastPlayedMusic",
		"isConstant": false,
		"isNative": false,
		"returnType": "string",
		"insertText": "GetLastPlayedMusic()",
		"documentation": "最后播放的音乐"
	},
	"VolumeGroupSetVolumeBJ": {
		"original": "function VolumeGroupSetVolumeBJ takes volumegroup vgroup, real percent returns nothing",
		"fileName": "blizzard.j",
		"name": "VolumeGroupSetVolumeBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "volumegroup",
			"name": "vgroup"
		}, {
			"type": "real",
			"name": "percent"
		}],
		"insertText": "VolumeGroupSetVolumeBJ(vgroup, percent)",
		"documentation": "设置音量"
	},
	"SetCineModeVolumeGroupsImmediateBJ": {
		"original": "function SetCineModeVolumeGroupsImmediateBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "SetCineModeVolumeGroupsImmediateBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "SetCineModeVolumeGroupsImmediateBJ()",
		"documentation": "设置电影多通道音量环境(立即)"
	},
	"SetCineModeVolumeGroupsBJ": {
		"original": "function SetCineModeVolumeGroupsBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "SetCineModeVolumeGroupsBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "SetCineModeVolumeGroupsBJ()",
		"documentation": "将所有音量设置为动画"
	},
	"SetSpeechVolumeGroupsImmediateBJ": {
		"original": "function SetSpeechVolumeGroupsImmediateBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "SetSpeechVolumeGroupsImmediateBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "SetSpeechVolumeGroupsImmediateBJ()",
		"documentation": "设置语音多通道音量环境(立即)"
	},
	"SetSpeechVolumeGroupsBJ": {
		"original": "function SetSpeechVolumeGroupsBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "SetSpeechVolumeGroupsBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "SetSpeechVolumeGroupsBJ()",
		"documentation": "将所有音量设置为说话"
	},
	"VolumeGroupResetImmediateBJ": {
		"original": "function VolumeGroupResetImmediateBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "VolumeGroupResetImmediateBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "VolumeGroupResetImmediateBJ()",
		"documentation": "重置多通道音量(立即)"
	},
	"VolumeGroupResetBJ": {
		"original": "function VolumeGroupResetBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "VolumeGroupResetBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "VolumeGroupResetBJ()",
		"documentation": "重置所有音量"
	},
	"GetSoundIsPlayingBJ": {
		"original": "function GetSoundIsPlayingBJ takes sound soundHandle returns boolean",
		"fileName": "blizzard.j",
		"name": "GetSoundIsPlayingBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}],
		"returnType": "boolean",
		"insertText": "GetSoundIsPlayingBJ(soundHandle)",
		"documentation": "获取声音是否播放中"
	},
	"WaitForSoundBJ": {
		"original": "function WaitForSoundBJ takes sound soundHandle, real offset returns nothing",
		"fileName": "blizzard.j",
		"name": "WaitForSoundBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "real",
			"name": "offset"
		}],
		"insertText": "WaitForSoundBJ(soundHandle, offset)",
		"documentation": "等待声音结束"
	},
	"SetMapMusicIndexedBJ": {
		"original": "function SetMapMusicIndexedBJ takes string musicName, integer index returns nothing",
		"fileName": "blizzard.j",
		"name": "SetMapMusicIndexedBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "musicName"
		}, {
			"type": "integer",
			"name": "index"
		}],
		"insertText": "SetMapMusicIndexedBJ(musicName, index)",
		"documentation": "设置音乐列表 (使用指定的开始音乐)"
	},
	"SetMapMusicRandomBJ": {
		"original": "function SetMapMusicRandomBJ takes string musicName returns nothing",
		"fileName": "blizzard.j",
		"name": "SetMapMusicRandomBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "musicName"
		}],
		"insertText": "SetMapMusicRandomBJ(musicName)",
		"documentation": "设定音乐列表 (使用随机的开始音乐)"
	},
	"ClearMapMusicBJ": {
		"original": "function ClearMapMusicBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "ClearMapMusicBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "ClearMapMusicBJ()",
		"documentation": "清空音乐列表"
	},
	"SetStackedSoundBJ": {
		"original": "function SetStackedSoundBJ takes boolean add, sound soundHandle, rect r returns nothing",
		"fileName": "blizzard.j",
		"name": "SetStackedSoundBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "add"
		}, {
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "rect",
			"name": "r"
		}],
		"insertText": "SetStackedSoundBJ(add, soundHandle, r)",
		"documentation": "添加/删除穿越区域的3维声音"
	},
	"StartSoundForPlayerBJ": {
		"original": "function StartSoundForPlayerBJ takes player whichPlayer, sound soundHandle returns nothing",
		"fileName": "blizzard.j",
		"name": "StartSoundForPlayerBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "sound",
			"name": "soundHandle"
		}],
		"insertText": "StartSoundForPlayerBJ(whichPlayer, soundHandle)",
		"documentation": "为指定玩家播放声音"
	},
	"VolumeGroupSetVolumeForPlayerBJ": {
		"original": "function VolumeGroupSetVolumeForPlayerBJ takes player whichPlayer, volumegroup vgroup, real scale returns nothing",
		"fileName": "blizzard.j",
		"name": "VolumeGroupSetVolumeForPlayerBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "volumegroup",
			"name": "vgroup"
		}, {
			"type": "real",
			"name": "scale"
		}],
		"insertText": "VolumeGroupSetVolumeForPlayerBJ(whichPlayer, vgroup, scale)",
		"documentation": "设置玩家声音组音量"
	},
	"EnableDawnDusk": {
		"original": "function EnableDawnDusk takes boolean flag returns nothing",
		"fileName": "blizzard.j",
		"name": "EnableDawnDusk",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "EnableDawnDusk(flag)",
		"documentation": "打开/关闭 日出/日落 的声音"
	},
	"IsDawnDuskEnabled": {
		"original": "function IsDawnDuskEnabled takes nothing returns boolean",
		"fileName": "blizzard.j",
		"name": "IsDawnDuskEnabled",
		"isConstant": false,
		"isNative": false,
		"returnType": "boolean",
		"insertText": "IsDawnDuskEnabled()",
		"documentation": "是否启用了黎明和黄昏"
	},
	"SetAmbientDaySound": {
		"original": "function SetAmbientDaySound takes string inLabel returns nothing",
		"fileName": "blizzard.j",
		"name": "SetAmbientDaySound",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "inLabel"
		}],
		"insertText": "SetAmbientDaySound(inLabel)",
		"documentation": "使用白昼环境的音乐"
	},
	"SetAmbientNightSound": {
		"original": "function SetAmbientNightSound takes string inLabel returns nothing",
		"fileName": "blizzard.j",
		"name": "SetAmbientNightSound",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "inLabel"
		}],
		"insertText": "SetAmbientNightSound(inLabel)",
		"documentation": "使用夜晚环境的音乐"
	},
	"AddSpecialEffectLocBJ": {
		"original": "function AddSpecialEffectLocBJ takes location where, string modelName returns effect",
		"fileName": "blizzard.j",
		"name": "AddSpecialEffectLocBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "location",
			"name": "where"
		}, {
			"type": "string",
			"name": "modelName"
		}],
		"returnType": "effect",
		"insertText": "AddSpecialEffectLocBJ(where, modelName)",
		"documentation": "对某点创造特殊效果"
	},
	"AddSpecialEffectTargetUnitBJ": {
		"original": "function AddSpecialEffectTargetUnitBJ takes string attachPointName, widget targetWidget, string modelName returns effect",
		"fileName": "blizzard.j",
		"name": "AddSpecialEffectTargetUnitBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "attachPointName"
		}, {
			"type": "widget",
			"name": "targetWidget"
		}, {
			"type": "string",
			"name": "modelName"
		}],
		"returnType": "effect",
		"insertText": "AddSpecialEffectTargetUnitBJ(attachPointName, targetWidget, modelName)",
		"documentation": "对某单位创造特殊效果"
	},
	"DestroyEffectBJ": {
		"original": "function DestroyEffectBJ takes effect whichEffect returns nothing",
		"fileName": "blizzard.j",
		"name": "DestroyEffectBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "effect",
			"name": "whichEffect"
		}],
		"insertText": "DestroyEffectBJ(whichEffect)",
		"documentation": "删除特殊效果"
	},
	"GetLastCreatedEffectBJ": {
		"original": "function GetLastCreatedEffectBJ takes nothing returns effect",
		"fileName": "blizzard.j",
		"name": "GetLastCreatedEffectBJ",
		"isConstant": false,
		"isNative": false,
		"returnType": "effect",
		"insertText": "GetLastCreatedEffectBJ()",
		"documentation": "最后创建的特殊效果"
	},
	"GetItemLoc": {
		"original": "function GetItemLoc takes item whichItem returns location",
		"fileName": "blizzard.j",
		"name": "GetItemLoc",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}],
		"returnType": "location",
		"insertText": "GetItemLoc(whichItem)",
		"documentation": "物品的位置"
	},
	"GetItemLifeBJ": {
		"original": "function GetItemLifeBJ takes widget whichWidget returns real",
		"fileName": "blizzard.j",
		"name": "GetItemLifeBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "widget",
			"name": "whichWidget"
		}],
		"returnType": "real",
		"insertText": "GetItemLifeBJ(whichWidget)",
		"documentation": "物品生命"
	},
	"SetItemLifeBJ": {
		"original": "function SetItemLifeBJ takes widget whichWidget, real life returns nothing",
		"fileName": "blizzard.j",
		"name": "SetItemLifeBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "widget",
			"name": "whichWidget"
		}, {
			"type": "real",
			"name": "life"
		}],
		"insertText": "SetItemLifeBJ(whichWidget, life)",
		"documentation": "设置生命(物品)"
	},
	"AddHeroXPSwapped": {
		"original": "function AddHeroXPSwapped takes integer xpToAdd, unit whichHero, boolean showEyeCandy returns nothing",
		"fileName": "blizzard.j",
		"name": "AddHeroXPSwapped",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "xpToAdd"
		}, {
			"type": "unit",
			"name": "whichHero"
		}, {
			"type": "boolean",
			"name": "showEyeCandy"
		}],
		"insertText": "AddHeroXPSwapped(xpToAdd, whichHero, showEyeCandy)",
		"documentation": "增加英雄经验值"
	},
	"SetHeroLevelBJ": {
		"original": "function SetHeroLevelBJ takes unit whichHero, integer newLevel, boolean showEyeCandy returns nothing",
		"fileName": "blizzard.j",
		"name": "SetHeroLevelBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichHero"
		}, {
			"type": "integer",
			"name": "newLevel"
		}, {
			"type": "boolean",
			"name": "showEyeCandy"
		}],
		"insertText": "SetHeroLevelBJ(whichHero, newLevel, showEyeCandy)",
		"documentation": "设置英雄等级"
	},
	"DecUnitAbilityLevelSwapped": {
		"original": "function DecUnitAbilityLevelSwapped takes integer abilcode, unit whichUnit returns integer",
		"fileName": "blizzard.j",
		"name": "DecUnitAbilityLevelSwapped",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "abilcode"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "integer",
		"insertText": "DecUnitAbilityLevelSwapped(abilcode, whichUnit)",
		"documentation": "降低单位技能等级"
	},
	"IncUnitAbilityLevelSwapped": {
		"original": "function IncUnitAbilityLevelSwapped takes integer abilcode, unit whichUnit returns integer",
		"fileName": "blizzard.j",
		"name": "IncUnitAbilityLevelSwapped",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "abilcode"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "integer",
		"insertText": "IncUnitAbilityLevelSwapped(abilcode, whichUnit)",
		"documentation": "提升单位技能等级"
	},
	"SetUnitAbilityLevelSwapped": {
		"original": "function SetUnitAbilityLevelSwapped takes integer abilcode, unit whichUnit, integer level returns integer",
		"fileName": "blizzard.j",
		"name": "SetUnitAbilityLevelSwapped",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "abilcode"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "level"
		}],
		"returnType": "integer",
		"insertText": "SetUnitAbilityLevelSwapped(abilcode, whichUnit, level)",
		"documentation": "设置单位技能等级"
	},
	"GetUnitAbilityLevelSwapped": {
		"original": "function GetUnitAbilityLevelSwapped takes integer abilcode, unit whichUnit returns integer",
		"fileName": "blizzard.j",
		"name": "GetUnitAbilityLevelSwapped",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "abilcode"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "integer",
		"insertText": "GetUnitAbilityLevelSwapped(abilcode, whichUnit)",
		"documentation": "单位的技能等级"
	},
	"UnitHasBuffBJ": {
		"original": "function UnitHasBuffBJ takes unit whichUnit, integer buffcode returns boolean",
		"fileName": "blizzard.j",
		"name": "UnitHasBuffBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "buffcode"
		}],
		"returnType": "boolean",
		"insertText": "UnitHasBuffBJ(whichUnit, buffcode)",
		"documentation": "单位存在 魔法特效"
	},
	"UnitRemoveBuffBJ": {
		"original": "function UnitRemoveBuffBJ takes integer buffcode, unit whichUnit returns boolean",
		"fileName": "blizzard.j",
		"name": "UnitRemoveBuffBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "buffcode"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "boolean",
		"insertText": "UnitRemoveBuffBJ(buffcode, whichUnit)",
		"documentation": "删除 持续状态 (指定的)"
	},
	"UnitAddItemSwapped": {
		"original": "function UnitAddItemSwapped takes item whichItem, unit whichHero returns boolean",
		"fileName": "blizzard.j",
		"name": "UnitAddItemSwapped",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}, {
			"type": "unit",
			"name": "whichHero"
		}],
		"returnType": "boolean",
		"insertText": "UnitAddItemSwapped(whichItem, whichHero)",
		"documentation": "移动物品给英雄"
	},
	"UnitAddItemByIdSwapped": {
		"original": "function UnitAddItemByIdSwapped takes integer itemId, unit whichHero returns item",
		"fileName": "blizzard.j",
		"name": "UnitAddItemByIdSwapped",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "itemId"
		}, {
			"type": "unit",
			"name": "whichHero"
		}],
		"returnType": "item",
		"insertText": "UnitAddItemByIdSwapped(itemId, whichHero)",
		"documentation": "创建物品给英雄"
	},
	"UnitRemoveItemSwapped": {
		"original": "function UnitRemoveItemSwapped takes item whichItem, unit whichHero returns nothing",
		"fileName": "blizzard.j",
		"name": "UnitRemoveItemSwapped",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}, {
			"type": "unit",
			"name": "whichHero"
		}],
		"insertText": "UnitRemoveItemSwapped(whichItem, whichHero)",
		"documentation": "掉落英雄的一个物品"
	},
	"UnitRemoveItemFromSlotSwapped": {
		"original": "function UnitRemoveItemFromSlotSwapped takes integer itemSlot, unit whichHero returns item",
		"fileName": "blizzard.j",
		"name": "UnitRemoveItemFromSlotSwapped",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "itemSlot"
		}, {
			"type": "unit",
			"name": "whichHero"
		}],
		"returnType": "item",
		"insertText": "UnitRemoveItemFromSlotSwapped(itemSlot, whichHero)",
		"documentation": "从英雄的物品栏位置中掉落物品"
	},
	"CreateItemLoc": {
		"original": "function CreateItemLoc takes integer itemId, location loc returns item",
		"fileName": "blizzard.j",
		"name": "CreateItemLoc",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "itemId"
		}, {
			"type": "location",
			"name": "loc"
		}],
		"returnType": "item",
		"insertText": "CreateItemLoc(itemId, loc)",
		"documentation": "创造物品"
	},
	"GetLastCreatedItem": {
		"original": "function GetLastCreatedItem takes nothing returns item",
		"fileName": "blizzard.j",
		"name": "GetLastCreatedItem",
		"isConstant": false,
		"isNative": false,
		"returnType": "item",
		"insertText": "GetLastCreatedItem()",
		"documentation": "最后创造的物品"
	},
	"GetLastRemovedItem": {
		"original": "function GetLastRemovedItem takes nothing returns item",
		"fileName": "blizzard.j",
		"name": "GetLastRemovedItem",
		"isConstant": false,
		"isNative": false,
		"returnType": "item",
		"insertText": "GetLastRemovedItem()",
		"documentation": "最后掉落的物品"
	},
	"SetItemPositionLoc": {
		"original": "function SetItemPositionLoc takes item whichItem, location loc returns nothing",
		"fileName": "blizzard.j",
		"name": "SetItemPositionLoc",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}, {
			"type": "location",
			"name": "loc"
		}],
		"insertText": "SetItemPositionLoc(whichItem, loc)",
		"documentation": "移动物品 (立刻)"
	},
	"GetLearnedSkillBJ": {
		"original": "function GetLearnedSkillBJ takes nothing returns integer",
		"fileName": "blizzard.j",
		"name": "GetLearnedSkillBJ",
		"isConstant": false,
		"isNative": false,
		"returnType": "integer",
		"insertText": "GetLearnedSkillBJ()",
		"documentation": "学习英雄技能"
	},
	"SuspendHeroXPBJ": {
		"original": "function SuspendHeroXPBJ takes boolean flag, unit whichHero returns nothing",
		"fileName": "blizzard.j",
		"name": "SuspendHeroXPBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "flag"
		}, {
			"type": "unit",
			"name": "whichHero"
		}],
		"insertText": "SuspendHeroXPBJ(flag, whichHero)",
		"documentation": "允许/禁止 英雄获得经验值"
	},
	"SetPlayerHandicapXPBJ": {
		"original": "function SetPlayerHandicapXPBJ takes player whichPlayer, real handicapPercent returns nothing",
		"fileName": "blizzard.j",
		"name": "SetPlayerHandicapXPBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "real",
			"name": "handicapPercent"
		}],
		"insertText": "SetPlayerHandicapXPBJ(whichPlayer, handicapPercent)",
		"documentation": "设置玩家英雄经验值预先获得"
	},
	"GetPlayerHandicapXPBJ": {
		"original": "function GetPlayerHandicapXPBJ takes player whichPlayer returns real",
		"fileName": "blizzard.j",
		"name": "GetPlayerHandicapXPBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "real",
		"insertText": "GetPlayerHandicapXPBJ(whichPlayer)",
		"documentation": "经验值比率"
	},
	"SetPlayerHandicapBJ": {
		"original": "function SetPlayerHandicapBJ takes player whichPlayer, real handicapPercent returns nothing",
		"fileName": "blizzard.j",
		"name": "SetPlayerHandicapBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "real",
			"name": "handicapPercent"
		}],
		"insertText": "SetPlayerHandicapBJ(whichPlayer, handicapPercent)",
		"documentation": "设置玩家生命百分比"
	},
	"GetPlayerHandicapBJ": {
		"original": "function GetPlayerHandicapBJ takes player whichPlayer returns real",
		"fileName": "blizzard.j",
		"name": "GetPlayerHandicapBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "real",
		"insertText": "GetPlayerHandicapBJ(whichPlayer)",
		"documentation": "经验值上限"
	},
	"GetHeroStatBJ": {
		"original": "function GetHeroStatBJ takes integer whichStat, unit whichHero, boolean includeBonuses returns integer",
		"fileName": "blizzard.j",
		"name": "GetHeroStatBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "whichStat"
		}, {
			"type": "unit",
			"name": "whichHero"
		}, {
			"type": "boolean",
			"name": "includeBonuses"
		}],
		"returnType": "integer",
		"insertText": "GetHeroStatBJ(whichStat, whichHero, includeBonuses)",
		"documentation": "英雄的属性"
	},
	"SetHeroStat": {
		"original": "function SetHeroStat takes unit whichHero, integer whichStat, integer value returns nothing",
		"fileName": "blizzard.j",
		"name": "SetHeroStat",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichHero"
		}, {
			"type": "integer",
			"name": "whichStat"
		}, {
			"type": "integer",
			"name": "value"
		}],
		"insertText": "SetHeroStat(whichHero, whichStat, value)",
		"documentation": "修改英雄属性"
	},
	"ModifyHeroStat": {
		"original": "function ModifyHeroStat takes integer whichStat, unit whichHero, integer modifyMethod, integer value returns nothing",
		"fileName": "blizzard.j",
		"name": "ModifyHeroStat",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "whichStat"
		}, {
			"type": "unit",
			"name": "whichHero"
		}, {
			"type": "integer",
			"name": "modifyMethod"
		}, {
			"type": "integer",
			"name": "value"
		}],
		"insertText": "ModifyHeroStat(whichStat, whichHero, modifyMethod, value)",
		"documentation": "改变英雄属性"
	},
	"ModifyHeroSkillPoints": {
		"original": "function ModifyHeroSkillPoints takes unit whichHero, integer modifyMethod, integer value returns boolean",
		"fileName": "blizzard.j",
		"name": "ModifyHeroSkillPoints",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichHero"
		}, {
			"type": "integer",
			"name": "modifyMethod"
		}, {
			"type": "integer",
			"name": "value"
		}],
		"returnType": "boolean",
		"insertText": "ModifyHeroSkillPoints(whichHero, modifyMethod, value)",
		"documentation": "改变英雄技能点数"
	},
	"UnitDropItemPointBJ": {
		"original": "function UnitDropItemPointBJ takes unit whichUnit, item whichItem, real x, real y returns boolean",
		"fileName": "blizzard.j",
		"name": "UnitDropItemPointBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "item",
			"name": "whichItem"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"returnType": "boolean",
		"insertText": "UnitDropItemPointBJ(whichUnit, whichItem, x, y)",
		"documentation": "发布丢弃物品命令(指定坐标)"
	},
	"UnitDropItemPointLoc": {
		"original": "function UnitDropItemPointLoc takes unit whichUnit, item whichItem, location loc returns boolean",
		"fileName": "blizzard.j",
		"name": "UnitDropItemPointLoc",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "item",
			"name": "whichItem"
		}, {
			"type": "location",
			"name": "loc"
		}],
		"returnType": "boolean",
		"insertText": "UnitDropItemPointLoc(whichUnit, whichItem, loc)",
		"documentation": "丢弃物品于指定点"
	},
	"UnitDropItemSlotBJ": {
		"original": "function UnitDropItemSlotBJ takes unit whichUnit, item whichItem, integer slot returns boolean",
		"fileName": "blizzard.j",
		"name": "UnitDropItemSlotBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "item",
			"name": "whichItem"
		}, {
			"type": "integer",
			"name": "slot"
		}],
		"returnType": "boolean",
		"insertText": "UnitDropItemSlotBJ(whichUnit, whichItem, slot)",
		"documentation": "放置物品于指定物品格"
	},
	"UnitDropItemTargetBJ": {
		"original": "function UnitDropItemTargetBJ takes unit whichUnit, item whichItem, widget target returns boolean",
		"fileName": "blizzard.j",
		"name": "UnitDropItemTargetBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "item",
			"name": "whichItem"
		}, {
			"type": "widget",
			"name": "target"
		}],
		"returnType": "boolean",
		"insertText": "UnitDropItemTargetBJ(whichUnit, whichItem, target)",
		"documentation": "将物品给予其它单位"
	},
	"UnitUseItemDestructable": {
		"original": "function UnitUseItemDestructable takes unit whichUnit, item whichItem, widget target returns boolean",
		"fileName": "blizzard.j",
		"name": "UnitUseItemDestructable",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "item",
			"name": "whichItem"
		}, {
			"type": "widget",
			"name": "target"
		}],
		"returnType": "boolean",
		"insertText": "UnitUseItemDestructable(whichUnit, whichItem, target)",
		"documentation": "对可毁坏物使用物品"
	},
	"UnitUseItemPointLoc": {
		"original": "function UnitUseItemPointLoc takes unit whichUnit, item whichItem, location loc returns boolean",
		"fileName": "blizzard.j",
		"name": "UnitUseItemPointLoc",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "item",
			"name": "whichItem"
		}, {
			"type": "location",
			"name": "loc"
		}],
		"returnType": "boolean",
		"insertText": "UnitUseItemPointLoc(whichUnit, whichItem, loc)",
		"documentation": "对 点 使用物品"
	},
	"UnitItemInSlotBJ": {
		"original": "function UnitItemInSlotBJ takes unit whichUnit, integer itemSlot returns item",
		"fileName": "blizzard.j",
		"name": "UnitItemInSlotBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "itemSlot"
		}],
		"returnType": "item",
		"insertText": "UnitItemInSlotBJ(whichUnit, itemSlot)",
		"documentation": "英雄携带的物品"
	},
	"GetInventoryIndexOfItemTypeBJ": {
		"original": "function GetInventoryIndexOfItemTypeBJ takes unit whichUnit, integer itemId returns integer",
		"fileName": "blizzard.j",
		"name": "GetInventoryIndexOfItemTypeBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "itemId"
		}],
		"returnType": "integer",
		"insertText": "GetInventoryIndexOfItemTypeBJ(whichUnit, itemId)",
		"documentation": "获取物品的类型"
	},
	"GetItemOfTypeFromUnitBJ": {
		"original": "function GetItemOfTypeFromUnitBJ takes unit whichUnit, integer itemId returns item",
		"fileName": "blizzard.j",
		"name": "GetItemOfTypeFromUnitBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "itemId"
		}],
		"returnType": "item",
		"insertText": "GetItemOfTypeFromUnitBJ(whichUnit, itemId)",
		"documentation": "英雄携带的物品类型"
	},
	"UnitHasItemOfTypeBJ": {
		"original": "function UnitHasItemOfTypeBJ takes unit whichUnit, integer itemId returns boolean",
		"fileName": "blizzard.j",
		"name": "UnitHasItemOfTypeBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "itemId"
		}],
		"returnType": "boolean",
		"insertText": "UnitHasItemOfTypeBJ(whichUnit, itemId)",
		"documentation": "英雄已有 物品 - 类型"
	},
	"UnitInventoryCount": {
		"original": "function UnitInventoryCount takes unit whichUnit returns integer",
		"fileName": "blizzard.j",
		"name": "UnitInventoryCount",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "integer",
		"insertText": "UnitInventoryCount(whichUnit)",
		"documentation": "单位物品的数量"
	},
	"UnitInventorySizeBJ": {
		"original": "function UnitInventorySizeBJ takes unit whichUnit returns integer",
		"fileName": "blizzard.j",
		"name": "UnitInventorySizeBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "integer",
		"insertText": "UnitInventorySizeBJ(whichUnit)",
		"documentation": "物品栏容量"
	},
	"SetItemInvulnerableBJ": {
		"original": "function SetItemInvulnerableBJ takes item whichItem, boolean flag returns nothing",
		"fileName": "blizzard.j",
		"name": "SetItemInvulnerableBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "SetItemInvulnerableBJ(whichItem, flag)",
		"documentation": "设置物品 无敌/可攻击"
	},
	"SetItemDropOnDeathBJ": {
		"original": "function SetItemDropOnDeathBJ takes item whichItem, boolean flag returns nothing",
		"fileName": "blizzard.j",
		"name": "SetItemDropOnDeathBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "SetItemDropOnDeathBJ(whichItem, flag)",
		"documentation": "设置英雄死亡后能否物品掉落"
	},
	"SetItemDroppableBJ": {
		"original": "function SetItemDroppableBJ takes item whichItem, boolean flag returns nothing",
		"fileName": "blizzard.j",
		"name": "SetItemDroppableBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "SetItemDroppableBJ(whichItem, flag)",
		"documentation": "设置物品能否丢弃"
	},
	"SetItemPlayerBJ": {
		"original": "function SetItemPlayerBJ takes item whichItem, player whichPlayer, boolean changeColor returns nothing",
		"fileName": "blizzard.j",
		"name": "SetItemPlayerBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "boolean",
			"name": "changeColor"
		}],
		"insertText": "SetItemPlayerBJ(whichItem, whichPlayer, changeColor)",
		"documentation": "改变物品的所有者"
	},
	"SetItemVisibleBJ": {
		"original": "function SetItemVisibleBJ takes boolean show, item whichItem returns nothing",
		"fileName": "blizzard.j",
		"name": "SetItemVisibleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "show"
		}, {
			"type": "item",
			"name": "whichItem"
		}],
		"insertText": "SetItemVisibleBJ(show, whichItem)",
		"documentation": "显示/隐藏 物品"
	},
	"IsItemHiddenBJ": {
		"original": "function IsItemHiddenBJ takes item whichItem returns boolean",
		"fileName": "blizzard.j",
		"name": "IsItemHiddenBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}],
		"returnType": "boolean",
		"insertText": "IsItemHiddenBJ(whichItem)",
		"documentation": "物品是隐藏的"
	},
	"ChooseRandomItemBJ": {
		"original": "function ChooseRandomItemBJ takes integer level returns integer",
		"fileName": "blizzard.j",
		"name": "ChooseRandomItemBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "level"
		}],
		"returnType": "integer",
		"insertText": "ChooseRandomItemBJ(level)",
		"documentation": "随机物品-所有类别"
	},
	"ChooseRandomItemExBJ": {
		"original": "function ChooseRandomItemExBJ takes integer level, itemtype whichType returns integer",
		"fileName": "blizzard.j",
		"name": "ChooseRandomItemExBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "level"
		}, {
			"type": "itemtype",
			"name": "whichType"
		}],
		"returnType": "integer",
		"insertText": "ChooseRandomItemExBJ(level, whichType)",
		"documentation": "随机物品-有类别"
	},
	"ChooseRandomNPBuildingBJ": {
		"original": "function ChooseRandomNPBuildingBJ takes nothing returns integer",
		"fileName": "blizzard.j",
		"name": "ChooseRandomNPBuildingBJ",
		"isConstant": false,
		"isNative": false,
		"returnType": "integer",
		"insertText": "ChooseRandomNPBuildingBJ()",
		"documentation": "随机的中立建筑物类型"
	},
	"ChooseRandomCreepBJ": {
		"original": "function ChooseRandomCreepBJ takes integer level returns integer",
		"fileName": "blizzard.j",
		"name": "ChooseRandomCreepBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "level"
		}],
		"returnType": "integer",
		"insertText": "ChooseRandomCreepBJ(level)",
		"documentation": "随机的野生单位单位类型(有等级)"
	},
	"EnumItemsInRectBJ": {
		"original": "function EnumItemsInRectBJ takes rect r, code actionFunc returns nothing",
		"fileName": "blizzard.j",
		"name": "EnumItemsInRectBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "rect",
			"name": "r"
		}, {
			"type": "code",
			"name": "actionFunc"
		}],
		"insertText": "EnumItemsInRectBJ(r, actionFunc)",
		"documentation": "选取所有物品在 区域 做动作(单一的)"
	},
	"RandomItemInRectBJEnum": {
		"original": "function RandomItemInRectBJEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "RandomItemInRectBJEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "RandomItemInRectBJEnum()",
		"documentation": "矩形区域内随机物品(指定条件)"
	},
	"RandomItemInRectBJ": {
		"original": "function RandomItemInRectBJ takes rect r, boolexpr filter returns item",
		"fileName": "blizzard.j",
		"name": "RandomItemInRectBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "rect",
			"name": "r"
		}, {
			"type": "boolexpr",
			"name": "filter"
		}],
		"returnType": "item",
		"insertText": "RandomItemInRectBJ(r, filter)",
		"documentation": "随机物品在区域并匹配条件"
	},
	"RandomItemInRectSimpleBJ": {
		"original": "function RandomItemInRectSimpleBJ takes rect r returns item",
		"fileName": "blizzard.j",
		"name": "RandomItemInRectSimpleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "rect",
			"name": "r"
		}],
		"returnType": "item",
		"insertText": "RandomItemInRectSimpleBJ(r)",
		"documentation": "随机物品在区域"
	},
	"CheckItemStatus": {
		"original": "function CheckItemStatus takes item whichItem, integer status returns boolean",
		"fileName": "blizzard.j",
		"name": "CheckItemStatus",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}, {
			"type": "integer",
			"name": "status"
		}],
		"returnType": "boolean",
		"insertText": "CheckItemStatus(whichItem, status)",
		"documentation": "物品状态检查"
	},
	"CheckItemcodeStatus": {
		"original": "function CheckItemcodeStatus takes integer itemId, integer status returns boolean",
		"fileName": "blizzard.j",
		"name": "CheckItemcodeStatus",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "itemId"
		}, {
			"type": "integer",
			"name": "status"
		}],
		"returnType": "boolean",
		"insertText": "CheckItemcodeStatus(itemId, status)",
		"documentation": "物品 - 类型 状态检查"
	},
	"UnitId2OrderIdBJ": {
		"original": "function UnitId2OrderIdBJ takes integer unitId returns integer",
		"fileName": "blizzard.j",
		"name": "UnitId2OrderIdBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "unitId"
		}],
		"returnType": "integer",
		"insertText": "UnitId2OrderIdBJ(unitId)",
		"documentation": "将单位类型转换为命令"
	},
	"String2UnitIdBJ": {
		"original": "function String2UnitIdBJ takes string unitIdString returns integer",
		"fileName": "blizzard.j",
		"name": "String2UnitIdBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "unitIdString"
		}],
		"returnType": "integer",
		"insertText": "String2UnitIdBJ(unitIdString)",
		"documentation": "将单位类型转换为字符串"
	},
	"UnitId2StringBJ": {
		"original": "function UnitId2StringBJ takes integer unitId returns string",
		"fileName": "blizzard.j",
		"name": "UnitId2StringBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "unitId"
		}],
		"returnType": "string",
		"insertText": "UnitId2StringBJ(unitId)",
		"documentation": "将单位转换为字符串"
	},
	"String2OrderIdBJ": {
		"original": "function String2OrderIdBJ takes string orderIdString returns integer",
		"fileName": "blizzard.j",
		"name": "String2OrderIdBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "orderIdString"
		}],
		"returnType": "integer",
		"insertText": "String2OrderIdBJ(orderIdString)",
		"documentation": "将字符串转换为命令"
	},
	"OrderId2StringBJ": {
		"original": "function OrderId2StringBJ takes integer orderId returns string",
		"fileName": "blizzard.j",
		"name": "OrderId2StringBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "orderId"
		}],
		"returnType": "string",
		"insertText": "OrderId2StringBJ(orderId)",
		"documentation": "将命令转换为字符串"
	},
	"GetIssuedOrderIdBJ": {
		"original": "function GetIssuedOrderIdBJ takes nothing returns integer",
		"fileName": "blizzard.j",
		"name": "GetIssuedOrderIdBJ",
		"isConstant": false,
		"isNative": false,
		"returnType": "integer",
		"insertText": "GetIssuedOrderIdBJ()",
		"documentation": "发出的命令"
	},
	"GetKillingUnitBJ": {
		"original": "function GetKillingUnitBJ takes nothing returns unit",
		"fileName": "blizzard.j",
		"name": "GetKillingUnitBJ",
		"isConstant": false,
		"isNative": false,
		"returnType": "unit",
		"insertText": "GetKillingUnitBJ()",
		"documentation": "凶手单位"
	},
	"CreateUnitAtLocSaveLast": {
		"original": "function CreateUnitAtLocSaveLast takes player id, integer unitid, location loc, real face returns unit",
		"fileName": "blizzard.j",
		"name": "CreateUnitAtLocSaveLast",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "id"
		}, {
			"type": "integer",
			"name": "unitid"
		}, {
			"type": "location",
			"name": "loc"
		}, {
			"type": "real",
			"name": "face"
		}],
		"returnType": "unit",
		"insertText": "CreateUnitAtLocSaveLast(id, unitid, loc, face)",
		"documentation": "新建单位(指定点)"
	},
	"GetLastCreatedUnit": {
		"original": "function GetLastCreatedUnit takes nothing returns unit",
		"fileName": "blizzard.j",
		"name": "GetLastCreatedUnit",
		"isConstant": false,
		"isNative": false,
		"returnType": "unit",
		"insertText": "GetLastCreatedUnit()",
		"documentation": "最后创建的单位"
	},
	"CreateNUnitsAtLoc": {
		"original": "function CreateNUnitsAtLoc takes integer count, integer unitId, player whichPlayer, location loc, real face returns group",
		"fileName": "blizzard.j",
		"name": "CreateNUnitsAtLoc",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "count"
		}, {
			"type": "integer",
			"name": "unitId"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "location",
			"name": "loc"
		}, {
			"type": "real",
			"name": "face"
		}],
		"returnType": "group",
		"insertText": "CreateNUnitsAtLoc(count, unitId, whichPlayer, loc, face)",
		"documentation": "创造单位面对角度"
	},
	"CreateNUnitsAtLocFacingLocBJ": {
		"original": "function CreateNUnitsAtLocFacingLocBJ takes integer count, integer unitId, player whichPlayer, location loc, location lookAt returns group",
		"fileName": "blizzard.j",
		"name": "CreateNUnitsAtLocFacingLocBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "count"
		}, {
			"type": "integer",
			"name": "unitId"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "location",
			"name": "loc"
		}, {
			"type": "location",
			"name": "lookAt"
		}],
		"returnType": "group",
		"insertText": "CreateNUnitsAtLocFacingLocBJ(count, unitId, whichPlayer, loc, lookAt)",
		"documentation": "创造单位面对点"
	},
	"GetLastCreatedGroupEnum": {
		"original": "function GetLastCreatedGroupEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "GetLastCreatedGroupEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "GetLastCreatedGroupEnum()",
		"documentation": "最后创建的单位组"
	},
	"GetLastCreatedGroup": {
		"original": "function GetLastCreatedGroup takes nothing returns group",
		"fileName": "blizzard.j",
		"name": "GetLastCreatedGroup",
		"isConstant": false,
		"isNative": false,
		"returnType": "group",
		"insertText": "GetLastCreatedGroup()",
		"documentation": "最后创建的单位组"
	},
	"CreateCorpseLocBJ": {
		"original": "function CreateCorpseLocBJ takes integer unitid, player whichPlayer, location loc returns unit",
		"fileName": "blizzard.j",
		"name": "CreateCorpseLocBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "unitid"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "location",
			"name": "loc"
		}],
		"returnType": "unit",
		"insertText": "CreateCorpseLocBJ(unitid, whichPlayer, loc)",
		"documentation": "创造尸体"
	},
	"UnitSuspendDecayBJ": {
		"original": "function UnitSuspendDecayBJ takes boolean suspend, unit whichUnit returns nothing",
		"fileName": "blizzard.j",
		"name": "UnitSuspendDecayBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "suspend"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"insertText": "UnitSuspendDecayBJ(suspend, whichUnit)",
		"documentation": "设置尸体腐烂方式"
	},
	"DelayedSuspendDecayStopAnimEnum": {
		"original": "function DelayedSuspendDecayStopAnimEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "DelayedSuspendDecayStopAnimEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "DelayedSuspendDecayStopAnimEnum()",
		"documentation": ""
	},
	"DelayedSuspendDecayBoneEnum": {
		"original": "function DelayedSuspendDecayBoneEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "DelayedSuspendDecayBoneEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "DelayedSuspendDecayBoneEnum()",
		"documentation": ""
	},
	"DelayedSuspendDecayFleshEnum": {
		"original": "function DelayedSuspendDecayFleshEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "DelayedSuspendDecayFleshEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "DelayedSuspendDecayFleshEnum()",
		"documentation": ""
	},
	"DelayedSuspendDecay": {
		"original": "function DelayedSuspendDecay takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "DelayedSuspendDecay",
		"isConstant": false,
		"isNative": false,
		"insertText": "DelayedSuspendDecay()",
		"documentation": ""
	},
	"DelayedSuspendDecayCreate": {
		"original": "function DelayedSuspendDecayCreate takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "DelayedSuspendDecayCreate",
		"isConstant": false,
		"isNative": false,
		"insertText": "DelayedSuspendDecayCreate()",
		"documentation": ""
	},
	"CreatePermanentCorpseLocBJ": {
		"original": "function CreatePermanentCorpseLocBJ takes integer style, integer unitid, player whichPlayer, location loc, real facing returns unit",
		"fileName": "blizzard.j",
		"name": "CreatePermanentCorpseLocBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "style"
		}, {
			"type": "integer",
			"name": "unitid"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "location",
			"name": "loc"
		}, {
			"type": "real",
			"name": "facing"
		}],
		"returnType": "unit",
		"insertText": "CreatePermanentCorpseLocBJ(style, unitid, whichPlayer, loc, facing)",
		"documentation": "创造永久的尸体"
	},
	"GetUnitStateSwap": {
		"original": "function GetUnitStateSwap takes unitstate whichState, unit whichUnit returns real",
		"fileName": "blizzard.j",
		"name": "GetUnitStateSwap",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unitstate",
			"name": "whichState"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "real",
		"insertText": "GetUnitStateSwap(whichState, whichUnit)",
		"documentation": "单位属性"
	},
	"GetUnitStatePercent": {
		"original": "function GetUnitStatePercent takes unit whichUnit, unitstate whichState, unitstate whichMaxState returns real",
		"fileName": "blizzard.j",
		"name": "GetUnitStatePercent",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "unitstate",
			"name": "whichState"
		}, {
			"type": "unitstate",
			"name": "whichMaxState"
		}],
		"returnType": "real",
		"insertText": "GetUnitStatePercent(whichUnit, whichState, whichMaxState)",
		"documentation": ""
	},
	"GetUnitLifePercent": {
		"original": "function GetUnitLifePercent takes unit whichUnit returns real",
		"fileName": "blizzard.j",
		"name": "GetUnitLifePercent",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "real",
		"insertText": "GetUnitLifePercent(whichUnit)",
		"documentation": "生命值百分比"
	},
	"GetUnitManaPercent": {
		"original": "function GetUnitManaPercent takes unit whichUnit returns real",
		"fileName": "blizzard.j",
		"name": "GetUnitManaPercent",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "real",
		"insertText": "GetUnitManaPercent(whichUnit)",
		"documentation": "魔法值百分比"
	},
	"SelectUnitSingle": {
		"original": "function SelectUnitSingle takes unit whichUnit returns nothing",
		"fileName": "blizzard.j",
		"name": "SelectUnitSingle",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"insertText": "SelectUnitSingle(whichUnit)",
		"documentation": "选定单位"
	},
	"SelectGroupBJEnum": {
		"original": "function SelectGroupBJEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "SelectGroupBJEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "SelectGroupBJEnum()",
		"documentation": ""
	},
	"SelectGroupBJ": {
		"original": "function SelectGroupBJ takes group g returns nothing",
		"fileName": "blizzard.j",
		"name": "SelectGroupBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "group",
			"name": "g"
		}],
		"insertText": "SelectGroupBJ(g)",
		"documentation": "选定单位组"
	},
	"SelectUnitAdd": {
		"original": "function SelectUnitAdd takes unit whichUnit returns nothing",
		"fileName": "blizzard.j",
		"name": "SelectUnitAdd",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"insertText": "SelectUnitAdd(whichUnit)",
		"documentation": "添加选择单位(所有玩家)"
	},
	"SelectUnitRemove": {
		"original": "function SelectUnitRemove takes unit whichUnit returns nothing",
		"fileName": "blizzard.j",
		"name": "SelectUnitRemove",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"insertText": "SelectUnitRemove(whichUnit)",
		"documentation": "清除单位选择"
	},
	"ClearSelectionForPlayer": {
		"original": "function ClearSelectionForPlayer takes player whichPlayer returns nothing",
		"fileName": "blizzard.j",
		"name": "ClearSelectionForPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "ClearSelectionForPlayer(whichPlayer)",
		"documentation": "清除选定对玩家"
	},
	"SelectUnitForPlayerSingle": {
		"original": "function SelectUnitForPlayerSingle takes unit whichUnit, player whichPlayer returns nothing",
		"fileName": "blizzard.j",
		"name": "SelectUnitForPlayerSingle",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "SelectUnitForPlayerSingle(whichUnit, whichPlayer)",
		"documentation": "选定单位对玩家"
	},
	"SelectGroupForPlayerBJ": {
		"original": "function SelectGroupForPlayerBJ takes group g, player whichPlayer returns nothing",
		"fileName": "blizzard.j",
		"name": "SelectGroupForPlayerBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "group",
			"name": "g"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "SelectGroupForPlayerBJ(g, whichPlayer)",
		"documentation": "清除选定单位组对玩家"
	},
	"SelectUnitAddForPlayer": {
		"original": "function SelectUnitAddForPlayer takes unit whichUnit, player whichPlayer returns nothing",
		"fileName": "blizzard.j",
		"name": "SelectUnitAddForPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "SelectUnitAddForPlayer(whichUnit, whichPlayer)",
		"documentation": "增加单位到玩家的选定中"
	},
	"SelectUnitRemoveForPlayer": {
		"original": "function SelectUnitRemoveForPlayer takes unit whichUnit, player whichPlayer returns nothing",
		"fileName": "blizzard.j",
		"name": "SelectUnitRemoveForPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "SelectUnitRemoveForPlayer(whichUnit, whichPlayer)",
		"documentation": "清除单位的选定为玩家"
	},
	"SetUnitLifeBJ": {
		"original": "function SetUnitLifeBJ takes unit whichUnit, real newValue returns nothing",
		"fileName": "blizzard.j",
		"name": "SetUnitLifeBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "newValue"
		}],
		"insertText": "SetUnitLifeBJ(whichUnit, newValue)",
		"documentation": "设置单位生命值 (数值)"
	},
	"SetUnitManaBJ": {
		"original": "function SetUnitManaBJ takes unit whichUnit, real newValue returns nothing",
		"fileName": "blizzard.j",
		"name": "SetUnitManaBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "newValue"
		}],
		"insertText": "SetUnitManaBJ(whichUnit, newValue)",
		"documentation": "设置单位魔法值 (数值)"
	},
	"SetUnitLifePercentBJ": {
		"original": "function SetUnitLifePercentBJ takes unit whichUnit, real percent returns nothing",
		"fileName": "blizzard.j",
		"name": "SetUnitLifePercentBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "percent"
		}],
		"insertText": "SetUnitLifePercentBJ(whichUnit, percent)",
		"documentation": "设置单位生命值 (百分比)"
	},
	"SetUnitManaPercentBJ": {
		"original": "function SetUnitManaPercentBJ takes unit whichUnit, real percent returns nothing",
		"fileName": "blizzard.j",
		"name": "SetUnitManaPercentBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "percent"
		}],
		"insertText": "SetUnitManaPercentBJ(whichUnit, percent)",
		"documentation": "设置单位魔法值 (百分比)"
	},
	"IsUnitDeadBJ": {
		"original": "function IsUnitDeadBJ takes unit whichUnit returns boolean",
		"fileName": "blizzard.j",
		"name": "IsUnitDeadBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitDeadBJ(whichUnit)",
		"documentation": "单位是已死亡的"
	},
	"IsUnitAliveBJ": {
		"original": "function IsUnitAliveBJ takes unit whichUnit returns boolean",
		"fileName": "blizzard.j",
		"name": "IsUnitAliveBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitAliveBJ(whichUnit)",
		"documentation": "单位是活着的"
	},
	"IsUnitGroupDeadBJEnum": {
		"original": "function IsUnitGroupDeadBJEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "IsUnitGroupDeadBJEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "IsUnitGroupDeadBJEnum()",
		"documentation": ""
	},
	"IsUnitGroupDeadBJ": {
		"original": "function IsUnitGroupDeadBJ takes group g returns boolean",
		"fileName": "blizzard.j",
		"name": "IsUnitGroupDeadBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "group",
			"name": "g"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitGroupDeadBJ(g)",
		"documentation": "单位组的单位是已死亡的"
	},
	"IsUnitGroupEmptyBJEnum": {
		"original": "function IsUnitGroupEmptyBJEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "IsUnitGroupEmptyBJEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "IsUnitGroupEmptyBJEnum()",
		"documentation": ""
	},
	"IsUnitGroupEmptyBJ": {
		"original": "function IsUnitGroupEmptyBJ takes group g returns boolean",
		"fileName": "blizzard.j",
		"name": "IsUnitGroupEmptyBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "group",
			"name": "g"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitGroupEmptyBJ(g)",
		"documentation": "单位组是空的"
	},
	"IsUnitGroupInRectBJEnum": {
		"original": "function IsUnitGroupInRectBJEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "IsUnitGroupInRectBJEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "IsUnitGroupInRectBJEnum()",
		"documentation": ""
	},
	"IsUnitGroupInRectBJ": {
		"original": "function IsUnitGroupInRectBJ takes group g, rect r returns boolean",
		"fileName": "blizzard.j",
		"name": "IsUnitGroupInRectBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "group",
			"name": "g"
		}, {
			"type": "rect",
			"name": "r"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitGroupInRectBJ(g, r)",
		"documentation": "单位组的单位在区域"
	},
	"IsUnitHiddenBJ": {
		"original": "function IsUnitHiddenBJ takes unit whichUnit returns boolean",
		"fileName": "blizzard.j",
		"name": "IsUnitHiddenBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitHiddenBJ(whichUnit)",
		"documentation": "单位被隐藏"
	},
	"ShowUnitHide": {
		"original": "function ShowUnitHide takes unit whichUnit returns nothing",
		"fileName": "blizzard.j",
		"name": "ShowUnitHide",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"insertText": "ShowUnitHide(whichUnit)",
		"documentation": "隐藏单位"
	},
	"ShowUnitShow": {
		"original": "function ShowUnitShow takes unit whichUnit returns nothing",
		"fileName": "blizzard.j",
		"name": "ShowUnitShow",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"insertText": "ShowUnitShow(whichUnit)",
		"documentation": "显示单位"
	},
	"IssueHauntOrderAtLocBJFilter": {
		"original": "function IssueHauntOrderAtLocBJFilter takes nothing returns boolean",
		"fileName": "blizzard.j",
		"name": "IssueHauntOrderAtLocBJFilter",
		"isConstant": false,
		"isNative": false,
		"returnType": "boolean",
		"insertText": "IssueHauntOrderAtLocBJFilter()",
		"documentation": ""
	},
	"IssueHauntOrderAtLocBJ": {
		"original": "function IssueHauntOrderAtLocBJ takes unit whichPeon, location loc returns boolean",
		"fileName": "blizzard.j",
		"name": "IssueHauntOrderAtLocBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichPeon"
		}, {
			"type": "location",
			"name": "loc"
		}],
		"returnType": "boolean",
		"insertText": "IssueHauntOrderAtLocBJ(whichPeon, loc)",
		"documentation": ""
	},
	"IssueBuildOrderByIdLocBJ": {
		"original": "function IssueBuildOrderByIdLocBJ takes unit whichPeon, integer unitId, location loc returns boolean",
		"fileName": "blizzard.j",
		"name": "IssueBuildOrderByIdLocBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichPeon"
		}, {
			"type": "integer",
			"name": "unitId"
		}, {
			"type": "location",
			"name": "loc"
		}],
		"returnType": "boolean",
		"insertText": "IssueBuildOrderByIdLocBJ(whichPeon, unitId, loc)",
		"documentation": "发送命令到 建造建筑"
	},
	"IssueTrainOrderByIdBJ": {
		"original": "function IssueTrainOrderByIdBJ takes unit whichUnit, integer unitId returns boolean",
		"fileName": "blizzard.j",
		"name": "IssueTrainOrderByIdBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "unitId"
		}],
		"returnType": "boolean",
		"insertText": "IssueTrainOrderByIdBJ(whichUnit, unitId)",
		"documentation": "发送命令到 训练兵种/升级建筑"
	},
	"GroupTrainOrderByIdBJ": {
		"original": "function GroupTrainOrderByIdBJ takes group g, integer unitId returns boolean",
		"fileName": "blizzard.j",
		"name": "GroupTrainOrderByIdBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "group",
			"name": "g"
		}, {
			"type": "integer",
			"name": "unitId"
		}],
		"returnType": "boolean",
		"insertText": "GroupTrainOrderByIdBJ(g, unitId)",
		"documentation": "发送单位组命令到 训练兵种/升级建筑"
	},
	"IssueUpgradeOrderByIdBJ": {
		"original": "function IssueUpgradeOrderByIdBJ takes unit whichUnit, integer techId returns boolean",
		"fileName": "blizzard.j",
		"name": "IssueUpgradeOrderByIdBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "techId"
		}],
		"returnType": "boolean",
		"insertText": "IssueUpgradeOrderByIdBJ(whichUnit, techId)",
		"documentation": "发送命令到 研究科技"
	},
	"GetAttackedUnitBJ": {
		"original": "function GetAttackedUnitBJ takes nothing returns unit",
		"fileName": "blizzard.j",
		"name": "GetAttackedUnitBJ",
		"isConstant": false,
		"isNative": false,
		"returnType": "unit",
		"insertText": "GetAttackedUnitBJ()",
		"documentation": "被攻击的单位"
	},
	"SetUnitFlyHeightBJ": {
		"original": "function SetUnitFlyHeightBJ takes unit whichUnit, real newHeight, real rate returns nothing",
		"fileName": "blizzard.j",
		"name": "SetUnitFlyHeightBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "newHeight"
		}, {
			"type": "real",
			"name": "rate"
		}],
		"insertText": "SetUnitFlyHeightBJ(whichUnit, newHeight, rate)",
		"documentation": "改变单位飞行高度"
	},
	"SetUnitTurnSpeedBJ": {
		"original": "function SetUnitTurnSpeedBJ takes unit whichUnit, real turnSpeed returns nothing",
		"fileName": "blizzard.j",
		"name": "SetUnitTurnSpeedBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "turnSpeed"
		}],
		"insertText": "SetUnitTurnSpeedBJ(whichUnit, turnSpeed)",
		"documentation": "改变单位转向速度"
	},
	"SetUnitPropWindowBJ": {
		"original": "function SetUnitPropWindowBJ takes unit whichUnit, real propWindow returns nothing",
		"fileName": "blizzard.j",
		"name": "SetUnitPropWindowBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "propWindow"
		}],
		"insertText": "SetUnitPropWindowBJ(whichUnit, propWindow)",
		"documentation": "改变单位头像视窗角度"
	},
	"GetUnitPropWindowBJ": {
		"original": "function GetUnitPropWindowBJ takes unit whichUnit returns real",
		"fileName": "blizzard.j",
		"name": "GetUnitPropWindowBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "real",
		"insertText": "GetUnitPropWindowBJ(whichUnit)",
		"documentation": "单位在头像窗口的角度 (当前)"
	},
	"GetUnitDefaultPropWindowBJ": {
		"original": "function GetUnitDefaultPropWindowBJ takes unit whichUnit returns real",
		"fileName": "blizzard.j",
		"name": "GetUnitDefaultPropWindowBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "real",
		"insertText": "GetUnitDefaultPropWindowBJ(whichUnit)",
		"documentation": "单位在头像窗口的角度 (默认)"
	},
	"SetUnitBlendTimeBJ": {
		"original": "function SetUnitBlendTimeBJ takes unit whichUnit, real blendTime returns nothing",
		"fileName": "blizzard.j",
		"name": "SetUnitBlendTimeBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "blendTime"
		}],
		"insertText": "SetUnitBlendTimeBJ(whichUnit, blendTime)",
		"documentation": "改变单位混合时间"
	},
	"SetUnitAcquireRangeBJ": {
		"original": "function SetUnitAcquireRangeBJ takes unit whichUnit, real acquireRange returns nothing",
		"fileName": "blizzard.j",
		"name": "SetUnitAcquireRangeBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "acquireRange"
		}],
		"insertText": "SetUnitAcquireRangeBJ(whichUnit, acquireRange)",
		"documentation": "设置感知敌人距离"
	},
	"UnitSetCanSleepBJ": {
		"original": "function UnitSetCanSleepBJ takes unit whichUnit, boolean canSleep returns nothing",
		"fileName": "blizzard.j",
		"name": "UnitSetCanSleepBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "boolean",
			"name": "canSleep"
		}],
		"insertText": "UnitSetCanSleepBJ(whichUnit, canSleep)",
		"documentation": "设置单位睡眠(之在晚上)"
	},
	"UnitCanSleepBJ": {
		"original": "function UnitCanSleepBJ takes unit whichUnit returns boolean",
		"fileName": "blizzard.j",
		"name": "UnitCanSleepBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "boolean",
		"insertText": "UnitCanSleepBJ(whichUnit)",
		"documentation": "单位晚上睡觉"
	},
	"UnitWakeUpBJ": {
		"original": "function UnitWakeUpBJ takes unit whichUnit returns nothing",
		"fileName": "blizzard.j",
		"name": "UnitWakeUpBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"insertText": "UnitWakeUpBJ(whichUnit)",
		"documentation": "设置单位醒来"
	},
	"UnitIsSleepingBJ": {
		"original": "function UnitIsSleepingBJ takes unit whichUnit returns boolean",
		"fileName": "blizzard.j",
		"name": "UnitIsSleepingBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "boolean",
		"insertText": "UnitIsSleepingBJ(whichUnit)",
		"documentation": "单位正在睡觉"
	},
	"WakePlayerUnitsEnum": {
		"original": "function WakePlayerUnitsEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "WakePlayerUnitsEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "WakePlayerUnitsEnum()",
		"documentation": ""
	},
	"WakePlayerUnits": {
		"original": "function WakePlayerUnits takes player whichPlayer returns nothing",
		"fileName": "blizzard.j",
		"name": "WakePlayerUnits",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "WakePlayerUnits(whichPlayer)",
		"documentation": ""
	},
	"EnableCreepSleepBJ": {
		"original": "function EnableCreepSleepBJ takes boolean enable returns nothing",
		"fileName": "blizzard.j",
		"name": "EnableCreepSleepBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "enable"
		}],
		"insertText": "EnableCreepSleepBJ(enable)",
		"documentation": "允许/禁止 所有野生单位夜间睡眠"
	},
	"UnitGenerateAlarms": {
		"original": "function UnitGenerateAlarms takes unit whichUnit, boolean generate returns boolean",
		"fileName": "blizzard.j",
		"name": "UnitGenerateAlarms",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "boolean",
			"name": "generate"
		}],
		"returnType": "boolean",
		"insertText": "UnitGenerateAlarms(whichUnit, generate)",
		"documentation": "设置警报产生 打开/关闭"
	},
	"DoesUnitGenerateAlarms": {
		"original": "function DoesUnitGenerateAlarms takes unit whichUnit returns boolean",
		"fileName": "blizzard.j",
		"name": "DoesUnitGenerateAlarms",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "boolean",
		"insertText": "DoesUnitGenerateAlarms(whichUnit)",
		"documentation": "单位发出警报"
	},
	"PauseAllUnitsBJEnum": {
		"original": "function PauseAllUnitsBJEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "PauseAllUnitsBJEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "PauseAllUnitsBJEnum()",
		"documentation": ""
	},
	"PauseAllUnitsBJ": {
		"original": "function PauseAllUnitsBJ takes boolean pause returns nothing",
		"fileName": "blizzard.j",
		"name": "PauseAllUnitsBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "pause"
		}],
		"insertText": "PauseAllUnitsBJ(pause)",
		"documentation": "暂停/恢复 所有单位"
	},
	"PauseUnitBJ": {
		"original": "function PauseUnitBJ takes boolean pause, unit whichUnit returns nothing",
		"fileName": "blizzard.j",
		"name": "PauseUnitBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "pause"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"insertText": "PauseUnitBJ(pause, whichUnit)",
		"documentation": "设置单位 暂停/恢复"
	},
	"IsUnitPausedBJ": {
		"original": "function IsUnitPausedBJ takes unit whichUnit returns boolean",
		"fileName": "blizzard.j",
		"name": "IsUnitPausedBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitPausedBJ(whichUnit)",
		"documentation": "单位被暂停"
	},
	"UnitPauseTimedLifeBJ": {
		"original": "function UnitPauseTimedLifeBJ takes boolean flag, unit whichUnit returns nothing",
		"fileName": "blizzard.j",
		"name": "UnitPauseTimedLifeBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "flag"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"insertText": "UnitPauseTimedLifeBJ(flag, whichUnit)",
		"documentation": "暂停/恢复 单位生命计时器"
	},
	"UnitApplyTimedLifeBJ": {
		"original": "function UnitApplyTimedLifeBJ takes real duration, integer buffId, unit whichUnit returns nothing",
		"fileName": "blizzard.j",
		"name": "UnitApplyTimedLifeBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "duration"
		}, {
			"type": "integer",
			"name": "buffId"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"insertText": "UnitApplyTimedLifeBJ(duration, buffId, whichUnit)",
		"documentation": "设置单位生命计时器"
	},
	"UnitShareVisionBJ": {
		"original": "function UnitShareVisionBJ takes boolean share, unit whichUnit, player whichPlayer returns nothing",
		"fileName": "blizzard.j",
		"name": "UnitShareVisionBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "share"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "UnitShareVisionBJ(share, whichUnit, whichPlayer)",
		"documentation": "共享单位视野"
	},
	"UnitRemoveBuffsBJ": {
		"original": "function UnitRemoveBuffsBJ takes integer buffType, unit whichUnit returns nothing",
		"fileName": "blizzard.j",
		"name": "UnitRemoveBuffsBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "buffType"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"insertText": "UnitRemoveBuffsBJ(buffType, whichUnit)",
		"documentation": "删除 持续状态"
	},
	"UnitRemoveBuffsExBJ": {
		"original": "function UnitRemoveBuffsExBJ takes integer polarity, integer resist, unit whichUnit, boolean bTLife, boolean bAura returns nothing",
		"fileName": "blizzard.j",
		"name": "UnitRemoveBuffsExBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "polarity"
		}, {
			"type": "integer",
			"name": "resist"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "boolean",
			"name": "bTLife"
		}, {
			"type": "boolean",
			"name": "bAura"
		}],
		"insertText": "UnitRemoveBuffsExBJ(polarity, resist, whichUnit, bTLife, bAura)",
		"documentation": "删除 持续状态 (按类型)"
	},
	"UnitCountBuffsExBJ": {
		"original": "function UnitCountBuffsExBJ takes integer polarity, integer resist, unit whichUnit, boolean bTLife, boolean bAura returns integer",
		"fileName": "blizzard.j",
		"name": "UnitCountBuffsExBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "polarity"
		}, {
			"type": "integer",
			"name": "resist"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "boolean",
			"name": "bTLife"
		}, {
			"type": "boolean",
			"name": "bAura"
		}],
		"returnType": "integer",
		"insertText": "UnitCountBuffsExBJ(polarity, resist, whichUnit, bTLife, bAura)",
		"documentation": "魔法效果/特殊效果 的数量"
	},
	"UnitRemoveAbilityBJ": {
		"original": "function UnitRemoveAbilityBJ takes integer abilityId, unit whichUnit returns boolean",
		"fileName": "blizzard.j",
		"name": "UnitRemoveAbilityBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "abilityId"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "boolean",
		"insertText": "UnitRemoveAbilityBJ(abilityId, whichUnit)",
		"documentation": "删除单位技能"
	},
	"UnitAddAbilityBJ": {
		"original": "function UnitAddAbilityBJ takes integer abilityId, unit whichUnit returns boolean",
		"fileName": "blizzard.j",
		"name": "UnitAddAbilityBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "abilityId"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "boolean",
		"insertText": "UnitAddAbilityBJ(abilityId, whichUnit)",
		"documentation": "增加单位技能"
	},
	"UnitRemoveTypeBJ": {
		"original": "function UnitRemoveTypeBJ takes unittype whichType, unit whichUnit returns boolean",
		"fileName": "blizzard.j",
		"name": "UnitRemoveTypeBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unittype",
			"name": "whichType"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "boolean",
		"insertText": "UnitRemoveTypeBJ(whichType, whichUnit)",
		"documentation": "移除类别"
	},
	"UnitAddTypeBJ": {
		"original": "function UnitAddTypeBJ takes unittype whichType, unit whichUnit returns boolean",
		"fileName": "blizzard.j",
		"name": "UnitAddTypeBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unittype",
			"name": "whichType"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "boolean",
		"insertText": "UnitAddTypeBJ(whichType, whichUnit)",
		"documentation": "添加类别"
	},
	"UnitMakeAbilityPermanentBJ": {
		"original": "function UnitMakeAbilityPermanentBJ takes boolean permanent, integer abilityId, unit whichUnit returns boolean",
		"fileName": "blizzard.j",
		"name": "UnitMakeAbilityPermanentBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "permanent"
		}, {
			"type": "integer",
			"name": "abilityId"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "boolean",
		"insertText": "UnitMakeAbilityPermanentBJ(permanent, abilityId, whichUnit)",
		"documentation": ""
	},
	"SetUnitExplodedBJ": {
		"original": "function SetUnitExplodedBJ takes unit whichUnit, boolean exploded returns nothing",
		"fileName": "blizzard.j",
		"name": "SetUnitExplodedBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "boolean",
			"name": "exploded"
		}],
		"insertText": "SetUnitExplodedBJ(whichUnit, exploded)",
		"documentation": "设置单位死亡方式"
	},
	"ExplodeUnitBJ": {
		"original": "function ExplodeUnitBJ takes unit whichUnit returns nothing",
		"fileName": "blizzard.j",
		"name": "ExplodeUnitBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"insertText": "ExplodeUnitBJ(whichUnit)",
		"documentation": "使单位爆炸而死"
	},
	"GetTransportUnitBJ": {
		"original": "function GetTransportUnitBJ takes nothing returns unit",
		"fileName": "blizzard.j",
		"name": "GetTransportUnitBJ",
		"isConstant": false,
		"isNative": false,
		"returnType": "unit",
		"insertText": "GetTransportUnitBJ()",
		"documentation": "传送单位"
	},
	"GetLoadedUnitBJ": {
		"original": "function GetLoadedUnitBJ takes nothing returns unit",
		"fileName": "blizzard.j",
		"name": "GetLoadedUnitBJ",
		"isConstant": false,
		"isNative": false,
		"returnType": "unit",
		"insertText": "GetLoadedUnitBJ()",
		"documentation": "载入单位"
	},
	"IsUnitInTransportBJ": {
		"original": "function IsUnitInTransportBJ takes unit whichUnit, unit whichTransport returns boolean",
		"fileName": "blizzard.j",
		"name": "IsUnitInTransportBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "unit",
			"name": "whichTransport"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitInTransportBJ(whichUnit, whichTransport)",
		"documentation": "单位已经装载"
	},
	"IsUnitLoadedBJ": {
		"original": "function IsUnitLoadedBJ takes unit whichUnit returns boolean",
		"fileName": "blizzard.j",
		"name": "IsUnitLoadedBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitLoadedBJ(whichUnit)",
		"documentation": "单位正在被送"
	},
	"IsUnitIllusionBJ": {
		"original": "function IsUnitIllusionBJ takes unit whichUnit returns boolean",
		"fileName": "blizzard.j",
		"name": "IsUnitIllusionBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitIllusionBJ(whichUnit)",
		"documentation": "单位是隐形的"
	},
	"ReplaceUnitBJ": {
		"original": "function ReplaceUnitBJ takes unit whichUnit, integer newUnitId, integer unitStateMethod returns unit",
		"fileName": "blizzard.j",
		"name": "ReplaceUnitBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "newUnitId"
		}, {
			"type": "integer",
			"name": "unitStateMethod"
		}],
		"returnType": "unit",
		"insertText": "ReplaceUnitBJ(whichUnit, newUnitId, unitStateMethod)",
		"documentation": "替换单位"
	},
	"GetLastReplacedUnitBJ": {
		"original": "function GetLastReplacedUnitBJ takes nothing returns unit",
		"fileName": "blizzard.j",
		"name": "GetLastReplacedUnitBJ",
		"isConstant": false,
		"isNative": false,
		"returnType": "unit",
		"insertText": "GetLastReplacedUnitBJ()",
		"documentation": "最后替换的单位"
	},
	"SetUnitPositionLocFacingBJ": {
		"original": "function SetUnitPositionLocFacingBJ takes unit whichUnit, location loc, real facing returns nothing",
		"fileName": "blizzard.j",
		"name": "SetUnitPositionLocFacingBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "location",
			"name": "loc"
		}, {
			"type": "real",
			"name": "facing"
		}],
		"insertText": "SetUnitPositionLocFacingBJ(whichUnit, loc, facing)",
		"documentation": "移动单位并改变面对角度 (立刻)"
	},
	"SetUnitPositionLocFacingLocBJ": {
		"original": "function SetUnitPositionLocFacingLocBJ takes unit whichUnit, location loc, location lookAt returns nothing",
		"fileName": "blizzard.j",
		"name": "SetUnitPositionLocFacingLocBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "location",
			"name": "loc"
		}, {
			"type": "location",
			"name": "lookAt"
		}],
		"insertText": "SetUnitPositionLocFacingLocBJ(whichUnit, loc, lookAt)",
		"documentation": "移动单位并改变面对点 (立刻)"
	},
	"AddItemToStockBJ": {
		"original": "function AddItemToStockBJ takes integer itemId, unit whichUnit, integer currentStock, integer stockMax returns nothing",
		"fileName": "blizzard.j",
		"name": "AddItemToStockBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "itemId"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "currentStock"
		}, {
			"type": "integer",
			"name": "stockMax"
		}],
		"insertText": "AddItemToStockBJ(itemId, whichUnit, currentStock, stockMax)",
		"documentation": "增加 物品-类型 (到商店)"
	},
	"AddUnitToStockBJ": {
		"original": "function AddUnitToStockBJ takes integer unitId, unit whichUnit, integer currentStock, integer stockMax returns nothing",
		"fileName": "blizzard.j",
		"name": "AddUnitToStockBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "unitId"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "currentStock"
		}, {
			"type": "integer",
			"name": "stockMax"
		}],
		"insertText": "AddUnitToStockBJ(unitId, whichUnit, currentStock, stockMax)",
		"documentation": "增加 单位-类型 (到商店)"
	},
	"RemoveItemFromStockBJ": {
		"original": "function RemoveItemFromStockBJ takes integer itemId, unit whichUnit returns nothing",
		"fileName": "blizzard.j",
		"name": "RemoveItemFromStockBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "itemId"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"insertText": "RemoveItemFromStockBJ(itemId, whichUnit)",
		"documentation": "删除 物品-类型 (从商店)"
	},
	"RemoveUnitFromStockBJ": {
		"original": "function RemoveUnitFromStockBJ takes integer unitId, unit whichUnit returns nothing",
		"fileName": "blizzard.j",
		"name": "RemoveUnitFromStockBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "unitId"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"insertText": "RemoveUnitFromStockBJ(unitId, whichUnit)",
		"documentation": "删除 单位-类型 (从商店)"
	},
	"SetUnitUseFoodBJ": {
		"original": "function SetUnitUseFoodBJ takes boolean enable, unit whichUnit returns nothing",
		"fileName": "blizzard.j",
		"name": "SetUnitUseFoodBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "enable"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"insertText": "SetUnitUseFoodBJ(enable, whichUnit)",
		"documentation": "允许/禁止 使用人口"
	},
	"UnitDamagePointLoc": {
		"original": "function UnitDamagePointLoc takes unit whichUnit, real delay, real radius, location loc, real amount, attacktype whichAttack, damagetype whichDamage returns boolean",
		"fileName": "blizzard.j",
		"name": "UnitDamagePointLoc",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "delay"
		}, {
			"type": "real",
			"name": "radius"
		}, {
			"type": "location",
			"name": "loc"
		}, {
			"type": "real",
			"name": "amount"
		}, {
			"type": "attacktype",
			"name": "whichAttack"
		}, {
			"type": "damagetype",
			"name": "whichDamage"
		}],
		"returnType": "boolean",
		"insertText": "UnitDamagePointLoc(whichUnit, delay, radius, loc, amount, whichAttack, whichDamage)",
		"documentation": "伤害区域"
	},
	"UnitDamageTargetBJ": {
		"original": "function UnitDamageTargetBJ takes unit whichUnit, unit target, real amount, attacktype whichAttack, damagetype whichDamage returns boolean",
		"fileName": "blizzard.j",
		"name": "UnitDamageTargetBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "unit",
			"name": "target"
		}, {
			"type": "real",
			"name": "amount"
		}, {
			"type": "attacktype",
			"name": "whichAttack"
		}, {
			"type": "damagetype",
			"name": "whichDamage"
		}],
		"returnType": "boolean",
		"insertText": "UnitDamageTargetBJ(whichUnit, target, amount, whichAttack, whichDamage)",
		"documentation": "伤害目标"
	},
	"CreateDestructableLoc": {
		"original": "function CreateDestructableLoc takes integer objectid, location loc, real facing, real scale, integer variation returns destructable",
		"fileName": "blizzard.j",
		"name": "CreateDestructableLoc",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "objectid"
		}, {
			"type": "location",
			"name": "loc"
		}, {
			"type": "real",
			"name": "facing"
		}, {
			"type": "real",
			"name": "scale"
		}, {
			"type": "integer",
			"name": "variation"
		}],
		"returnType": "destructable",
		"insertText": "CreateDestructableLoc(objectid, loc, facing, scale, variation)",
		"documentation": "创造 可毁坏物"
	},
	"CreateDeadDestructableLocBJ": {
		"original": "function CreateDeadDestructableLocBJ takes integer objectid, location loc, real facing, real scale, integer variation returns destructable",
		"fileName": "blizzard.j",
		"name": "CreateDeadDestructableLocBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "objectid"
		}, {
			"type": "location",
			"name": "loc"
		}, {
			"type": "real",
			"name": "facing"
		}, {
			"type": "real",
			"name": "scale"
		}, {
			"type": "integer",
			"name": "variation"
		}],
		"returnType": "destructable",
		"insertText": "CreateDeadDestructableLocBJ(objectid, loc, facing, scale, variation)",
		"documentation": "创造[可毁坏物](毁坏的)"
	},
	"GetLastCreatedDestructable": {
		"original": "function GetLastCreatedDestructable takes nothing returns destructable",
		"fileName": "blizzard.j",
		"name": "GetLastCreatedDestructable",
		"isConstant": false,
		"isNative": false,
		"returnType": "destructable",
		"insertText": "GetLastCreatedDestructable()",
		"documentation": "最后创建的可毁坏物"
	},
	"ShowDestructableBJ": {
		"original": "function ShowDestructableBJ takes boolean flag, destructable d returns nothing",
		"fileName": "blizzard.j",
		"name": "ShowDestructableBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "flag"
		}, {
			"type": "destructable",
			"name": "d"
		}],
		"insertText": "ShowDestructableBJ(flag, d)",
		"documentation": "显示/隐藏 可毁坏物"
	},
	"SetDestructableInvulnerableBJ": {
		"original": "function SetDestructableInvulnerableBJ takes destructable d, boolean flag returns nothing",
		"fileName": "blizzard.j",
		"name": "SetDestructableInvulnerableBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "destructable",
			"name": "d"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "SetDestructableInvulnerableBJ(d, flag)",
		"documentation": "设置 无敌/可攻击"
	},
	"IsDestructableInvulnerableBJ": {
		"original": "function IsDestructableInvulnerableBJ takes destructable d returns boolean",
		"fileName": "blizzard.j",
		"name": "IsDestructableInvulnerableBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "destructable",
			"name": "d"
		}],
		"returnType": "boolean",
		"insertText": "IsDestructableInvulnerableBJ(d)",
		"documentation": "可毁坏物是无敌的"
	},
	"GetDestructableLoc": {
		"original": "function GetDestructableLoc takes destructable whichDestructable returns location",
		"fileName": "blizzard.j",
		"name": "GetDestructableLoc",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "destructable",
			"name": "whichDestructable"
		}],
		"returnType": "location",
		"insertText": "GetDestructableLoc(whichDestructable)",
		"documentation": "可毁坏物的位置"
	},
	"EnumDestructablesInRectAll": {
		"original": "function EnumDestructablesInRectAll takes rect r, code actionFunc returns nothing",
		"fileName": "blizzard.j",
		"name": "EnumDestructablesInRectAll",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "rect",
			"name": "r"
		}, {
			"type": "code",
			"name": "actionFunc"
		}],
		"insertText": "EnumDestructablesInRectAll(r, actionFunc)",
		"documentation": "选取所有可毁坏物 在区域 做 动作(单一的)"
	},
	"EnumDestructablesInCircleBJFilter": {
		"original": "function EnumDestructablesInCircleBJFilter takes nothing returns boolean",
		"fileName": "blizzard.j",
		"name": "EnumDestructablesInCircleBJFilter",
		"isConstant": false,
		"isNative": false,
		"returnType": "boolean",
		"insertText": "EnumDestructablesInCircleBJFilter()",
		"documentation": ""
	},
	"IsDestructableDeadBJ": {
		"original": "function IsDestructableDeadBJ takes destructable d returns boolean",
		"fileName": "blizzard.j",
		"name": "IsDestructableDeadBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "destructable",
			"name": "d"
		}],
		"returnType": "boolean",
		"insertText": "IsDestructableDeadBJ(d)",
		"documentation": "可毁坏物是死的"
	},
	"IsDestructableAliveBJ": {
		"original": "function IsDestructableAliveBJ takes destructable d returns boolean",
		"fileName": "blizzard.j",
		"name": "IsDestructableAliveBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "destructable",
			"name": "d"
		}],
		"returnType": "boolean",
		"insertText": "IsDestructableAliveBJ(d)",
		"documentation": "可毁坏物是活者的"
	},
	"RandomDestructableInRectBJEnum": {
		"original": "function RandomDestructableInRectBJEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "RandomDestructableInRectBJEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "RandomDestructableInRectBJEnum()",
		"documentation": ""
	},
	"RandomDestructableInRectBJ": {
		"original": "function RandomDestructableInRectBJ takes rect r, boolexpr filter returns destructable",
		"fileName": "blizzard.j",
		"name": "RandomDestructableInRectBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "rect",
			"name": "r"
		}, {
			"type": "boolexpr",
			"name": "filter"
		}],
		"returnType": "destructable",
		"insertText": "RandomDestructableInRectBJ(r, filter)",
		"documentation": "区域的 随机可毁坏物 且匹配条件"
	},
	"RandomDestructableInRectSimpleBJ": {
		"original": "function RandomDestructableInRectSimpleBJ takes rect r returns destructable",
		"fileName": "blizzard.j",
		"name": "RandomDestructableInRectSimpleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "rect",
			"name": "r"
		}],
		"returnType": "destructable",
		"insertText": "RandomDestructableInRectSimpleBJ(r)",
		"documentation": "区域的 随机可毁坏物"
	},
	"EnumDestructablesInCircleBJ": {
		"original": "function EnumDestructablesInCircleBJ takes real radius, location loc, code actionFunc returns nothing",
		"fileName": "blizzard.j",
		"name": "EnumDestructablesInCircleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "radius"
		}, {
			"type": "location",
			"name": "loc"
		}, {
			"type": "code",
			"name": "actionFunc"
		}],
		"insertText": "EnumDestructablesInCircleBJ(radius, loc, actionFunc)",
		"documentation": "选取所有可毁坏物 在圆周 做 动作(单一的)"
	},
	"SetDestructableLifePercentBJ": {
		"original": "function SetDestructableLifePercentBJ takes destructable d, real percent returns nothing",
		"fileName": "blizzard.j",
		"name": "SetDestructableLifePercentBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "destructable",
			"name": "d"
		}, {
			"type": "real",
			"name": "percent"
		}],
		"insertText": "SetDestructableLifePercentBJ(d, percent)",
		"documentation": "设置 可毁坏物 生命 (百分比)"
	},
	"SetDestructableMaxLifeBJ": {
		"original": "function SetDestructableMaxLifeBJ takes destructable d, real max returns nothing",
		"fileName": "blizzard.j",
		"name": "SetDestructableMaxLifeBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "destructable",
			"name": "d"
		}, {
			"type": "real",
			"name": "max"
		}],
		"insertText": "SetDestructableMaxLifeBJ(d, max)",
		"documentation": "设置 可毁坏物 最大生命"
	},
	"ModifyGateBJ": {
		"original": "function ModifyGateBJ takes integer gateOperation, destructable d returns nothing",
		"fileName": "blizzard.j",
		"name": "ModifyGateBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "gateOperation"
		}, {
			"type": "destructable",
			"name": "d"
		}],
		"insertText": "ModifyGateBJ(gateOperation, d)",
		"documentation": "打开/关闭/破坏门"
	},
	"GetElevatorHeight": {
		"original": "function GetElevatorHeight takes destructable d returns integer",
		"fileName": "blizzard.j",
		"name": "GetElevatorHeight",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "destructable",
			"name": "d"
		}],
		"returnType": "integer",
		"insertText": "GetElevatorHeight(d)",
		"documentation": "升降机高度"
	},
	"ChangeElevatorHeight": {
		"original": "function ChangeElevatorHeight takes destructable d, integer newHeight returns nothing",
		"fileName": "blizzard.j",
		"name": "ChangeElevatorHeight",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "destructable",
			"name": "d"
		}, {
			"type": "integer",
			"name": "newHeight"
		}],
		"insertText": "ChangeElevatorHeight(d, newHeight)",
		"documentation": "设置升降机高度"
	},
	"NudgeUnitsInRectEnum": {
		"original": "function NudgeUnitsInRectEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "NudgeUnitsInRectEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "NudgeUnitsInRectEnum()",
		"documentation": ""
	},
	"NudgeItemsInRectEnum": {
		"original": "function NudgeItemsInRectEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "NudgeItemsInRectEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "NudgeItemsInRectEnum()",
		"documentation": ""
	},
	"NudgeObjectsInRect": {
		"original": "function NudgeObjectsInRect takes rect nudgeArea returns nothing",
		"fileName": "blizzard.j",
		"name": "NudgeObjectsInRect",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "rect",
			"name": "nudgeArea"
		}],
		"insertText": "NudgeObjectsInRect(nudgeArea)",
		"documentation": ""
	},
	"NearbyElevatorExistsEnum": {
		"original": "function NearbyElevatorExistsEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "NearbyElevatorExistsEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "NearbyElevatorExistsEnum()",
		"documentation": ""
	},
	"NearbyElevatorExists": {
		"original": "function NearbyElevatorExists takes real x, real y returns boolean",
		"fileName": "blizzard.j",
		"name": "NearbyElevatorExists",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"returnType": "boolean",
		"insertText": "NearbyElevatorExists(x, y)",
		"documentation": ""
	},
	"FindElevatorWallBlockerEnum": {
		"original": "function FindElevatorWallBlockerEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "FindElevatorWallBlockerEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "FindElevatorWallBlockerEnum()",
		"documentation": ""
	},
	"ChangeElevatorWallBlocker": {
		"original": "function ChangeElevatorWallBlocker takes real x, real y, real facing, boolean open returns nothing",
		"fileName": "blizzard.j",
		"name": "ChangeElevatorWallBlocker",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "facing"
		}, {
			"type": "boolean",
			"name": "open"
		}],
		"insertText": "ChangeElevatorWallBlocker(x, y, facing, open)",
		"documentation": ""
	},
	"ChangeElevatorWalls": {
		"original": "function ChangeElevatorWalls takes boolean open, integer walls, destructable d returns nothing",
		"fileName": "blizzard.j",
		"name": "ChangeElevatorWalls",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "open"
		}, {
			"type": "integer",
			"name": "walls"
		}, {
			"type": "destructable",
			"name": "d"
		}],
		"insertText": "ChangeElevatorWalls(open, walls, d)",
		"documentation": "打开/关闭 升降机"
	},
	"WaygateActivateBJ": {
		"original": "function WaygateActivateBJ takes boolean activate, unit waygate returns nothing",
		"fileName": "blizzard.j",
		"name": "WaygateActivateBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "activate"
		}, {
			"type": "unit",
			"name": "waygate"
		}],
		"insertText": "WaygateActivateBJ(activate, waygate)",
		"documentation": "打开/关闭 传送门"
	},
	"WaygateIsActiveBJ": {
		"original": "function WaygateIsActiveBJ takes unit waygate returns boolean",
		"fileName": "blizzard.j",
		"name": "WaygateIsActiveBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "waygate"
		}],
		"returnType": "boolean",
		"insertText": "WaygateIsActiveBJ(waygate)",
		"documentation": "传送门是允许的"
	},
	"WaygateSetDestinationLocBJ": {
		"original": "function WaygateSetDestinationLocBJ takes unit waygate, location loc returns nothing",
		"fileName": "blizzard.j",
		"name": "WaygateSetDestinationLocBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "waygate"
		}, {
			"type": "location",
			"name": "loc"
		}],
		"insertText": "WaygateSetDestinationLocBJ(waygate, loc)",
		"documentation": "设置传送门目的地"
	},
	"WaygateGetDestinationLocBJ": {
		"original": "function WaygateGetDestinationLocBJ takes unit waygate returns location",
		"fileName": "blizzard.j",
		"name": "WaygateGetDestinationLocBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "waygate"
		}],
		"returnType": "location",
		"insertText": "WaygateGetDestinationLocBJ(waygate)",
		"documentation": "传送门的目的地"
	},
	"UnitSetUsesAltIconBJ": {
		"original": "function UnitSetUsesAltIconBJ takes boolean flag, unit whichUnit returns nothing",
		"fileName": "blizzard.j",
		"name": "UnitSetUsesAltIconBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "flag"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"insertText": "UnitSetUsesAltIconBJ(flag, whichUnit)",
		"documentation": "改变单位的小地图图标"
	},
	"ForceUIKeyBJ": {
		"original": "function ForceUIKeyBJ takes player whichPlayer, string key returns nothing",
		"fileName": "blizzard.j",
		"name": "ForceUIKeyBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}],
		"insertText": "ForceUIKeyBJ(whichPlayer, key)",
		"documentation": "按下 UI 键"
	},
	"ForceUICancelBJ": {
		"original": "function ForceUICancelBJ takes player whichPlayer returns nothing",
		"fileName": "blizzard.j",
		"name": "ForceUICancelBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "ForceUICancelBJ(whichPlayer)",
		"documentation": "取消 UI 键"
	},
	"ForGroupBJ": {
		"original": "function ForGroupBJ takes group whichGroup, code callback returns nothing",
		"fileName": "blizzard.j",
		"name": "ForGroupBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}, {
			"type": "code",
			"name": "callback"
		}],
		"insertText": "ForGroupBJ(whichGroup, callback)",
		"documentation": ""
	},
	"GroupAddUnitSimple": {
		"original": "function GroupAddUnitSimple takes unit whichUnit, group whichGroup returns nothing",
		"fileName": "blizzard.j",
		"name": "GroupAddUnitSimple",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "group",
			"name": "whichGroup"
		}],
		"insertText": "GroupAddUnitSimple(whichUnit, whichGroup)",
		"documentation": "增加单位到单位组"
	},
	"GroupRemoveUnitSimple": {
		"original": "function GroupRemoveUnitSimple takes unit whichUnit, group whichGroup returns nothing",
		"fileName": "blizzard.j",
		"name": "GroupRemoveUnitSimple",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "group",
			"name": "whichGroup"
		}],
		"insertText": "GroupRemoveUnitSimple(whichUnit, whichGroup)",
		"documentation": "清除单位从单位组"
	},
	"GroupAddGroupEnum": {
		"original": "function GroupAddGroupEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "GroupAddGroupEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "GroupAddGroupEnum()",
		"documentation": ""
	},
	"GroupAddGroup": {
		"original": "function GroupAddGroup takes group sourceGroup, group destGroup returns nothing",
		"fileName": "blizzard.j",
		"name": "GroupAddGroup",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "group",
			"name": "sourceGroup"
		}, {
			"type": "group",
			"name": "destGroup"
		}],
		"insertText": "GroupAddGroup(sourceGroup, destGroup)",
		"documentation": "增加单位组到单位组"
	},
	"GroupRemoveGroupEnum": {
		"original": "function GroupRemoveGroupEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "GroupRemoveGroupEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "GroupRemoveGroupEnum()",
		"documentation": ""
	},
	"GroupRemoveGroup": {
		"original": "function GroupRemoveGroup takes group sourceGroup, group destGroup returns nothing",
		"fileName": "blizzard.j",
		"name": "GroupRemoveGroup",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "group",
			"name": "sourceGroup"
		}, {
			"type": "group",
			"name": "destGroup"
		}],
		"insertText": "GroupRemoveGroup(sourceGroup, destGroup)",
		"documentation": "清除单位组从单位组"
	},
	"ForceAddPlayerSimple": {
		"original": "function ForceAddPlayerSimple takes player whichPlayer, force whichForce returns nothing",
		"fileName": "blizzard.j",
		"name": "ForceAddPlayerSimple",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "force",
			"name": "whichForce"
		}],
		"insertText": "ForceAddPlayerSimple(whichPlayer, whichForce)",
		"documentation": "添加玩家到玩家组"
	},
	"ForceRemovePlayerSimple": {
		"original": "function ForceRemovePlayerSimple takes player whichPlayer, force whichForce returns nothing",
		"fileName": "blizzard.j",
		"name": "ForceRemovePlayerSimple",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "force",
			"name": "whichForce"
		}],
		"insertText": "ForceRemovePlayerSimple(whichPlayer, whichForce)",
		"documentation": "删除玩家到玩家组"
	},
	"GroupPickRandomUnitEnum": {
		"original": "function GroupPickRandomUnitEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "GroupPickRandomUnitEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "GroupPickRandomUnitEnum()",
		"documentation": ""
	},
	"GroupPickRandomUnit": {
		"original": "function GroupPickRandomUnit takes group whichGroup returns unit",
		"fileName": "blizzard.j",
		"name": "GroupPickRandomUnit",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}],
		"returnType": "unit",
		"insertText": "GroupPickRandomUnit(whichGroup)",
		"documentation": "单位组里的随机单位"
	},
	"ForcePickRandomPlayerEnum": {
		"original": "function ForcePickRandomPlayerEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "ForcePickRandomPlayerEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "ForcePickRandomPlayerEnum()",
		"documentation": ""
	},
	"ForcePickRandomPlayer": {
		"original": "function ForcePickRandomPlayer takes force whichForce returns player",
		"fileName": "blizzard.j",
		"name": "ForcePickRandomPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "force",
			"name": "whichForce"
		}],
		"returnType": "player",
		"insertText": "ForcePickRandomPlayer(whichForce)",
		"documentation": "玩家组里的随机玩家"
	},
	"EnumUnitsSelected": {
		"original": "function EnumUnitsSelected takes player whichPlayer, boolexpr enumFilter, code enumAction returns nothing",
		"fileName": "blizzard.j",
		"name": "EnumUnitsSelected",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "boolexpr",
			"name": "enumFilter"
		}, {
			"type": "code",
			"name": "enumAction"
		}],
		"insertText": "EnumUnitsSelected(whichPlayer, enumFilter, enumAction)",
		"documentation": ""
	},
	"GetUnitsInRectMatching": {
		"original": "function GetUnitsInRectMatching takes rect r, boolexpr filter returns group",
		"fileName": "blizzard.j",
		"name": "GetUnitsInRectMatching",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "rect",
			"name": "r"
		}, {
			"type": "boolexpr",
			"name": "filter"
		}],
		"returnType": "group",
		"insertText": "GetUnitsInRectMatching(r, filter)",
		"documentation": "单位在区域中并匹配条件"
	},
	"GetUnitsInRectAll": {
		"original": "function GetUnitsInRectAll takes rect r returns group",
		"fileName": "blizzard.j",
		"name": "GetUnitsInRectAll",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "rect",
			"name": "r"
		}],
		"returnType": "group",
		"insertText": "GetUnitsInRectAll(r)",
		"documentation": "区域中的所有单位"
	},
	"GetUnitsInRectOfPlayerFilter": {
		"original": "function GetUnitsInRectOfPlayerFilter takes nothing returns boolean",
		"fileName": "blizzard.j",
		"name": "GetUnitsInRectOfPlayerFilter",
		"isConstant": false,
		"isNative": false,
		"returnType": "boolean",
		"insertText": "GetUnitsInRectOfPlayerFilter()",
		"documentation": ""
	},
	"GetUnitsInRectOfPlayer": {
		"original": "function GetUnitsInRectOfPlayer takes rect r, player whichPlayer returns group",
		"fileName": "blizzard.j",
		"name": "GetUnitsInRectOfPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "rect",
			"name": "r"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "group",
		"insertText": "GetUnitsInRectOfPlayer(r, whichPlayer)",
		"documentation": "玩家在区域中的单位"
	},
	"GetUnitsInRangeOfLocMatching": {
		"original": "function GetUnitsInRangeOfLocMatching takes real radius, location whichLocation, boolexpr filter returns group",
		"fileName": "blizzard.j",
		"name": "GetUnitsInRangeOfLocMatching",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "radius"
		}, {
			"type": "location",
			"name": "whichLocation"
		}, {
			"type": "boolexpr",
			"name": "filter"
		}],
		"returnType": "group",
		"insertText": "GetUnitsInRangeOfLocMatching(radius, whichLocation, filter)",
		"documentation": "单位在圆周内匹配条件的"
	},
	"GetUnitsInRangeOfLocAll": {
		"original": "function GetUnitsInRangeOfLocAll takes real radius, location whichLocation returns group",
		"fileName": "blizzard.j",
		"name": "GetUnitsInRangeOfLocAll",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "radius"
		}, {
			"type": "location",
			"name": "whichLocation"
		}],
		"returnType": "group",
		"insertText": "GetUnitsInRangeOfLocAll(radius, whichLocation)",
		"documentation": "圆周内的所有单位"
	},
	"GetUnitsOfTypeIdAllFilter": {
		"original": "function GetUnitsOfTypeIdAllFilter takes nothing returns boolean",
		"fileName": "blizzard.j",
		"name": "GetUnitsOfTypeIdAllFilter",
		"isConstant": false,
		"isNative": false,
		"returnType": "boolean",
		"insertText": "GetUnitsOfTypeIdAllFilter()",
		"documentation": ""
	},
	"GetUnitsOfTypeIdAll": {
		"original": "function GetUnitsOfTypeIdAll takes integer unitid returns group",
		"fileName": "blizzard.j",
		"name": "GetUnitsOfTypeIdAll",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "unitid"
		}],
		"returnType": "group",
		"insertText": "GetUnitsOfTypeIdAll(unitid)",
		"documentation": "某类型的单位"
	},
	"GetUnitsOfPlayerMatching": {
		"original": "function GetUnitsOfPlayerMatching takes player whichPlayer, boolexpr filter returns group",
		"fileName": "blizzard.j",
		"name": "GetUnitsOfPlayerMatching",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "boolexpr",
			"name": "filter"
		}],
		"returnType": "group",
		"insertText": "GetUnitsOfPlayerMatching(whichPlayer, filter)",
		"documentation": "玩家拥有的单位匹配条件"
	},
	"GetUnitsOfPlayerAll": {
		"original": "function GetUnitsOfPlayerAll takes player whichPlayer returns group",
		"fileName": "blizzard.j",
		"name": "GetUnitsOfPlayerAll",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "group",
		"insertText": "GetUnitsOfPlayerAll(whichPlayer)",
		"documentation": "玩家拥有的单位"
	},
	"GetUnitsOfPlayerAndTypeIdFilter": {
		"original": "function GetUnitsOfPlayerAndTypeIdFilter takes nothing returns boolean",
		"fileName": "blizzard.j",
		"name": "GetUnitsOfPlayerAndTypeIdFilter",
		"isConstant": false,
		"isNative": false,
		"returnType": "boolean",
		"insertText": "GetUnitsOfPlayerAndTypeIdFilter()",
		"documentation": ""
	},
	"GetUnitsOfPlayerAndTypeId": {
		"original": "function GetUnitsOfPlayerAndTypeId takes player whichPlayer, integer unitid returns group",
		"fileName": "blizzard.j",
		"name": "GetUnitsOfPlayerAndTypeId",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "integer",
			"name": "unitid"
		}],
		"returnType": "group",
		"insertText": "GetUnitsOfPlayerAndTypeId(whichPlayer, unitid)",
		"documentation": "玩家拥有的单位类型"
	},
	"GetUnitsSelectedAll": {
		"original": "function GetUnitsSelectedAll takes player whichPlayer returns group",
		"fileName": "blizzard.j",
		"name": "GetUnitsSelectedAll",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "group",
		"insertText": "GetUnitsSelectedAll(whichPlayer)",
		"documentation": "选定的单位"
	},
	"GetForceOfPlayer": {
		"original": "function GetForceOfPlayer takes player whichPlayer returns force",
		"fileName": "blizzard.j",
		"name": "GetForceOfPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "force",
		"insertText": "GetForceOfPlayer(whichPlayer)",
		"documentation": "将玩家转换为玩家组"
	},
	"GetPlayersAll": {
		"original": "function GetPlayersAll takes nothing returns force",
		"fileName": "blizzard.j",
		"name": "GetPlayersAll",
		"isConstant": false,
		"isNative": false,
		"returnType": "force",
		"insertText": "GetPlayersAll()",
		"documentation": "所有玩家"
	},
	"GetPlayersByMapControl": {
		"original": "function GetPlayersByMapControl takes mapcontrol whichControl returns force",
		"fileName": "blizzard.j",
		"name": "GetPlayersByMapControl",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "mapcontrol",
			"name": "whichControl"
		}],
		"returnType": "force",
		"insertText": "GetPlayersByMapControl(whichControl)",
		"documentation": "所有某种控制的玩家"
	},
	"GetPlayersAllies": {
		"original": "function GetPlayersAllies takes player whichPlayer returns force",
		"fileName": "blizzard.j",
		"name": "GetPlayersAllies",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "force",
		"insertText": "GetPlayersAllies(whichPlayer)",
		"documentation": "玩家联盟"
	},
	"GetPlayersEnemies": {
		"original": "function GetPlayersEnemies takes player whichPlayer returns force",
		"fileName": "blizzard.j",
		"name": "GetPlayersEnemies",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "force",
		"insertText": "GetPlayersEnemies(whichPlayer)",
		"documentation": "玩家的敌人"
	},
	"GetPlayersMatching": {
		"original": "function GetPlayersMatching takes boolexpr filter returns force",
		"fileName": "blizzard.j",
		"name": "GetPlayersMatching",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolexpr",
			"name": "filter"
		}],
		"returnType": "force",
		"insertText": "GetPlayersMatching(filter)",
		"documentation": "所有玩家匹配条件"
	},
	"CountUnitsInGroupEnum": {
		"original": "function CountUnitsInGroupEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "CountUnitsInGroupEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "CountUnitsInGroupEnum()",
		"documentation": ""
	},
	"CountUnitsInGroup": {
		"original": "function CountUnitsInGroup takes group g returns integer",
		"fileName": "blizzard.j",
		"name": "CountUnitsInGroup",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "group",
			"name": "g"
		}],
		"returnType": "integer",
		"insertText": "CountUnitsInGroup(g)",
		"documentation": "单位组的单位数量"
	},
	"CountPlayersInForceEnum": {
		"original": "function CountPlayersInForceEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "CountPlayersInForceEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "CountPlayersInForceEnum()",
		"documentation": ""
	},
	"CountPlayersInForceBJ": {
		"original": "function CountPlayersInForceBJ takes force f returns integer",
		"fileName": "blizzard.j",
		"name": "CountPlayersInForceBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "force",
			"name": "f"
		}],
		"returnType": "integer",
		"insertText": "CountPlayersInForceBJ(f)",
		"documentation": "玩家组中的玩家数量"
	},
	"GetRandomSubGroupEnum": {
		"original": "function GetRandomSubGroupEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "GetRandomSubGroupEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "GetRandomSubGroupEnum()",
		"documentation": ""
	},
	"GetRandomSubGroup": {
		"original": "function GetRandomSubGroup takes integer count, group sourceGroup returns group",
		"fileName": "blizzard.j",
		"name": "GetRandomSubGroup",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "count"
		}, {
			"type": "group",
			"name": "sourceGroup"
		}],
		"returnType": "group",
		"insertText": "GetRandomSubGroup(count, sourceGroup)",
		"documentation": "随机选 N 个单位在单位组中"
	},
	"LivingPlayerUnitsOfTypeIdFilter": {
		"original": "function LivingPlayerUnitsOfTypeIdFilter takes nothing returns boolean",
		"fileName": "blizzard.j",
		"name": "LivingPlayerUnitsOfTypeIdFilter",
		"isConstant": false,
		"isNative": false,
		"returnType": "boolean",
		"insertText": "LivingPlayerUnitsOfTypeIdFilter()",
		"documentation": ""
	},
	"CountLivingPlayerUnitsOfTypeId": {
		"original": "function CountLivingPlayerUnitsOfTypeId takes integer unitId, player whichPlayer returns integer",
		"fileName": "blizzard.j",
		"name": "CountLivingPlayerUnitsOfTypeId",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "unitId"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "integer",
		"insertText": "CountLivingPlayerUnitsOfTypeId(unitId, whichPlayer)",
		"documentation": "玩家活着的某类型单位的数量"
	},
	"ResetUnitAnimation": {
		"original": "function ResetUnitAnimation takes unit whichUnit returns nothing",
		"fileName": "blizzard.j",
		"name": "ResetUnitAnimation",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"insertText": "ResetUnitAnimation(whichUnit)",
		"documentation": "重置单位动作"
	},
	"SetUnitTimeScalePercent": {
		"original": "function SetUnitTimeScalePercent takes unit whichUnit, real percentScale returns nothing",
		"fileName": "blizzard.j",
		"name": "SetUnitTimeScalePercent",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "percentScale"
		}],
		"insertText": "SetUnitTimeScalePercent(whichUnit, percentScale)",
		"documentation": "改变单位动作速度"
	},
	"SetUnitScalePercent": {
		"original": "function SetUnitScalePercent takes unit whichUnit, real percentScaleX, real percentScaleY, real percentScaleZ returns nothing",
		"fileName": "blizzard.j",
		"name": "SetUnitScalePercent",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "percentScaleX"
		}, {
			"type": "real",
			"name": "percentScaleY"
		}, {
			"type": "real",
			"name": "percentScaleZ"
		}],
		"insertText": "SetUnitScalePercent(whichUnit, percentScaleX, percentScaleY, percentScaleZ)",
		"documentation": "改变单位尺寸"
	},
	"SetUnitVertexColorBJ": {
		"original": "function SetUnitVertexColorBJ takes unit whichUnit, real red, real green, real blue, real transparency returns nothing",
		"fileName": "blizzard.j",
		"name": "SetUnitVertexColorBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}, {
			"type": "real",
			"name": "transparency"
		}],
		"insertText": "SetUnitVertexColorBJ(whichUnit, red, green, blue, transparency)",
		"documentation": "改变单位着色"
	},
	"UnitAddIndicatorBJ": {
		"original": "function UnitAddIndicatorBJ takes unit whichUnit, real red, real green, real blue, real transparency returns nothing",
		"fileName": "blizzard.j",
		"name": "UnitAddIndicatorBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}, {
			"type": "real",
			"name": "transparency"
		}],
		"insertText": "UnitAddIndicatorBJ(whichUnit, red, green, blue, transparency)",
		"documentation": "闪动指示器为了单位"
	},
	"DestructableAddIndicatorBJ": {
		"original": "function DestructableAddIndicatorBJ takes destructable whichDestructable, real red, real green, real blue, real transparency returns nothing",
		"fileName": "blizzard.j",
		"name": "DestructableAddIndicatorBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "destructable",
			"name": "whichDestructable"
		}, {
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}, {
			"type": "real",
			"name": "transparency"
		}],
		"insertText": "DestructableAddIndicatorBJ(whichDestructable, red, green, blue, transparency)",
		"documentation": "闪动指示器为了可毁坏物"
	},
	"ItemAddIndicatorBJ": {
		"original": "function ItemAddIndicatorBJ takes item whichItem, real red, real green, real blue, real transparency returns nothing",
		"fileName": "blizzard.j",
		"name": "ItemAddIndicatorBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}, {
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}, {
			"type": "real",
			"name": "transparency"
		}],
		"insertText": "ItemAddIndicatorBJ(whichItem, red, green, blue, transparency)",
		"documentation": "闪动指示器为了物品"
	},
	"SetUnitFacingToFaceLocTimed": {
		"original": "function SetUnitFacingToFaceLocTimed takes unit whichUnit, location target, real duration returns nothing",
		"fileName": "blizzard.j",
		"name": "SetUnitFacingToFaceLocTimed",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "location",
			"name": "target"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "SetUnitFacingToFaceLocTimed(whichUnit, target, duration)",
		"documentation": "设置单位面对点"
	},
	"SetUnitFacingToFaceUnitTimed": {
		"original": "function SetUnitFacingToFaceUnitTimed takes unit whichUnit, unit target, real duration returns nothing",
		"fileName": "blizzard.j",
		"name": "SetUnitFacingToFaceUnitTimed",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "unit",
			"name": "target"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "SetUnitFacingToFaceUnitTimed(whichUnit, target, duration)",
		"documentation": "设置单位面对单位"
	},
	"QueueUnitAnimationBJ": {
		"original": "function QueueUnitAnimationBJ takes unit whichUnit, string whichAnimation returns nothing",
		"fileName": "blizzard.j",
		"name": "QueueUnitAnimationBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "string",
			"name": "whichAnimation"
		}],
		"insertText": "QueueUnitAnimationBJ(whichUnit, whichAnimation)",
		"documentation": "队列单位动作"
	},
	"SetDestructableAnimationBJ": {
		"original": "function SetDestructableAnimationBJ takes destructable d, string whichAnimation returns nothing",
		"fileName": "blizzard.j",
		"name": "SetDestructableAnimationBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "destructable",
			"name": "d"
		}, {
			"type": "string",
			"name": "whichAnimation"
		}],
		"insertText": "SetDestructableAnimationBJ(d, whichAnimation)",
		"documentation": "播放可毁坏物的动作"
	},
	"QueueDestructableAnimationBJ": {
		"original": "function QueueDestructableAnimationBJ takes destructable d, string whichAnimation returns nothing",
		"fileName": "blizzard.j",
		"name": "QueueDestructableAnimationBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "destructable",
			"name": "d"
		}, {
			"type": "string",
			"name": "whichAnimation"
		}],
		"insertText": "QueueDestructableAnimationBJ(d, whichAnimation)",
		"documentation": "排列可毁坏物的动作"
	},
	"SetDestAnimationSpeedPercent": {
		"original": "function SetDestAnimationSpeedPercent takes destructable d, real percentScale returns nothing",
		"fileName": "blizzard.j",
		"name": "SetDestAnimationSpeedPercent",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "destructable",
			"name": "d"
		}, {
			"type": "real",
			"name": "percentScale"
		}],
		"insertText": "SetDestAnimationSpeedPercent(d, percentScale)",
		"documentation": "改变可毁坏物动作速度"
	},
	"DialogDisplayBJ": {
		"original": "function DialogDisplayBJ takes boolean flag, dialog whichDialog, player whichPlayer returns nothing",
		"fileName": "blizzard.j",
		"name": "DialogDisplayBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "flag"
		}, {
			"type": "dialog",
			"name": "whichDialog"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "DialogDisplayBJ(flag, whichDialog, whichPlayer)",
		"documentation": "显示/隐藏 对话框"
	},
	"DialogSetMessageBJ": {
		"original": "function DialogSetMessageBJ takes dialog whichDialog, string message returns nothing",
		"fileName": "blizzard.j",
		"name": "DialogSetMessageBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "dialog",
			"name": "whichDialog"
		}, {
			"type": "string",
			"name": "message"
		}],
		"insertText": "DialogSetMessageBJ(whichDialog, message)",
		"documentation": "改变 对话框 标题"
	},
	"DialogAddButtonBJ": {
		"original": "function DialogAddButtonBJ takes dialog whichDialog, string buttonText returns button",
		"fileName": "blizzard.j",
		"name": "DialogAddButtonBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "dialog",
			"name": "whichDialog"
		}, {
			"type": "string",
			"name": "buttonText"
		}],
		"returnType": "button",
		"insertText": "DialogAddButtonBJ(whichDialog, buttonText)",
		"documentation": "创造对话按钮"
	},
	"DialogAddButtonWithHotkeyBJ": {
		"original": "function DialogAddButtonWithHotkeyBJ takes dialog whichDialog, string buttonText, integer hotkey returns button",
		"fileName": "blizzard.j",
		"name": "DialogAddButtonWithHotkeyBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "dialog",
			"name": "whichDialog"
		}, {
			"type": "string",
			"name": "buttonText"
		}, {
			"type": "integer",
			"name": "hotkey"
		}],
		"returnType": "button",
		"insertText": "DialogAddButtonWithHotkeyBJ(whichDialog, buttonText, hotkey)",
		"documentation": "添加对话框按钮(有快捷键) [R]"
	},
	"DialogClearBJ": {
		"original": "function DialogClearBJ takes dialog whichDialog returns nothing",
		"fileName": "blizzard.j",
		"name": "DialogClearBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "dialog",
			"name": "whichDialog"
		}],
		"insertText": "DialogClearBJ(whichDialog)",
		"documentation": "清除所有对话的标题和按钮"
	},
	"GetLastCreatedButtonBJ": {
		"original": "function GetLastCreatedButtonBJ takes nothing returns button",
		"fileName": "blizzard.j",
		"name": "GetLastCreatedButtonBJ",
		"isConstant": false,
		"isNative": false,
		"returnType": "button",
		"insertText": "GetLastCreatedButtonBJ()",
		"documentation": "最后创建的对话按钮"
	},
	"GetClickedButtonBJ": {
		"original": "function GetClickedButtonBJ takes nothing returns button",
		"fileName": "blizzard.j",
		"name": "GetClickedButtonBJ",
		"isConstant": false,
		"isNative": false,
		"returnType": "button",
		"insertText": "GetClickedButtonBJ()",
		"documentation": "事件响应: 单击对话按钮"
	},
	"GetClickedDialogBJ": {
		"original": "function GetClickedDialogBJ takes nothing returns dialog",
		"fileName": "blizzard.j",
		"name": "GetClickedDialogBJ",
		"isConstant": false,
		"isNative": false,
		"returnType": "dialog",
		"insertText": "GetClickedDialogBJ()",
		"documentation": "事件响应 - 单击对话"
	},
	"SetPlayerAllianceBJ": {
		"original": "function SetPlayerAllianceBJ takes player sourcePlayer, alliancetype whichAllianceSetting, boolean value, player otherPlayer returns nothing",
		"fileName": "blizzard.j",
		"name": "SetPlayerAllianceBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "sourcePlayer"
		}, {
			"type": "alliancetype",
			"name": "whichAllianceSetting"
		}, {
			"type": "boolean",
			"name": "value"
		}, {
			"type": "player",
			"name": "otherPlayer"
		}],
		"insertText": "SetPlayerAllianceBJ(sourcePlayer, whichAllianceSetting, value, otherPlayer)",
		"documentation": "设置联盟详细状态"
	},
	"SetPlayerAllianceStateAllyBJ": {
		"original": "function SetPlayerAllianceStateAllyBJ takes player sourcePlayer, player otherPlayer, boolean flag returns nothing",
		"fileName": "blizzard.j",
		"name": "SetPlayerAllianceStateAllyBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "sourcePlayer"
		}, {
			"type": "player",
			"name": "otherPlayer"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "SetPlayerAllianceStateAllyBJ(sourcePlayer, otherPlayer, flag)",
		"documentation": ""
	},
	"SetPlayerAllianceStateVisionBJ": {
		"original": "function SetPlayerAllianceStateVisionBJ takes player sourcePlayer, player otherPlayer, boolean flag returns nothing",
		"fileName": "blizzard.j",
		"name": "SetPlayerAllianceStateVisionBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "sourcePlayer"
		}, {
			"type": "player",
			"name": "otherPlayer"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "SetPlayerAllianceStateVisionBJ(sourcePlayer, otherPlayer, flag)",
		"documentation": ""
	},
	"SetPlayerAllianceStateControlBJ": {
		"original": "function SetPlayerAllianceStateControlBJ takes player sourcePlayer, player otherPlayer, boolean flag returns nothing",
		"fileName": "blizzard.j",
		"name": "SetPlayerAllianceStateControlBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "sourcePlayer"
		}, {
			"type": "player",
			"name": "otherPlayer"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "SetPlayerAllianceStateControlBJ(sourcePlayer, otherPlayer, flag)",
		"documentation": ""
	},
	"SetPlayerAllianceStateFullControlBJ": {
		"original": "function SetPlayerAllianceStateFullControlBJ takes player sourcePlayer, player otherPlayer, boolean flag returns nothing",
		"fileName": "blizzard.j",
		"name": "SetPlayerAllianceStateFullControlBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "sourcePlayer"
		}, {
			"type": "player",
			"name": "otherPlayer"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "SetPlayerAllianceStateFullControlBJ(sourcePlayer, otherPlayer, flag)",
		"documentation": ""
	},
	"SetPlayerAllianceStateBJ": {
		"original": "function SetPlayerAllianceStateBJ takes player sourcePlayer, player otherPlayer, integer allianceState returns nothing",
		"fileName": "blizzard.j",
		"name": "SetPlayerAllianceStateBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "sourcePlayer"
		}, {
			"type": "player",
			"name": "otherPlayer"
		}, {
			"type": "integer",
			"name": "allianceState"
		}],
		"insertText": "SetPlayerAllianceStateBJ(sourcePlayer, otherPlayer, allianceState)",
		"documentation": "设置联盟状态"
	},
	"SetForceAllianceStateBJ": {
		"original": "function SetForceAllianceStateBJ takes force sourceForce, force targetForce, integer allianceState returns nothing",
		"fileName": "blizzard.j",
		"name": "SetForceAllianceStateBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "force",
			"name": "sourceForce"
		}, {
			"type": "force",
			"name": "targetForce"
		}, {
			"type": "integer",
			"name": "allianceState"
		}],
		"insertText": "SetForceAllianceStateBJ(sourceForce, targetForce, allianceState)",
		"documentation": "设置玩家组联盟状态"
	},
	"PlayersAreCoAllied": {
		"original": "function PlayersAreCoAllied takes player playerA, player playerB returns boolean",
		"fileName": "blizzard.j",
		"name": "PlayersAreCoAllied",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "playerA"
		}, {
			"type": "player",
			"name": "playerB"
		}],
		"returnType": "boolean",
		"insertText": "PlayersAreCoAllied(playerA, playerB)",
		"documentation": ""
	},
	"ShareEverythingWithTeamAI": {
		"original": "function ShareEverythingWithTeamAI takes player whichPlayer returns nothing",
		"fileName": "blizzard.j",
		"name": "ShareEverythingWithTeamAI",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "ShareEverythingWithTeamAI(whichPlayer)",
		"documentation": ""
	},
	"ShareEverythingWithTeam": {
		"original": "function ShareEverythingWithTeam takes player whichPlayer returns nothing",
		"fileName": "blizzard.j",
		"name": "ShareEverythingWithTeam",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "ShareEverythingWithTeam(whichPlayer)",
		"documentation": "同队共享视野与单位控制权"
	},
	"ConfigureNeutralVictim": {
		"original": "function ConfigureNeutralVictim takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "ConfigureNeutralVictim",
		"isConstant": false,
		"isNative": false,
		"insertText": "ConfigureNeutralVictim()",
		"documentation": ""
	},
	"MakeUnitsPassiveForPlayerEnum": {
		"original": "function MakeUnitsPassiveForPlayerEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MakeUnitsPassiveForPlayerEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "MakeUnitsPassiveForPlayerEnum()",
		"documentation": ""
	},
	"MakeUnitsPassiveForPlayer": {
		"original": "function MakeUnitsPassiveForPlayer takes player whichPlayer returns nothing",
		"fileName": "blizzard.j",
		"name": "MakeUnitsPassiveForPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "MakeUnitsPassiveForPlayer(whichPlayer)",
		"documentation": "设置玩家所有单位到中立受害者单位"
	},
	"MakeUnitsPassiveForTeam": {
		"original": "function MakeUnitsPassiveForTeam takes player whichPlayer returns nothing",
		"fileName": "blizzard.j",
		"name": "MakeUnitsPassiveForTeam",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "MakeUnitsPassiveForTeam(whichPlayer)",
		"documentation": ""
	},
	"AllowVictoryDefeat": {
		"original": "function AllowVictoryDefeat takes playergameresult gameResult returns boolean",
		"fileName": "blizzard.j",
		"name": "AllowVictoryDefeat",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "playergameresult",
			"name": "gameResult"
		}],
		"returnType": "boolean",
		"insertText": "AllowVictoryDefeat(gameResult)",
		"documentation": ""
	},
	"EndGameBJ": {
		"original": "function EndGameBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "EndGameBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "EndGameBJ()",
		"documentation": ""
	},
	"MeleeVictoryDialogBJ": {
		"original": "function MeleeVictoryDialogBJ takes player whichPlayer, boolean leftGame returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeVictoryDialogBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "boolean",
			"name": "leftGame"
		}],
		"insertText": "MeleeVictoryDialogBJ(whichPlayer, leftGame)",
		"documentation": ""
	},
	"MeleeDefeatDialogBJ": {
		"original": "function MeleeDefeatDialogBJ takes player whichPlayer, boolean leftGame returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeDefeatDialogBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "boolean",
			"name": "leftGame"
		}],
		"insertText": "MeleeDefeatDialogBJ(whichPlayer, leftGame)",
		"documentation": ""
	},
	"GameOverDialogBJ": {
		"original": "function GameOverDialogBJ takes player whichPlayer, boolean leftGame returns nothing",
		"fileName": "blizzard.j",
		"name": "GameOverDialogBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "boolean",
			"name": "leftGame"
		}],
		"insertText": "GameOverDialogBJ(whichPlayer, leftGame)",
		"documentation": ""
	},
	"RemovePlayerPreserveUnitsBJ": {
		"original": "function RemovePlayerPreserveUnitsBJ takes player whichPlayer, playergameresult gameResult, boolean leftGame returns nothing",
		"fileName": "blizzard.j",
		"name": "RemovePlayerPreserveUnitsBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "playergameresult",
			"name": "gameResult"
		}, {
			"type": "boolean",
			"name": "leftGame"
		}],
		"insertText": "RemovePlayerPreserveUnitsBJ(whichPlayer, gameResult, leftGame)",
		"documentation": ""
	},
	"CustomVictoryOkBJ": {
		"original": "function CustomVictoryOkBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "CustomVictoryOkBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "CustomVictoryOkBJ()",
		"documentation": ""
	},
	"CustomVictoryQuitBJ": {
		"original": "function CustomVictoryQuitBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "CustomVictoryQuitBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "CustomVictoryQuitBJ()",
		"documentation": ""
	},
	"CustomVictoryDialogBJ": {
		"original": "function CustomVictoryDialogBJ takes player whichPlayer returns nothing",
		"fileName": "blizzard.j",
		"name": "CustomVictoryDialogBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "CustomVictoryDialogBJ(whichPlayer)",
		"documentation": ""
	},
	"CustomVictorySkipBJ": {
		"original": "function CustomVictorySkipBJ takes player whichPlayer returns nothing",
		"fileName": "blizzard.j",
		"name": "CustomVictorySkipBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "CustomVictorySkipBJ(whichPlayer)",
		"documentation": ""
	},
	"CustomVictoryBJ": {
		"original": "function CustomVictoryBJ takes player whichPlayer, boolean showDialog, boolean showScores returns nothing",
		"fileName": "blizzard.j",
		"name": "CustomVictoryBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "boolean",
			"name": "showDialog"
		}, {
			"type": "boolean",
			"name": "showScores"
		}],
		"insertText": "CustomVictoryBJ(whichPlayer, showDialog, showScores)",
		"documentation": "胜利"
	},
	"CustomDefeatRestartBJ": {
		"original": "function CustomDefeatRestartBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "CustomDefeatRestartBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "CustomDefeatRestartBJ()",
		"documentation": ""
	},
	"CustomDefeatReduceDifficultyBJ": {
		"original": "function CustomDefeatReduceDifficultyBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "CustomDefeatReduceDifficultyBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "CustomDefeatReduceDifficultyBJ()",
		"documentation": ""
	},
	"CustomDefeatLoadBJ": {
		"original": "function CustomDefeatLoadBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "CustomDefeatLoadBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "CustomDefeatLoadBJ()",
		"documentation": ""
	},
	"CustomDefeatQuitBJ": {
		"original": "function CustomDefeatQuitBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "CustomDefeatQuitBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "CustomDefeatQuitBJ()",
		"documentation": ""
	},
	"CustomDefeatDialogBJ": {
		"original": "function CustomDefeatDialogBJ takes player whichPlayer, string message returns nothing",
		"fileName": "blizzard.j",
		"name": "CustomDefeatDialogBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "message"
		}],
		"insertText": "CustomDefeatDialogBJ(whichPlayer, message)",
		"documentation": ""
	},
	"CustomDefeatBJ": {
		"original": "function CustomDefeatBJ takes player whichPlayer, string message returns nothing",
		"fileName": "blizzard.j",
		"name": "CustomDefeatBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "message"
		}],
		"insertText": "CustomDefeatBJ(whichPlayer, message)",
		"documentation": "游戏失败"
	},
	"SetNextLevelBJ": {
		"original": "function SetNextLevelBJ takes string nextLevel returns nothing",
		"fileName": "blizzard.j",
		"name": "SetNextLevelBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "nextLevel"
		}],
		"insertText": "SetNextLevelBJ(nextLevel)",
		"documentation": "设置下一张地图"
	},
	"SetPlayerOnScoreScreenBJ": {
		"original": "function SetPlayerOnScoreScreenBJ takes boolean flag, player whichPlayer returns nothing",
		"fileName": "blizzard.j",
		"name": "SetPlayerOnScoreScreenBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "flag"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "SetPlayerOnScoreScreenBJ(flag, whichPlayer)",
		"documentation": "显示/隐藏 得分屏幕"
	},
	"CreateQuestBJ": {
		"original": "function CreateQuestBJ takes integer questType, string title, string description, string iconPath returns quest",
		"fileName": "blizzard.j",
		"name": "CreateQuestBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "questType"
		}, {
			"type": "string",
			"name": "title"
		}, {
			"type": "string",
			"name": "description"
		}, {
			"type": "string",
			"name": "iconPath"
		}],
		"returnType": "quest",
		"insertText": "CreateQuestBJ(questType, title, description, iconPath)",
		"documentation": "创建任务t"
	},
	"DestroyQuestBJ": {
		"original": "function DestroyQuestBJ takes quest whichQuest returns nothing",
		"fileName": "blizzard.j",
		"name": "DestroyQuestBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "quest",
			"name": "whichQuest"
		}],
		"insertText": "DestroyQuestBJ(whichQuest)",
		"documentation": "删除任务"
	},
	"QuestSetEnabledBJ": {
		"original": "function QuestSetEnabledBJ takes boolean enabled, quest whichQuest returns nothing",
		"fileName": "blizzard.j",
		"name": "QuestSetEnabledBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "enabled"
		}, {
			"type": "quest",
			"name": "whichQuest"
		}],
		"insertText": "QuestSetEnabledBJ(enabled, whichQuest)",
		"documentation": "允许/禁止 任务"
	},
	"QuestSetTitleBJ": {
		"original": "function QuestSetTitleBJ takes quest whichQuest, string title returns nothing",
		"fileName": "blizzard.j",
		"name": "QuestSetTitleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "quest",
			"name": "whichQuest"
		}, {
			"type": "string",
			"name": "title"
		}],
		"insertText": "QuestSetTitleBJ(whichQuest, title)",
		"documentation": "改变任务标题"
	},
	"QuestSetDescriptionBJ": {
		"original": "function QuestSetDescriptionBJ takes quest whichQuest, string description returns nothing",
		"fileName": "blizzard.j",
		"name": "QuestSetDescriptionBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "quest",
			"name": "whichQuest"
		}, {
			"type": "string",
			"name": "description"
		}],
		"insertText": "QuestSetDescriptionBJ(whichQuest, description)",
		"documentation": "改变任务文本内容"
	},
	"QuestSetCompletedBJ": {
		"original": "function QuestSetCompletedBJ takes quest whichQuest, boolean completed returns nothing",
		"fileName": "blizzard.j",
		"name": "QuestSetCompletedBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "quest",
			"name": "whichQuest"
		}, {
			"type": "boolean",
			"name": "completed"
		}],
		"insertText": "QuestSetCompletedBJ(whichQuest, completed)",
		"documentation": "设置任务为完成"
	},
	"QuestSetFailedBJ": {
		"original": "function QuestSetFailedBJ takes quest whichQuest, boolean failed returns nothing",
		"fileName": "blizzard.j",
		"name": "QuestSetFailedBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "quest",
			"name": "whichQuest"
		}, {
			"type": "boolean",
			"name": "failed"
		}],
		"insertText": "QuestSetFailedBJ(whichQuest, failed)",
		"documentation": "设置任务为失败"
	},
	"QuestSetDiscoveredBJ": {
		"original": "function QuestSetDiscoveredBJ takes quest whichQuest, boolean discovered returns nothing",
		"fileName": "blizzard.j",
		"name": "QuestSetDiscoveredBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "quest",
			"name": "whichQuest"
		}, {
			"type": "boolean",
			"name": "discovered"
		}],
		"insertText": "QuestSetDiscoveredBJ(whichQuest, discovered)",
		"documentation": "设置任务被发现"
	},
	"GetLastCreatedQuestBJ": {
		"original": "function GetLastCreatedQuestBJ takes nothing returns quest",
		"fileName": "blizzard.j",
		"name": "GetLastCreatedQuestBJ",
		"isConstant": false,
		"isNative": false,
		"returnType": "quest",
		"insertText": "GetLastCreatedQuestBJ()",
		"documentation": "最后创建的任务"
	},
	"CreateQuestItemBJ": {
		"original": "function CreateQuestItemBJ takes quest whichQuest, string description returns questitem",
		"fileName": "blizzard.j",
		"name": "CreateQuestItemBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "quest",
			"name": "whichQuest"
		}, {
			"type": "string",
			"name": "description"
		}],
		"returnType": "questitem",
		"insertText": "CreateQuestItemBJ(whichQuest, description)",
		"documentation": "创建任务完成条件"
	},
	"QuestItemSetDescriptionBJ": {
		"original": "function QuestItemSetDescriptionBJ takes questitem whichQuestItem, string description returns nothing",
		"fileName": "blizzard.j",
		"name": "QuestItemSetDescriptionBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "questitem",
			"name": "whichQuestItem"
		}, {
			"type": "string",
			"name": "description"
		}],
		"insertText": "QuestItemSetDescriptionBJ(whichQuestItem, description)",
		"documentation": "改变任务完成条件内容"
	},
	"QuestItemSetCompletedBJ": {
		"original": "function QuestItemSetCompletedBJ takes questitem whichQuestItem, boolean completed returns nothing",
		"fileName": "blizzard.j",
		"name": "QuestItemSetCompletedBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "questitem",
			"name": "whichQuestItem"
		}, {
			"type": "boolean",
			"name": "completed"
		}],
		"insertText": "QuestItemSetCompletedBJ(whichQuestItem, completed)",
		"documentation": "设置任务完成条件为已完成"
	},
	"GetLastCreatedQuestItemBJ": {
		"original": "function GetLastCreatedQuestItemBJ takes nothing returns questitem",
		"fileName": "blizzard.j",
		"name": "GetLastCreatedQuestItemBJ",
		"isConstant": false,
		"isNative": false,
		"returnType": "questitem",
		"insertText": "GetLastCreatedQuestItemBJ()",
		"documentation": "最后创建的任务完成条件"
	},
	"CreateDefeatConditionBJ": {
		"original": "function CreateDefeatConditionBJ takes string description returns defeatcondition",
		"fileName": "blizzard.j",
		"name": "CreateDefeatConditionBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "description"
		}],
		"returnType": "defeatcondition",
		"insertText": "CreateDefeatConditionBJ(description)",
		"documentation": "创建任务失败条件"
	},
	"DestroyDefeatConditionBJ": {
		"original": "function DestroyDefeatConditionBJ takes defeatcondition whichCondition returns nothing",
		"fileName": "blizzard.j",
		"name": "DestroyDefeatConditionBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "defeatcondition",
			"name": "whichCondition"
		}],
		"insertText": "DestroyDefeatConditionBJ(whichCondition)",
		"documentation": "删除失败条件"
	},
	"DefeatConditionSetDescriptionBJ": {
		"original": "function DefeatConditionSetDescriptionBJ takes defeatcondition whichCondition, string description returns nothing",
		"fileName": "blizzard.j",
		"name": "DefeatConditionSetDescriptionBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "defeatcondition",
			"name": "whichCondition"
		}, {
			"type": "string",
			"name": "description"
		}],
		"insertText": "DefeatConditionSetDescriptionBJ(whichCondition, description)",
		"documentation": "改变失败条件的内容"
	},
	"GetLastCreatedDefeatConditionBJ": {
		"original": "function GetLastCreatedDefeatConditionBJ takes nothing returns defeatcondition",
		"fileName": "blizzard.j",
		"name": "GetLastCreatedDefeatConditionBJ",
		"isConstant": false,
		"isNative": false,
		"returnType": "defeatcondition",
		"insertText": "GetLastCreatedDefeatConditionBJ()",
		"documentation": "最后创建的任务失败条件"
	},
	"FlashQuestDialogButtonBJ": {
		"original": "function FlashQuestDialogButtonBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "FlashQuestDialogButtonBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "FlashQuestDialogButtonBJ()",
		"documentation": "使任务按钮发光"
	},
	"QuestMessageBJ": {
		"original": "function QuestMessageBJ takes force f, integer messageType, string message returns nothing",
		"fileName": "blizzard.j",
		"name": "QuestMessageBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "force",
			"name": "f"
		}, {
			"type": "integer",
			"name": "messageType"
		}, {
			"type": "string",
			"name": "message"
		}],
		"insertText": "QuestMessageBJ(f, messageType, message)",
		"documentation": "任务消息"
	},
	"StartTimerBJ": {
		"original": "function StartTimerBJ takes timer t, boolean periodic, real timeout returns timer",
		"fileName": "blizzard.j",
		"name": "StartTimerBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "timer",
			"name": "t"
		}, {
			"type": "boolean",
			"name": "periodic"
		}, {
			"type": "real",
			"name": "timeout"
		}],
		"returnType": "timer",
		"insertText": "StartTimerBJ(t, periodic, timeout)",
		"documentation": "开启计时器"
	},
	"CreateTimerBJ": {
		"original": "function CreateTimerBJ takes boolean periodic, real timeout returns timer",
		"fileName": "blizzard.j",
		"name": "CreateTimerBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "periodic"
		}, {
			"type": "real",
			"name": "timeout"
		}],
		"returnType": "timer",
		"insertText": "CreateTimerBJ(periodic, timeout)",
		"documentation": ""
	},
	"DestroyTimerBJ": {
		"original": "function DestroyTimerBJ takes timer whichTimer returns nothing",
		"fileName": "blizzard.j",
		"name": "DestroyTimerBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "timer",
			"name": "whichTimer"
		}],
		"insertText": "DestroyTimerBJ(whichTimer)",
		"documentation": ""
	},
	"PauseTimerBJ": {
		"original": "function PauseTimerBJ takes boolean pause, timer whichTimer returns nothing",
		"fileName": "blizzard.j",
		"name": "PauseTimerBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "pause"
		}, {
			"type": "timer",
			"name": "whichTimer"
		}],
		"insertText": "PauseTimerBJ(pause, whichTimer)",
		"documentation": "暂停计时器r"
	},
	"GetLastCreatedTimerBJ": {
		"original": "function GetLastCreatedTimerBJ takes nothing returns timer",
		"fileName": "blizzard.j",
		"name": "GetLastCreatedTimerBJ",
		"isConstant": false,
		"isNative": false,
		"returnType": "timer",
		"insertText": "GetLastCreatedTimerBJ()",
		"documentation": "最后创建的计时器"
	},
	"CreateTimerDialogBJ": {
		"original": "function CreateTimerDialogBJ takes timer t, string title returns timerdialog",
		"fileName": "blizzard.j",
		"name": "CreateTimerDialogBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "timer",
			"name": "t"
		}, {
			"type": "string",
			"name": "title"
		}],
		"returnType": "timerdialog",
		"insertText": "CreateTimerDialogBJ(t, title)",
		"documentation": "创造计时器窗口"
	},
	"DestroyTimerDialogBJ": {
		"original": "function DestroyTimerDialogBJ takes timerdialog td returns nothing",
		"fileName": "blizzard.j",
		"name": "DestroyTimerDialogBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "timerdialog",
			"name": "td"
		}],
		"insertText": "DestroyTimerDialogBJ(td)",
		"documentation": "删除计时器窗口"
	},
	"TimerDialogSetTitleBJ": {
		"original": "function TimerDialogSetTitleBJ takes timerdialog td, string title returns nothing",
		"fileName": "blizzard.j",
		"name": "TimerDialogSetTitleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "timerdialog",
			"name": "td"
		}, {
			"type": "string",
			"name": "title"
		}],
		"insertText": "TimerDialogSetTitleBJ(td, title)",
		"documentation": "改变计时器窗口标题"
	},
	"TimerDialogSetTitleColorBJ": {
		"original": "function TimerDialogSetTitleColorBJ takes timerdialog td, real red, real green, real blue, real transparency returns nothing",
		"fileName": "blizzard.j",
		"name": "TimerDialogSetTitleColorBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "timerdialog",
			"name": "td"
		}, {
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}, {
			"type": "real",
			"name": "transparency"
		}],
		"insertText": "TimerDialogSetTitleColorBJ(td, red, green, blue, transparency)",
		"documentation": "改变计时器标题颜色"
	},
	"TimerDialogSetTimeColorBJ": {
		"original": "function TimerDialogSetTimeColorBJ takes timerdialog td, real red, real green, real blue, real transparency returns nothing",
		"fileName": "blizzard.j",
		"name": "TimerDialogSetTimeColorBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "timerdialog",
			"name": "td"
		}, {
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}, {
			"type": "real",
			"name": "transparency"
		}],
		"insertText": "TimerDialogSetTimeColorBJ(td, red, green, blue, transparency)",
		"documentation": "改变计时器窗口时间颜色"
	},
	"TimerDialogSetSpeedBJ": {
		"original": "function TimerDialogSetSpeedBJ takes timerdialog td, real speedMultFactor returns nothing",
		"fileName": "blizzard.j",
		"name": "TimerDialogSetSpeedBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "timerdialog",
			"name": "td"
		}, {
			"type": "real",
			"name": "speedMultFactor"
		}],
		"insertText": "TimerDialogSetSpeedBJ(td, speedMultFactor)",
		"documentation": "改变计时器窗口速度"
	},
	"TimerDialogDisplayForPlayerBJ": {
		"original": "function TimerDialogDisplayForPlayerBJ takes boolean show, timerdialog td, player whichPlayer returns nothing",
		"fileName": "blizzard.j",
		"name": "TimerDialogDisplayForPlayerBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "show"
		}, {
			"type": "timerdialog",
			"name": "td"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "TimerDialogDisplayForPlayerBJ(show, td, whichPlayer)",
		"documentation": "显示/隐藏计时器窗口为玩家"
	},
	"TimerDialogDisplayBJ": {
		"original": "function TimerDialogDisplayBJ takes boolean show, timerdialog td returns nothing",
		"fileName": "blizzard.j",
		"name": "TimerDialogDisplayBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "show"
		}, {
			"type": "timerdialog",
			"name": "td"
		}],
		"insertText": "TimerDialogDisplayBJ(show, td)",
		"documentation": "显示/隐藏计时器窗口"
	},
	"GetLastCreatedTimerDialogBJ": {
		"original": "function GetLastCreatedTimerDialogBJ takes nothing returns timerdialog",
		"fileName": "blizzard.j",
		"name": "GetLastCreatedTimerDialogBJ",
		"isConstant": false,
		"isNative": false,
		"returnType": "timerdialog",
		"insertText": "GetLastCreatedTimerDialogBJ()",
		"documentation": "最后创建的计时器窗口"
	},
	"LeaderboardResizeBJ": {
		"original": "function LeaderboardResizeBJ takes leaderboard lb returns nothing",
		"fileName": "blizzard.j",
		"name": "LeaderboardResizeBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}],
		"insertText": "LeaderboardResizeBJ(lb)",
		"documentation": ""
	},
	"LeaderboardSetPlayerItemValueBJ": {
		"original": "function LeaderboardSetPlayerItemValueBJ takes player whichPlayer, leaderboard lb, integer val returns nothing",
		"fileName": "blizzard.j",
		"name": "LeaderboardSetPlayerItemValueBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "integer",
			"name": "val"
		}],
		"insertText": "LeaderboardSetPlayerItemValueBJ(whichPlayer, lb, val)",
		"documentation": "改变排行榜中玩家的 数值"
	},
	"LeaderboardSetPlayerItemLabelBJ": {
		"original": "function LeaderboardSetPlayerItemLabelBJ takes player whichPlayer, leaderboard lb, string val returns nothing",
		"fileName": "blizzard.j",
		"name": "LeaderboardSetPlayerItemLabelBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "string",
			"name": "val"
		}],
		"insertText": "LeaderboardSetPlayerItemLabelBJ(whichPlayer, lb, val)",
		"documentation": "改变排行榜中玩家 标签"
	},
	"LeaderboardSetPlayerItemStyleBJ": {
		"original": "function LeaderboardSetPlayerItemStyleBJ takes player whichPlayer, leaderboard lb, boolean showLabel, boolean showValue, boolean showIcon returns nothing",
		"fileName": "blizzard.j",
		"name": "LeaderboardSetPlayerItemStyleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "boolean",
			"name": "showLabel"
		}, {
			"type": "boolean",
			"name": "showValue"
		}, {
			"type": "boolean",
			"name": "showIcon"
		}],
		"insertText": "LeaderboardSetPlayerItemStyleBJ(whichPlayer, lb, showLabel, showValue, showIcon)",
		"documentation": "改变排行榜中玩家的 风格"
	},
	"LeaderboardSetPlayerItemLabelColorBJ": {
		"original": "function LeaderboardSetPlayerItemLabelColorBJ takes player whichPlayer, leaderboard lb, real red, real green, real blue, real transparency returns nothing",
		"fileName": "blizzard.j",
		"name": "LeaderboardSetPlayerItemLabelColorBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}, {
			"type": "real",
			"name": "transparency"
		}],
		"insertText": "LeaderboardSetPlayerItemLabelColorBJ(whichPlayer, lb, red, green, blue, transparency)",
		"documentation": "改变排行榜中玩家的 标签颜色"
	},
	"LeaderboardSetPlayerItemValueColorBJ": {
		"original": "function LeaderboardSetPlayerItemValueColorBJ takes player whichPlayer, leaderboard lb, real red, real green, real blue, real transparency returns nothing",
		"fileName": "blizzard.j",
		"name": "LeaderboardSetPlayerItemValueColorBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}, {
			"type": "real",
			"name": "transparency"
		}],
		"insertText": "LeaderboardSetPlayerItemValueColorBJ(whichPlayer, lb, red, green, blue, transparency)",
		"documentation": "改变排行榜中玩家的 数值颜色"
	},
	"LeaderboardSetLabelColorBJ": {
		"original": "function LeaderboardSetLabelColorBJ takes leaderboard lb, real red, real green, real blue, real transparency returns nothing",
		"fileName": "blizzard.j",
		"name": "LeaderboardSetLabelColorBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}, {
			"type": "real",
			"name": "transparency"
		}],
		"insertText": "LeaderboardSetLabelColorBJ(lb, red, green, blue, transparency)",
		"documentation": "改变排行榜 标签颜色"
	},
	"LeaderboardSetValueColorBJ": {
		"original": "function LeaderboardSetValueColorBJ takes leaderboard lb, real red, real green, real blue, real transparency returns nothing",
		"fileName": "blizzard.j",
		"name": "LeaderboardSetValueColorBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}, {
			"type": "real",
			"name": "transparency"
		}],
		"insertText": "LeaderboardSetValueColorBJ(lb, red, green, blue, transparency)",
		"documentation": "改变排行榜 数值颜色"
	},
	"LeaderboardSetLabelBJ": {
		"original": "function LeaderboardSetLabelBJ takes leaderboard lb, string label returns nothing",
		"fileName": "blizzard.j",
		"name": "LeaderboardSetLabelBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "string",
			"name": "label"
		}],
		"insertText": "LeaderboardSetLabelBJ(lb, label)",
		"documentation": "改变排行榜标题"
	},
	"LeaderboardSetStyleBJ": {
		"original": "function LeaderboardSetStyleBJ takes leaderboard lb, boolean showLabel, boolean showNames, boolean showValues, boolean showIcons returns nothing",
		"fileName": "blizzard.j",
		"name": "LeaderboardSetStyleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "boolean",
			"name": "showLabel"
		}, {
			"type": "boolean",
			"name": "showNames"
		}, {
			"type": "boolean",
			"name": "showValues"
		}, {
			"type": "boolean",
			"name": "showIcons"
		}],
		"insertText": "LeaderboardSetStyleBJ(lb, showLabel, showNames, showValues, showIcons)",
		"documentation": "改变排行榜风格"
	},
	"LeaderboardGetItemCountBJ": {
		"original": "function LeaderboardGetItemCountBJ takes leaderboard lb returns integer",
		"fileName": "blizzard.j",
		"name": "LeaderboardGetItemCountBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}],
		"returnType": "integer",
		"insertText": "LeaderboardGetItemCountBJ(lb)",
		"documentation": ""
	},
	"LeaderboardHasPlayerItemBJ": {
		"original": "function LeaderboardHasPlayerItemBJ takes leaderboard lb, player whichPlayer returns boolean",
		"fileName": "blizzard.j",
		"name": "LeaderboardHasPlayerItemBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "boolean",
		"insertText": "LeaderboardHasPlayerItemBJ(lb, whichPlayer)",
		"documentation": "排行榜包含玩家"
	},
	"ForceSetLeaderboardBJ": {
		"original": "function ForceSetLeaderboardBJ takes leaderboard lb, force toForce returns nothing",
		"fileName": "blizzard.j",
		"name": "ForceSetLeaderboardBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "force",
			"name": "toForce"
		}],
		"insertText": "ForceSetLeaderboardBJ(lb, toForce)",
		"documentation": ""
	},
	"CreateLeaderboardBJ": {
		"original": "function CreateLeaderboardBJ takes force toForce, string label returns leaderboard",
		"fileName": "blizzard.j",
		"name": "CreateLeaderboardBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "force",
			"name": "toForce"
		}, {
			"type": "string",
			"name": "label"
		}],
		"returnType": "leaderboard",
		"insertText": "CreateLeaderboardBJ(toForce, label)",
		"documentation": "创建排行榜"
	},
	"DestroyLeaderboardBJ": {
		"original": "function DestroyLeaderboardBJ takes leaderboard lb returns nothing",
		"fileName": "blizzard.j",
		"name": "DestroyLeaderboardBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}],
		"insertText": "DestroyLeaderboardBJ(lb)",
		"documentation": "删除排行榜"
	},
	"LeaderboardDisplayBJ": {
		"original": "function LeaderboardDisplayBJ takes boolean show, leaderboard lb returns nothing",
		"fileName": "blizzard.j",
		"name": "LeaderboardDisplayBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "show"
		}, {
			"type": "leaderboard",
			"name": "lb"
		}],
		"insertText": "LeaderboardDisplayBJ(show, lb)",
		"documentation": "显示/隐藏 排行榜"
	},
	"LeaderboardAddItemBJ": {
		"original": "function LeaderboardAddItemBJ takes player whichPlayer, leaderboard lb, string label, integer value returns nothing",
		"fileName": "blizzard.j",
		"name": "LeaderboardAddItemBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "string",
			"name": "label"
		}, {
			"type": "integer",
			"name": "value"
		}],
		"insertText": "LeaderboardAddItemBJ(whichPlayer, lb, label, value)",
		"documentation": "在排行榜中增加玩家"
	},
	"LeaderboardRemovePlayerItemBJ": {
		"original": "function LeaderboardRemovePlayerItemBJ takes player whichPlayer, leaderboard lb returns nothing",
		"fileName": "blizzard.j",
		"name": "LeaderboardRemovePlayerItemBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "leaderboard",
			"name": "lb"
		}],
		"insertText": "LeaderboardRemovePlayerItemBJ(whichPlayer, lb)",
		"documentation": "在排行榜中删除玩家"
	},
	"LeaderboardSortItemsBJ": {
		"original": "function LeaderboardSortItemsBJ takes leaderboard lb, integer sortType, boolean ascending returns nothing",
		"fileName": "blizzard.j",
		"name": "LeaderboardSortItemsBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "integer",
			"name": "sortType"
		}, {
			"type": "boolean",
			"name": "ascending"
		}],
		"insertText": "LeaderboardSortItemsBJ(lb, sortType, ascending)",
		"documentation": "排行榜分类"
	},
	"LeaderboardSortItemsByPlayerBJ": {
		"original": "function LeaderboardSortItemsByPlayerBJ takes leaderboard lb, boolean ascending returns nothing",
		"fileName": "blizzard.j",
		"name": "LeaderboardSortItemsByPlayerBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "boolean",
			"name": "ascending"
		}],
		"insertText": "LeaderboardSortItemsByPlayerBJ(lb, ascending)",
		"documentation": ""
	},
	"LeaderboardSortItemsByLabelBJ": {
		"original": "function LeaderboardSortItemsByLabelBJ takes leaderboard lb, boolean ascending returns nothing",
		"fileName": "blizzard.j",
		"name": "LeaderboardSortItemsByLabelBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "boolean",
			"name": "ascending"
		}],
		"insertText": "LeaderboardSortItemsByLabelBJ(lb, ascending)",
		"documentation": ""
	},
	"LeaderboardGetPlayerIndexBJ": {
		"original": "function LeaderboardGetPlayerIndexBJ takes player whichPlayer, leaderboard lb returns integer",
		"fileName": "blizzard.j",
		"name": "LeaderboardGetPlayerIndexBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "leaderboard",
			"name": "lb"
		}],
		"returnType": "integer",
		"insertText": "LeaderboardGetPlayerIndexBJ(whichPlayer, lb)",
		"documentation": "排行榜位置"
	},
	"LeaderboardGetIndexedPlayerBJ": {
		"original": "function LeaderboardGetIndexedPlayerBJ takes integer position, leaderboard lb returns player",
		"fileName": "blizzard.j",
		"name": "LeaderboardGetIndexedPlayerBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "position"
		}, {
			"type": "leaderboard",
			"name": "lb"
		}],
		"returnType": "player",
		"insertText": "LeaderboardGetIndexedPlayerBJ(position, lb)",
		"documentation": "玩家在排行榜中第N位"
	},
	"PlayerGetLeaderboardBJ": {
		"original": "function PlayerGetLeaderboardBJ takes player whichPlayer returns leaderboard",
		"fileName": "blizzard.j",
		"name": "PlayerGetLeaderboardBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "leaderboard",
		"insertText": "PlayerGetLeaderboardBJ(whichPlayer)",
		"documentation": "玩家排行榜"
	},
	"GetLastCreatedLeaderboard": {
		"original": "function GetLastCreatedLeaderboard takes nothing returns leaderboard",
		"fileName": "blizzard.j",
		"name": "GetLastCreatedLeaderboard",
		"isConstant": false,
		"isNative": false,
		"returnType": "leaderboard",
		"insertText": "GetLastCreatedLeaderboard()",
		"documentation": "最后创建的排行榜"
	},
	"CreateMultiboardBJ": {
		"original": "function CreateMultiboardBJ takes integer cols, integer rows, string title returns multiboard",
		"fileName": "blizzard.j",
		"name": "CreateMultiboardBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "cols"
		}, {
			"type": "integer",
			"name": "rows"
		}, {
			"type": "string",
			"name": "title"
		}],
		"returnType": "multiboard",
		"insertText": "CreateMultiboardBJ(cols, rows, title)",
		"documentation": "创建 多列面板"
	},
	"DestroyMultiboardBJ": {
		"original": "function DestroyMultiboardBJ takes multiboard mb returns nothing",
		"fileName": "blizzard.j",
		"name": "DestroyMultiboardBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "multiboard",
			"name": "mb"
		}],
		"insertText": "DestroyMultiboardBJ(mb)",
		"documentation": "删除 多列面板"
	},
	"GetLastCreatedMultiboard": {
		"original": "function GetLastCreatedMultiboard takes nothing returns multiboard",
		"fileName": "blizzard.j",
		"name": "GetLastCreatedMultiboard",
		"isConstant": false,
		"isNative": false,
		"returnType": "multiboard",
		"insertText": "GetLastCreatedMultiboard()",
		"documentation": "最后创建的 多列面板"
	},
	"MultiboardDisplayBJ": {
		"original": "function MultiboardDisplayBJ takes boolean show, multiboard mb returns nothing",
		"fileName": "blizzard.j",
		"name": "MultiboardDisplayBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "show"
		}, {
			"type": "multiboard",
			"name": "mb"
		}],
		"insertText": "MultiboardDisplayBJ(show, mb)",
		"documentation": "显示/隐藏 多列面板"
	},
	"MultiboardMinimizeBJ": {
		"original": "function MultiboardMinimizeBJ takes boolean minimize, multiboard mb returns nothing",
		"fileName": "blizzard.j",
		"name": "MultiboardMinimizeBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "minimize"
		}, {
			"type": "multiboard",
			"name": "mb"
		}],
		"insertText": "MultiboardMinimizeBJ(minimize, mb)",
		"documentation": "最大化/最小化 多列面板"
	},
	"MultiboardSetTitleTextColorBJ": {
		"original": "function MultiboardSetTitleTextColorBJ takes multiboard mb, real red, real green, real blue, real transparency returns nothing",
		"fileName": "blizzard.j",
		"name": "MultiboardSetTitleTextColorBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "multiboard",
			"name": "mb"
		}, {
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}, {
			"type": "real",
			"name": "transparency"
		}],
		"insertText": "MultiboardSetTitleTextColorBJ(mb, red, green, blue, transparency)",
		"documentation": "改变 多列面板 标题颜色"
	},
	"MultiboardAllowDisplayBJ": {
		"original": "function MultiboardAllowDisplayBJ takes boolean flag returns nothing",
		"fileName": "blizzard.j",
		"name": "MultiboardAllowDisplayBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "MultiboardAllowDisplayBJ(flag)",
		"documentation": "显示/隐藏 所有 多列面板"
	},
	"MultiboardSetItemStyleBJ": {
		"original": "function MultiboardSetItemStyleBJ takes multiboard mb, integer col, integer row, boolean showValue, boolean showIcon returns nothing",
		"fileName": "blizzard.j",
		"name": "MultiboardSetItemStyleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "multiboard",
			"name": "mb"
		}, {
			"type": "integer",
			"name": "col"
		}, {
			"type": "integer",
			"name": "row"
		}, {
			"type": "boolean",
			"name": "showValue"
		}, {
			"type": "boolean",
			"name": "showIcon"
		}],
		"insertText": "MultiboardSetItemStyleBJ(mb, col, row, showValue, showIcon)",
		"documentation": "设置多列面板项目显示风格"
	},
	"MultiboardSetItemValueBJ": {
		"original": "function MultiboardSetItemValueBJ takes multiboard mb, integer col, integer row, string val returns nothing",
		"fileName": "blizzard.j",
		"name": "MultiboardSetItemValueBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "multiboard",
			"name": "mb"
		}, {
			"type": "integer",
			"name": "col"
		}, {
			"type": "integer",
			"name": "row"
		}, {
			"type": "string",
			"name": "val"
		}],
		"insertText": "MultiboardSetItemValueBJ(mb, col, row, val)",
		"documentation": "设置多列面板项目文本"
	},
	"MultiboardSetItemColorBJ": {
		"original": "function MultiboardSetItemColorBJ takes multiboard mb, integer col, integer row, real red, real green, real blue, real transparency returns nothing",
		"fileName": "blizzard.j",
		"name": "MultiboardSetItemColorBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "multiboard",
			"name": "mb"
		}, {
			"type": "integer",
			"name": "col"
		}, {
			"type": "integer",
			"name": "row"
		}, {
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}, {
			"type": "real",
			"name": "transparency"
		}],
		"insertText": "MultiboardSetItemColorBJ(mb, col, row, red, green, blue, transparency)",
		"documentation": "设置多列面板项目颜色"
	},
	"MultiboardSetItemWidthBJ": {
		"original": "function MultiboardSetItemWidthBJ takes multiboard mb, integer col, integer row, real width returns nothing",
		"fileName": "blizzard.j",
		"name": "MultiboardSetItemWidthBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "multiboard",
			"name": "mb"
		}, {
			"type": "integer",
			"name": "col"
		}, {
			"type": "integer",
			"name": "row"
		}, {
			"type": "real",
			"name": "width"
		}],
		"insertText": "MultiboardSetItemWidthBJ(mb, col, row, width)",
		"documentation": "设置多列面板项目宽度"
	},
	"MultiboardSetItemIconBJ": {
		"original": "function MultiboardSetItemIconBJ takes multiboard mb, integer col, integer row, string iconFileName returns nothing",
		"fileName": "blizzard.j",
		"name": "MultiboardSetItemIconBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "multiboard",
			"name": "mb"
		}, {
			"type": "integer",
			"name": "col"
		}, {
			"type": "integer",
			"name": "row"
		}, {
			"type": "string",
			"name": "iconFileName"
		}],
		"insertText": "MultiboardSetItemIconBJ(mb, col, row, iconFileName)",
		"documentation": "设置项目图标"
	},
	"TextTagSize2Height": {
		"original": "function TextTagSize2Height takes real size returns real",
		"fileName": "blizzard.j",
		"name": "TextTagSize2Height",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "size"
		}],
		"returnType": "real",
		"insertText": "TextTagSize2Height(size)",
		"documentation": ""
	},
	"TextTagSpeed2Velocity": {
		"original": "function TextTagSpeed2Velocity takes real speed returns real",
		"fileName": "blizzard.j",
		"name": "TextTagSpeed2Velocity",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "speed"
		}],
		"returnType": "real",
		"insertText": "TextTagSpeed2Velocity(speed)",
		"documentation": ""
	},
	"SetTextTagColorBJ": {
		"original": "function SetTextTagColorBJ takes texttag tt, real red, real green, real blue, real transparency returns nothing",
		"fileName": "blizzard.j",
		"name": "SetTextTagColorBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "texttag",
			"name": "tt"
		}, {
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}, {
			"type": "real",
			"name": "transparency"
		}],
		"insertText": "SetTextTagColorBJ(tt, red, green, blue, transparency)",
		"documentation": "改变漂浮文字颜色"
	},
	"SetTextTagVelocityBJ": {
		"original": "function SetTextTagVelocityBJ takes texttag tt, real speed, real angle returns nothing",
		"fileName": "blizzard.j",
		"name": "SetTextTagVelocityBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "texttag",
			"name": "tt"
		}, {
			"type": "real",
			"name": "speed"
		}, {
			"type": "real",
			"name": "angle"
		}],
		"insertText": "SetTextTagVelocityBJ(tt, speed, angle)",
		"documentation": "设置漂浮文字速度"
	},
	"SetTextTagTextBJ": {
		"original": "function SetTextTagTextBJ takes texttag tt, string s, real size returns nothing",
		"fileName": "blizzard.j",
		"name": "SetTextTagTextBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "texttag",
			"name": "tt"
		}, {
			"type": "string",
			"name": "s"
		}, {
			"type": "real",
			"name": "size"
		}],
		"insertText": "SetTextTagTextBJ(tt, s, size)",
		"documentation": "改变漂浮文字内容"
	},
	"SetTextTagPosBJ": {
		"original": "function SetTextTagPosBJ takes texttag tt, location loc, real zOffset returns nothing",
		"fileName": "blizzard.j",
		"name": "SetTextTagPosBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "texttag",
			"name": "tt"
		}, {
			"type": "location",
			"name": "loc"
		}, {
			"type": "real",
			"name": "zOffset"
		}],
		"insertText": "SetTextTagPosBJ(tt, loc, zOffset)",
		"documentation": "改变漂浮文字位置到指定点"
	},
	"SetTextTagPosUnitBJ": {
		"original": "function SetTextTagPosUnitBJ takes texttag tt, unit whichUnit, real zOffset returns nothing",
		"fileName": "blizzard.j",
		"name": "SetTextTagPosUnitBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "texttag",
			"name": "tt"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "zOffset"
		}],
		"insertText": "SetTextTagPosUnitBJ(tt, whichUnit, zOffset)",
		"documentation": "改变漂浮文字位置到指定单位"
	},
	"SetTextTagSuspendedBJ": {
		"original": "function SetTextTagSuspendedBJ takes texttag tt, boolean flag returns nothing",
		"fileName": "blizzard.j",
		"name": "SetTextTagSuspendedBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "texttag",
			"name": "tt"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "SetTextTagSuspendedBJ(tt, flag)",
		"documentation": "暂停/继续漂浮文字"
	},
	"SetTextTagPermanentBJ": {
		"original": "function SetTextTagPermanentBJ takes texttag tt, boolean flag returns nothing",
		"fileName": "blizzard.j",
		"name": "SetTextTagPermanentBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "texttag",
			"name": "tt"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "SetTextTagPermanentBJ(tt, flag)",
		"documentation": "永久存在/允许过期"
	},
	"SetTextTagAgeBJ": {
		"original": "function SetTextTagAgeBJ takes texttag tt, real age returns nothing",
		"fileName": "blizzard.j",
		"name": "SetTextTagAgeBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "texttag",
			"name": "tt"
		}, {
			"type": "real",
			"name": "age"
		}],
		"insertText": "SetTextTagAgeBJ(tt, age)",
		"documentation": "改变漂浮文字已存在时间"
	},
	"SetTextTagLifespanBJ": {
		"original": "function SetTextTagLifespanBJ takes texttag tt, real lifespan returns nothing",
		"fileName": "blizzard.j",
		"name": "SetTextTagLifespanBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "texttag",
			"name": "tt"
		}, {
			"type": "real",
			"name": "lifespan"
		}],
		"insertText": "SetTextTagLifespanBJ(tt, lifespan)",
		"documentation": "改变漂浮文字存在时限"
	},
	"SetTextTagFadepointBJ": {
		"original": "function SetTextTagFadepointBJ takes texttag tt, real fadepoint returns nothing",
		"fileName": "blizzard.j",
		"name": "SetTextTagFadepointBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "texttag",
			"name": "tt"
		}, {
			"type": "real",
			"name": "fadepoint"
		}],
		"insertText": "SetTextTagFadepointBJ(tt, fadepoint)",
		"documentation": "改变漂浮文字淡化点"
	},
	"CreateTextTagLocBJ": {
		"original": "function CreateTextTagLocBJ takes string s, location loc, real zOffset, real size, real red, real green, real blue, real transparency returns texttag",
		"fileName": "blizzard.j",
		"name": "CreateTextTagLocBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "location",
			"name": "loc"
		}, {
			"type": "real",
			"name": "zOffset"
		}, {
			"type": "real",
			"name": "size"
		}, {
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}, {
			"type": "real",
			"name": "transparency"
		}],
		"returnType": "texttag",
		"insertText": "CreateTextTagLocBJ(s, loc, zOffset, size, red, green, blue, transparency)",
		"documentation": "创建漂浮文字在 点"
	},
	"CreateTextTagUnitBJ": {
		"original": "function CreateTextTagUnitBJ takes string s, unit whichUnit, real zOffset, real size, real red, real green, real blue, real transparency returns texttag",
		"fileName": "blizzard.j",
		"name": "CreateTextTagUnitBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "zOffset"
		}, {
			"type": "real",
			"name": "size"
		}, {
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}, {
			"type": "real",
			"name": "transparency"
		}],
		"returnType": "texttag",
		"insertText": "CreateTextTagUnitBJ(s, whichUnit, zOffset, size, red, green, blue, transparency)",
		"documentation": "创建漂浮文字在单位"
	},
	"DestroyTextTagBJ": {
		"original": "function DestroyTextTagBJ takes texttag tt returns nothing",
		"fileName": "blizzard.j",
		"name": "DestroyTextTagBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "texttag",
			"name": "tt"
		}],
		"insertText": "DestroyTextTagBJ(tt)",
		"documentation": "删除漂浮文字"
	},
	"ShowTextTagForceBJ": {
		"original": "function ShowTextTagForceBJ takes boolean show, texttag tt, force whichForce returns nothing",
		"fileName": "blizzard.j",
		"name": "ShowTextTagForceBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "show"
		}, {
			"type": "texttag",
			"name": "tt"
		}, {
			"type": "force",
			"name": "whichForce"
		}],
		"insertText": "ShowTextTagForceBJ(show, tt, whichForce)",
		"documentation": "显示/隐藏 漂浮文字"
	},
	"GetLastCreatedTextTag": {
		"original": "function GetLastCreatedTextTag takes nothing returns texttag",
		"fileName": "blizzard.j",
		"name": "GetLastCreatedTextTag",
		"isConstant": false,
		"isNative": false,
		"returnType": "texttag",
		"insertText": "GetLastCreatedTextTag()",
		"documentation": "最后创建的漂浮文字"
	},
	"PauseGameOn": {
		"original": "function PauseGameOn takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "PauseGameOn",
		"isConstant": false,
		"isNative": false,
		"insertText": "PauseGameOn()",
		"documentation": "暂停游戏"
	},
	"PauseGameOff": {
		"original": "function PauseGameOff takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "PauseGameOff",
		"isConstant": false,
		"isNative": false,
		"insertText": "PauseGameOff()",
		"documentation": "恢复游戏"
	},
	"SetUserControlForceOn": {
		"original": "function SetUserControlForceOn takes force whichForce returns nothing",
		"fileName": "blizzard.j",
		"name": "SetUserControlForceOn",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "force",
			"name": "whichForce"
		}],
		"insertText": "SetUserControlForceOn(whichForce)",
		"documentation": "授予用户控制权"
	},
	"SetUserControlForceOff": {
		"original": "function SetUserControlForceOff takes force whichForce returns nothing",
		"fileName": "blizzard.j",
		"name": "SetUserControlForceOff",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "force",
			"name": "whichForce"
		}],
		"insertText": "SetUserControlForceOff(whichForce)",
		"documentation": "禁止用户控制权"
	},
	"ShowInterfaceForceOn": {
		"original": "function ShowInterfaceForceOn takes force whichForce, real fadeDuration returns nothing",
		"fileName": "blizzard.j",
		"name": "ShowInterfaceForceOn",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "force",
			"name": "whichForce"
		}, {
			"type": "real",
			"name": "fadeDuration"
		}],
		"insertText": "ShowInterfaceForceOn(whichForce, fadeDuration)",
		"documentation": "信箱模式关"
	},
	"ShowInterfaceForceOff": {
		"original": "function ShowInterfaceForceOff takes force whichForce, real fadeDuration returns nothing",
		"fileName": "blizzard.j",
		"name": "ShowInterfaceForceOff",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "force",
			"name": "whichForce"
		}, {
			"type": "real",
			"name": "fadeDuration"
		}],
		"insertText": "ShowInterfaceForceOff(whichForce, fadeDuration)",
		"documentation": "信箱模式开"
	},
	"PingMinimapForForce": {
		"original": "function PingMinimapForForce takes force whichForce, real x, real y, real duration returns nothing",
		"fileName": "blizzard.j",
		"name": "PingMinimapForForce",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "force",
			"name": "whichForce"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "PingMinimapForForce(whichForce, x, y, duration)",
		"documentation": ""
	},
	"PingMinimapLocForForce": {
		"original": "function PingMinimapLocForForce takes force whichForce, location loc, real duration returns nothing",
		"fileName": "blizzard.j",
		"name": "PingMinimapLocForForce",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "force",
			"name": "whichForce"
		}, {
			"type": "location",
			"name": "loc"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "PingMinimapLocForForce(whichForce, loc, duration)",
		"documentation": "小地图闪光"
	},
	"PingMinimapForPlayer": {
		"original": "function PingMinimapForPlayer takes player whichPlayer, real x, real y, real duration returns nothing",
		"fileName": "blizzard.j",
		"name": "PingMinimapForPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "PingMinimapForPlayer(whichPlayer, x, y, duration)",
		"documentation": ""
	},
	"PingMinimapLocForPlayer": {
		"original": "function PingMinimapLocForPlayer takes player whichPlayer, location loc, real duration returns nothing",
		"fileName": "blizzard.j",
		"name": "PingMinimapLocForPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "location",
			"name": "loc"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "PingMinimapLocForPlayer(whichPlayer, loc, duration)",
		"documentation": ""
	},
	"PingMinimapForForceEx": {
		"original": "function PingMinimapForForceEx takes force whichForce, real x, real y, real duration, integer style, real red, real green, real blue returns nothing",
		"fileName": "blizzard.j",
		"name": "PingMinimapForForceEx",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "force",
			"name": "whichForce"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "duration"
		}, {
			"type": "integer",
			"name": "style"
		}, {
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}],
		"insertText": "PingMinimapForForceEx(whichForce, x, y, duration, style, red, green, blue)",
		"documentation": ""
	},
	"PingMinimapLocForForceEx": {
		"original": "function PingMinimapLocForForceEx takes force whichForce, location loc, real duration, integer style, real red, real green, real blue returns nothing",
		"fileName": "blizzard.j",
		"name": "PingMinimapLocForForceEx",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "force",
			"name": "whichForce"
		}, {
			"type": "location",
			"name": "loc"
		}, {
			"type": "real",
			"name": "duration"
		}, {
			"type": "integer",
			"name": "style"
		}, {
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}],
		"insertText": "PingMinimapLocForForceEx(whichForce, loc, duration, style, red, green, blue)",
		"documentation": "小地图闪光有颜色"
	},
	"EnableWorldFogBoundaryBJ": {
		"original": "function EnableWorldFogBoundaryBJ takes boolean enable, force f returns nothing",
		"fileName": "blizzard.j",
		"name": "EnableWorldFogBoundaryBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "enable"
		}, {
			"type": "force",
			"name": "f"
		}],
		"insertText": "EnableWorldFogBoundaryBJ(enable, f)",
		"documentation": "允许/禁止 边界色彩"
	},
	"EnableOcclusionBJ": {
		"original": "function EnableOcclusionBJ takes boolean enable, force f returns nothing",
		"fileName": "blizzard.j",
		"name": "EnableOcclusionBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "enable"
		}, {
			"type": "force",
			"name": "f"
		}],
		"insertText": "EnableOcclusionBJ(enable, f)",
		"documentation": "允许/禁止 闭合"
	},
	"CancelCineSceneBJ": {
		"original": "function CancelCineSceneBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "CancelCineSceneBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "CancelCineSceneBJ()",
		"documentation": ""
	},
	"TryInitCinematicBehaviorBJ": {
		"original": "function TryInitCinematicBehaviorBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "TryInitCinematicBehaviorBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "TryInitCinematicBehaviorBJ()",
		"documentation": ""
	},
	"SetCinematicSceneBJ": {
		"original": "function SetCinematicSceneBJ takes sound soundHandle, integer portraitUnitId, playercolor color, string speakerTitle, string text, real sceneDuration, real voiceoverDuration returns nothing",
		"fileName": "blizzard.j",
		"name": "SetCinematicSceneBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "integer",
			"name": "portraitUnitId"
		}, {
			"type": "playercolor",
			"name": "color"
		}, {
			"type": "string",
			"name": "speakerTitle"
		}, {
			"type": "string",
			"name": "text"
		}, {
			"type": "real",
			"name": "sceneDuration"
		}, {
			"type": "real",
			"name": "voiceoverDuration"
		}],
		"insertText": "SetCinematicSceneBJ(soundHandle, portraitUnitId, color, speakerTitle, text, sceneDuration, voiceoverDuration)",
		"documentation": ""
	},
	"GetTransmissionDuration": {
		"original": "function GetTransmissionDuration takes sound soundHandle, integer timeType, real timeVal returns real",
		"fileName": "blizzard.j",
		"name": "GetTransmissionDuration",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "integer",
			"name": "timeType"
		}, {
			"type": "real",
			"name": "timeVal"
		}],
		"returnType": "real",
		"insertText": "GetTransmissionDuration(soundHandle, timeType, timeVal)",
		"documentation": ""
	},
	"WaitTransmissionDuration": {
		"original": "function WaitTransmissionDuration takes sound soundHandle, integer timeType, real timeVal returns nothing",
		"fileName": "blizzard.j",
		"name": "WaitTransmissionDuration",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "integer",
			"name": "timeType"
		}, {
			"type": "real",
			"name": "timeVal"
		}],
		"insertText": "WaitTransmissionDuration(soundHandle, timeType, timeVal)",
		"documentation": ""
	},
	"DoTransmissionBasicsXYBJ": {
		"original": "function DoTransmissionBasicsXYBJ takes integer unitId, playercolor color, real x, real y, sound soundHandle, string unitName, string message, real duration returns nothing",
		"fileName": "blizzard.j",
		"name": "DoTransmissionBasicsXYBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "unitId"
		}, {
			"type": "playercolor",
			"name": "color"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "string",
			"name": "unitName"
		}, {
			"type": "string",
			"name": "message"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "DoTransmissionBasicsXYBJ(unitId, color, x, y, soundHandle, unitName, message, duration)",
		"documentation": ""
	},
	"TransmissionFromUnitWithNameBJ": {
		"original": "function TransmissionFromUnitWithNameBJ takes force toForce, unit whichUnit, string unitName, sound soundHandle, string message, integer timeType, real timeVal, boolean wait returns nothing",
		"fileName": "blizzard.j",
		"name": "TransmissionFromUnitWithNameBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "force",
			"name": "toForce"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "string",
			"name": "unitName"
		}, {
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "string",
			"name": "message"
		}, {
			"type": "integer",
			"name": "timeType"
		}, {
			"type": "real",
			"name": "timeVal"
		}, {
			"type": "boolean",
			"name": "wait"
		}],
		"insertText": "TransmissionFromUnitWithNameBJ(toForce, whichUnit, unitName, soundHandle, message, timeType, timeVal, wait)",
		"documentation": "播送 单位消息"
	},
	"TransmissionFromUnitTypeWithNameBJ": {
		"original": "function TransmissionFromUnitTypeWithNameBJ takes force toForce, player fromPlayer, integer unitId, string unitName, location loc, sound soundHandle, string message, integer timeType, real timeVal, boolean wait returns nothing",
		"fileName": "blizzard.j",
		"name": "TransmissionFromUnitTypeWithNameBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "force",
			"name": "toForce"
		}, {
			"type": "player",
			"name": "fromPlayer"
		}, {
			"type": "integer",
			"name": "unitId"
		}, {
			"type": "string",
			"name": "unitName"
		}, {
			"type": "location",
			"name": "loc"
		}, {
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "string",
			"name": "message"
		}, {
			"type": "integer",
			"name": "timeType"
		}, {
			"type": "real",
			"name": "timeVal"
		}, {
			"type": "boolean",
			"name": "wait"
		}],
		"insertText": "TransmissionFromUnitTypeWithNameBJ(toForce, fromPlayer, unitId, unitName, loc, soundHandle, message, timeType, timeVal, wait)",
		"documentation": "播送 单位[类型]消息"
	},
	"GetLastTransmissionDurationBJ": {
		"original": "function GetLastTransmissionDurationBJ takes nothing returns real",
		"fileName": "blizzard.j",
		"name": "GetLastTransmissionDurationBJ",
		"isConstant": false,
		"isNative": false,
		"returnType": "real",
		"insertText": "GetLastTransmissionDurationBJ()",
		"documentation": "最后 播送的 单位消息 的时间长度"
	},
	"ForceCinematicSubtitlesBJ": {
		"original": "function ForceCinematicSubtitlesBJ takes boolean flag returns nothing",
		"fileName": "blizzard.j",
		"name": "ForceCinematicSubtitlesBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "ForceCinematicSubtitlesBJ(flag)",
		"documentation": "副标题显示超过"
	},
	"CinematicModeExBJ": {
		"original": "function CinematicModeExBJ takes boolean cineMode, force forForce, real interfaceFadeTime returns nothing",
		"fileName": "blizzard.j",
		"name": "CinematicModeExBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "cineMode"
		}, {
			"type": "force",
			"name": "forForce"
		}, {
			"type": "real",
			"name": "interfaceFadeTime"
		}],
		"insertText": "CinematicModeExBJ(cineMode, forForce, interfaceFadeTime)",
		"documentation": "切换影片模式(时间)"
	},
	"CinematicModeBJ": {
		"original": "function CinematicModeBJ takes boolean cineMode, force forForce returns nothing",
		"fileName": "blizzard.j",
		"name": "CinematicModeBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "cineMode"
		}, {
			"type": "force",
			"name": "forForce"
		}],
		"insertText": "CinematicModeBJ(cineMode, forForce)",
		"documentation": "切换影片模式"
	},
	"DisplayCineFilterBJ": {
		"original": "function DisplayCineFilterBJ takes boolean flag returns nothing",
		"fileName": "blizzard.j",
		"name": "DisplayCineFilterBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "DisplayCineFilterBJ(flag)",
		"documentation": "显示/隐藏过滤器"
	},
	"CinematicFadeCommonBJ": {
		"original": "function CinematicFadeCommonBJ takes real red, real green, real blue, real duration, string tex, real startTrans, real endTrans returns nothing",
		"fileName": "blizzard.j",
		"name": "CinematicFadeCommonBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}, {
			"type": "real",
			"name": "duration"
		}, {
			"type": "string",
			"name": "tex"
		}, {
			"type": "real",
			"name": "startTrans"
		}, {
			"type": "real",
			"name": "endTrans"
		}],
		"insertText": "CinematicFadeCommonBJ(red, green, blue, duration, tex, startTrans, endTrans)",
		"documentation": ""
	},
	"FinishCinematicFadeBJ": {
		"original": "function FinishCinematicFadeBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "FinishCinematicFadeBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "FinishCinematicFadeBJ()",
		"documentation": ""
	},
	"FinishCinematicFadeAfterBJ": {
		"original": "function FinishCinematicFadeAfterBJ takes real duration returns nothing",
		"fileName": "blizzard.j",
		"name": "FinishCinematicFadeAfterBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "duration"
		}],
		"insertText": "FinishCinematicFadeAfterBJ(duration)",
		"documentation": ""
	},
	"ContinueCinematicFadeBJ": {
		"original": "function ContinueCinematicFadeBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "ContinueCinematicFadeBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "ContinueCinematicFadeBJ()",
		"documentation": ""
	},
	"ContinueCinematicFadeAfterBJ": {
		"original": "function ContinueCinematicFadeAfterBJ takes real duration, real red, real green, real blue, real trans, string tex returns nothing",
		"fileName": "blizzard.j",
		"name": "ContinueCinematicFadeAfterBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "duration"
		}, {
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}, {
			"type": "real",
			"name": "trans"
		}, {
			"type": "string",
			"name": "tex"
		}],
		"insertText": "ContinueCinematicFadeAfterBJ(duration, red, green, blue, trans, tex)",
		"documentation": ""
	},
	"AbortCinematicFadeBJ": {
		"original": "function AbortCinematicFadeBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "AbortCinematicFadeBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "AbortCinematicFadeBJ()",
		"documentation": ""
	},
	"CinematicFadeBJ": {
		"original": "function CinematicFadeBJ takes integer fadetype, real duration, string tex, real red, real green, real blue, real trans returns nothing",
		"fileName": "blizzard.j",
		"name": "CinematicFadeBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "fadetype"
		}, {
			"type": "real",
			"name": "duration"
		}, {
			"type": "string",
			"name": "tex"
		}, {
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}, {
			"type": "real",
			"name": "trans"
		}],
		"insertText": "CinematicFadeBJ(fadetype, duration, tex, red, green, blue, trans)",
		"documentation": "淡化的过滤器"
	},
	"CinematicFilterGenericBJ": {
		"original": "function CinematicFilterGenericBJ takes real duration, blendmode bmode, string tex, real red0, real green0, real blue0, real trans0, real red1, real green1, real blue1, real trans1 returns nothing",
		"fileName": "blizzard.j",
		"name": "CinematicFilterGenericBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "duration"
		}, {
			"type": "blendmode",
			"name": "bmode"
		}, {
			"type": "string",
			"name": "tex"
		}, {
			"type": "real",
			"name": "red0"
		}, {
			"type": "real",
			"name": "green0"
		}, {
			"type": "real",
			"name": "blue0"
		}, {
			"type": "real",
			"name": "trans0"
		}, {
			"type": "real",
			"name": "red1"
		}, {
			"type": "real",
			"name": "green1"
		}, {
			"type": "real",
			"name": "blue1"
		}, {
			"type": "real",
			"name": "trans1"
		}],
		"insertText": "CinematicFilterGenericBJ(duration, bmode, tex, red0, green0, blue0, trans0, red1, green1, blue1, trans1)",
		"documentation": "高级的过滤器"
	},
	"RescueUnitBJ": {
		"original": "function RescueUnitBJ takes unit whichUnit, player rescuer, boolean changeColor returns nothing",
		"fileName": "blizzard.j",
		"name": "RescueUnitBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "player",
			"name": "rescuer"
		}, {
			"type": "boolean",
			"name": "changeColor"
		}],
		"insertText": "RescueUnitBJ(whichUnit, rescuer, changeColor)",
		"documentation": "营救单位"
	},
	"TriggerActionUnitRescuedBJ": {
		"original": "function TriggerActionUnitRescuedBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "TriggerActionUnitRescuedBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "TriggerActionUnitRescuedBJ()",
		"documentation": ""
	},
	"TryInitRescuableTriggersBJ": {
		"original": "function TryInitRescuableTriggersBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "TryInitRescuableTriggersBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "TryInitRescuableTriggersBJ()",
		"documentation": ""
	},
	"SetRescueUnitColorChangeBJ": {
		"original": "function SetRescueUnitColorChangeBJ takes boolean changeColor returns nothing",
		"fileName": "blizzard.j",
		"name": "SetRescueUnitColorChangeBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "changeColor"
		}],
		"insertText": "SetRescueUnitColorChangeBJ(changeColor)",
		"documentation": "安排营救单位行为"
	},
	"SetRescueBuildingColorChangeBJ": {
		"original": "function SetRescueBuildingColorChangeBJ takes boolean changeColor returns nothing",
		"fileName": "blizzard.j",
		"name": "SetRescueBuildingColorChangeBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "changeColor"
		}],
		"insertText": "SetRescueBuildingColorChangeBJ(changeColor)",
		"documentation": "设置营救颜色(建筑)"
	},
	"MakeUnitRescuableToForceBJEnum": {
		"original": "function MakeUnitRescuableToForceBJEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MakeUnitRescuableToForceBJEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "MakeUnitRescuableToForceBJEnum()",
		"documentation": ""
	},
	"MakeUnitRescuableToForceBJ": {
		"original": "function MakeUnitRescuableToForceBJ takes unit whichUnit, boolean isRescuable, force whichForce returns nothing",
		"fileName": "blizzard.j",
		"name": "MakeUnitRescuableToForceBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "boolean",
			"name": "isRescuable"
		}, {
			"type": "force",
			"name": "whichForce"
		}],
		"insertText": "MakeUnitRescuableToForceBJ(whichUnit, isRescuable, whichForce)",
		"documentation": "安排营救单位"
	},
	"InitRescuableBehaviorBJ": {
		"original": "function InitRescuableBehaviorBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "InitRescuableBehaviorBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "InitRescuableBehaviorBJ()",
		"documentation": ""
	},
	"SetPlayerTechResearchedSwap": {
		"original": "function SetPlayerTechResearchedSwap takes integer techid, integer levels, player whichPlayer returns nothing",
		"fileName": "blizzard.j",
		"name": "SetPlayerTechResearchedSwap",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "techid"
		}, {
			"type": "integer",
			"name": "levels"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "SetPlayerTechResearchedSwap(techid, levels, whichPlayer)",
		"documentation": "设置当前科技级别"
	},
	"SetPlayerTechMaxAllowedSwap": {
		"original": "function SetPlayerTechMaxAllowedSwap takes integer techid, integer maximum, player whichPlayer returns nothing",
		"fileName": "blizzard.j",
		"name": "SetPlayerTechMaxAllowedSwap",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "techid"
		}, {
			"type": "integer",
			"name": "maximum"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "SetPlayerTechMaxAllowedSwap(techid, maximum, whichPlayer)",
		"documentation": "设置最高科技级别"
	},
	"SetPlayerMaxHeroesAllowed": {
		"original": "function SetPlayerMaxHeroesAllowed takes integer maximum, player whichPlayer returns nothing",
		"fileName": "blizzard.j",
		"name": "SetPlayerMaxHeroesAllowed",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "maximum"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "SetPlayerMaxHeroesAllowed(maximum, whichPlayer)",
		"documentation": "设置英雄 的训练限制"
	},
	"GetPlayerTechCountSimple": {
		"original": "function GetPlayerTechCountSimple takes integer techid, player whichPlayer returns integer",
		"fileName": "blizzard.j",
		"name": "GetPlayerTechCountSimple",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "techid"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "integer",
		"insertText": "GetPlayerTechCountSimple(techid, whichPlayer)",
		"documentation": "科技等级"
	},
	"GetPlayerTechMaxAllowedSwap": {
		"original": "function GetPlayerTechMaxAllowedSwap takes integer techid, player whichPlayer returns integer",
		"fileName": "blizzard.j",
		"name": "GetPlayerTechMaxAllowedSwap",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "techid"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "integer",
		"insertText": "GetPlayerTechMaxAllowedSwap(techid, whichPlayer)",
		"documentation": "最大科技等级"
	},
	"SetPlayerAbilityAvailableBJ": {
		"original": "function SetPlayerAbilityAvailableBJ takes boolean avail, integer abilid, player whichPlayer returns nothing",
		"fileName": "blizzard.j",
		"name": "SetPlayerAbilityAvailableBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "avail"
		}, {
			"type": "integer",
			"name": "abilid"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "SetPlayerAbilityAvailableBJ(avail, abilid, whichPlayer)",
		"documentation": "允许/禁止 技能"
	},
	"SetCampaignMenuRaceBJ": {
		"original": "function SetCampaignMenuRaceBJ takes integer campaignNumber returns nothing",
		"fileName": "blizzard.j",
		"name": "SetCampaignMenuRaceBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "campaignNumber"
		}],
		"insertText": "SetCampaignMenuRaceBJ(campaignNumber)",
		"documentation": "设置读取地图画面"
	},
	"SetMissionAvailableBJ": {
		"original": "function SetMissionAvailableBJ takes boolean available, integer missionIndex returns nothing",
		"fileName": "blizzard.j",
		"name": "SetMissionAvailableBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "available"
		}, {
			"type": "integer",
			"name": "missionIndex"
		}],
		"insertText": "SetMissionAvailableBJ(available, missionIndex)",
		"documentation": "允许/禁止 任务"
	},
	"SetCampaignAvailableBJ": {
		"original": "function SetCampaignAvailableBJ takes boolean available, integer campaignNumber returns nothing",
		"fileName": "blizzard.j",
		"name": "SetCampaignAvailableBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "available"
		}, {
			"type": "integer",
			"name": "campaignNumber"
		}],
		"insertText": "SetCampaignAvailableBJ(available, campaignNumber)",
		"documentation": "允许/禁止 战役"
	},
	"SetCinematicAvailableBJ": {
		"original": "function SetCinematicAvailableBJ takes boolean available, integer cinematicIndex returns nothing",
		"fileName": "blizzard.j",
		"name": "SetCinematicAvailableBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "available"
		}, {
			"type": "integer",
			"name": "cinematicIndex"
		}],
		"insertText": "SetCinematicAvailableBJ(available, cinematicIndex)",
		"documentation": "允许/禁止 过场电影"
	},
	"InitGameCacheBJ": {
		"original": "function InitGameCacheBJ takes string campaignFile returns gamecache",
		"fileName": "blizzard.j",
		"name": "InitGameCacheBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "campaignFile"
		}],
		"returnType": "gamecache",
		"insertText": "InitGameCacheBJ(campaignFile)",
		"documentation": "创建游戏缓存"
	},
	"SaveGameCacheBJ": {
		"original": "function SaveGameCacheBJ takes gamecache cache returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveGameCacheBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "gamecache",
			"name": "cache"
		}],
		"returnType": "boolean",
		"insertText": "SaveGameCacheBJ(cache)",
		"documentation": "存储游戏缓存"
	},
	"GetLastCreatedGameCacheBJ": {
		"original": "function GetLastCreatedGameCacheBJ takes nothing returns gamecache",
		"fileName": "blizzard.j",
		"name": "GetLastCreatedGameCacheBJ",
		"isConstant": false,
		"isNative": false,
		"returnType": "gamecache",
		"insertText": "GetLastCreatedGameCacheBJ()",
		"documentation": "最后创建的游戏缓存"
	},
	"InitHashtableBJ": {
		"original": "function InitHashtableBJ takes nothing returns hashtable",
		"fileName": "blizzard.j",
		"name": "InitHashtableBJ",
		"isConstant": false,
		"isNative": false,
		"returnType": "hashtable",
		"insertText": "InitHashtableBJ()",
		"documentation": "<1.24> 新建哈希表"
	},
	"GetLastCreatedHashtableBJ": {
		"original": "function GetLastCreatedHashtableBJ takes nothing returns hashtable",
		"fileName": "blizzard.j",
		"name": "GetLastCreatedHashtableBJ",
		"isConstant": false,
		"isNative": false,
		"returnType": "hashtable",
		"insertText": "GetLastCreatedHashtableBJ()",
		"documentation": "最后创建的哈希表"
	},
	"StoreRealBJ": {
		"original": "function StoreRealBJ takes real value, string key, string missionKey, gamecache cache returns nothing",
		"fileName": "blizzard.j",
		"name": "StoreRealBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "value"
		}, {
			"type": "string",
			"name": "key"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "gamecache",
			"name": "cache"
		}],
		"insertText": "StoreRealBJ(value, key, missionKey, cache)",
		"documentation": "贮藏 实数"
	},
	"StoreIntegerBJ": {
		"original": "function StoreIntegerBJ takes integer value, string key, string missionKey, gamecache cache returns nothing",
		"fileName": "blizzard.j",
		"name": "StoreIntegerBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "value"
		}, {
			"type": "string",
			"name": "key"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "gamecache",
			"name": "cache"
		}],
		"insertText": "StoreIntegerBJ(value, key, missionKey, cache)",
		"documentation": "贮藏 整数"
	},
	"StoreBooleanBJ": {
		"original": "function StoreBooleanBJ takes boolean value, string key, string missionKey, gamecache cache returns nothing",
		"fileName": "blizzard.j",
		"name": "StoreBooleanBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "value"
		}, {
			"type": "string",
			"name": "key"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "gamecache",
			"name": "cache"
		}],
		"insertText": "StoreBooleanBJ(value, key, missionKey, cache)",
		"documentation": "贮藏 布尔变量"
	},
	"StoreStringBJ": {
		"original": "function StoreStringBJ takes string value, string key, string missionKey, gamecache cache returns boolean",
		"fileName": "blizzard.j",
		"name": "StoreStringBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "value"
		}, {
			"type": "string",
			"name": "key"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "gamecache",
			"name": "cache"
		}],
		"returnType": "boolean",
		"insertText": "StoreStringBJ(value, key, missionKey, cache)",
		"documentation": "贮藏 字串符"
	},
	"StoreUnitBJ": {
		"original": "function StoreUnitBJ takes unit whichUnit, string key, string missionKey, gamecache cache returns boolean",
		"fileName": "blizzard.j",
		"name": "StoreUnitBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "string",
			"name": "key"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "gamecache",
			"name": "cache"
		}],
		"returnType": "boolean",
		"insertText": "StoreUnitBJ(whichUnit, key, missionKey, cache)",
		"documentation": "贮藏 单位"
	},
	"SaveRealBJ": {
		"original": "function SaveRealBJ takes real value, integer key, integer missionKey, hashtable table returns nothing",
		"fileName": "blizzard.j",
		"name": "SaveRealBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "value"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"insertText": "SaveRealBJ(value, key, missionKey, table)",
		"documentation": "<1.24> 保存实数"
	},
	"SaveIntegerBJ": {
		"original": "function SaveIntegerBJ takes integer value, integer key, integer missionKey, hashtable table returns nothing",
		"fileName": "blizzard.j",
		"name": "SaveIntegerBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "value"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"insertText": "SaveIntegerBJ(value, key, missionKey, table)",
		"documentation": "<1.24> 保存整数"
	},
	"SaveBooleanBJ": {
		"original": "function SaveBooleanBJ takes boolean value, integer key, integer missionKey, hashtable table returns nothing",
		"fileName": "blizzard.j",
		"name": "SaveBooleanBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "value"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"insertText": "SaveBooleanBJ(value, key, missionKey, table)",
		"documentation": "<1.24> 保存布尔"
	},
	"SaveStringBJ": {
		"original": "function SaveStringBJ takes string value, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveStringBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "value"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveStringBJ(value, key, missionKey, table)",
		"documentation": "<1.24> 保存字符串"
	},
	"SavePlayerHandleBJ": {
		"original": "function SavePlayerHandleBJ takes player whichPlayer, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SavePlayerHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SavePlayerHandleBJ(whichPlayer, key, missionKey, table)",
		"documentation": "<1.24> 保存玩家"
	},
	"SaveWidgetHandleBJ": {
		"original": "function SaveWidgetHandleBJ takes widget whichWidget, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveWidgetHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "widget",
			"name": "whichWidget"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveWidgetHandleBJ(whichWidget, key, missionKey, table)",
		"documentation": ""
	},
	"SaveDestructableHandleBJ": {
		"original": "function SaveDestructableHandleBJ takes destructable whichDestructable, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveDestructableHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "destructable",
			"name": "whichDestructable"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveDestructableHandleBJ(whichDestructable, key, missionKey, table)",
		"documentation": "<1.24> 保存可破坏物"
	},
	"SaveItemHandleBJ": {
		"original": "function SaveItemHandleBJ takes item whichItem, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveItemHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveItemHandleBJ(whichItem, key, missionKey, table)",
		"documentation": "<1.24> 保存物品"
	},
	"SaveUnitHandleBJ": {
		"original": "function SaveUnitHandleBJ takes unit whichUnit, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveUnitHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveUnitHandleBJ(whichUnit, key, missionKey, table)",
		"documentation": "<1.24> 保存单位"
	},
	"SaveAbilityHandleBJ": {
		"original": "function SaveAbilityHandleBJ takes ability whichAbility, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveAbilityHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "ability",
			"name": "whichAbility"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveAbilityHandleBJ(whichAbility, key, missionKey, table)",
		"documentation": ""
	},
	"SaveTimerHandleBJ": {
		"original": "function SaveTimerHandleBJ takes timer whichTimer, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveTimerHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "timer",
			"name": "whichTimer"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveTimerHandleBJ(whichTimer, key, missionKey, table)",
		"documentation": "<1.24> 保存计时器"
	},
	"SaveTriggerHandleBJ": {
		"original": "function SaveTriggerHandleBJ takes trigger whichTrigger, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveTriggerHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveTriggerHandleBJ(whichTrigger, key, missionKey, table)",
		"documentation": "<1.24> 保存触发器"
	},
	"SaveTriggerConditionHandleBJ": {
		"original": "function SaveTriggerConditionHandleBJ takes triggercondition whichTriggercondition, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveTriggerConditionHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "triggercondition",
			"name": "whichTriggercondition"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveTriggerConditionHandleBJ(whichTriggercondition, key, missionKey, table)",
		"documentation": "<1.24> 保存触发条件"
	},
	"SaveTriggerActionHandleBJ": {
		"original": "function SaveTriggerActionHandleBJ takes triggeraction whichTriggeraction, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveTriggerActionHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "triggeraction",
			"name": "whichTriggeraction"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveTriggerActionHandleBJ(whichTriggeraction, key, missionKey, table)",
		"documentation": "<1.24> 保存触发动作"
	},
	"SaveTriggerEventHandleBJ": {
		"original": "function SaveTriggerEventHandleBJ takes event whichEvent, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveTriggerEventHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "event",
			"name": "whichEvent"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveTriggerEventHandleBJ(whichEvent, key, missionKey, table)",
		"documentation": "<1.24> 保存触发事件"
	},
	"SaveForceHandleBJ": {
		"original": "function SaveForceHandleBJ takes force whichForce, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveForceHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "force",
			"name": "whichForce"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveForceHandleBJ(whichForce, key, missionKey, table)",
		"documentation": "<1.24> 保存玩家组"
	},
	"SaveGroupHandleBJ": {
		"original": "function SaveGroupHandleBJ takes group whichGroup, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveGroupHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveGroupHandleBJ(whichGroup, key, missionKey, table)",
		"documentation": "<1.24> 保存单位组"
	},
	"SaveLocationHandleBJ": {
		"original": "function SaveLocationHandleBJ takes location whichLocation, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveLocationHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "location",
			"name": "whichLocation"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveLocationHandleBJ(whichLocation, key, missionKey, table)",
		"documentation": "<1.24> 保存点"
	},
	"SaveRectHandleBJ": {
		"original": "function SaveRectHandleBJ takes rect whichRect, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveRectHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "rect",
			"name": "whichRect"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveRectHandleBJ(whichRect, key, missionKey, table)",
		"documentation": "<1.24> 保存区域(矩型)"
	},
	"SaveBooleanExprHandleBJ": {
		"original": "function SaveBooleanExprHandleBJ takes boolexpr whichBoolexpr, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveBooleanExprHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolexpr",
			"name": "whichBoolexpr"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveBooleanExprHandleBJ(whichBoolexpr, key, missionKey, table)",
		"documentation": "<1.24> 保存布尔表达式"
	},
	"SaveSoundHandleBJ": {
		"original": "function SaveSoundHandleBJ takes sound whichSound, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveSoundHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "sound",
			"name": "whichSound"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveSoundHandleBJ(whichSound, key, missionKey, table)",
		"documentation": "<1.24> 保存音效"
	},
	"SaveEffectHandleBJ": {
		"original": "function SaveEffectHandleBJ takes effect whichEffect, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveEffectHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "effect",
			"name": "whichEffect"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveEffectHandleBJ(whichEffect, key, missionKey, table)",
		"documentation": "<1.24> 保存特效"
	},
	"SaveUnitPoolHandleBJ": {
		"original": "function SaveUnitPoolHandleBJ takes unitpool whichUnitpool, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveUnitPoolHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unitpool",
			"name": "whichUnitpool"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveUnitPoolHandleBJ(whichUnitpool, key, missionKey, table)",
		"documentation": "<1.24> 保存单位池"
	},
	"SaveItemPoolHandleBJ": {
		"original": "function SaveItemPoolHandleBJ takes itempool whichItempool, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveItemPoolHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "itempool",
			"name": "whichItempool"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveItemPoolHandleBJ(whichItempool, key, missionKey, table)",
		"documentation": "<1.24> 保存物品池"
	},
	"SaveQuestHandleBJ": {
		"original": "function SaveQuestHandleBJ takes quest whichQuest, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveQuestHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "quest",
			"name": "whichQuest"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveQuestHandleBJ(whichQuest, key, missionKey, table)",
		"documentation": "<1.24> 保存任务"
	},
	"SaveQuestItemHandleBJ": {
		"original": "function SaveQuestItemHandleBJ takes questitem whichQuestitem, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveQuestItemHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "questitem",
			"name": "whichQuestitem"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveQuestItemHandleBJ(whichQuestitem, key, missionKey, table)",
		"documentation": "<1.24> 保存任务要求"
	},
	"SaveDefeatConditionHandleBJ": {
		"original": "function SaveDefeatConditionHandleBJ takes defeatcondition whichDefeatcondition, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveDefeatConditionHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "defeatcondition",
			"name": "whichDefeatcondition"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveDefeatConditionHandleBJ(whichDefeatcondition, key, missionKey, table)",
		"documentation": "<1.24> 保存失败条件"
	},
	"SaveTimerDialogHandleBJ": {
		"original": "function SaveTimerDialogHandleBJ takes timerdialog whichTimerdialog, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveTimerDialogHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "timerdialog",
			"name": "whichTimerdialog"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveTimerDialogHandleBJ(whichTimerdialog, key, missionKey, table)",
		"documentation": "<1.24> 保存计时器窗口"
	},
	"SaveLeaderboardHandleBJ": {
		"original": "function SaveLeaderboardHandleBJ takes leaderboard whichLeaderboard, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveLeaderboardHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "leaderboard",
			"name": "whichLeaderboard"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveLeaderboardHandleBJ(whichLeaderboard, key, missionKey, table)",
		"documentation": "<1.24> 保存排行榜"
	},
	"SaveMultiboardHandleBJ": {
		"original": "function SaveMultiboardHandleBJ takes multiboard whichMultiboard, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveMultiboardHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "multiboard",
			"name": "whichMultiboard"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveMultiboardHandleBJ(whichMultiboard, key, missionKey, table)",
		"documentation": "<1.24> 保存多面板"
	},
	"SaveMultiboardItemHandleBJ": {
		"original": "function SaveMultiboardItemHandleBJ takes multiboarditem whichMultiboarditem, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveMultiboardItemHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "multiboarditem",
			"name": "whichMultiboarditem"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveMultiboardItemHandleBJ(whichMultiboarditem, key, missionKey, table)",
		"documentation": "<1.24> 保存多面板项目"
	},
	"SaveTrackableHandleBJ": {
		"original": "function SaveTrackableHandleBJ takes trackable whichTrackable, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveTrackableHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trackable",
			"name": "whichTrackable"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveTrackableHandleBJ(whichTrackable, key, missionKey, table)",
		"documentation": "<1.24> 保存可追踪物"
	},
	"SaveDialogHandleBJ": {
		"original": "function SaveDialogHandleBJ takes dialog whichDialog, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveDialogHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "dialog",
			"name": "whichDialog"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveDialogHandleBJ(whichDialog, key, missionKey, table)",
		"documentation": "<1.24> 保存对话框"
	},
	"SaveButtonHandleBJ": {
		"original": "function SaveButtonHandleBJ takes button whichButton, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveButtonHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "button",
			"name": "whichButton"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveButtonHandleBJ(whichButton, key, missionKey, table)",
		"documentation": "<1.24> 保存对话框按钮"
	},
	"SaveTextTagHandleBJ": {
		"original": "function SaveTextTagHandleBJ takes texttag whichTexttag, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveTextTagHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "texttag",
			"name": "whichTexttag"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveTextTagHandleBJ(whichTexttag, key, missionKey, table)",
		"documentation": "<1.24> 保存漂浮文字"
	},
	"SaveLightningHandleBJ": {
		"original": "function SaveLightningHandleBJ takes lightning whichLightning, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveLightningHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "lightning",
			"name": "whichLightning"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveLightningHandleBJ(whichLightning, key, missionKey, table)",
		"documentation": "<1.24> 保存闪电效果"
	},
	"SaveImageHandleBJ": {
		"original": "function SaveImageHandleBJ takes image whichImage, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveImageHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "image",
			"name": "whichImage"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveImageHandleBJ(whichImage, key, missionKey, table)",
		"documentation": "<1.24> 保存图像"
	},
	"SaveUbersplatHandleBJ": {
		"original": "function SaveUbersplatHandleBJ takes ubersplat whichUbersplat, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveUbersplatHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "ubersplat",
			"name": "whichUbersplat"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveUbersplatHandleBJ(whichUbersplat, key, missionKey, table)",
		"documentation": "<1.24> 保存地面纹理变化"
	},
	"SaveRegionHandleBJ": {
		"original": "function SaveRegionHandleBJ takes region whichRegion, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveRegionHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "region",
			"name": "whichRegion"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveRegionHandleBJ(whichRegion, key, missionKey, table)",
		"documentation": "<1.24> 保存区域(不规则)"
	},
	"SaveFogStateHandleBJ": {
		"original": "function SaveFogStateHandleBJ takes fogstate whichFogState, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveFogStateHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "fogstate",
			"name": "whichFogState"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveFogStateHandleBJ(whichFogState, key, missionKey, table)",
		"documentation": "<1.24> 保存迷雾状态"
	},
	"SaveFogModifierHandleBJ": {
		"original": "function SaveFogModifierHandleBJ takes fogmodifier whichFogModifier, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveFogModifierHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "fogmodifier",
			"name": "whichFogModifier"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveFogModifierHandleBJ(whichFogModifier, key, missionKey, table)",
		"documentation": "<1.24> 保存可见度修正器"
	},
	"SaveAgentHandleBJ": {
		"original": "function SaveAgentHandleBJ takes agent whichAgent, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveAgentHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "agent",
			"name": "whichAgent"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveAgentHandleBJ(whichAgent, key, missionKey, table)",
		"documentation": ""
	},
	"SaveHashtableHandleBJ": {
		"original": "function SaveHashtableHandleBJ takes hashtable whichHashtable, integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "SaveHashtableHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "hashtable",
			"name": "whichHashtable"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "SaveHashtableHandleBJ(whichHashtable, key, missionKey, table)",
		"documentation": ""
	},
	"GetStoredRealBJ": {
		"original": "function GetStoredRealBJ takes string key, string missionKey, gamecache cache returns real",
		"fileName": "blizzard.j",
		"name": "GetStoredRealBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "key"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "gamecache",
			"name": "cache"
		}],
		"returnType": "real",
		"insertText": "GetStoredRealBJ(key, missionKey, cache)",
		"documentation": "读取实数值"
	},
	"GetStoredIntegerBJ": {
		"original": "function GetStoredIntegerBJ takes string key, string missionKey, gamecache cache returns integer",
		"fileName": "blizzard.j",
		"name": "GetStoredIntegerBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "key"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "gamecache",
			"name": "cache"
		}],
		"returnType": "integer",
		"insertText": "GetStoredIntegerBJ(key, missionKey, cache)",
		"documentation": "读取整数数据"
	},
	"GetStoredBooleanBJ": {
		"original": "function GetStoredBooleanBJ takes string key, string missionKey, gamecache cache returns boolean",
		"fileName": "blizzard.j",
		"name": "GetStoredBooleanBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "key"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "gamecache",
			"name": "cache"
		}],
		"returnType": "boolean",
		"insertText": "GetStoredBooleanBJ(key, missionKey, cache)",
		"documentation": "读取布尔值"
	},
	"GetStoredStringBJ": {
		"original": "function GetStoredStringBJ takes string key, string missionKey, gamecache cache returns string",
		"fileName": "blizzard.j",
		"name": "GetStoredStringBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "key"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "gamecache",
			"name": "cache"
		}],
		"returnType": "string",
		"insertText": "GetStoredStringBJ(key, missionKey, cache)",
		"documentation": "度曲字串符数据"
	},
	"LoadRealBJ": {
		"original": "function LoadRealBJ takes integer key, integer missionKey, hashtable table returns real",
		"fileName": "blizzard.j",
		"name": "LoadRealBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "real",
		"insertText": "LoadRealBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取实数"
	},
	"LoadIntegerBJ": {
		"original": "function LoadIntegerBJ takes integer key, integer missionKey, hashtable table returns integer",
		"fileName": "blizzard.j",
		"name": "LoadIntegerBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "integer",
		"insertText": "LoadIntegerBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取整数"
	},
	"LoadBooleanBJ": {
		"original": "function LoadBooleanBJ takes integer key, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "LoadBooleanBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "LoadBooleanBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取布尔"
	},
	"LoadStringBJ": {
		"original": "function LoadStringBJ takes integer key, integer missionKey, hashtable table returns string",
		"fileName": "blizzard.j",
		"name": "LoadStringBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "string",
		"insertText": "LoadStringBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取字符串"
	},
	"LoadPlayerHandleBJ": {
		"original": "function LoadPlayerHandleBJ takes integer key, integer missionKey, hashtable table returns player",
		"fileName": "blizzard.j",
		"name": "LoadPlayerHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "player",
		"insertText": "LoadPlayerHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取玩家"
	},
	"LoadWidgetHandleBJ": {
		"original": "function LoadWidgetHandleBJ takes integer key, integer missionKey, hashtable table returns widget",
		"fileName": "blizzard.j",
		"name": "LoadWidgetHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "widget",
		"insertText": "LoadWidgetHandleBJ(key, missionKey, table)",
		"documentation": ""
	},
	"LoadDestructableHandleBJ": {
		"original": "function LoadDestructableHandleBJ takes integer key, integer missionKey, hashtable table returns destructable",
		"fileName": "blizzard.j",
		"name": "LoadDestructableHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "destructable",
		"insertText": "LoadDestructableHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取可破坏物"
	},
	"LoadItemHandleBJ": {
		"original": "function LoadItemHandleBJ takes integer key, integer missionKey, hashtable table returns item",
		"fileName": "blizzard.j",
		"name": "LoadItemHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "item",
		"insertText": "LoadItemHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取物品"
	},
	"LoadUnitHandleBJ": {
		"original": "function LoadUnitHandleBJ takes integer key, integer missionKey, hashtable table returns unit",
		"fileName": "blizzard.j",
		"name": "LoadUnitHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "unit",
		"insertText": "LoadUnitHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取单位"
	},
	"LoadAbilityHandleBJ": {
		"original": "function LoadAbilityHandleBJ takes integer key, integer missionKey, hashtable table returns ability",
		"fileName": "blizzard.j",
		"name": "LoadAbilityHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "ability",
		"insertText": "LoadAbilityHandleBJ(key, missionKey, table)",
		"documentation": ""
	},
	"LoadTimerHandleBJ": {
		"original": "function LoadTimerHandleBJ takes integer key, integer missionKey, hashtable table returns timer",
		"fileName": "blizzard.j",
		"name": "LoadTimerHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "timer",
		"insertText": "LoadTimerHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取计时器"
	},
	"LoadTriggerHandleBJ": {
		"original": "function LoadTriggerHandleBJ takes integer key, integer missionKey, hashtable table returns trigger",
		"fileName": "blizzard.j",
		"name": "LoadTriggerHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "trigger",
		"insertText": "LoadTriggerHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取触发器"
	},
	"LoadTriggerConditionHandleBJ": {
		"original": "function LoadTriggerConditionHandleBJ takes integer key, integer missionKey, hashtable table returns triggercondition",
		"fileName": "blizzard.j",
		"name": "LoadTriggerConditionHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "triggercondition",
		"insertText": "LoadTriggerConditionHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取触发条件"
	},
	"LoadTriggerActionHandleBJ": {
		"original": "function LoadTriggerActionHandleBJ takes integer key, integer missionKey, hashtable table returns triggeraction",
		"fileName": "blizzard.j",
		"name": "LoadTriggerActionHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "triggeraction",
		"insertText": "LoadTriggerActionHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取触发动作"
	},
	"LoadTriggerEventHandleBJ": {
		"original": "function LoadTriggerEventHandleBJ takes integer key, integer missionKey, hashtable table returns event",
		"fileName": "blizzard.j",
		"name": "LoadTriggerEventHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "event",
		"insertText": "LoadTriggerEventHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取触发事件"
	},
	"LoadForceHandleBJ": {
		"original": "function LoadForceHandleBJ takes integer key, integer missionKey, hashtable table returns force",
		"fileName": "blizzard.j",
		"name": "LoadForceHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "force",
		"insertText": "LoadForceHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取玩家组"
	},
	"LoadGroupHandleBJ": {
		"original": "function LoadGroupHandleBJ takes integer key, integer missionKey, hashtable table returns group",
		"fileName": "blizzard.j",
		"name": "LoadGroupHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "group",
		"insertText": "LoadGroupHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取单位组"
	},
	"LoadLocationHandleBJ": {
		"original": "function LoadLocationHandleBJ takes integer key, integer missionKey, hashtable table returns location",
		"fileName": "blizzard.j",
		"name": "LoadLocationHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "location",
		"insertText": "LoadLocationHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取点"
	},
	"LoadRectHandleBJ": {
		"original": "function LoadRectHandleBJ takes integer key, integer missionKey, hashtable table returns rect",
		"fileName": "blizzard.j",
		"name": "LoadRectHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "rect",
		"insertText": "LoadRectHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取区域(矩型)"
	},
	"LoadBooleanExprHandleBJ": {
		"original": "function LoadBooleanExprHandleBJ takes integer key, integer missionKey, hashtable table returns boolexpr",
		"fileName": "blizzard.j",
		"name": "LoadBooleanExprHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolexpr",
		"insertText": "LoadBooleanExprHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取布尔表达式"
	},
	"LoadSoundHandleBJ": {
		"original": "function LoadSoundHandleBJ takes integer key, integer missionKey, hashtable table returns sound",
		"fileName": "blizzard.j",
		"name": "LoadSoundHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "sound",
		"insertText": "LoadSoundHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取音效"
	},
	"LoadEffectHandleBJ": {
		"original": "function LoadEffectHandleBJ takes integer key, integer missionKey, hashtable table returns effect",
		"fileName": "blizzard.j",
		"name": "LoadEffectHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "effect",
		"insertText": "LoadEffectHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取特效"
	},
	"LoadUnitPoolHandleBJ": {
		"original": "function LoadUnitPoolHandleBJ takes integer key, integer missionKey, hashtable table returns unitpool",
		"fileName": "blizzard.j",
		"name": "LoadUnitPoolHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "unitpool",
		"insertText": "LoadUnitPoolHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取单位池"
	},
	"LoadItemPoolHandleBJ": {
		"original": "function LoadItemPoolHandleBJ takes integer key, integer missionKey, hashtable table returns itempool",
		"fileName": "blizzard.j",
		"name": "LoadItemPoolHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "itempool",
		"insertText": "LoadItemPoolHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取物品池"
	},
	"LoadQuestHandleBJ": {
		"original": "function LoadQuestHandleBJ takes integer key, integer missionKey, hashtable table returns quest",
		"fileName": "blizzard.j",
		"name": "LoadQuestHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "quest",
		"insertText": "LoadQuestHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取任务"
	},
	"LoadQuestItemHandleBJ": {
		"original": "function LoadQuestItemHandleBJ takes integer key, integer missionKey, hashtable table returns questitem",
		"fileName": "blizzard.j",
		"name": "LoadQuestItemHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "questitem",
		"insertText": "LoadQuestItemHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取任务要求"
	},
	"LoadDefeatConditionHandleBJ": {
		"original": "function LoadDefeatConditionHandleBJ takes integer key, integer missionKey, hashtable table returns defeatcondition",
		"fileName": "blizzard.j",
		"name": "LoadDefeatConditionHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "defeatcondition",
		"insertText": "LoadDefeatConditionHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取失败条件"
	},
	"LoadTimerDialogHandleBJ": {
		"original": "function LoadTimerDialogHandleBJ takes integer key, integer missionKey, hashtable table returns timerdialog",
		"fileName": "blizzard.j",
		"name": "LoadTimerDialogHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "timerdialog",
		"insertText": "LoadTimerDialogHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取计时器窗口"
	},
	"LoadLeaderboardHandleBJ": {
		"original": "function LoadLeaderboardHandleBJ takes integer key, integer missionKey, hashtable table returns leaderboard",
		"fileName": "blizzard.j",
		"name": "LoadLeaderboardHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "leaderboard",
		"insertText": "LoadLeaderboardHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取排行榜"
	},
	"LoadMultiboardHandleBJ": {
		"original": "function LoadMultiboardHandleBJ takes integer key, integer missionKey, hashtable table returns multiboard",
		"fileName": "blizzard.j",
		"name": "LoadMultiboardHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "multiboard",
		"insertText": "LoadMultiboardHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取多面板"
	},
	"LoadMultiboardItemHandleBJ": {
		"original": "function LoadMultiboardItemHandleBJ takes integer key, integer missionKey, hashtable table returns multiboarditem",
		"fileName": "blizzard.j",
		"name": "LoadMultiboardItemHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "multiboarditem",
		"insertText": "LoadMultiboardItemHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取多面板项目"
	},
	"LoadTrackableHandleBJ": {
		"original": "function LoadTrackableHandleBJ takes integer key, integer missionKey, hashtable table returns trackable",
		"fileName": "blizzard.j",
		"name": "LoadTrackableHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "trackable",
		"insertText": "LoadTrackableHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取可追踪物"
	},
	"LoadDialogHandleBJ": {
		"original": "function LoadDialogHandleBJ takes integer key, integer missionKey, hashtable table returns dialog",
		"fileName": "blizzard.j",
		"name": "LoadDialogHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "dialog",
		"insertText": "LoadDialogHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取对话框"
	},
	"LoadButtonHandleBJ": {
		"original": "function LoadButtonHandleBJ takes integer key, integer missionKey, hashtable table returns button",
		"fileName": "blizzard.j",
		"name": "LoadButtonHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "button",
		"insertText": "LoadButtonHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取对话框按钮"
	},
	"LoadTextTagHandleBJ": {
		"original": "function LoadTextTagHandleBJ takes integer key, integer missionKey, hashtable table returns texttag",
		"fileName": "blizzard.j",
		"name": "LoadTextTagHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "texttag",
		"insertText": "LoadTextTagHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取漂浮文字"
	},
	"LoadLightningHandleBJ": {
		"original": "function LoadLightningHandleBJ takes integer key, integer missionKey, hashtable table returns lightning",
		"fileName": "blizzard.j",
		"name": "LoadLightningHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "lightning",
		"insertText": "LoadLightningHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取闪电效果"
	},
	"LoadImageHandleBJ": {
		"original": "function LoadImageHandleBJ takes integer key, integer missionKey, hashtable table returns image",
		"fileName": "blizzard.j",
		"name": "LoadImageHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "image",
		"insertText": "LoadImageHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取图象"
	},
	"LoadUbersplatHandleBJ": {
		"original": "function LoadUbersplatHandleBJ takes integer key, integer missionKey, hashtable table returns ubersplat",
		"fileName": "blizzard.j",
		"name": "LoadUbersplatHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "ubersplat",
		"insertText": "LoadUbersplatHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取地面纹理变化"
	},
	"LoadRegionHandleBJ": {
		"original": "function LoadRegionHandleBJ takes integer key, integer missionKey, hashtable table returns region",
		"fileName": "blizzard.j",
		"name": "LoadRegionHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "region",
		"insertText": "LoadRegionHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取区域(不规则)"
	},
	"LoadFogStateHandleBJ": {
		"original": "function LoadFogStateHandleBJ takes integer key, integer missionKey, hashtable table returns fogstate",
		"fileName": "blizzard.j",
		"name": "LoadFogStateHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "fogstate",
		"insertText": "LoadFogStateHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取迷雾状态"
	},
	"LoadFogModifierHandleBJ": {
		"original": "function LoadFogModifierHandleBJ takes integer key, integer missionKey, hashtable table returns fogmodifier",
		"fileName": "blizzard.j",
		"name": "LoadFogModifierHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "fogmodifier",
		"insertText": "LoadFogModifierHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取可见度修正器"
	},
	"LoadHashtableHandleBJ": {
		"original": "function LoadHashtableHandleBJ takes integer key, integer missionKey, hashtable table returns hashtable",
		"fileName": "blizzard.j",
		"name": "LoadHashtableHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "hashtable",
		"insertText": "LoadHashtableHandleBJ(key, missionKey, table)",
		"documentation": ""
	},
	"RestoreUnitLocFacingAngleBJ": {
		"original": "function RestoreUnitLocFacingAngleBJ takes string key, string missionKey, gamecache cache, player forWhichPlayer, location loc, real facing returns unit",
		"fileName": "blizzard.j",
		"name": "RestoreUnitLocFacingAngleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "key"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "gamecache",
			"name": "cache"
		}, {
			"type": "player",
			"name": "forWhichPlayer"
		}, {
			"type": "location",
			"name": "loc"
		}, {
			"type": "real",
			"name": "facing"
		}],
		"returnType": "unit",
		"insertText": "RestoreUnitLocFacingAngleBJ(key, missionKey, cache, forWhichPlayer, loc, facing)",
		"documentation": "读取单位 (有角度)"
	},
	"RestoreUnitLocFacingPointBJ": {
		"original": "function RestoreUnitLocFacingPointBJ takes string key, string missionKey, gamecache cache, player forWhichPlayer, location loc, location lookAt returns unit",
		"fileName": "blizzard.j",
		"name": "RestoreUnitLocFacingPointBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "key"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "gamecache",
			"name": "cache"
		}, {
			"type": "player",
			"name": "forWhichPlayer"
		}, {
			"type": "location",
			"name": "loc"
		}, {
			"type": "location",
			"name": "lookAt"
		}],
		"returnType": "unit",
		"insertText": "RestoreUnitLocFacingPointBJ(key, missionKey, cache, forWhichPlayer, loc, lookAt)",
		"documentation": "读取单位 (有位置方向)"
	},
	"GetLastRestoredUnitBJ": {
		"original": "function GetLastRestoredUnitBJ takes nothing returns unit",
		"fileName": "blizzard.j",
		"name": "GetLastRestoredUnitBJ",
		"isConstant": false,
		"isNative": false,
		"returnType": "unit",
		"insertText": "GetLastRestoredUnitBJ()",
		"documentation": "最后恢复的单位"
	},
	"FlushGameCacheBJ": {
		"original": "function FlushGameCacheBJ takes gamecache cache returns nothing",
		"fileName": "blizzard.j",
		"name": "FlushGameCacheBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "gamecache",
			"name": "cache"
		}],
		"insertText": "FlushGameCacheBJ(cache)",
		"documentation": "清除所有缓存"
	},
	"FlushStoredMissionBJ": {
		"original": "function FlushStoredMissionBJ takes string missionKey, gamecache cache returns nothing",
		"fileName": "blizzard.j",
		"name": "FlushStoredMissionBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "gamecache",
			"name": "cache"
		}],
		"insertText": "FlushStoredMissionBJ(missionKey, cache)",
		"documentation": "清除缓存[分类]"
	},
	"FlushParentHashtableBJ": {
		"original": "function FlushParentHashtableBJ takes hashtable table returns nothing",
		"fileName": "blizzard.j",
		"name": "FlushParentHashtableBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}],
		"insertText": "FlushParentHashtableBJ(table)",
		"documentation": "<1.24> 清空哈希表"
	},
	"FlushChildHashtableBJ": {
		"original": "function FlushChildHashtableBJ takes integer missionKey, hashtable table returns nothing",
		"fileName": "blizzard.j",
		"name": "FlushChildHashtableBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"insertText": "FlushChildHashtableBJ(missionKey, table)",
		"documentation": "<1.24> 清空哈希表主索引"
	},
	"HaveStoredValue": {
		"original": "function HaveStoredValue takes string key, integer valueType, string missionKey, gamecache cache returns boolean",
		"fileName": "blizzard.j",
		"name": "HaveStoredValue",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "key"
		}, {
			"type": "integer",
			"name": "valueType"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "gamecache",
			"name": "cache"
		}],
		"returnType": "boolean",
		"insertText": "HaveStoredValue(key, valueType, missionKey, cache)",
		"documentation": "游戏缓存的数据"
	},
	"HaveSavedValue": {
		"original": "function HaveSavedValue takes integer key, integer valueType, integer missionKey, hashtable table returns boolean",
		"fileName": "blizzard.j",
		"name": "HaveSavedValue",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "valueType"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "boolean",
		"insertText": "HaveSavedValue(key, valueType, missionKey, table)",
		"documentation": "<1.24> 哈希项存在"
	},
	"ShowCustomCampaignButton": {
		"original": "function ShowCustomCampaignButton takes boolean show, integer whichButton returns nothing",
		"fileName": "blizzard.j",
		"name": "ShowCustomCampaignButton",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "show"
		}, {
			"type": "integer",
			"name": "whichButton"
		}],
		"insertText": "ShowCustomCampaignButton(show, whichButton)",
		"documentation": "显示/隐藏自定义战役按钮"
	},
	"IsCustomCampaignButtonVisibile": {
		"original": "function IsCustomCampaignButtonVisibile takes integer whichButton returns boolean",
		"fileName": "blizzard.j",
		"name": "IsCustomCampaignButtonVisibile",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "whichButton"
		}],
		"returnType": "boolean",
		"insertText": "IsCustomCampaignButtonVisibile(whichButton)",
		"documentation": "自定义战役按钮是可见的"
	},
	"LoadGameBJ": {
		"original": "function LoadGameBJ takes string loadFileName, boolean doScoreScreen returns nothing",
		"fileName": "blizzard.j",
		"name": "LoadGameBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "loadFileName"
		}, {
			"type": "boolean",
			"name": "doScoreScreen"
		}],
		"insertText": "LoadGameBJ(loadFileName, doScoreScreen)",
		"documentation": "读取游戏进度"
	},
	"SaveAndChangeLevelBJ": {
		"original": "function SaveAndChangeLevelBJ takes string saveFileName, string newLevel, boolean doScoreScreen returns nothing",
		"fileName": "blizzard.j",
		"name": "SaveAndChangeLevelBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "saveFileName"
		}, {
			"type": "string",
			"name": "newLevel"
		}, {
			"type": "boolean",
			"name": "doScoreScreen"
		}],
		"insertText": "SaveAndChangeLevelBJ(saveFileName, newLevel, doScoreScreen)",
		"documentation": "保存进度同时设置下一张地图"
	},
	"SaveAndLoadGameBJ": {
		"original": "function SaveAndLoadGameBJ takes string saveFileName, string loadFileName, boolean doScoreScreen returns nothing",
		"fileName": "blizzard.j",
		"name": "SaveAndLoadGameBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "saveFileName"
		}, {
			"type": "string",
			"name": "loadFileName"
		}, {
			"type": "boolean",
			"name": "doScoreScreen"
		}],
		"insertText": "SaveAndLoadGameBJ(saveFileName, loadFileName, doScoreScreen)",
		"documentation": "保存进度同时读取进度"
	},
	"RenameSaveDirectoryBJ": {
		"original": "function RenameSaveDirectoryBJ takes string sourceDirName, string destDirName returns boolean",
		"fileName": "blizzard.j",
		"name": "RenameSaveDirectoryBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "sourceDirName"
		}, {
			"type": "string",
			"name": "destDirName"
		}],
		"returnType": "boolean",
		"insertText": "RenameSaveDirectoryBJ(sourceDirName, destDirName)",
		"documentation": "重命名游戏进度文件夹"
	},
	"RemoveSaveDirectoryBJ": {
		"original": "function RemoveSaveDirectoryBJ takes string sourceDirName returns boolean",
		"fileName": "blizzard.j",
		"name": "RemoveSaveDirectoryBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "sourceDirName"
		}],
		"returnType": "boolean",
		"insertText": "RemoveSaveDirectoryBJ(sourceDirName)",
		"documentation": "删除游戏进度文件夹"
	},
	"CopySaveGameBJ": {
		"original": "function CopySaveGameBJ takes string sourceSaveName, string destSaveName returns boolean",
		"fileName": "blizzard.j",
		"name": "CopySaveGameBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "sourceSaveName"
		}, {
			"type": "string",
			"name": "destSaveName"
		}],
		"returnType": "boolean",
		"insertText": "CopySaveGameBJ(sourceSaveName, destSaveName)",
		"documentation": "复制游戏进度"
	},
	"GetPlayerStartLocationX": {
		"original": "function GetPlayerStartLocationX takes player whichPlayer returns real",
		"fileName": "blizzard.j",
		"name": "GetPlayerStartLocationX",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "real",
		"insertText": "GetPlayerStartLocationX(whichPlayer)",
		"documentation": ""
	},
	"GetPlayerStartLocationY": {
		"original": "function GetPlayerStartLocationY takes player whichPlayer returns real",
		"fileName": "blizzard.j",
		"name": "GetPlayerStartLocationY",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "real",
		"insertText": "GetPlayerStartLocationY(whichPlayer)",
		"documentation": ""
	},
	"GetPlayerStartLocationLoc": {
		"original": "function GetPlayerStartLocationLoc takes player whichPlayer returns location",
		"fileName": "blizzard.j",
		"name": "GetPlayerStartLocationLoc",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "location",
		"insertText": "GetPlayerStartLocationLoc(whichPlayer)",
		"documentation": "玩家的初始位置"
	},
	"GetRectCenter": {
		"original": "function GetRectCenter takes rect whichRect returns location",
		"fileName": "blizzard.j",
		"name": "GetRectCenter",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "rect",
			"name": "whichRect"
		}],
		"returnType": "location",
		"insertText": "GetRectCenter(whichRect)",
		"documentation": "区域中心"
	},
	"IsPlayerSlotState": {
		"original": "function IsPlayerSlotState takes player whichPlayer, playerslotstate whichState returns boolean",
		"fileName": "blizzard.j",
		"name": "IsPlayerSlotState",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "playerslotstate",
			"name": "whichState"
		}],
		"returnType": "boolean",
		"insertText": "IsPlayerSlotState(whichPlayer, whichState)",
		"documentation": ""
	},
	"GetFadeFromSeconds": {
		"original": "function GetFadeFromSeconds takes real seconds returns integer",
		"fileName": "blizzard.j",
		"name": "GetFadeFromSeconds",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "seconds"
		}],
		"returnType": "integer",
		"insertText": "GetFadeFromSeconds(seconds)",
		"documentation": ""
	},
	"GetFadeFromSecondsAsReal": {
		"original": "function GetFadeFromSecondsAsReal takes real seconds returns real",
		"fileName": "blizzard.j",
		"name": "GetFadeFromSecondsAsReal",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "seconds"
		}],
		"returnType": "real",
		"insertText": "GetFadeFromSecondsAsReal(seconds)",
		"documentation": ""
	},
	"AdjustPlayerStateSimpleBJ": {
		"original": "function AdjustPlayerStateSimpleBJ takes player whichPlayer, playerstate whichPlayerState, integer delta returns nothing",
		"fileName": "blizzard.j",
		"name": "AdjustPlayerStateSimpleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "playerstate",
			"name": "whichPlayerState"
		}, {
			"type": "integer",
			"name": "delta"
		}],
		"insertText": "AdjustPlayerStateSimpleBJ(whichPlayer, whichPlayerState, delta)",
		"documentation": ""
	},
	"AdjustPlayerStateBJ": {
		"original": "function AdjustPlayerStateBJ takes integer delta, player whichPlayer, playerstate whichPlayerState returns nothing",
		"fileName": "blizzard.j",
		"name": "AdjustPlayerStateBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "delta"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "playerstate",
			"name": "whichPlayerState"
		}],
		"insertText": "AdjustPlayerStateBJ(delta, whichPlayer, whichPlayerState)",
		"documentation": "增加玩家属性值"
	},
	"SetPlayerStateBJ": {
		"original": "function SetPlayerStateBJ takes player whichPlayer, playerstate whichPlayerState, integer value returns nothing",
		"fileName": "blizzard.j",
		"name": "SetPlayerStateBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "playerstate",
			"name": "whichPlayerState"
		}, {
			"type": "integer",
			"name": "value"
		}],
		"insertText": "SetPlayerStateBJ(whichPlayer, whichPlayerState, value)",
		"documentation": ""
	},
	"SetPlayerFlagBJ": {
		"original": "function SetPlayerFlagBJ takes playerstate whichPlayerFlag, boolean flag, player whichPlayer returns nothing",
		"fileName": "blizzard.j",
		"name": "SetPlayerFlagBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "playerstate",
			"name": "whichPlayerFlag"
		}, {
			"type": "boolean",
			"name": "flag"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "SetPlayerFlagBJ(whichPlayerFlag, flag, whichPlayer)",
		"documentation": "打开/关闭 玩家参数"
	},
	"SetPlayerTaxRateBJ": {
		"original": "function SetPlayerTaxRateBJ takes integer rate, playerstate whichResource, player sourcePlayer, player otherPlayer returns nothing",
		"fileName": "blizzard.j",
		"name": "SetPlayerTaxRateBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "rate"
		}, {
			"type": "playerstate",
			"name": "whichResource"
		}, {
			"type": "player",
			"name": "sourcePlayer"
		}, {
			"type": "player",
			"name": "otherPlayer"
		}],
		"insertText": "SetPlayerTaxRateBJ(rate, whichResource, sourcePlayer, otherPlayer)",
		"documentation": "截留玩家收入 (税率)"
	},
	"GetPlayerTaxRateBJ": {
		"original": "function GetPlayerTaxRateBJ takes playerstate whichResource, player sourcePlayer, player otherPlayer returns integer",
		"fileName": "blizzard.j",
		"name": "GetPlayerTaxRateBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "playerstate",
			"name": "whichResource"
		}, {
			"type": "player",
			"name": "sourcePlayer"
		}, {
			"type": "player",
			"name": "otherPlayer"
		}],
		"returnType": "integer",
		"insertText": "GetPlayerTaxRateBJ(whichResource, sourcePlayer, otherPlayer)",
		"documentation": "获得玩家税率"
	},
	"IsPlayerFlagSetBJ": {
		"original": "function IsPlayerFlagSetBJ takes playerstate whichPlayerFlag, player whichPlayer returns boolean",
		"fileName": "blizzard.j",
		"name": "IsPlayerFlagSetBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "playerstate",
			"name": "whichPlayerFlag"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "boolean",
		"insertText": "IsPlayerFlagSetBJ(whichPlayerFlag, whichPlayer)",
		"documentation": "玩家旗是打开的"
	},
	"AddResourceAmountBJ": {
		"original": "function AddResourceAmountBJ takes integer delta, unit whichUnit returns nothing",
		"fileName": "blizzard.j",
		"name": "AddResourceAmountBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "delta"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"insertText": "AddResourceAmountBJ(delta, whichUnit)",
		"documentation": "增加黄金到金矿"
	},
	"GetConvertedPlayerId": {
		"original": "function GetConvertedPlayerId takes player whichPlayer returns integer",
		"fileName": "blizzard.j",
		"name": "GetConvertedPlayerId",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "integer",
		"insertText": "GetConvertedPlayerId(whichPlayer)",
		"documentation": "玩家索引"
	},
	"ConvertedPlayer": {
		"original": "function ConvertedPlayer takes integer convertedPlayerId returns player",
		"fileName": "blizzard.j",
		"name": "ConvertedPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "convertedPlayerId"
		}],
		"returnType": "player",
		"insertText": "ConvertedPlayer(convertedPlayerId)",
		"documentation": "将玩家索引转换为玩家"
	},
	"GetRectWidthBJ": {
		"original": "function GetRectWidthBJ takes rect r returns real",
		"fileName": "blizzard.j",
		"name": "GetRectWidthBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "rect",
			"name": "r"
		}],
		"returnType": "real",
		"insertText": "GetRectWidthBJ(r)",
		"documentation": "区域宽度"
	},
	"GetRectHeightBJ": {
		"original": "function GetRectHeightBJ takes rect r returns real",
		"fileName": "blizzard.j",
		"name": "GetRectHeightBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "rect",
			"name": "r"
		}],
		"returnType": "real",
		"insertText": "GetRectHeightBJ(r)",
		"documentation": "区域高度"
	},
	"BlightGoldMineForPlayerBJ": {
		"original": "function BlightGoldMineForPlayerBJ takes unit goldMine, player whichPlayer returns unit",
		"fileName": "blizzard.j",
		"name": "BlightGoldMineForPlayerBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "goldMine"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "unit",
		"insertText": "BlightGoldMineForPlayerBJ(goldMine, whichPlayer)",
		"documentation": ""
	},
	"BlightGoldMineForPlayer": {
		"original": "function BlightGoldMineForPlayer takes unit goldMine, player whichPlayer returns unit",
		"fileName": "blizzard.j",
		"name": "BlightGoldMineForPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "goldMine"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "unit",
		"insertText": "BlightGoldMineForPlayer(goldMine, whichPlayer)",
		"documentation": "设置金矿为不死族金矿"
	},
	"GetLastHauntedGoldMine": {
		"original": "function GetLastHauntedGoldMine takes nothing returns unit",
		"fileName": "blizzard.j",
		"name": "GetLastHauntedGoldMine",
		"isConstant": false,
		"isNative": false,
		"returnType": "unit",
		"insertText": "GetLastHauntedGoldMine()",
		"documentation": "最后建造的不死族金矿"
	},
	"IsPointBlightedBJ": {
		"original": "function IsPointBlightedBJ takes location where returns boolean",
		"fileName": "blizzard.j",
		"name": "IsPointBlightedBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "location",
			"name": "where"
		}],
		"returnType": "boolean",
		"insertText": "IsPointBlightedBJ(where)",
		"documentation": "点是不死族的地表"
	},
	"SetPlayerColorBJEnum": {
		"original": "function SetPlayerColorBJEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "SetPlayerColorBJEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "SetPlayerColorBJEnum()",
		"documentation": ""
	},
	"SetPlayerColorBJ": {
		"original": "function SetPlayerColorBJ takes player whichPlayer, playercolor color, boolean changeExisting returns nothing",
		"fileName": "blizzard.j",
		"name": "SetPlayerColorBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "playercolor",
			"name": "color"
		}, {
			"type": "boolean",
			"name": "changeExisting"
		}],
		"insertText": "SetPlayerColorBJ(whichPlayer, color, changeExisting)",
		"documentation": "改变玩家颜色"
	},
	"SetPlayerUnitAvailableBJ": {
		"original": "function SetPlayerUnitAvailableBJ takes integer unitId, boolean allowed, player whichPlayer returns nothing",
		"fileName": "blizzard.j",
		"name": "SetPlayerUnitAvailableBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "unitId"
		}, {
			"type": "boolean",
			"name": "allowed"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "SetPlayerUnitAvailableBJ(unitId, allowed, whichPlayer)",
		"documentation": "设置训练/建造单位可用性"
	},
	"LockGameSpeedBJ": {
		"original": "function LockGameSpeedBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "LockGameSpeedBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "LockGameSpeedBJ()",
		"documentation": "锁定游戏速度"
	},
	"UnlockGameSpeedBJ": {
		"original": "function UnlockGameSpeedBJ takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "UnlockGameSpeedBJ",
		"isConstant": false,
		"isNative": false,
		"insertText": "UnlockGameSpeedBJ()",
		"documentation": "解锁游戏速度"
	},
	"IssueTargetOrderBJ": {
		"original": "function IssueTargetOrderBJ takes unit whichUnit, string order, widget targetWidget returns boolean",
		"fileName": "blizzard.j",
		"name": "IssueTargetOrderBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "string",
			"name": "order"
		}, {
			"type": "widget",
			"name": "targetWidget"
		}],
		"returnType": "boolean",
		"insertText": "IssueTargetOrderBJ(whichUnit, order, targetWidget)",
		"documentation": ""
	},
	"IssuePointOrderLocBJ": {
		"original": "function IssuePointOrderLocBJ takes unit whichUnit, string order, location whichLocation returns boolean",
		"fileName": "blizzard.j",
		"name": "IssuePointOrderLocBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "string",
			"name": "order"
		}, {
			"type": "location",
			"name": "whichLocation"
		}],
		"returnType": "boolean",
		"insertText": "IssuePointOrderLocBJ(whichUnit, order, whichLocation)",
		"documentation": ""
	},
	"IssueTargetDestructableOrder": {
		"original": "function IssueTargetDestructableOrder takes unit whichUnit, string order, widget targetWidget returns boolean",
		"fileName": "blizzard.j",
		"name": "IssueTargetDestructableOrder",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "string",
			"name": "order"
		}, {
			"type": "widget",
			"name": "targetWidget"
		}],
		"returnType": "boolean",
		"insertText": "IssueTargetDestructableOrder(whichUnit, order, targetWidget)",
		"documentation": "给单位发送命令到 可毁坏物"
	},
	"IssueTargetItemOrder": {
		"original": "function IssueTargetItemOrder takes unit whichUnit, string order, widget targetWidget returns boolean",
		"fileName": "blizzard.j",
		"name": "IssueTargetItemOrder",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "string",
			"name": "order"
		}, {
			"type": "widget",
			"name": "targetWidget"
		}],
		"returnType": "boolean",
		"insertText": "IssueTargetItemOrder(whichUnit, order, targetWidget)",
		"documentation": "给单位发送命令到 物品"
	},
	"IssueImmediateOrderBJ": {
		"original": "function IssueImmediateOrderBJ takes unit whichUnit, string order returns boolean",
		"fileName": "blizzard.j",
		"name": "IssueImmediateOrderBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "string",
			"name": "order"
		}],
		"returnType": "boolean",
		"insertText": "IssueImmediateOrderBJ(whichUnit, order)",
		"documentation": ""
	},
	"GroupTargetOrderBJ": {
		"original": "function GroupTargetOrderBJ takes group whichGroup, string order, widget targetWidget returns boolean",
		"fileName": "blizzard.j",
		"name": "GroupTargetOrderBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}, {
			"type": "string",
			"name": "order"
		}, {
			"type": "widget",
			"name": "targetWidget"
		}],
		"returnType": "boolean",
		"insertText": "GroupTargetOrderBJ(whichGroup, order, targetWidget)",
		"documentation": ""
	},
	"GroupPointOrderLocBJ": {
		"original": "function GroupPointOrderLocBJ takes group whichGroup, string order, location whichLocation returns boolean",
		"fileName": "blizzard.j",
		"name": "GroupPointOrderLocBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}, {
			"type": "string",
			"name": "order"
		}, {
			"type": "location",
			"name": "whichLocation"
		}],
		"returnType": "boolean",
		"insertText": "GroupPointOrderLocBJ(whichGroup, order, whichLocation)",
		"documentation": ""
	},
	"GroupImmediateOrderBJ": {
		"original": "function GroupImmediateOrderBJ takes group whichGroup, string order returns boolean",
		"fileName": "blizzard.j",
		"name": "GroupImmediateOrderBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}, {
			"type": "string",
			"name": "order"
		}],
		"returnType": "boolean",
		"insertText": "GroupImmediateOrderBJ(whichGroup, order)",
		"documentation": ""
	},
	"GroupTargetDestructableOrder": {
		"original": "function GroupTargetDestructableOrder takes group whichGroup, string order, widget targetWidget returns boolean",
		"fileName": "blizzard.j",
		"name": "GroupTargetDestructableOrder",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}, {
			"type": "string",
			"name": "order"
		}, {
			"type": "widget",
			"name": "targetWidget"
		}],
		"returnType": "boolean",
		"insertText": "GroupTargetDestructableOrder(whichGroup, order, targetWidget)",
		"documentation": "发送单位组命令到 可毁坏物"
	},
	"GroupTargetItemOrder": {
		"original": "function GroupTargetItemOrder takes group whichGroup, string order, widget targetWidget returns boolean",
		"fileName": "blizzard.j",
		"name": "GroupTargetItemOrder",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}, {
			"type": "string",
			"name": "order"
		}, {
			"type": "widget",
			"name": "targetWidget"
		}],
		"returnType": "boolean",
		"insertText": "GroupTargetItemOrder(whichGroup, order, targetWidget)",
		"documentation": "发送单位组命令到 物品"
	},
	"GetDyingDestructable": {
		"original": "function GetDyingDestructable takes nothing returns destructable",
		"fileName": "blizzard.j",
		"name": "GetDyingDestructable",
		"isConstant": false,
		"isNative": false,
		"returnType": "destructable",
		"insertText": "GetDyingDestructable()",
		"documentation": "垂死的可毁坏物"
	},
	"SetUnitRallyPoint": {
		"original": "function SetUnitRallyPoint takes unit whichUnit, location targPos returns nothing",
		"fileName": "blizzard.j",
		"name": "SetUnitRallyPoint",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "location",
			"name": "targPos"
		}],
		"insertText": "SetUnitRallyPoint(whichUnit, targPos)",
		"documentation": "设置 聚集点 在点"
	},
	"SetUnitRallyUnit": {
		"original": "function SetUnitRallyUnit takes unit whichUnit, unit targUnit returns nothing",
		"fileName": "blizzard.j",
		"name": "SetUnitRallyUnit",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "unit",
			"name": "targUnit"
		}],
		"insertText": "SetUnitRallyUnit(whichUnit, targUnit)",
		"documentation": "设置 聚集点 在单位"
	},
	"SetUnitRallyDestructable": {
		"original": "function SetUnitRallyDestructable takes unit whichUnit, destructable targDest returns nothing",
		"fileName": "blizzard.j",
		"name": "SetUnitRallyDestructable",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "destructable",
			"name": "targDest"
		}],
		"insertText": "SetUnitRallyDestructable(whichUnit, targDest)",
		"documentation": "设置 聚集点 在可毁坏物"
	},
	"SaveDyingWidget": {
		"original": "function SaveDyingWidget takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "SaveDyingWidget",
		"isConstant": false,
		"isNative": false,
		"insertText": "SaveDyingWidget()",
		"documentation": ""
	},
	"SetBlightRectBJ": {
		"original": "function SetBlightRectBJ takes boolean addBlight, player whichPlayer, rect r returns nothing",
		"fileName": "blizzard.j",
		"name": "SetBlightRectBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "addBlight"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "rect",
			"name": "r"
		}],
		"insertText": "SetBlightRectBJ(addBlight, whichPlayer, r)",
		"documentation": "创造/删除 不死族地表在区域"
	},
	"SetBlightRadiusLocBJ": {
		"original": "function SetBlightRadiusLocBJ takes boolean addBlight, player whichPlayer, location loc, real radius returns nothing",
		"fileName": "blizzard.j",
		"name": "SetBlightRadiusLocBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "addBlight"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "location",
			"name": "loc"
		}, {
			"type": "real",
			"name": "radius"
		}],
		"insertText": "SetBlightRadiusLocBJ(addBlight, whichPlayer, loc, radius)",
		"documentation": "创造/删除 不死族地表在圆周"
	},
	"GetAbilityName": {
		"original": "function GetAbilityName takes integer abilcode returns string",
		"fileName": "blizzard.j",
		"name": "GetAbilityName",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "abilcode"
		}],
		"returnType": "string",
		"insertText": "GetAbilityName(abilcode)",
		"documentation": "技能名字"
	},
	"MeleeStartingVisibility": {
		"original": "function MeleeStartingVisibility takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeStartingVisibility",
		"isConstant": false,
		"isNative": false,
		"insertText": "MeleeStartingVisibility()",
		"documentation": "对用对战的时间设置"
	},
	"MeleeStartingResources": {
		"original": "function MeleeStartingResources takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeStartingResources",
		"isConstant": false,
		"isNative": false,
		"insertText": "MeleeStartingResources()",
		"documentation": "设置初始资源"
	},
	"ReducePlayerTechMaxAllowed": {
		"original": "function ReducePlayerTechMaxAllowed takes player whichPlayer, integer techId, integer limit returns nothing",
		"fileName": "blizzard.j",
		"name": "ReducePlayerTechMaxAllowed",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "integer",
			"name": "techId"
		}, {
			"type": "integer",
			"name": "limit"
		}],
		"insertText": "ReducePlayerTechMaxAllowed(whichPlayer, techId, limit)",
		"documentation": ""
	},
	"MeleeStartingHeroLimit": {
		"original": "function MeleeStartingHeroLimit takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeStartingHeroLimit",
		"isConstant": false,
		"isNative": false,
		"insertText": "MeleeStartingHeroLimit()",
		"documentation": "英雄数量限制"
	},
	"MeleeTrainedUnitIsHeroBJFilter": {
		"original": "function MeleeTrainedUnitIsHeroBJFilter takes nothing returns boolean",
		"fileName": "blizzard.j",
		"name": "MeleeTrainedUnitIsHeroBJFilter",
		"isConstant": false,
		"isNative": false,
		"returnType": "boolean",
		"insertText": "MeleeTrainedUnitIsHeroBJFilter()",
		"documentation": ""
	},
	"MeleeGrantItemsToHero": {
		"original": "function MeleeGrantItemsToHero takes unit whichUnit returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeGrantItemsToHero",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"insertText": "MeleeGrantItemsToHero(whichUnit)",
		"documentation": ""
	},
	"MeleeGrantItemsToTrainedHero": {
		"original": "function MeleeGrantItemsToTrainedHero takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeGrantItemsToTrainedHero",
		"isConstant": false,
		"isNative": false,
		"insertText": "MeleeGrantItemsToTrainedHero()",
		"documentation": ""
	},
	"MeleeGrantItemsToHiredHero": {
		"original": "function MeleeGrantItemsToHiredHero takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeGrantItemsToHiredHero",
		"isConstant": false,
		"isNative": false,
		"insertText": "MeleeGrantItemsToHiredHero()",
		"documentation": ""
	},
	"MeleeGrantHeroItems": {
		"original": "function MeleeGrantHeroItems takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeGrantHeroItems",
		"isConstant": false,
		"isNative": false,
		"insertText": "MeleeGrantHeroItems()",
		"documentation": "英雄初始物品"
	},
	"MeleeClearExcessUnit": {
		"original": "function MeleeClearExcessUnit takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeClearExcessUnit",
		"isConstant": false,
		"isNative": false,
		"insertText": "MeleeClearExcessUnit()",
		"documentation": ""
	},
	"MeleeClearNearbyUnits": {
		"original": "function MeleeClearNearbyUnits takes real x, real y, real range returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeClearNearbyUnits",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "range"
		}],
		"insertText": "MeleeClearNearbyUnits(x, y, range)",
		"documentation": ""
	},
	"MeleeClearExcessUnits": {
		"original": "function MeleeClearExcessUnits takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeClearExcessUnits",
		"isConstant": false,
		"isNative": false,
		"insertText": "MeleeClearExcessUnits()",
		"documentation": "删除多余单位"
	},
	"MeleeEnumFindNearestMine": {
		"original": "function MeleeEnumFindNearestMine takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeEnumFindNearestMine",
		"isConstant": false,
		"isNative": false,
		"insertText": "MeleeEnumFindNearestMine()",
		"documentation": ""
	},
	"MeleeFindNearestMine": {
		"original": "function MeleeFindNearestMine takes location src, real range returns unit",
		"fileName": "blizzard.j",
		"name": "MeleeFindNearestMine",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "location",
			"name": "src"
		}, {
			"type": "real",
			"name": "range"
		}],
		"returnType": "unit",
		"insertText": "MeleeFindNearestMine(src, range)",
		"documentation": ""
	},
	"MeleeRandomHeroLoc": {
		"original": "function MeleeRandomHeroLoc takes player p, integer id1, integer id2, integer id3, integer id4, location loc returns unit",
		"fileName": "blizzard.j",
		"name": "MeleeRandomHeroLoc",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "p"
		}, {
			"type": "integer",
			"name": "id1"
		}, {
			"type": "integer",
			"name": "id2"
		}, {
			"type": "integer",
			"name": "id3"
		}, {
			"type": "integer",
			"name": "id4"
		}, {
			"type": "location",
			"name": "loc"
		}],
		"returnType": "unit",
		"insertText": "MeleeRandomHeroLoc(p, id1, id2, id3, id4, loc)",
		"documentation": ""
	},
	"MeleeGetProjectedLoc": {
		"original": "function MeleeGetProjectedLoc takes location src, location targ, real distance, real deltaAngle returns location",
		"fileName": "blizzard.j",
		"name": "MeleeGetProjectedLoc",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "location",
			"name": "src"
		}, {
			"type": "location",
			"name": "targ"
		}, {
			"type": "real",
			"name": "distance"
		}, {
			"type": "real",
			"name": "deltaAngle"
		}],
		"returnType": "location",
		"insertText": "MeleeGetProjectedLoc(src, targ, distance, deltaAngle)",
		"documentation": ""
	},
	"MeleeGetNearestValueWithin": {
		"original": "function MeleeGetNearestValueWithin takes real val, real minVal, real maxVal returns real",
		"fileName": "blizzard.j",
		"name": "MeleeGetNearestValueWithin",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "val"
		}, {
			"type": "real",
			"name": "minVal"
		}, {
			"type": "real",
			"name": "maxVal"
		}],
		"returnType": "real",
		"insertText": "MeleeGetNearestValueWithin(val, minVal, maxVal)",
		"documentation": ""
	},
	"MeleeGetLocWithinRect": {
		"original": "function MeleeGetLocWithinRect takes location src, rect r returns location",
		"fileName": "blizzard.j",
		"name": "MeleeGetLocWithinRect",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "location",
			"name": "src"
		}, {
			"type": "rect",
			"name": "r"
		}],
		"returnType": "location",
		"insertText": "MeleeGetLocWithinRect(src, r)",
		"documentation": ""
	},
	"MeleeStartingUnitsHuman": {
		"original": "function MeleeStartingUnitsHuman takes player whichPlayer, location startLoc, boolean doHeroes, boolean doCamera, boolean doPreload returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeStartingUnitsHuman",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "location",
			"name": "startLoc"
		}, {
			"type": "boolean",
			"name": "doHeroes"
		}, {
			"type": "boolean",
			"name": "doCamera"
		}, {
			"type": "boolean",
			"name": "doPreload"
		}],
		"insertText": "MeleeStartingUnitsHuman(whichPlayer, startLoc, doHeroes, doCamera, doPreload)",
		"documentation": ""
	},
	"MeleeStartingUnitsOrc": {
		"original": "function MeleeStartingUnitsOrc takes player whichPlayer, location startLoc, boolean doHeroes, boolean doCamera, boolean doPreload returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeStartingUnitsOrc",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "location",
			"name": "startLoc"
		}, {
			"type": "boolean",
			"name": "doHeroes"
		}, {
			"type": "boolean",
			"name": "doCamera"
		}, {
			"type": "boolean",
			"name": "doPreload"
		}],
		"insertText": "MeleeStartingUnitsOrc(whichPlayer, startLoc, doHeroes, doCamera, doPreload)",
		"documentation": ""
	},
	"MeleeStartingUnitsUndead": {
		"original": "function MeleeStartingUnitsUndead takes player whichPlayer, location startLoc, boolean doHeroes, boolean doCamera, boolean doPreload returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeStartingUnitsUndead",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "location",
			"name": "startLoc"
		}, {
			"type": "boolean",
			"name": "doHeroes"
		}, {
			"type": "boolean",
			"name": "doCamera"
		}, {
			"type": "boolean",
			"name": "doPreload"
		}],
		"insertText": "MeleeStartingUnitsUndead(whichPlayer, startLoc, doHeroes, doCamera, doPreload)",
		"documentation": ""
	},
	"MeleeStartingUnitsNightElf": {
		"original": "function MeleeStartingUnitsNightElf takes player whichPlayer, location startLoc, boolean doHeroes, boolean doCamera, boolean doPreload returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeStartingUnitsNightElf",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "location",
			"name": "startLoc"
		}, {
			"type": "boolean",
			"name": "doHeroes"
		}, {
			"type": "boolean",
			"name": "doCamera"
		}, {
			"type": "boolean",
			"name": "doPreload"
		}],
		"insertText": "MeleeStartingUnitsNightElf(whichPlayer, startLoc, doHeroes, doCamera, doPreload)",
		"documentation": ""
	},
	"MeleeStartingUnitsUnknownRace": {
		"original": "function MeleeStartingUnitsUnknownRace takes player whichPlayer, location startLoc, boolean doHeroes, boolean doCamera, boolean doPreload returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeStartingUnitsUnknownRace",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "location",
			"name": "startLoc"
		}, {
			"type": "boolean",
			"name": "doHeroes"
		}, {
			"type": "boolean",
			"name": "doCamera"
		}, {
			"type": "boolean",
			"name": "doPreload"
		}],
		"insertText": "MeleeStartingUnitsUnknownRace(whichPlayer, startLoc, doHeroes, doCamera, doPreload)",
		"documentation": ""
	},
	"MeleeStartingUnits": {
		"original": "function MeleeStartingUnits takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeStartingUnits",
		"isConstant": false,
		"isNative": false,
		"insertText": "MeleeStartingUnits()",
		"documentation": "创建初始单位"
	},
	"MeleeStartingUnitsForPlayer": {
		"original": "function MeleeStartingUnitsForPlayer takes race whichRace, player whichPlayer, location loc, boolean doHeroes returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeStartingUnitsForPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "race",
			"name": "whichRace"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "location",
			"name": "loc"
		}, {
			"type": "boolean",
			"name": "doHeroes"
		}],
		"insertText": "MeleeStartingUnitsForPlayer(whichRace, whichPlayer, loc, doHeroes)",
		"documentation": "创建初始单位为了玩家"
	},
	"PickMeleeAI": {
		"original": "function PickMeleeAI takes player num, string s1, string s2, string s3 returns nothing",
		"fileName": "blizzard.j",
		"name": "PickMeleeAI",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "num"
		}, {
			"type": "string",
			"name": "s1"
		}, {
			"type": "string",
			"name": "s2"
		}, {
			"type": "string",
			"name": "s3"
		}],
		"insertText": "PickMeleeAI(num, s1, s2, s3)",
		"documentation": ""
	},
	"MeleeStartingAI": {
		"original": "function MeleeStartingAI takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeStartingAI",
		"isConstant": false,
		"isNative": false,
		"insertText": "MeleeStartingAI()",
		"documentation": "运行对战 AI"
	},
	"LockGuardPosition": {
		"original": "function LockGuardPosition takes unit targ returns nothing",
		"fileName": "blizzard.j",
		"name": "LockGuardPosition",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "targ"
		}],
		"insertText": "LockGuardPosition(targ)",
		"documentation": "锁定的防守职责"
	},
	"MeleePlayerIsOpponent": {
		"original": "function MeleePlayerIsOpponent takes integer playerIndex, integer opponentIndex returns boolean",
		"fileName": "blizzard.j",
		"name": "MeleePlayerIsOpponent",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "playerIndex"
		}, {
			"type": "integer",
			"name": "opponentIndex"
		}],
		"returnType": "boolean",
		"insertText": "MeleePlayerIsOpponent(playerIndex, opponentIndex)",
		"documentation": ""
	},
	"MeleeGetAllyStructureCount": {
		"original": "function MeleeGetAllyStructureCount takes player whichPlayer returns integer",
		"fileName": "blizzard.j",
		"name": "MeleeGetAllyStructureCount",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "integer",
		"insertText": "MeleeGetAllyStructureCount(whichPlayer)",
		"documentation": ""
	},
	"MeleeGetAllyCount": {
		"original": "function MeleeGetAllyCount takes player whichPlayer returns integer",
		"fileName": "blizzard.j",
		"name": "MeleeGetAllyCount",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "integer",
		"insertText": "MeleeGetAllyCount(whichPlayer)",
		"documentation": ""
	},
	"MeleeGetAllyKeyStructureCount": {
		"original": "function MeleeGetAllyKeyStructureCount takes player whichPlayer returns integer",
		"fileName": "blizzard.j",
		"name": "MeleeGetAllyKeyStructureCount",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "integer",
		"insertText": "MeleeGetAllyKeyStructureCount(whichPlayer)",
		"documentation": ""
	},
	"MeleeDoDrawEnum": {
		"original": "function MeleeDoDrawEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeDoDrawEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "MeleeDoDrawEnum()",
		"documentation": ""
	},
	"MeleeDoVictoryEnum": {
		"original": "function MeleeDoVictoryEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeDoVictoryEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "MeleeDoVictoryEnum()",
		"documentation": ""
	},
	"MeleeDoDefeat": {
		"original": "function MeleeDoDefeat takes player whichPlayer returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeDoDefeat",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "MeleeDoDefeat(whichPlayer)",
		"documentation": ""
	},
	"MeleeDoDefeatEnum": {
		"original": "function MeleeDoDefeatEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeDoDefeatEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "MeleeDoDefeatEnum()",
		"documentation": ""
	},
	"MeleeDoLeave": {
		"original": "function MeleeDoLeave takes player whichPlayer returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeDoLeave",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "MeleeDoLeave(whichPlayer)",
		"documentation": ""
	},
	"MeleeRemoveObservers": {
		"original": "function MeleeRemoveObservers takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeRemoveObservers",
		"isConstant": false,
		"isNative": false,
		"insertText": "MeleeRemoveObservers()",
		"documentation": ""
	},
	"MeleeCheckForVictors": {
		"original": "function MeleeCheckForVictors takes nothing returns force",
		"fileName": "blizzard.j",
		"name": "MeleeCheckForVictors",
		"isConstant": false,
		"isNative": false,
		"returnType": "force",
		"insertText": "MeleeCheckForVictors()",
		"documentation": ""
	},
	"MeleeCheckForLosersAndVictors": {
		"original": "function MeleeCheckForLosersAndVictors takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeCheckForLosersAndVictors",
		"isConstant": false,
		"isNative": false,
		"insertText": "MeleeCheckForLosersAndVictors()",
		"documentation": ""
	},
	"MeleeGetCrippledWarningMessage": {
		"original": "function MeleeGetCrippledWarningMessage takes player whichPlayer returns string",
		"fileName": "blizzard.j",
		"name": "MeleeGetCrippledWarningMessage",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "string",
		"insertText": "MeleeGetCrippledWarningMessage(whichPlayer)",
		"documentation": ""
	},
	"MeleeGetCrippledTimerMessage": {
		"original": "function MeleeGetCrippledTimerMessage takes player whichPlayer returns string",
		"fileName": "blizzard.j",
		"name": "MeleeGetCrippledTimerMessage",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "string",
		"insertText": "MeleeGetCrippledTimerMessage(whichPlayer)",
		"documentation": ""
	},
	"MeleeGetCrippledRevealedMessage": {
		"original": "function MeleeGetCrippledRevealedMessage takes player whichPlayer returns string",
		"fileName": "blizzard.j",
		"name": "MeleeGetCrippledRevealedMessage",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "string",
		"insertText": "MeleeGetCrippledRevealedMessage(whichPlayer)",
		"documentation": ""
	},
	"MeleeExposePlayer": {
		"original": "function MeleeExposePlayer takes player whichPlayer, boolean expose returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeExposePlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "boolean",
			"name": "expose"
		}],
		"insertText": "MeleeExposePlayer(whichPlayer, expose)",
		"documentation": ""
	},
	"MeleeExposeAllPlayers": {
		"original": "function MeleeExposeAllPlayers takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeExposeAllPlayers",
		"isConstant": false,
		"isNative": false,
		"insertText": "MeleeExposeAllPlayers()",
		"documentation": ""
	},
	"MeleeCrippledPlayerTimeout": {
		"original": "function MeleeCrippledPlayerTimeout takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeCrippledPlayerTimeout",
		"isConstant": false,
		"isNative": false,
		"insertText": "MeleeCrippledPlayerTimeout()",
		"documentation": ""
	},
	"MeleePlayerIsCrippled": {
		"original": "function MeleePlayerIsCrippled takes player whichPlayer returns boolean",
		"fileName": "blizzard.j",
		"name": "MeleePlayerIsCrippled",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "boolean",
		"insertText": "MeleePlayerIsCrippled(whichPlayer)",
		"documentation": ""
	},
	"MeleeCheckForCrippledPlayers": {
		"original": "function MeleeCheckForCrippledPlayers takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeCheckForCrippledPlayers",
		"isConstant": false,
		"isNative": false,
		"insertText": "MeleeCheckForCrippledPlayers()",
		"documentation": ""
	},
	"MeleeCheckLostUnit": {
		"original": "function MeleeCheckLostUnit takes unit lostUnit returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeCheckLostUnit",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "lostUnit"
		}],
		"insertText": "MeleeCheckLostUnit(lostUnit)",
		"documentation": ""
	},
	"MeleeCheckAddedUnit": {
		"original": "function MeleeCheckAddedUnit takes unit addedUnit returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeCheckAddedUnit",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "addedUnit"
		}],
		"insertText": "MeleeCheckAddedUnit(addedUnit)",
		"documentation": ""
	},
	"MeleeTriggerActionConstructCancel": {
		"original": "function MeleeTriggerActionConstructCancel takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeTriggerActionConstructCancel",
		"isConstant": false,
		"isNative": false,
		"insertText": "MeleeTriggerActionConstructCancel()",
		"documentation": ""
	},
	"MeleeTriggerActionUnitDeath": {
		"original": "function MeleeTriggerActionUnitDeath takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeTriggerActionUnitDeath",
		"isConstant": false,
		"isNative": false,
		"insertText": "MeleeTriggerActionUnitDeath()",
		"documentation": ""
	},
	"MeleeTriggerActionUnitConstructionStart": {
		"original": "function MeleeTriggerActionUnitConstructionStart takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeTriggerActionUnitConstructionStart",
		"isConstant": false,
		"isNative": false,
		"insertText": "MeleeTriggerActionUnitConstructionStart()",
		"documentation": ""
	},
	"MeleeTriggerActionPlayerDefeated": {
		"original": "function MeleeTriggerActionPlayerDefeated takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeTriggerActionPlayerDefeated",
		"isConstant": false,
		"isNative": false,
		"insertText": "MeleeTriggerActionPlayerDefeated()",
		"documentation": ""
	},
	"MeleeTriggerActionPlayerLeft": {
		"original": "function MeleeTriggerActionPlayerLeft takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeTriggerActionPlayerLeft",
		"isConstant": false,
		"isNative": false,
		"insertText": "MeleeTriggerActionPlayerLeft()",
		"documentation": ""
	},
	"MeleeTriggerActionAllianceChange": {
		"original": "function MeleeTriggerActionAllianceChange takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeTriggerActionAllianceChange",
		"isConstant": false,
		"isNative": false,
		"insertText": "MeleeTriggerActionAllianceChange()",
		"documentation": ""
	},
	"MeleeTriggerTournamentFinishSoon": {
		"original": "function MeleeTriggerTournamentFinishSoon takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeTriggerTournamentFinishSoon",
		"isConstant": false,
		"isNative": false,
		"insertText": "MeleeTriggerTournamentFinishSoon()",
		"documentation": ""
	},
	"MeleeWasUserPlayer": {
		"original": "function MeleeWasUserPlayer takes player whichPlayer returns boolean",
		"fileName": "blizzard.j",
		"name": "MeleeWasUserPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "boolean",
		"insertText": "MeleeWasUserPlayer(whichPlayer)",
		"documentation": ""
	},
	"MeleeTournamentFinishNowRuleA": {
		"original": "function MeleeTournamentFinishNowRuleA takes integer multiplier returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeTournamentFinishNowRuleA",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "multiplier"
		}],
		"insertText": "MeleeTournamentFinishNowRuleA(multiplier)",
		"documentation": ""
	},
	"MeleeTriggerTournamentFinishNow": {
		"original": "function MeleeTriggerTournamentFinishNow takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeTriggerTournamentFinishNow",
		"isConstant": false,
		"isNative": false,
		"insertText": "MeleeTriggerTournamentFinishNow()",
		"documentation": ""
	},
	"MeleeInitVictoryDefeat": {
		"original": "function MeleeInitVictoryDefeat takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeInitVictoryDefeat",
		"isConstant": false,
		"isNative": false,
		"insertText": "MeleeInitVictoryDefeat()",
		"documentation": "胜利/失败条件"
	},
	"CheckInitPlayerSlotAvailability": {
		"original": "function CheckInitPlayerSlotAvailability takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "CheckInitPlayerSlotAvailability",
		"isConstant": false,
		"isNative": false,
		"insertText": "CheckInitPlayerSlotAvailability()",
		"documentation": ""
	},
	"SetPlayerSlotAvailable": {
		"original": "function SetPlayerSlotAvailable takes player whichPlayer, mapcontrol control returns nothing",
		"fileName": "blizzard.j",
		"name": "SetPlayerSlotAvailable",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "mapcontrol",
			"name": "control"
		}],
		"insertText": "SetPlayerSlotAvailable(whichPlayer, control)",
		"documentation": ""
	},
	"TeamInitPlayerSlots": {
		"original": "function TeamInitPlayerSlots takes integer teamCount returns nothing",
		"fileName": "blizzard.j",
		"name": "TeamInitPlayerSlots",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "teamCount"
		}],
		"insertText": "TeamInitPlayerSlots(teamCount)",
		"documentation": ""
	},
	"MeleeInitPlayerSlots": {
		"original": "function MeleeInitPlayerSlots takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MeleeInitPlayerSlots",
		"isConstant": false,
		"isNative": false,
		"insertText": "MeleeInitPlayerSlots()",
		"documentation": ""
	},
	"FFAInitPlayerSlots": {
		"original": "function FFAInitPlayerSlots takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "FFAInitPlayerSlots",
		"isConstant": false,
		"isNative": false,
		"insertText": "FFAInitPlayerSlots()",
		"documentation": ""
	},
	"OneOnOneInitPlayerSlots": {
		"original": "function OneOnOneInitPlayerSlots takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "OneOnOneInitPlayerSlots",
		"isConstant": false,
		"isNative": false,
		"insertText": "OneOnOneInitPlayerSlots()",
		"documentation": ""
	},
	"InitGenericPlayerSlots": {
		"original": "function InitGenericPlayerSlots takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "InitGenericPlayerSlots",
		"isConstant": false,
		"isNative": false,
		"insertText": "InitGenericPlayerSlots()",
		"documentation": ""
	},
	"SetDNCSoundsDawn": {
		"original": "function SetDNCSoundsDawn takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "SetDNCSoundsDawn",
		"isConstant": false,
		"isNative": false,
		"insertText": "SetDNCSoundsDawn()",
		"documentation": ""
	},
	"SetDNCSoundsDusk": {
		"original": "function SetDNCSoundsDusk takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "SetDNCSoundsDusk",
		"isConstant": false,
		"isNative": false,
		"insertText": "SetDNCSoundsDusk()",
		"documentation": ""
	},
	"SetDNCSoundsDay": {
		"original": "function SetDNCSoundsDay takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "SetDNCSoundsDay",
		"isConstant": false,
		"isNative": false,
		"insertText": "SetDNCSoundsDay()",
		"documentation": ""
	},
	"SetDNCSoundsNight": {
		"original": "function SetDNCSoundsNight takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "SetDNCSoundsNight",
		"isConstant": false,
		"isNative": false,
		"insertText": "SetDNCSoundsNight()",
		"documentation": ""
	},
	"InitDNCSounds": {
		"original": "function InitDNCSounds takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "InitDNCSounds",
		"isConstant": false,
		"isNative": false,
		"insertText": "InitDNCSounds()",
		"documentation": ""
	},
	"InitBlizzardGlobals": {
		"original": "function InitBlizzardGlobals takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "InitBlizzardGlobals",
		"isConstant": false,
		"isNative": false,
		"insertText": "InitBlizzardGlobals()",
		"documentation": ""
	},
	"InitQueuedTriggers": {
		"original": "function InitQueuedTriggers takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "InitQueuedTriggers",
		"isConstant": false,
		"isNative": false,
		"insertText": "InitQueuedTriggers()",
		"documentation": ""
	},
	"InitMapRects": {
		"original": "function InitMapRects takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "InitMapRects",
		"isConstant": false,
		"isNative": false,
		"insertText": "InitMapRects()",
		"documentation": ""
	},
	"InitSummonableCaps": {
		"original": "function InitSummonableCaps takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "InitSummonableCaps",
		"isConstant": false,
		"isNative": false,
		"insertText": "InitSummonableCaps()",
		"documentation": ""
	},
	"UpdateStockAvailability": {
		"original": "function UpdateStockAvailability takes item whichItem returns nothing",
		"fileName": "blizzard.j",
		"name": "UpdateStockAvailability",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}],
		"insertText": "UpdateStockAvailability(whichItem)",
		"documentation": ""
	},
	"UpdateEachStockBuildingEnum": {
		"original": "function UpdateEachStockBuildingEnum takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "UpdateEachStockBuildingEnum",
		"isConstant": false,
		"isNative": false,
		"insertText": "UpdateEachStockBuildingEnum()",
		"documentation": ""
	},
	"UpdateEachStockBuilding": {
		"original": "function UpdateEachStockBuilding takes itemtype iType, integer iLevel returns nothing",
		"fileName": "blizzard.j",
		"name": "UpdateEachStockBuilding",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "itemtype",
			"name": "iType"
		}, {
			"type": "integer",
			"name": "iLevel"
		}],
		"insertText": "UpdateEachStockBuilding(iType, iLevel)",
		"documentation": ""
	},
	"PerformStockUpdates": {
		"original": "function PerformStockUpdates takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "PerformStockUpdates",
		"isConstant": false,
		"isNative": false,
		"insertText": "PerformStockUpdates()",
		"documentation": ""
	},
	"StartStockUpdates": {
		"original": "function StartStockUpdates takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "StartStockUpdates",
		"isConstant": false,
		"isNative": false,
		"insertText": "StartStockUpdates()",
		"documentation": ""
	},
	"RemovePurchasedItem": {
		"original": "function RemovePurchasedItem takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "RemovePurchasedItem",
		"isConstant": false,
		"isNative": false,
		"insertText": "RemovePurchasedItem()",
		"documentation": ""
	},
	"InitNeutralBuildings": {
		"original": "function InitNeutralBuildings takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "InitNeutralBuildings",
		"isConstant": false,
		"isNative": false,
		"insertText": "InitNeutralBuildings()",
		"documentation": ""
	},
	"MarkGameStarted": {
		"original": "function MarkGameStarted takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "MarkGameStarted",
		"isConstant": false,
		"isNative": false,
		"insertText": "MarkGameStarted()",
		"documentation": ""
	},
	"DetectGameStarted": {
		"original": "function DetectGameStarted takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "DetectGameStarted",
		"isConstant": false,
		"isNative": false,
		"insertText": "DetectGameStarted()",
		"documentation": ""
	},
	"InitBlizzard": {
		"original": "function InitBlizzard takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "InitBlizzard",
		"isConstant": false,
		"isNative": false,
		"insertText": "InitBlizzard()",
		"documentation": ""
	},
	"RandomDistReset": {
		"original": "function RandomDistReset takes nothing returns nothing",
		"fileName": "blizzard.j",
		"name": "RandomDistReset",
		"isConstant": false,
		"isNative": false,
		"insertText": "RandomDistReset()",
		"documentation": ""
	},
	"RandomDistAddItem": {
		"original": "function RandomDistAddItem takes integer inID, integer inChance returns nothing",
		"fileName": "blizzard.j",
		"name": "RandomDistAddItem",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "inID"
		}, {
			"type": "integer",
			"name": "inChance"
		}],
		"insertText": "RandomDistAddItem(inID, inChance)",
		"documentation": ""
	},
	"RandomDistChoose": {
		"original": "function RandomDistChoose takes nothing returns integer",
		"fileName": "blizzard.j",
		"name": "RandomDistChoose",
		"isConstant": false,
		"isNative": false,
		"returnType": "integer",
		"insertText": "RandomDistChoose()",
		"documentation": ""
	},
	"UnitDropItem": {
		"original": "function UnitDropItem takes unit inUnit, integer inItemID returns item",
		"fileName": "blizzard.j",
		"name": "UnitDropItem",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "inUnit"
		}, {
			"type": "integer",
			"name": "inItemID"
		}],
		"returnType": "item",
		"insertText": "UnitDropItem(inUnit, inItemID)",
		"documentation": "单位掉落的物品"
	},
	"WidgetDropItem": {
		"original": "function WidgetDropItem takes widget inWidget, integer inItemID returns item",
		"fileName": "blizzard.j",
		"name": "WidgetDropItem",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "widget",
			"name": "inWidget"
		}, {
			"type": "integer",
			"name": "inItemID"
		}],
		"returnType": "item",
		"insertText": "WidgetDropItem(inWidget, inItemID)",
		"documentation": ""
	},
	"DzGetMouseTerrainX": {
		"original": "\tnative DzGetMouseTerrainX takes nothing returns real",
		"fileName": "DzAPI.j",
		"name": "DzGetMouseTerrainX",
		"isConstant": false,
		"isNative": true,
		"returnType": "real",
		"insertText": "DzGetMouseTerrainX()",
		"documentation": "获取鼠标在游戏内的坐标X"
	},
	"DzGetMouseTerrainY": {
		"original": "\tnative DzGetMouseTerrainY takes nothing returns real",
		"fileName": "DzAPI.j",
		"name": "DzGetMouseTerrainY",
		"isConstant": false,
		"isNative": true,
		"returnType": "real",
		"insertText": "DzGetMouseTerrainY()",
		"documentation": "获取鼠标在游戏内的坐标Y"
	},
	"DzGetMouseTerrainZ": {
		"original": "\tnative DzGetMouseTerrainZ takes nothing returns real",
		"fileName": "DzAPI.j",
		"name": "DzGetMouseTerrainZ",
		"isConstant": false,
		"isNative": true,
		"returnType": "real",
		"insertText": "DzGetMouseTerrainZ()",
		"documentation": "获取鼠标在游戏内的坐标Z"
	},
	"DzIsMouseOverUI": {
		"original": "\tnative DzIsMouseOverUI takes nothing returns boolean",
		"fileName": "DzAPI.j",
		"name": "DzIsMouseOverUI",
		"isConstant": false,
		"isNative": true,
		"returnType": "boolean",
		"insertText": "DzIsMouseOverUI()",
		"documentation": "鼠标是否在游戏内"
	},
	"DzGetMouseX": {
		"original": "\tnative DzGetMouseX takes nothing returns integer",
		"fileName": "DzAPI.j",
		"name": "DzGetMouseX",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "DzGetMouseX()",
		"documentation": "获取鼠标屏幕坐标X"
	},
	"DzGetMouseY": {
		"original": "\tnative DzGetMouseY takes nothing returns integer",
		"fileName": "DzAPI.j",
		"name": "DzGetMouseY",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "DzGetMouseY()",
		"documentation": "获取鼠标屏幕坐标Y"
	},
	"DzGetMouseXRelative": {
		"original": "\tnative DzGetMouseXRelative takes nothing returns integer",
		"fileName": "DzAPI.j",
		"name": "DzGetMouseXRelative",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "DzGetMouseXRelative()",
		"documentation": "获取鼠标游戏窗口坐标X"
	},
	"DzGetMouseYRelative": {
		"original": "\tnative DzGetMouseYRelative takes nothing returns integer",
		"fileName": "DzAPI.j",
		"name": "DzGetMouseYRelative",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "DzGetMouseYRelative()",
		"documentation": "获取鼠标游戏窗口坐标Y"
	},
	"DzSetMousePos": {
		"original": "\tnative DzSetMousePos takes integer x, integer y returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzSetMousePos",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "x"
		}, {
			"type": "integer",
			"name": "y"
		}],
		"insertText": "DzSetMousePos(x, y)",
		"documentation": "设置鼠标位置"
	},
	"DzTriggerRegisterMouseEvent": {
		"original": "\tnative DzTriggerRegisterMouseEvent takes trigger trig, integer btn, integer status, boolean sync, string func returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzTriggerRegisterMouseEvent",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "integer",
			"name": "btn"
		}, {
			"type": "integer",
			"name": "status"
		}, {
			"type": "boolean",
			"name": "sync"
		}, {
			"type": "string",
			"name": "func"
		}],
		"insertText": "DzTriggerRegisterMouseEvent(trig, btn, status, sync, func)",
		"documentation": "注册鼠标点击触发（sync为true时，调用TriggerExecute。为false时，直接运行action函数，可以异步不掉线，action里不要有同步操作）"
	},
	"DzTriggerRegisterMouseEventByCode": {
		"original": "\tnative DzTriggerRegisterMouseEventByCode takes trigger trig, integer btn, integer status, boolean sync, code funcHandle returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzTriggerRegisterMouseEventByCode",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "integer",
			"name": "btn"
		}, {
			"type": "integer",
			"name": "status"
		}, {
			"type": "boolean",
			"name": "sync"
		}, {
			"type": "code",
			"name": "funcHandle"
		}],
		"insertText": "DzTriggerRegisterMouseEventByCode(trig, btn, status, sync, funcHandle)",
		"documentation": ""
	},
	"DzTriggerRegisterKeyEvent": {
		"original": "\tnative DzTriggerRegisterKeyEvent takes trigger trig, integer key, integer status, boolean sync, string func returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzTriggerRegisterKeyEvent",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "status"
		}, {
			"type": "boolean",
			"name": "sync"
		}, {
			"type": "string",
			"name": "func"
		}],
		"insertText": "DzTriggerRegisterKeyEvent(trig, key, status, sync, func)",
		"documentation": "注册键盘点击触发"
	},
	"DzTriggerRegisterKeyEventByCode": {
		"original": "\tnative DzTriggerRegisterKeyEventByCode takes trigger trig, integer key, integer status, boolean sync, code funcHandle returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzTriggerRegisterKeyEventByCode",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "status"
		}, {
			"type": "boolean",
			"name": "sync"
		}, {
			"type": "code",
			"name": "funcHandle"
		}],
		"insertText": "DzTriggerRegisterKeyEventByCode(trig, key, status, sync, funcHandle)",
		"documentation": ""
	},
	"DzTriggerRegisterMouseWheelEvent": {
		"original": "\tnative DzTriggerRegisterMouseWheelEvent takes trigger trig, boolean sync, string func returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzTriggerRegisterMouseWheelEvent",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "boolean",
			"name": "sync"
		}, {
			"type": "string",
			"name": "func"
		}],
		"insertText": "DzTriggerRegisterMouseWheelEvent(trig, sync, func)",
		"documentation": "注册鼠标滚轮触发"
	},
	"DzTriggerRegisterMouseWheelEventByCode": {
		"original": "\tnative DzTriggerRegisterMouseWheelEventByCode takes trigger trig, boolean sync, code funcHandle returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzTriggerRegisterMouseWheelEventByCode",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "boolean",
			"name": "sync"
		}, {
			"type": "code",
			"name": "funcHandle"
		}],
		"insertText": "DzTriggerRegisterMouseWheelEventByCode(trig, sync, funcHandle)",
		"documentation": ""
	},
	"DzTriggerRegisterMouseMoveEvent": {
		"original": "\tnative DzTriggerRegisterMouseMoveEvent takes trigger trig, boolean sync, string func returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzTriggerRegisterMouseMoveEvent",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "boolean",
			"name": "sync"
		}, {
			"type": "string",
			"name": "func"
		}],
		"insertText": "DzTriggerRegisterMouseMoveEvent(trig, sync, func)",
		"documentation": "注册鼠标移动触发"
	},
	"DzTriggerRegisterMouseMoveEventByCode": {
		"original": "\tnative DzTriggerRegisterMouseMoveEventByCode takes trigger trig, boolean sync, code funcHandle returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzTriggerRegisterMouseMoveEventByCode",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "boolean",
			"name": "sync"
		}, {
			"type": "code",
			"name": "funcHandle"
		}],
		"insertText": "DzTriggerRegisterMouseMoveEventByCode(trig, sync, funcHandle)",
		"documentation": ""
	},
	"DzGetTriggerKey": {
		"original": "\tnative DzGetTriggerKey takes nothing returns integer",
		"fileName": "DzAPI.j",
		"name": "DzGetTriggerKey",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "DzGetTriggerKey()",
		"documentation": "获取触发器的按键码"
	},
	"DzGetWheelDelta": {
		"original": "\tnative DzGetWheelDelta takes nothing returns integer",
		"fileName": "DzAPI.j",
		"name": "DzGetWheelDelta",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "DzGetWheelDelta()",
		"documentation": "获取滚轮delta"
	},
	"DzIsKeyDown": {
		"original": "\tnative DzIsKeyDown takes integer iKey returns boolean",
		"fileName": "DzAPI.j",
		"name": "DzIsKeyDown",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "iKey"
		}],
		"returnType": "boolean",
		"insertText": "DzIsKeyDown(iKey)",
		"documentation": "判断按键是否按下"
	},
	"DzGetTriggerKeyPlayer": {
		"original": "\tnative DzGetTriggerKeyPlayer takes nothing returns player",
		"fileName": "DzAPI.j",
		"name": "DzGetTriggerKeyPlayer",
		"isConstant": false,
		"isNative": true,
		"returnType": "player",
		"insertText": "DzGetTriggerKeyPlayer()",
		"documentation": "获取触发key的玩家"
	},
	"DzGetWindowWidth": {
		"original": "\tnative DzGetWindowWidth takes nothing returns integer",
		"fileName": "DzAPI.j",
		"name": "DzGetWindowWidth",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "DzGetWindowWidth()",
		"documentation": "获取war3窗口宽度"
	},
	"DzGetWindowHeight": {
		"original": "\tnative DzGetWindowHeight takes nothing returns integer",
		"fileName": "DzAPI.j",
		"name": "DzGetWindowHeight",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "DzGetWindowHeight()",
		"documentation": "获取war3窗口高度"
	},
	"DzGetWindowX": {
		"original": "\tnative DzGetWindowX takes nothing returns integer",
		"fileName": "DzAPI.j",
		"name": "DzGetWindowX",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "DzGetWindowX()",
		"documentation": "获取war3窗口X坐标"
	},
	"DzGetWindowY": {
		"original": "\tnative DzGetWindowY takes nothing returns integer",
		"fileName": "DzAPI.j",
		"name": "DzGetWindowY",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "DzGetWindowY()",
		"documentation": "获取war3窗口Y坐标"
	},
	"DzTriggerRegisterWindowResizeEvent": {
		"original": "\tnative DzTriggerRegisterWindowResizeEvent takes trigger trig, boolean sync, string func returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzTriggerRegisterWindowResizeEvent",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "boolean",
			"name": "sync"
		}, {
			"type": "string",
			"name": "func"
		}],
		"insertText": "DzTriggerRegisterWindowResizeEvent(trig, sync, func)",
		"documentation": "注册war3窗口大小变化事件"
	},
	"DzTriggerRegisterWindowResizeEventByCode": {
		"original": "\tnative DzTriggerRegisterWindowResizeEventByCode takes trigger trig, boolean sync, code funcHandle returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzTriggerRegisterWindowResizeEventByCode",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "boolean",
			"name": "sync"
		}, {
			"type": "code",
			"name": "funcHandle"
		}],
		"insertText": "DzTriggerRegisterWindowResizeEventByCode(trig, sync, funcHandle)",
		"documentation": ""
	},
	"DzIsWindowActive": {
		"original": "\tnative DzIsWindowActive takes nothing returns boolean",
		"fileName": "DzAPI.j",
		"name": "DzIsWindowActive",
		"isConstant": false,
		"isNative": true,
		"returnType": "boolean",
		"insertText": "DzIsWindowActive()",
		"documentation": "判断窗口是否激活"
	},
	"DzDestructablePosition": {
		"original": "\tnative DzDestructablePosition takes destructable d, real x, real y returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzDestructablePosition",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "destructable",
			"name": "d"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"insertText": "DzDestructablePosition(d, x, y)",
		"documentation": "设置可摧毁物位置"
	},
	"DzSetUnitPosition": {
		"original": "\tnative DzSetUnitPosition takes unit whichUnit, real x, real y returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzSetUnitPosition",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"insertText": "DzSetUnitPosition(whichUnit, x, y)",
		"documentation": "设置单位位置-本地调用"
	},
	"DzExecuteFunc": {
		"original": "\tnative DzExecuteFunc takes string funcName returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzExecuteFunc",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "funcName"
		}],
		"insertText": "DzExecuteFunc(funcName)",
		"documentation": "异步执行函数"
	},
	"DzGetUnitUnderMouse": {
		"original": "\tnative DzGetUnitUnderMouse takes nothing returns unit",
		"fileName": "DzAPI.j",
		"name": "DzGetUnitUnderMouse",
		"isConstant": false,
		"isNative": true,
		"returnType": "unit",
		"insertText": "DzGetUnitUnderMouse()",
		"documentation": "取鼠标指向的单位"
	},
	"DzSetUnitTexture": {
		"original": "\tnative DzSetUnitTexture takes unit whichUnit, string path, integer texId returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzSetUnitTexture",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "string",
			"name": "path"
		}, {
			"type": "integer",
			"name": "texId"
		}],
		"insertText": "DzSetUnitTexture(whichUnit, path, texId)",
		"documentation": "设置单位的贴图"
	},
	"DzSetMemory": {
		"original": "\tnative DzSetMemory takes integer frame,real r returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzSetMemory",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}, {
			"type": "real",
			"name": "r"
		}],
		"insertText": "DzSetMemory(frame, r)",
		"documentation": ""
	},
	"DzSetUnitID": {
		"original": "\tnative DzSetUnitID takes unit whichUnit, integer id returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzSetUnitID",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "id"
		}],
		"insertText": "DzSetUnitID(whichUnit, id)",
		"documentation": ""
	},
	"DzSetUnitModel": {
		"original": "\tnative DzSetUnitModel takes unit whichUnit, string path returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzSetUnitModel",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "string",
			"name": "path"
		}],
		"insertText": "DzSetUnitModel(whichUnit, path)",
		"documentation": ""
	},
	"DzSetWar3MapMap": {
		"original": "\tnative DzSetWar3MapMap takes string map returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzSetWar3MapMap",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "map"
		}],
		"insertText": "DzSetWar3MapMap(map)",
		"documentation": ""
	},
	"DzTriggerRegisterSyncData": {
		"original": "\tnative DzTriggerRegisterSyncData takes trigger trig, string prefix, boolean server returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzTriggerRegisterSyncData",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "string",
			"name": "prefix"
		}, {
			"type": "boolean",
			"name": "server"
		}],
		"insertText": "DzTriggerRegisterSyncData(trig, prefix, server)",
		"documentation": "注册数据同步触发器"
	},
	"DzSyncData": {
		"original": "\tnative DzSyncData takes string prefix, string data returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzSyncData",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "prefix"
		}, {
			"type": "string",
			"name": "data"
		}],
		"insertText": "DzSyncData(prefix, data)",
		"documentation": "同步游戏数据"
	},
	"DzGetTriggerSyncData": {
		"original": "\tnative DzGetTriggerSyncData takes nothing returns string",
		"fileName": "DzAPI.j",
		"name": "DzGetTriggerSyncData",
		"isConstant": false,
		"isNative": true,
		"returnType": "string",
		"insertText": "DzGetTriggerSyncData()",
		"documentation": "获取同步的数据"
	},
	"DzGetTriggerSyncPlayer": {
		"original": "\tnative DzGetTriggerSyncPlayer takes nothing returns player",
		"fileName": "DzAPI.j",
		"name": "DzGetTriggerSyncPlayer",
		"isConstant": false,
		"isNative": true,
		"returnType": "player",
		"insertText": "DzGetTriggerSyncPlayer()",
		"documentation": "获取同步数据的玩家"
	},
	"DzFrameHideInterface": {
		"original": "\tnative DzFrameHideInterface takes nothing returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameHideInterface",
		"isConstant": false,
		"isNative": true,
		"insertText": "DzFrameHideInterface()",
		"documentation": "隐藏界面元素"
	},
	"DzFrameEditBlackBorders": {
		"original": "\tnative DzFrameEditBlackBorders takes real upperHeight, real bottomHeight returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameEditBlackBorders",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "upperHeight"
		}, {
			"type": "real",
			"name": "bottomHeight"
		}],
		"insertText": "DzFrameEditBlackBorders(upperHeight, bottomHeight)",
		"documentation": "修改游戏世界窗口位置"
	},
	"DzFrameGetPortrait": {
		"original": "\tnative DzFrameGetPortrait takes nothing returns integer",
		"fileName": "DzAPI.j",
		"name": "DzFrameGetPortrait",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "DzFrameGetPortrait()",
		"documentation": "头像"
	},
	"DzFrameGetMinimap": {
		"original": "\tnative DzFrameGetMinimap takes nothing returns integer",
		"fileName": "DzAPI.j",
		"name": "DzFrameGetMinimap",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "DzFrameGetMinimap()",
		"documentation": "小地图"
	},
	"DzFrameGetCommandBarButton": {
		"original": "\tnative DzFrameGetCommandBarButton takes integer row, integer column returns integer",
		"fileName": "DzAPI.j",
		"name": "DzFrameGetCommandBarButton",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "row"
		}, {
			"type": "integer",
			"name": "column"
		}],
		"returnType": "integer",
		"insertText": "DzFrameGetCommandBarButton(row, column)",
		"documentation": "技能按钮"
	},
	"DzFrameGetHeroBarButton": {
		"original": "\tnative DzFrameGetHeroBarButton takes integer buttonId returns integer",
		"fileName": "DzAPI.j",
		"name": "DzFrameGetHeroBarButton",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "buttonId"
		}],
		"returnType": "integer",
		"insertText": "DzFrameGetHeroBarButton(buttonId)",
		"documentation": "英雄按钮"
	},
	"DzFrameGetHeroHPBar": {
		"original": "\tnative DzFrameGetHeroHPBar takes integer buttonId returns integer",
		"fileName": "DzAPI.j",
		"name": "DzFrameGetHeroHPBar",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "buttonId"
		}],
		"returnType": "integer",
		"insertText": "DzFrameGetHeroHPBar(buttonId)",
		"documentation": "英雄血条"
	},
	"DzFrameGetHeroManaBar": {
		"original": "\tnative DzFrameGetHeroManaBar takes integer buttonId returns integer",
		"fileName": "DzAPI.j",
		"name": "DzFrameGetHeroManaBar",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "buttonId"
		}],
		"returnType": "integer",
		"insertText": "DzFrameGetHeroManaBar(buttonId)",
		"documentation": "英雄蓝条"
	},
	"DzFrameGetItemBarButton": {
		"original": "\tnative DzFrameGetItemBarButton takes integer buttonId returns integer",
		"fileName": "DzAPI.j",
		"name": "DzFrameGetItemBarButton",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "buttonId"
		}],
		"returnType": "integer",
		"insertText": "DzFrameGetItemBarButton(buttonId)",
		"documentation": "道具按钮"
	},
	"DzFrameGetMinimapButton": {
		"original": "\tnative DzFrameGetMinimapButton takes integer buttonId returns integer",
		"fileName": "DzAPI.j",
		"name": "DzFrameGetMinimapButton",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "buttonId"
		}],
		"returnType": "integer",
		"insertText": "DzFrameGetMinimapButton(buttonId)",
		"documentation": "小地图按钮"
	},
	"DzFrameGetUpperButtonBarButton": {
		"original": "\tnative DzFrameGetUpperButtonBarButton takes integer buttonId returns integer",
		"fileName": "DzAPI.j",
		"name": "DzFrameGetUpperButtonBarButton",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "buttonId"
		}],
		"returnType": "integer",
		"insertText": "DzFrameGetUpperButtonBarButton(buttonId)",
		"documentation": "左上菜单按钮"
	},
	"DzFrameGetTooltip": {
		"original": "\tnative DzFrameGetTooltip takes nothing returns integer",
		"fileName": "DzAPI.j",
		"name": "DzFrameGetTooltip",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "DzFrameGetTooltip()",
		"documentation": "鼠标提示"
	},
	"DzFrameGetChatMessage": {
		"original": "\tnative DzFrameGetChatMessage takes nothing returns integer",
		"fileName": "DzAPI.j",
		"name": "DzFrameGetChatMessage",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "DzFrameGetChatMessage()",
		"documentation": "聊天信息"
	},
	"DzFrameGetUnitMessage": {
		"original": "\tnative DzFrameGetUnitMessage takes nothing returns integer",
		"fileName": "DzAPI.j",
		"name": "DzFrameGetUnitMessage",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "DzFrameGetUnitMessage()",
		"documentation": "单位信息"
	},
	"DzFrameGetTopMessage": {
		"original": "\tnative DzFrameGetTopMessage takes nothing returns integer",
		"fileName": "DzAPI.j",
		"name": "DzFrameGetTopMessage",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "DzFrameGetTopMessage()",
		"documentation": "获取最上的信息"
	},
	"DzGetColor": {
		"original": "\tnative DzGetColor takes integer r, integer g, integer b, integer a returns integer",
		"fileName": "DzAPI.j",
		"name": "DzGetColor",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "r"
		}, {
			"type": "integer",
			"name": "g"
		}, {
			"type": "integer",
			"name": "b"
		}, {
			"type": "integer",
			"name": "a"
		}],
		"returnType": "integer",
		"insertText": "DzGetColor(r, g, b, a)",
		"documentation": "取rgba色值"
	},
	"DzFrameSetUpdateCallback": {
		"original": "\tnative DzFrameSetUpdateCallback takes string func returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameSetUpdateCallback",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "func"
		}],
		"insertText": "DzFrameSetUpdateCallback(func)",
		"documentation": "设置界面更新回调（非同步）"
	},
	"DzFrameSetUpdateCallbackByCode": {
		"original": "\tnative DzFrameSetUpdateCallbackByCode takes code funcHandle returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameSetUpdateCallbackByCode",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "code",
			"name": "funcHandle"
		}],
		"insertText": "DzFrameSetUpdateCallbackByCode(funcHandle)",
		"documentation": ""
	},
	"DzFrameShow": {
		"original": "\tnative DzFrameShow takes integer frame, boolean enable returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameShow",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}, {
			"type": "boolean",
			"name": "enable"
		}],
		"insertText": "DzFrameShow(frame, enable)",
		"documentation": "显示/隐藏窗体"
	},
	"DzCreateFrame": {
		"original": "\tnative DzCreateFrame takes string frame, integer parent, integer id returns integer",
		"fileName": "DzAPI.j",
		"name": "DzCreateFrame",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "frame"
		}, {
			"type": "integer",
			"name": "parent"
		}, {
			"type": "integer",
			"name": "id"
		}],
		"returnType": "integer",
		"insertText": "DzCreateFrame(frame, parent, id)",
		"documentation": "创建窗体"
	},
	"DzCreateSimpleFrame": {
		"original": "\tnative DzCreateSimpleFrame takes string frame, integer parent, integer id returns integer",
		"fileName": "DzAPI.j",
		"name": "DzCreateSimpleFrame",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "frame"
		}, {
			"type": "integer",
			"name": "parent"
		}, {
			"type": "integer",
			"name": "id"
		}],
		"returnType": "integer",
		"insertText": "DzCreateSimpleFrame(frame, parent, id)",
		"documentation": "创建简单的窗体"
	},
	"DzDestroyFrame": {
		"original": "\tnative DzDestroyFrame takes integer frame returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzDestroyFrame",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}],
		"insertText": "DzDestroyFrame(frame)",
		"documentation": "销毁窗体"
	},
	"DzLoadToc": {
		"original": "\tnative DzLoadToc takes string fileName returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzLoadToc",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "fileName"
		}],
		"insertText": "DzLoadToc(fileName)",
		"documentation": "加载内容目录 (Toc table of contents. 不知道翻译对不)"
	},
	"DzFrameSetPoint": {
		"original": "\tnative DzFrameSetPoint takes integer frame, integer point, integer relativeFrame, integer relativePoint, real x, real y returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameSetPoint",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}, {
			"type": "integer",
			"name": "point"
		}, {
			"type": "integer",
			"name": "relativeFrame"
		}, {
			"type": "integer",
			"name": "relativePoint"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"insertText": "DzFrameSetPoint(frame, point, relativeFrame, relativePoint, x, y)",
		"documentation": "设置窗体相对位置"
	},
	"DzFrameSetAbsolutePoint": {
		"original": "\tnative DzFrameSetAbsolutePoint takes integer frame, integer point, real x, real y returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameSetAbsolutePoint",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}, {
			"type": "integer",
			"name": "point"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"insertText": "DzFrameSetAbsolutePoint(frame, point, x, y)",
		"documentation": "设置窗体绝对位置"
	},
	"DzFrameClearAllPoints": {
		"original": "\tnative DzFrameClearAllPoints takes integer frame returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameClearAllPoints",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}],
		"insertText": "DzFrameClearAllPoints(frame)",
		"documentation": "清空窗体锚点"
	},
	"DzFrameSetEnable": {
		"original": "\tnative DzFrameSetEnable takes integer name, boolean enable returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameSetEnable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "name"
		}, {
			"type": "boolean",
			"name": "enable"
		}],
		"insertText": "DzFrameSetEnable(name, enable)",
		"documentation": "设置窗体禁用/启用"
	},
	"DzFrameSetScript": {
		"original": "\tnative DzFrameSetScript takes integer frame, integer eventId, string func, boolean sync returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameSetScript",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}, {
			"type": "integer",
			"name": "eventId"
		}, {
			"type": "string",
			"name": "func"
		}, {
			"type": "boolean",
			"name": "sync"
		}],
		"insertText": "DzFrameSetScript(frame, eventId, func, sync)",
		"documentation": "注册用户界面事件回调"
	},
	"DzFrameSetScriptByCode": {
		"original": "\tnative DzFrameSetScriptByCode takes integer frame, integer eventId, code funcHandle, boolean sync returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameSetScriptByCode",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}, {
			"type": "integer",
			"name": "eventId"
		}, {
			"type": "code",
			"name": "funcHandle"
		}, {
			"type": "boolean",
			"name": "sync"
		}],
		"insertText": "DzFrameSetScriptByCode(frame, eventId, funcHandle, sync)",
		"documentation": ""
	},
	"DzGetTriggerUIEventPlayer": {
		"original": "\tnative DzGetTriggerUIEventPlayer takes nothing returns player",
		"fileName": "DzAPI.j",
		"name": "DzGetTriggerUIEventPlayer",
		"isConstant": false,
		"isNative": true,
		"returnType": "player",
		"insertText": "DzGetTriggerUIEventPlayer()",
		"documentation": "获取触发用户界面事件的玩家"
	},
	"DzGetTriggerUIEventFrame": {
		"original": "\tnative DzGetTriggerUIEventFrame takes nothing returns integer",
		"fileName": "DzAPI.j",
		"name": "DzGetTriggerUIEventFrame",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "DzGetTriggerUIEventFrame()",
		"documentation": "获取触发用户界面事件的窗体"
	},
	"DzFrameFindByName": {
		"original": "\tnative DzFrameFindByName takes string name, integer id returns integer",
		"fileName": "DzAPI.j",
		"name": "DzFrameFindByName",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "name"
		}, {
			"type": "integer",
			"name": "id"
		}],
		"returnType": "integer",
		"insertText": "DzFrameFindByName(name, id)",
		"documentation": "通过名称查找窗体"
	},
	"DzSimpleFrameFindByName": {
		"original": "\tnative DzSimpleFrameFindByName takes string name, integer id returns integer",
		"fileName": "DzAPI.j",
		"name": "DzSimpleFrameFindByName",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "name"
		}, {
			"type": "integer",
			"name": "id"
		}],
		"returnType": "integer",
		"insertText": "DzSimpleFrameFindByName(name, id)",
		"documentation": "通过名称查找普通窗体"
	},
	"DzSimpleFontStringFindByName": {
		"original": "\tnative DzSimpleFontStringFindByName takes string name, integer id returns integer",
		"fileName": "DzAPI.j",
		"name": "DzSimpleFontStringFindByName",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "name"
		}, {
			"type": "integer",
			"name": "id"
		}],
		"returnType": "integer",
		"insertText": "DzSimpleFontStringFindByName(name, id)",
		"documentation": "查找字符串"
	},
	"DzSimpleTextureFindByName": {
		"original": "\tnative DzSimpleTextureFindByName takes string name, integer id returns integer",
		"fileName": "DzAPI.j",
		"name": "DzSimpleTextureFindByName",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "name"
		}, {
			"type": "integer",
			"name": "id"
		}],
		"returnType": "integer",
		"insertText": "DzSimpleTextureFindByName(name, id)",
		"documentation": "查找纹理"
	},
	"DzGetGameUI": {
		"original": "\tnative DzGetGameUI takes nothing returns integer",
		"fileName": "DzAPI.j",
		"name": "DzGetGameUI",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "DzGetGameUI()",
		"documentation": "获取游戏用户界面"
	},
	"DzClickFrame": {
		"original": "\tnative DzClickFrame takes integer frame returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzClickFrame",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}],
		"insertText": "DzClickFrame(frame)",
		"documentation": "点击窗体"
	},
	"DzSetCustomFovFix": {
		"original": "\tnative DzSetCustomFovFix takes real value returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzSetCustomFovFix",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "value"
		}],
		"insertText": "DzSetCustomFovFix(value)",
		"documentation": "自定义屏幕比例"
	},
	"DzEnableWideScreen": {
		"original": "\tnative DzEnableWideScreen takes boolean enable returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzEnableWideScreen",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "enable"
		}],
		"insertText": "DzEnableWideScreen(enable)",
		"documentation": "使用宽屏模式"
	},
	"DzFrameSetText": {
		"original": "\tnative DzFrameSetText takes integer frame, string text returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameSetText",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}, {
			"type": "string",
			"name": "text"
		}],
		"insertText": "DzFrameSetText(frame, text)",
		"documentation": "设置文字（支持EditBox, TextFrame, TextArea, SimpleFontString、GlueEditBoxWar3、SlashChatBox、TimerTextFrame、TextButtonFrame、GlueTextButton）"
	},
	"DzFrameGetText": {
		"original": "\tnative DzFrameGetText takes integer frame returns string",
		"fileName": "DzAPI.j",
		"name": "DzFrameGetText",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}],
		"returnType": "string",
		"insertText": "DzFrameGetText(frame)",
		"documentation": "获取文字（支持EditBox, TextFrame, TextArea, SimpleFontString）"
	},
	"DzFrameSetTextSizeLimit": {
		"original": "\tnative DzFrameSetTextSizeLimit takes integer frame, integer size returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameSetTextSizeLimit",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}, {
			"type": "integer",
			"name": "size"
		}],
		"insertText": "DzFrameSetTextSizeLimit(frame, size)",
		"documentation": "设置字数限制（支持EditBox）"
	},
	"DzFrameGetTextSizeLimit": {
		"original": "\tnative DzFrameGetTextSizeLimit takes integer frame returns integer",
		"fileName": "DzAPI.j",
		"name": "DzFrameGetTextSizeLimit",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}],
		"returnType": "integer",
		"insertText": "DzFrameGetTextSizeLimit(frame)",
		"documentation": "获取字数限制（支持EditBox）"
	},
	"DzFrameSetTextColor": {
		"original": "\tnative DzFrameSetTextColor takes integer frame, integer color returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameSetTextColor",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}, {
			"type": "integer",
			"name": "color"
		}],
		"insertText": "DzFrameSetTextColor(frame, color)",
		"documentation": "设置文字颜色（支持TextFrame, EditBox）"
	},
	"DzGetMouseFocus": {
		"original": "\tnative DzGetMouseFocus takes nothing returns integer",
		"fileName": "DzAPI.j",
		"name": "DzGetMouseFocus",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "DzGetMouseFocus()",
		"documentation": "获取鼠标所在位置的用户界面控件指针"
	},
	"DzFrameSetAllPoints": {
		"original": "\tnative DzFrameSetAllPoints takes integer frame, integer relativeFrame returns boolean",
		"fileName": "DzAPI.j",
		"name": "DzFrameSetAllPoints",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}, {
			"type": "integer",
			"name": "relativeFrame"
		}],
		"returnType": "boolean",
		"insertText": "DzFrameSetAllPoints(frame, relativeFrame)",
		"documentation": "设置所有锚点到目标窗体上"
	},
	"DzFrameSetFocus": {
		"original": "\tnative DzFrameSetFocus takes integer frame, boolean enable returns boolean",
		"fileName": "DzAPI.j",
		"name": "DzFrameSetFocus",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}, {
			"type": "boolean",
			"name": "enable"
		}],
		"returnType": "boolean",
		"insertText": "DzFrameSetFocus(frame, enable)",
		"documentation": "设置焦点"
	},
	"DzFrameSetModel": {
		"original": "\tnative DzFrameSetModel takes integer frame, string modelFile, integer modelType, integer flag returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameSetModel",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}, {
			"type": "string",
			"name": "modelFile"
		}, {
			"type": "integer",
			"name": "modelType"
		}, {
			"type": "integer",
			"name": "flag"
		}],
		"insertText": "DzFrameSetModel(frame, modelFile, modelType, flag)",
		"documentation": "设置模型（支持Sprite、Model、StatusBar）"
	},
	"DzFrameGetEnable": {
		"original": "\tnative DzFrameGetEnable takes integer frame returns boolean",
		"fileName": "DzAPI.j",
		"name": "DzFrameGetEnable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}],
		"returnType": "boolean",
		"insertText": "DzFrameGetEnable(frame)",
		"documentation": "获取控件是否启用"
	},
	"DzFrameSetAlpha": {
		"original": "\tnative DzFrameSetAlpha takes integer frame, integer alpha returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameSetAlpha",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}, {
			"type": "integer",
			"name": "alpha"
		}],
		"insertText": "DzFrameSetAlpha(frame, alpha)",
		"documentation": "设置透明度（0-255）"
	},
	"DzFrameGetAlpha": {
		"original": "\tnative DzFrameGetAlpha takes integer frame returns integer",
		"fileName": "DzAPI.j",
		"name": "DzFrameGetAlpha",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}],
		"returnType": "integer",
		"insertText": "DzFrameGetAlpha(frame)",
		"documentation": "获取透明度（0-255）"
	},
	"DzFrameSetAnimate": {
		"original": "\tnative DzFrameSetAnimate takes integer frame, integer animId, boolean autocast returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameSetAnimate",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}, {
			"type": "integer",
			"name": "animId"
		}, {
			"type": "boolean",
			"name": "autocast"
		}],
		"insertText": "DzFrameSetAnimate(frame, animId, autocast)",
		"documentation": "设置动画"
	},
	"DzFrameSetAnimateOffset": {
		"original": "\tnative DzFrameSetAnimateOffset takes integer frame, real offset returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameSetAnimateOffset",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}, {
			"type": "real",
			"name": "offset"
		}],
		"insertText": "DzFrameSetAnimateOffset(frame, offset)",
		"documentation": "设置动画进度（autocast为false是可用）"
	},
	"DzFrameSetTexture": {
		"original": "\tnative DzFrameSetTexture takes integer frame, string texture, integer flag returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameSetTexture",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}, {
			"type": "string",
			"name": "texture"
		}, {
			"type": "integer",
			"name": "flag"
		}],
		"insertText": "DzFrameSetTexture(frame, texture, flag)",
		"documentation": "设置texture（支持Backdrop、SimpleStatusBar）"
	},
	"DzFrameSetScale": {
		"original": "\tnative DzFrameSetScale takes integer frame, real scale returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameSetScale",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}, {
			"type": "real",
			"name": "scale"
		}],
		"insertText": "DzFrameSetScale(frame, scale)",
		"documentation": "设置缩放"
	},
	"DzFrameSetTooltip": {
		"original": "\tnative DzFrameSetTooltip takes integer frame, integer tooltip returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameSetTooltip",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}, {
			"type": "integer",
			"name": "tooltip"
		}],
		"insertText": "DzFrameSetTooltip(frame, tooltip)",
		"documentation": "设置提示"
	},
	"DzFrameCageMouse": {
		"original": "\tnative DzFrameCageMouse takes integer frame, boolean enable returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameCageMouse",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}, {
			"type": "boolean",
			"name": "enable"
		}],
		"insertText": "DzFrameCageMouse(frame, enable)",
		"documentation": "鼠标限制在用户界面内"
	},
	"DzFrameGetValue": {
		"original": "\tnative DzFrameGetValue takes integer frame returns real",
		"fileName": "DzAPI.j",
		"name": "DzFrameGetValue",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}],
		"returnType": "real",
		"insertText": "DzFrameGetValue(frame)",
		"documentation": "获取当前值（支持Slider、SimpleStatusBar、StatusBar）"
	},
	"DzFrameSetMinMaxValue": {
		"original": "\tnative DzFrameSetMinMaxValue takes integer frame, real minValue, real maxValue returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameSetMinMaxValue",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}, {
			"type": "real",
			"name": "minValue"
		}, {
			"type": "real",
			"name": "maxValue"
		}],
		"insertText": "DzFrameSetMinMaxValue(frame, minValue, maxValue)",
		"documentation": "设置最大最小值（支持Slider、SimpleStatusBar、StatusBar）"
	},
	"DzFrameSetStepValue": {
		"original": "\tnative DzFrameSetStepValue takes integer frame, real step returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameSetStepValue",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}, {
			"type": "real",
			"name": "step"
		}],
		"insertText": "DzFrameSetStepValue(frame, step)",
		"documentation": "设置Step值（支持Slider）"
	},
	"DzFrameSetValue": {
		"original": "\tnative DzFrameSetValue takes integer frame, real value returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameSetValue",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}, {
			"type": "real",
			"name": "value"
		}],
		"insertText": "DzFrameSetValue(frame, value)",
		"documentation": "设置当前值（支持Slider、SimpleStatusBar、StatusBar）"
	},
	"DzFrameSetSize": {
		"original": "\tnative DzFrameSetSize takes integer frame, real w, real h returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameSetSize",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}, {
			"type": "real",
			"name": "w"
		}, {
			"type": "real",
			"name": "h"
		}],
		"insertText": "DzFrameSetSize(frame, w, h)",
		"documentation": "设置窗体大小"
	},
	"DzCreateFrameByTagName": {
		"original": "\tnative DzCreateFrameByTagName takes string frameType, string name, integer parent, string template, integer id returns integer",
		"fileName": "DzAPI.j",
		"name": "DzCreateFrameByTagName",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "frameType"
		}, {
			"type": "string",
			"name": "name"
		}, {
			"type": "integer",
			"name": "parent"
		}, {
			"type": "string",
			"name": "template"
		}, {
			"type": "integer",
			"name": "id"
		}],
		"returnType": "integer",
		"insertText": "DzCreateFrameByTagName(frameType, name, parent, template, id)",
		"documentation": "根据tag创建窗体"
	},
	"DzFrameSetVertexColor": {
		"original": "\tnative DzFrameSetVertexColor takes integer frame, integer color returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameSetVertexColor",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}, {
			"type": "integer",
			"name": "color"
		}],
		"insertText": "DzFrameSetVertexColor(frame, color)",
		"documentation": "设置颜色（支持SimpleStatusBar）"
	},
	"DzOriginalUIAutoResetPoint": {
		"original": "\tnative DzOriginalUIAutoResetPoint takes boolean enable returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzOriginalUIAutoResetPoint",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "enable"
		}],
		"insertText": "DzOriginalUIAutoResetPoint(enable)",
		"documentation": ""
	},
	"DzFrameSetPriority": {
		"original": "\tnative DzFrameSetPriority takes integer frame, integer priority returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameSetPriority",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}, {
			"type": "integer",
			"name": "priority"
		}],
		"insertText": "DzFrameSetPriority(frame, priority)",
		"documentation": ""
	},
	"DzFrameSetParent": {
		"original": "\tnative DzFrameSetParent takes integer frame, integer parent returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameSetParent",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}, {
			"type": "integer",
			"name": "parent"
		}],
		"insertText": "DzFrameSetParent(frame, parent)",
		"documentation": ""
	},
	"DzFrameSetFont": {
		"original": "\tnative DzFrameSetFont takes integer frame, string fileName, real height, integer flag returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameSetFont",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}, {
			"type": "string",
			"name": "fileName"
		}, {
			"type": "real",
			"name": "height"
		}, {
			"type": "integer",
			"name": "flag"
		}],
		"insertText": "DzFrameSetFont(frame, fileName, height, flag)",
		"documentation": ""
	},
	"DzFrameGetHeight": {
		"original": "\tnative DzFrameGetHeight takes integer frame returns real",
		"fileName": "DzAPI.j",
		"name": "DzFrameGetHeight",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}],
		"returnType": "real",
		"insertText": "DzFrameGetHeight(frame)",
		"documentation": ""
	},
	"DzFrameSetTextAlignment": {
		"original": "\tnative DzFrameSetTextAlignment takes integer frame, integer align returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzFrameSetTextAlignment",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}, {
			"type": "integer",
			"name": "align"
		}],
		"insertText": "DzFrameSetTextAlignment(frame, align)",
		"documentation": ""
	},
	"DzFrameGetParent": {
		"original": "\tnative DzFrameGetParent takes integer frame returns integer",
		"fileName": "DzAPI.j",
		"name": "DzFrameGetParent",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "frame"
		}],
		"returnType": "integer",
		"insertText": "DzFrameGetParent(frame)",
		"documentation": ""
	},
	"YDWEChangeElevatorWallBlockerNull": {
		"original": "function YDWEChangeElevatorWallBlockerNull takes real x, real y, real facing, boolean open returns nothing",
		"fileName": "ChangeElevatorWallBlocker.j",
		"name": "YDWEChangeElevatorWallBlockerNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "facing"
		}, {
			"type": "boolean",
			"name": "open"
		}],
		"insertText": "YDWEChangeElevatorWallBlockerNull(x, y, facing, open)",
		"documentation": ""
	},
	"YDWEChangeElevatorWallsNull": {
		"original": "function YDWEChangeElevatorWallsNull takes boolean open, integer walls, destructable d returns nothing",
		"fileName": "ChangeElevatorWalls.j",
		"name": "YDWEChangeElevatorWallsNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "open"
		}, {
			"type": "integer",
			"name": "walls"
		}, {
			"type": "destructable",
			"name": "d"
		}],
		"insertText": "YDWEChangeElevatorWallsNull(open, walls, d)",
		"documentation": ""
	},
	"DebugS": {
		"original": "native DebugS               takes string str                            returns nothing",
		"fileName": "common.ai",
		"name": "DebugS",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "str"
		}],
		"insertText": "DebugS(str)",
		"documentation": ""
	},
	"DebugFI": {
		"original": "native DebugFI              takes string str, integer val               returns nothing",
		"fileName": "common.ai",
		"name": "DebugFI",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "str"
		}, {
			"type": "integer",
			"name": "val"
		}],
		"insertText": "DebugFI(str, val)",
		"documentation": ""
	},
	"DebugUnitID": {
		"original": "native DebugUnitID          takes string str, integer val               returns nothing",
		"fileName": "common.ai",
		"name": "DebugUnitID",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "str"
		}, {
			"type": "integer",
			"name": "val"
		}],
		"insertText": "DebugUnitID(str, val)",
		"documentation": ""
	},
	"DisplayText": {
		"original": "native DisplayText          takes integer p, string str                 returns nothing",
		"fileName": "common.ai",
		"name": "DisplayText",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "p"
		}, {
			"type": "string",
			"name": "str"
		}],
		"insertText": "DisplayText(p, str)",
		"documentation": ""
	},
	"DisplayTextI": {
		"original": "native DisplayTextI         takes integer p, string str, integer val    returns nothing",
		"fileName": "common.ai",
		"name": "DisplayTextI",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "p"
		}, {
			"type": "string",
			"name": "str"
		}, {
			"type": "integer",
			"name": "val"
		}],
		"insertText": "DisplayTextI(p, str, val)",
		"documentation": ""
	},
	"DisplayTextII": {
		"original": "native DisplayTextII        takes integer p, string str, integer v1, integer v2 returns nothing",
		"fileName": "common.ai",
		"name": "DisplayTextII",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "p"
		}, {
			"type": "string",
			"name": "str"
		}, {
			"type": "integer",
			"name": "v1"
		}, {
			"type": "integer",
			"name": "v2"
		}],
		"insertText": "DisplayTextII(p, str, v1, v2)",
		"documentation": ""
	},
	"DisplayTextIII": {
		"original": "native DisplayTextIII       takes integer p, string str, integer v1, integer v2, integer v3 returns nothing",
		"fileName": "common.ai",
		"name": "DisplayTextIII",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "p"
		}, {
			"type": "string",
			"name": "str"
		}, {
			"type": "integer",
			"name": "v1"
		}, {
			"type": "integer",
			"name": "v2"
		}, {
			"type": "integer",
			"name": "v3"
		}],
		"insertText": "DisplayTextIII(p, str, v1, v2, v3)",
		"documentation": ""
	},
	"DoAiScriptDebug": {
		"original": "native DoAiScriptDebug      takes nothing                               returns boolean",
		"fileName": "common.ai",
		"name": "DoAiScriptDebug",
		"isConstant": false,
		"isNative": true,
		"returnType": "boolean",
		"insertText": "DoAiScriptDebug()",
		"documentation": ""
	},
	"GetAiPlayer": {
		"original": "native GetAiPlayer          takes nothing                               returns integer",
		"fileName": "common.ai",
		"name": "GetAiPlayer",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "GetAiPlayer()",
		"documentation": ""
	},
	"GetHeroId": {
		"original": "native GetHeroId            takes nothing                               returns integer",
		"fileName": "common.ai",
		"name": "GetHeroId",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "GetHeroId()",
		"documentation": ""
	},
	"GetHeroLevelAI": {
		"original": "native GetHeroLevelAI       takes nothing                               returns integer",
		"fileName": "common.ai",
		"name": "GetHeroLevelAI",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "GetHeroLevelAI()",
		"documentation": ""
	},
	"GetUnitCount": {
		"original": "native GetUnitCount         takes integer unitid                        returns integer",
		"fileName": "common.ai",
		"name": "GetUnitCount",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "unitid"
		}],
		"returnType": "integer",
		"insertText": "GetUnitCount(unitid)",
		"documentation": "对应类型的单位数"
	},
	"GetPlayerUnitTypeCount": {
		"original": "native GetPlayerUnitTypeCount takes player p, integer unitid            returns integer",
		"fileName": "common.ai",
		"name": "GetPlayerUnitTypeCount",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "p"
		}, {
			"type": "integer",
			"name": "unitid"
		}],
		"returnType": "integer",
		"insertText": "GetPlayerUnitTypeCount(p, unitid)",
		"documentation": ""
	},
	"GetUnitCountDone": {
		"original": "native GetUnitCountDone takes integer unitid returns integer",
		"fileName": "YDWEAdvancedUnitDataSystem.j",
		"name": "GetUnitCountDone",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "unitid"
		}],
		"returnType": "integer",
		"insertText": "GetUnitCountDone(unitid)",
		"documentation": "对应类型的单位数 - 仅完成的"
	},
	"GetTownUnitCount": {
		"original": "native GetTownUnitCount     takes integer id, integer tn, boolean dn    returns integer",
		"fileName": "common.ai",
		"name": "GetTownUnitCount",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "id"
		}, {
			"type": "integer",
			"name": "tn"
		}, {
			"type": "boolean",
			"name": "dn"
		}],
		"returnType": "integer",
		"insertText": "GetTownUnitCount(id, tn, dn)",
		"documentation": "对应类型的单位数 - 按基地"
	},
	"GetUnitGoldCost": {
		"original": "native GetUnitGoldCost takes integer unitid returns integer",
		"fileName": "YDWEAdvancedUnitDataSystem.j",
		"name": "GetUnitGoldCost",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "unitid"
		}],
		"returnType": "integer",
		"insertText": "GetUnitGoldCost(unitid)",
		"documentation": "单位金钱消耗"
	},
	"GetUnitWoodCost": {
		"original": "native GetUnitWoodCost takes integer unitid returns integer",
		"fileName": "YDWEAdvancedUnitDataSystem.j",
		"name": "GetUnitWoodCost",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "unitid"
		}],
		"returnType": "integer",
		"insertText": "GetUnitWoodCost(unitid)",
		"documentation": "单位木材消耗"
	},
	"GetUnitBuildTime": {
		"original": "native GetUnitBuildTime takes integer unitid returns integer",
		"fileName": "YDWEAdvancedUnitDataSystem.j",
		"name": "GetUnitBuildTime",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "unitid"
		}],
		"returnType": "integer",
		"insertText": "GetUnitBuildTime(unitid)",
		"documentation": "单位建造事件"
	},
	"GetMinesOwned": {
		"original": "native GetMinesOwned        takes nothing                               returns integer",
		"fileName": "common.ai",
		"name": "GetMinesOwned",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "GetMinesOwned()",
		"documentation": "拥有的金矿数"
	},
	"GetGoldOwned": {
		"original": "native GetGoldOwned         takes nothing                               returns integer",
		"fileName": "common.ai",
		"name": "GetGoldOwned",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "GetGoldOwned()",
		"documentation": "拥有的金矿金钱数量"
	},
	"TownWithMine": {
		"original": "native TownWithMine         takes nothing                               returns integer",
		"fileName": "common.ai",
		"name": "TownWithMine",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "TownWithMine()",
		"documentation": "有金矿的基地"
	},
	"TownHasMine": {
		"original": "native TownHasMine          takes integer townid                        returns boolean",
		"fileName": "common.ai",
		"name": "TownHasMine",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "townid"
		}],
		"returnType": "boolean",
		"insertText": "TownHasMine(townid)",
		"documentation": "基地有金矿"
	},
	"TownHasHall": {
		"original": "native TownHasHall          takes integer townid                        returns boolean",
		"fileName": "common.ai",
		"name": "TownHasHall",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "townid"
		}],
		"returnType": "boolean",
		"insertText": "TownHasHall(townid)",
		"documentation": "基地有主城镇"
	},
	"GetUpgradeLevel": {
		"original": "native GetUpgradeLevel      takes integer id                            returns integer",
		"fileName": "common.ai",
		"name": "GetUpgradeLevel",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "id"
		}],
		"returnType": "integer",
		"insertText": "GetUpgradeLevel(id)",
		"documentation": "当前升级的等级"
	},
	"GetUpgradeGoldCost": {
		"original": "native GetUpgradeGoldCost   takes integer id                            returns integer",
		"fileName": "common.ai",
		"name": "GetUpgradeGoldCost",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "id"
		}],
		"returnType": "integer",
		"insertText": "GetUpgradeGoldCost(id)",
		"documentation": "升级金钱消耗"
	},
	"GetUpgradeWoodCost": {
		"original": "native GetUpgradeWoodCost   takes integer id                            returns integer",
		"fileName": "common.ai",
		"name": "GetUpgradeWoodCost",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "id"
		}],
		"returnType": "integer",
		"insertText": "GetUpgradeWoodCost(id)",
		"documentation": "升级木材消耗"
	},
	"GetNextExpansion": {
		"original": "native GetNextExpansion     takes nothing                               returns integer",
		"fileName": "common.ai",
		"name": "GetNextExpansion",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "GetNextExpansion()",
		"documentation": "下一个扩张基地"
	},
	"GetMegaTarget": {
		"original": "native GetMegaTarget        takes nothing                               returns unit",
		"fileName": "common.ai",
		"name": "GetMegaTarget",
		"isConstant": false,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetMegaTarget()",
		"documentation": ""
	},
	"GetBuilding": {
		"original": "native GetBuilding          takes player p                              returns unit",
		"fileName": "common.ai",
		"name": "GetBuilding",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "p"
		}],
		"returnType": "unit",
		"insertText": "GetBuilding(p)",
		"documentation": ""
	},
	"GetEnemyPower": {
		"original": "native GetEnemyPower        takes nothing                               returns integer",
		"fileName": "common.ai",
		"name": "GetEnemyPower",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "GetEnemyPower()",
		"documentation": ""
	},
	"SetAllianceTarget": {
		"original": "native SetAllianceTarget    takes unit id                               returns nothing",
		"fileName": "common.ai",
		"name": "SetAllianceTarget",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "id"
		}],
		"insertText": "SetAllianceTarget(id)",
		"documentation": ""
	},
	"GetAllianceTarget": {
		"original": "native GetAllianceTarget    takes nothing                               returns unit",
		"fileName": "common.ai",
		"name": "GetAllianceTarget",
		"isConstant": false,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetAllianceTarget()",
		"documentation": ""
	},
	"SetProduce": {
		"original": "native SetProduce           takes integer qty, integer id, integer town returns boolean",
		"fileName": "common.ai",
		"name": "SetProduce",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "qty"
		}, {
			"type": "integer",
			"name": "id"
		}, {
			"type": "integer",
			"name": "town"
		}],
		"returnType": "boolean",
		"insertText": "SetProduce(qty, id, town)",
		"documentation": ""
	},
	"Unsummon": {
		"original": "native Unsummon             takes unit unitid                           returns nothing",
		"fileName": "common.ai",
		"name": "Unsummon",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "unitid"
		}],
		"insertText": "Unsummon(unitid)",
		"documentation": ""
	},
	"SetExpansion": {
		"original": "native SetExpansion         takes unit peon, integer id                 returns boolean",
		"fileName": "common.ai",
		"name": "SetExpansion",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "peon"
		}, {
			"type": "integer",
			"name": "id"
		}],
		"returnType": "boolean",
		"insertText": "SetExpansion(peon, id)",
		"documentation": ""
	},
	"SetUpgrade": {
		"original": "native SetUpgrade           takes integer id                            returns boolean",
		"fileName": "common.ai",
		"name": "SetUpgrade",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "id"
		}],
		"returnType": "boolean",
		"insertText": "SetUpgrade(id)",
		"documentation": ""
	},
	"SetHeroLevels": {
		"original": "native SetHeroLevels        takes code func                             returns nothing",
		"fileName": "common.ai",
		"name": "SetHeroLevels",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "code",
			"name": "func"
		}],
		"insertText": "SetHeroLevels(func)",
		"documentation": ""
	},
	"SetNewHeroes": {
		"original": "native SetNewHeroes         takes boolean state                         returns nothing",
		"fileName": "common.ai",
		"name": "SetNewHeroes",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "state"
		}],
		"insertText": "SetNewHeroes(state)",
		"documentation": ""
	},
	"PurchaseZeppelin": {
		"original": "native PurchaseZeppelin     takes nothing                               returns nothing",
		"fileName": "common.ai",
		"name": "PurchaseZeppelin",
		"isConstant": false,
		"isNative": true,
		"insertText": "PurchaseZeppelin()",
		"documentation": ""
	},
	"MergeUnits": {
		"original": "native MergeUnits           takes integer qty, integer a, integer b, integer make returns boolean",
		"fileName": "common.ai",
		"name": "MergeUnits",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "qty"
		}, {
			"type": "integer",
			"name": "a"
		}, {
			"type": "integer",
			"name": "b"
		}, {
			"type": "integer",
			"name": "make"
		}],
		"returnType": "boolean",
		"insertText": "MergeUnits(qty, a, b, make)",
		"documentation": ""
	},
	"ConvertUnits": {
		"original": "native ConvertUnits         takes integer qty, integer id               returns boolean",
		"fileName": "common.ai",
		"name": "ConvertUnits",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "qty"
		}, {
			"type": "integer",
			"name": "id"
		}],
		"returnType": "boolean",
		"insertText": "ConvertUnits(qty, id)",
		"documentation": ""
	},
	"SetCampaignAI": {
		"original": "native SetCampaignAI        takes nothing                               returns nothing",
		"fileName": "common.ai",
		"name": "SetCampaignAI",
		"isConstant": false,
		"isNative": true,
		"insertText": "SetCampaignAI()",
		"documentation": ""
	},
	"SetMeleeAI": {
		"original": "native SetMeleeAI           takes nothing                               returns nothing",
		"fileName": "common.ai",
		"name": "SetMeleeAI",
		"isConstant": false,
		"isNative": true,
		"insertText": "SetMeleeAI()",
		"documentation": ""
	},
	"SetTargetHeroes": {
		"original": "native SetTargetHeroes      takes boolean state                         returns nothing",
		"fileName": "common.ai",
		"name": "SetTargetHeroes",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "state"
		}],
		"insertText": "SetTargetHeroes(state)",
		"documentation": ""
	},
	"SetPeonsRepair": {
		"original": "native SetPeonsRepair       takes boolean state                         returns nothing",
		"fileName": "common.ai",
		"name": "SetPeonsRepair",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "state"
		}],
		"insertText": "SetPeonsRepair(state)",
		"documentation": ""
	},
	"SetRandomPaths": {
		"original": "native SetRandomPaths       takes boolean state                         returns nothing",
		"fileName": "common.ai",
		"name": "SetRandomPaths",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "state"
		}],
		"insertText": "SetRandomPaths(state)",
		"documentation": ""
	},
	"SetDefendPlayer": {
		"original": "native SetDefendPlayer      takes boolean state                         returns nothing",
		"fileName": "common.ai",
		"name": "SetDefendPlayer",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "state"
		}],
		"insertText": "SetDefendPlayer(state)",
		"documentation": ""
	},
	"SetHeroesFlee": {
		"original": "native SetHeroesFlee        takes boolean state                         returns nothing",
		"fileName": "common.ai",
		"name": "SetHeroesFlee",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "state"
		}],
		"insertText": "SetHeroesFlee(state)",
		"documentation": ""
	},
	"SetHeroesBuyItems": {
		"original": "native SetHeroesBuyItems    takes boolean state                         returns nothing",
		"fileName": "common.ai",
		"name": "SetHeroesBuyItems",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "state"
		}],
		"insertText": "SetHeroesBuyItems(state)",
		"documentation": ""
	},
	"SetWatchMegaTargets": {
		"original": "native SetWatchMegaTargets  takes boolean state                         returns nothing",
		"fileName": "common.ai",
		"name": "SetWatchMegaTargets",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "state"
		}],
		"insertText": "SetWatchMegaTargets(state)",
		"documentation": ""
	},
	"SetIgnoreInjured": {
		"original": "native SetIgnoreInjured     takes boolean state                         returns nothing",
		"fileName": "common.ai",
		"name": "SetIgnoreInjured",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "state"
		}],
		"insertText": "SetIgnoreInjured(state)",
		"documentation": ""
	},
	"SetHeroesTakeItems": {
		"original": "native SetHeroesTakeItems   takes boolean state                         returns nothing",
		"fileName": "common.ai",
		"name": "SetHeroesTakeItems",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "state"
		}],
		"insertText": "SetHeroesTakeItems(state)",
		"documentation": ""
	},
	"SetUnitsFlee": {
		"original": "native SetUnitsFlee         takes boolean state                         returns nothing",
		"fileName": "common.ai",
		"name": "SetUnitsFlee",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "state"
		}],
		"insertText": "SetUnitsFlee(state)",
		"documentation": ""
	},
	"SetGroupsFlee": {
		"original": "native SetGroupsFlee        takes boolean state                         returns nothing",
		"fileName": "common.ai",
		"name": "SetGroupsFlee",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "state"
		}],
		"insertText": "SetGroupsFlee(state)",
		"documentation": ""
	},
	"SetSlowChopping": {
		"original": "native SetSlowChopping      takes boolean state                         returns nothing",
		"fileName": "common.ai",
		"name": "SetSlowChopping",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "state"
		}],
		"insertText": "SetSlowChopping(state)",
		"documentation": ""
	},
	"SetCaptainChanges": {
		"original": "native SetCaptainChanges    takes boolean allow                         returns nothing",
		"fileName": "common.ai",
		"name": "SetCaptainChanges",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "allow"
		}],
		"insertText": "SetCaptainChanges(allow)",
		"documentation": ""
	},
	"SetSmartArtillery": {
		"original": "native SetSmartArtillery    takes boolean state                         returns nothing",
		"fileName": "common.ai",
		"name": "SetSmartArtillery",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "state"
		}],
		"insertText": "SetSmartArtillery(state)",
		"documentation": ""
	},
	"SetReplacementCount": {
		"original": "native SetReplacementCount  takes integer qty                           returns nothing",
		"fileName": "common.ai",
		"name": "SetReplacementCount",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "qty"
		}],
		"insertText": "SetReplacementCount(qty)",
		"documentation": ""
	},
	"GroupTimedLife": {
		"original": "native GroupTimedLife       takes boolean allow                         returns nothing",
		"fileName": "common.ai",
		"name": "GroupTimedLife",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "allow"
		}],
		"insertText": "GroupTimedLife(allow)",
		"documentation": ""
	},
	"RemoveInjuries": {
		"original": "native RemoveInjuries       takes nothing                               returns nothing",
		"fileName": "common.ai",
		"name": "RemoveInjuries",
		"isConstant": false,
		"isNative": true,
		"insertText": "RemoveInjuries()",
		"documentation": ""
	},
	"RemoveSiege": {
		"original": "native RemoveSiege          takes nothing                               returns nothing",
		"fileName": "common.ai",
		"name": "RemoveSiege",
		"isConstant": false,
		"isNative": true,
		"insertText": "RemoveSiege()",
		"documentation": ""
	},
	"InitAssault": {
		"original": "native InitAssault          takes nothing                               returns nothing",
		"fileName": "common.ai",
		"name": "InitAssault",
		"isConstant": false,
		"isNative": true,
		"insertText": "InitAssault()",
		"documentation": ""
	},
	"AddAssault": {
		"original": "native AddAssault           takes integer qty, integer id               returns boolean",
		"fileName": "common.ai",
		"name": "AddAssault",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "qty"
		}, {
			"type": "integer",
			"name": "id"
		}],
		"returnType": "boolean",
		"insertText": "AddAssault(qty, id)",
		"documentation": ""
	},
	"AddDefenders": {
		"original": "native AddDefenders         takes integer qty, integer id               returns boolean",
		"fileName": "common.ai",
		"name": "AddDefenders",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "qty"
		}, {
			"type": "integer",
			"name": "id"
		}],
		"returnType": "boolean",
		"insertText": "AddDefenders(qty, id)",
		"documentation": ""
	},
	"GetCreepCamp": {
		"original": "native GetCreepCamp         takes integer min, integer max, boolean flyers_ok returns unit",
		"fileName": "common.ai",
		"name": "GetCreepCamp",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "min"
		}, {
			"type": "integer",
			"name": "max"
		}, {
			"type": "boolean",
			"name": "flyers_ok"
		}],
		"returnType": "unit",
		"insertText": "GetCreepCamp(min, max, flyers_ok)",
		"documentation": ""
	},
	"StartGetEnemyBase": {
		"original": "native StartGetEnemyBase    takes nothing                               returns nothing",
		"fileName": "common.ai",
		"name": "StartGetEnemyBase",
		"isConstant": false,
		"isNative": true,
		"insertText": "StartGetEnemyBase()",
		"documentation": ""
	},
	"WaitGetEnemyBase": {
		"original": "native WaitGetEnemyBase     takes nothing                               returns boolean",
		"fileName": "common.ai",
		"name": "WaitGetEnemyBase",
		"isConstant": false,
		"isNative": true,
		"returnType": "boolean",
		"insertText": "WaitGetEnemyBase()",
		"documentation": ""
	},
	"GetEnemyBase": {
		"original": "native GetEnemyBase         takes nothing                               returns unit",
		"fileName": "common.ai",
		"name": "GetEnemyBase",
		"isConstant": false,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetEnemyBase()",
		"documentation": ""
	},
	"GetExpansionFoe": {
		"original": "native GetExpansionFoe      takes nothing                               returns unit",
		"fileName": "common.ai",
		"name": "GetExpansionFoe",
		"isConstant": false,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetExpansionFoe()",
		"documentation": ""
	},
	"GetEnemyExpansion": {
		"original": "native GetEnemyExpansion    takes nothing                               returns unit",
		"fileName": "common.ai",
		"name": "GetEnemyExpansion",
		"isConstant": false,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetEnemyExpansion()",
		"documentation": ""
	},
	"GetExpansionX": {
		"original": "native GetExpansionX        takes nothing                               returns integer",
		"fileName": "common.ai",
		"name": "GetExpansionX",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "GetExpansionX()",
		"documentation": ""
	},
	"GetExpansionY": {
		"original": "native GetExpansionY        takes nothing                               returns integer",
		"fileName": "common.ai",
		"name": "GetExpansionY",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "GetExpansionY()",
		"documentation": ""
	},
	"SetStagePoint": {
		"original": "native SetStagePoint        takes real x, real y                        returns nothing",
		"fileName": "common.ai",
		"name": "SetStagePoint",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"insertText": "SetStagePoint(x, y)",
		"documentation": ""
	},
	"AttackMoveKill": {
		"original": "native AttackMoveKill       takes unit target                           returns nothing",
		"fileName": "common.ai",
		"name": "AttackMoveKill",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "target"
		}],
		"insertText": "AttackMoveKill(target)",
		"documentation": ""
	},
	"AttackMoveXY": {
		"original": "native AttackMoveXY         takes integer x, integer y                  returns nothing",
		"fileName": "common.ai",
		"name": "AttackMoveXY",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "x"
		}, {
			"type": "integer",
			"name": "y"
		}],
		"insertText": "AttackMoveXY(x, y)",
		"documentation": ""
	},
	"LoadZepWave": {
		"original": "native LoadZepWave          takes integer x, integer y                  returns nothing",
		"fileName": "common.ai",
		"name": "LoadZepWave",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "x"
		}, {
			"type": "integer",
			"name": "y"
		}],
		"insertText": "LoadZepWave(x, y)",
		"documentation": ""
	},
	"SuicidePlayer": {
		"original": "native SuicidePlayer        takes player id, boolean check_full         returns boolean",
		"fileName": "common.ai",
		"name": "SuicidePlayer",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "id"
		}, {
			"type": "boolean",
			"name": "check_full"
		}],
		"returnType": "boolean",
		"insertText": "SuicidePlayer(id, check_full)",
		"documentation": ""
	},
	"SuicidePlayerUnits": {
		"original": "native SuicidePlayerUnits   takes player id, boolean check_full         returns boolean",
		"fileName": "common.ai",
		"name": "SuicidePlayerUnits",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "id"
		}, {
			"type": "boolean",
			"name": "check_full"
		}],
		"returnType": "boolean",
		"insertText": "SuicidePlayerUnits(id, check_full)",
		"documentation": ""
	},
	"CaptainInCombat": {
		"original": "native CaptainInCombat      takes boolean attack_captain                returns boolean",
		"fileName": "common.ai",
		"name": "CaptainInCombat",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "attack_captain"
		}],
		"returnType": "boolean",
		"insertText": "CaptainInCombat(attack_captain)",
		"documentation": "进攻统帅在战斗"
	},
	"IsTowered": {
		"original": "native IsTowered            takes unit target                           returns boolean",
		"fileName": "common.ai",
		"name": "IsTowered",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "target"
		}],
		"returnType": "boolean",
		"insertText": "IsTowered(target)",
		"documentation": ""
	},
	"ClearHarvestAI": {
		"original": "native ClearHarvestAI       takes nothing                               returns nothing",
		"fileName": "common.ai",
		"name": "ClearHarvestAI",
		"isConstant": false,
		"isNative": true,
		"insertText": "ClearHarvestAI()",
		"documentation": ""
	},
	"HarvestGold": {
		"original": "native HarvestGold          takes integer town, integer peons           returns nothing",
		"fileName": "common.ai",
		"name": "HarvestGold",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "town"
		}, {
			"type": "integer",
			"name": "peons"
		}],
		"insertText": "HarvestGold(town, peons)",
		"documentation": ""
	},
	"HarvestWood": {
		"original": "native HarvestWood          takes integer town, integer peons           returns nothing",
		"fileName": "common.ai",
		"name": "HarvestWood",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "town"
		}, {
			"type": "integer",
			"name": "peons"
		}],
		"insertText": "HarvestWood(town, peons)",
		"documentation": ""
	},
	"GetExpansionPeon": {
		"original": "native GetExpansionPeon     takes nothing                               returns unit",
		"fileName": "common.ai",
		"name": "GetExpansionPeon",
		"isConstant": false,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetExpansionPeon()",
		"documentation": ""
	},
	"StopGathering": {
		"original": "native StopGathering        takes nothing                               returns nothing",
		"fileName": "common.ai",
		"name": "StopGathering",
		"isConstant": false,
		"isNative": true,
		"insertText": "StopGathering()",
		"documentation": ""
	},
	"AddGuardPost": {
		"original": "native AddGuardPost         takes integer id, real x, real y            returns nothing",
		"fileName": "common.ai",
		"name": "AddGuardPost",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "id"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"insertText": "AddGuardPost(id, x, y)",
		"documentation": ""
	},
	"FillGuardPosts": {
		"original": "native FillGuardPosts       takes nothing                               returns nothing",
		"fileName": "common.ai",
		"name": "FillGuardPosts",
		"isConstant": false,
		"isNative": true,
		"insertText": "FillGuardPosts()",
		"documentation": ""
	},
	"ReturnGuardPosts": {
		"original": "native ReturnGuardPosts     takes nothing                               returns nothing",
		"fileName": "common.ai",
		"name": "ReturnGuardPosts",
		"isConstant": false,
		"isNative": true,
		"insertText": "ReturnGuardPosts()",
		"documentation": ""
	},
	"CreateCaptains": {
		"original": "native CreateCaptains       takes nothing                               returns nothing",
		"fileName": "common.ai",
		"name": "CreateCaptains",
		"isConstant": false,
		"isNative": true,
		"insertText": "CreateCaptains()",
		"documentation": ""
	},
	"SetCaptainHome": {
		"original": "native SetCaptainHome       takes integer which, real x, real y         returns nothing",
		"fileName": "common.ai",
		"name": "SetCaptainHome",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "which"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"insertText": "SetCaptainHome(which, x, y)",
		"documentation": ""
	},
	"ResetCaptainLocs": {
		"original": "native ResetCaptainLocs     takes nothing                               returns nothing",
		"fileName": "common.ai",
		"name": "ResetCaptainLocs",
		"isConstant": false,
		"isNative": true,
		"insertText": "ResetCaptainLocs()",
		"documentation": ""
	},
	"ShiftTownSpot": {
		"original": "native ShiftTownSpot        takes real x, real y                        returns nothing",
		"fileName": "common.ai",
		"name": "ShiftTownSpot",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"insertText": "ShiftTownSpot(x, y)",
		"documentation": ""
	},
	"TeleportCaptain": {
		"original": "native TeleportCaptain      takes real x, real y                        returns nothing",
		"fileName": "common.ai",
		"name": "TeleportCaptain",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"insertText": "TeleportCaptain(x, y)",
		"documentation": ""
	},
	"ClearCaptainTargets": {
		"original": "native ClearCaptainTargets  takes nothing                               returns nothing",
		"fileName": "common.ai",
		"name": "ClearCaptainTargets",
		"isConstant": false,
		"isNative": true,
		"insertText": "ClearCaptainTargets()",
		"documentation": ""
	},
	"CaptainAttack": {
		"original": "native CaptainAttack        takes real x, real y                        returns nothing",
		"fileName": "common.ai",
		"name": "CaptainAttack",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"insertText": "CaptainAttack(x, y)",
		"documentation": ""
	},
	"CaptainVsUnits": {
		"original": "native CaptainVsUnits       takes player id                             returns nothing",
		"fileName": "common.ai",
		"name": "CaptainVsUnits",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "id"
		}],
		"insertText": "CaptainVsUnits(id)",
		"documentation": ""
	},
	"CaptainVsPlayer": {
		"original": "native CaptainVsPlayer      takes player id                             returns nothing",
		"fileName": "common.ai",
		"name": "CaptainVsPlayer",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "id"
		}],
		"insertText": "CaptainVsPlayer(id)",
		"documentation": ""
	},
	"CaptainGoHome": {
		"original": "native CaptainGoHome        takes nothing                               returns nothing",
		"fileName": "common.ai",
		"name": "CaptainGoHome",
		"isConstant": false,
		"isNative": true,
		"insertText": "CaptainGoHome()",
		"documentation": ""
	},
	"CaptainIsHome": {
		"original": "native CaptainIsHome        takes nothing                               returns boolean",
		"fileName": "common.ai",
		"name": "CaptainIsHome",
		"isConstant": false,
		"isNative": true,
		"returnType": "boolean",
		"insertText": "CaptainIsHome()",
		"documentation": "进攻统帅在家"
	},
	"CaptainIsFull": {
		"original": "native CaptainIsFull        takes nothing                               returns boolean",
		"fileName": "common.ai",
		"name": "CaptainIsFull",
		"isConstant": false,
		"isNative": true,
		"returnType": "boolean",
		"insertText": "CaptainIsFull()",
		"documentation": "进攻组队完整"
	},
	"CaptainIsEmpty": {
		"original": "native CaptainIsEmpty       takes nothing                               returns boolean",
		"fileName": "common.ai",
		"name": "CaptainIsEmpty",
		"isConstant": false,
		"isNative": true,
		"returnType": "boolean",
		"insertText": "CaptainIsEmpty()",
		"documentation": "进攻组队为空"
	},
	"CaptainGroupSize": {
		"original": "native CaptainGroupSize     takes nothing                               returns integer",
		"fileName": "common.ai",
		"name": "CaptainGroupSize",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "CaptainGroupSize()",
		"documentation": "进攻组队规模"
	},
	"CaptainReadiness": {
		"original": "native CaptainReadiness     takes nothing                               returns integer",
		"fileName": "common.ai",
		"name": "CaptainReadiness",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "CaptainReadiness()",
		"documentation": ""
	},
	"CaptainRetreating": {
		"original": "native CaptainRetreating    takes nothing                               returns boolean",
		"fileName": "common.ai",
		"name": "CaptainRetreating",
		"isConstant": false,
		"isNative": true,
		"returnType": "boolean",
		"insertText": "CaptainRetreating()",
		"documentation": "进攻统帅在撤退"
	},
	"CaptainReadinessHP": {
		"original": "native CaptainReadinessHP   takes nothing                               returns integer",
		"fileName": "common.ai",
		"name": "CaptainReadinessHP",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "CaptainReadinessHP()",
		"documentation": "进攻组队健康程度"
	},
	"CaptainReadinessMa": {
		"original": "native CaptainReadinessMa   takes nothing                               returns integer",
		"fileName": "common.ai",
		"name": "CaptainReadinessMa",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "CaptainReadinessMa()",
		"documentation": "进攻组队魔法程度"
	},
	"CaptainAtGoal": {
		"original": "native CaptainAtGoal        takes nothing                               returns boolean",
		"fileName": "common.ai",
		"name": "CaptainAtGoal",
		"isConstant": false,
		"isNative": true,
		"returnType": "boolean",
		"insertText": "CaptainAtGoal()",
		"documentation": "进攻统帅到达目标"
	},
	"CreepsOnMap": {
		"original": "native CreepsOnMap          takes nothing                               returns boolean",
		"fileName": "common.ai",
		"name": "CreepsOnMap",
		"isConstant": false,
		"isNative": true,
		"returnType": "boolean",
		"insertText": "CreepsOnMap()",
		"documentation": "地图上还有野外生物"
	},
	"SuicideUnit": {
		"original": "native SuicideUnit          takes integer count, integer unitid         returns nothing",
		"fileName": "common.ai",
		"name": "SuicideUnit",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "count"
		}, {
			"type": "integer",
			"name": "unitid"
		}],
		"insertText": "SuicideUnit(count, unitid)",
		"documentation": ""
	},
	"SuicideUnitEx": {
		"original": "native SuicideUnitEx        takes integer ct, integer uid, integer pid  returns nothing",
		"fileName": "common.ai",
		"name": "SuicideUnitEx",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "ct"
		}, {
			"type": "integer",
			"name": "uid"
		}, {
			"type": "integer",
			"name": "pid"
		}],
		"insertText": "SuicideUnitEx(ct, uid, pid)",
		"documentation": ""
	},
	"StartThread": {
		"original": "native StartThread          takes code func                             returns nothing",
		"fileName": "common.ai",
		"name": "StartThread",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "code",
			"name": "func"
		}],
		"insertText": "StartThread(func)",
		"documentation": ""
	},
	"Sleep": {
		"original": "native Sleep                takes real seconds                          returns nothing",
		"fileName": "common.ai",
		"name": "Sleep",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "seconds"
		}],
		"insertText": "Sleep(seconds)",
		"documentation": ""
	},
	"UnitAlive": {
		"original": "native UnitAlive            takes unit id                               returns boolean",
		"fileName": "common.ai",
		"name": "UnitAlive",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "id"
		}],
		"returnType": "boolean",
		"insertText": "UnitAlive(id)",
		"documentation": ""
	},
	"UnitInvis": {
		"original": "native UnitInvis            takes unit id                               returns boolean",
		"fileName": "common.ai",
		"name": "UnitInvis",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "id"
		}],
		"returnType": "boolean",
		"insertText": "UnitInvis(id)",
		"documentation": ""
	},
	"IgnoredUnits": {
		"original": "native IgnoredUnits         takes integer unitid                        returns integer",
		"fileName": "common.ai",
		"name": "IgnoredUnits",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "unitid"
		}],
		"returnType": "integer",
		"insertText": "IgnoredUnits(unitid)",
		"documentation": ""
	},
	"TownThreatened": {
		"original": "native TownThreatened       takes nothing                               returns boolean",
		"fileName": "common.ai",
		"name": "TownThreatened",
		"isConstant": false,
		"isNative": true,
		"returnType": "boolean",
		"insertText": "TownThreatened()",
		"documentation": "基地被攻击"
	},
	"DisablePathing": {
		"original": "native DisablePathing       takes nothing                               returns nothing",
		"fileName": "common.ai",
		"name": "DisablePathing",
		"isConstant": false,
		"isNative": true,
		"insertText": "DisablePathing()",
		"documentation": ""
	},
	"SetAmphibious": {
		"original": "native SetAmphibious        takes nothing                               returns nothing",
		"fileName": "common.ai",
		"name": "SetAmphibious",
		"isConstant": false,
		"isNative": true,
		"insertText": "SetAmphibious()",
		"documentation": ""
	},
	"CommandsWaiting": {
		"original": "native CommandsWaiting      takes nothing                               returns integer",
		"fileName": "common.ai",
		"name": "CommandsWaiting",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "CommandsWaiting()",
		"documentation": "等待中指令数"
	},
	"GetLastCommand": {
		"original": "native GetLastCommand       takes nothing                               returns integer",
		"fileName": "common.ai",
		"name": "GetLastCommand",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "GetLastCommand()",
		"documentation": ""
	},
	"GetLastData": {
		"original": "native GetLastData          takes nothing                               returns integer",
		"fileName": "common.ai",
		"name": "GetLastData",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "GetLastData()",
		"documentation": ""
	},
	"PopLastCommand": {
		"original": "native PopLastCommand       takes nothing                               returns nothing",
		"fileName": "common.ai",
		"name": "PopLastCommand",
		"isConstant": false,
		"isNative": true,
		"insertText": "PopLastCommand()",
		"documentation": ""
	},
	"MeleeDifficulty": {
		"original": "native MeleeDifficulty      takes nothing                               returns integer",
		"fileName": "common.ai",
		"name": "MeleeDifficulty",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "MeleeDifficulty()",
		"documentation": "对战难度"
	},
	"PlayerEx": {
		"original": "function PlayerEx takes integer slot returns player",
		"fileName": "common.ai",
		"name": "PlayerEx",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "slot"
		}],
		"returnType": "player",
		"insertText": "PlayerEx(slot)",
		"documentation": ""
	},
	"Trace": {
		"original": "function Trace takes string message returns nothing",
		"fileName": "common.ai",
		"name": "Trace",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "message"
		}],
		"insertText": "Trace(message)",
		"documentation": ""
	},
	"TraceI": {
		"original": "function TraceI takes string message, integer val returns nothing",
		"fileName": "common.ai",
		"name": "TraceI",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "message"
		}, {
			"type": "integer",
			"name": "val"
		}],
		"insertText": "TraceI(message, val)",
		"documentation": ""
	},
	"TraceII": {
		"original": "function TraceII takes string message, integer v1, integer v2 returns nothing",
		"fileName": "common.ai",
		"name": "TraceII",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "message"
		}, {
			"type": "integer",
			"name": "v1"
		}, {
			"type": "integer",
			"name": "v2"
		}],
		"insertText": "TraceII(message, v1, v2)",
		"documentation": ""
	},
	"TraceIII": {
		"original": "function TraceIII takes string message, integer v1, integer v2, integer v3 returns nothing",
		"fileName": "common.ai",
		"name": "TraceIII",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "message"
		}, {
			"type": "integer",
			"name": "v1"
		}, {
			"type": "integer",
			"name": "v2"
		}, {
			"type": "integer",
			"name": "v3"
		}],
		"insertText": "TraceIII(message, v1, v2, v3)",
		"documentation": ""
	},
	"InitAI": {
		"original": "function InitAI takes nothing returns nothing",
		"fileName": "common.ai",
		"name": "InitAI",
		"isConstant": false,
		"isNative": false,
		"insertText": "InitAI()",
		"documentation": ""
	},
	"StandardAI": {
		"original": "function StandardAI takes code heroes, code peons, code attacks returns nothing",
		"fileName": "common.ai",
		"name": "StandardAI",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "code",
			"name": "heroes"
		}, {
			"type": "code",
			"name": "peons"
		}, {
			"type": "code",
			"name": "attacks"
		}],
		"insertText": "StandardAI(heroes, peons, attacks)",
		"documentation": ""
	},
	"Min": {
		"original": "function Min takes integer A, integer B returns integer",
		"fileName": "common.ai",
		"name": "Min",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "A"
		}, {
			"type": "integer",
			"name": "B"
		}],
		"returnType": "integer",
		"insertText": "Min(A, B)",
		"documentation": ""
	},
	"Max": {
		"original": "function Max takes integer A, integer B returns integer",
		"fileName": "common.ai",
		"name": "Max",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "A"
		}, {
			"type": "integer",
			"name": "B"
		}],
		"returnType": "integer",
		"insertText": "Max(A, B)",
		"documentation": ""
	},
	"SetZepNextWave": {
		"original": "function SetZepNextWave takes nothing returns nothing",
		"fileName": "common.ai",
		"name": "SetZepNextWave",
		"isConstant": false,
		"isNative": false,
		"insertText": "SetZepNextWave()",
		"documentation": ""
	},
	"SuicideSleep": {
		"original": "function SuicideSleep takes integer seconds returns nothing",
		"fileName": "common.ai",
		"name": "SuicideSleep",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "seconds"
		}],
		"insertText": "SuicideSleep(seconds)",
		"documentation": ""
	},
	"WaitForSignal": {
		"original": "function WaitForSignal takes nothing returns integer",
		"fileName": "common.ai",
		"name": "WaitForSignal",
		"isConstant": false,
		"isNative": false,
		"returnType": "integer",
		"insertText": "WaitForSignal()",
		"documentation": ""
	},
	"SetWoodPeons": {
		"original": "function SetWoodPeons takes integer count returns nothing",
		"fileName": "common.ai",
		"name": "SetWoodPeons",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "count"
		}],
		"insertText": "SetWoodPeons(count)",
		"documentation": ""
	},
	"SetGoldPeons": {
		"original": "function SetGoldPeons takes integer count returns nothing",
		"fileName": "common.ai",
		"name": "SetGoldPeons",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "count"
		}],
		"insertText": "SetGoldPeons(count)",
		"documentation": ""
	},
	"SetHarvestLumber": {
		"original": "function SetHarvestLumber takes boolean harvest returns nothing",
		"fileName": "common.ai",
		"name": "SetHarvestLumber",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "harvest"
		}],
		"insertText": "SetHarvestLumber(harvest)",
		"documentation": ""
	},
	"SetFormGroupTimeouts": {
		"original": "function SetFormGroupTimeouts takes boolean state returns nothing",
		"fileName": "common.ai",
		"name": "SetFormGroupTimeouts",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "state"
		}],
		"insertText": "SetFormGroupTimeouts(state)",
		"documentation": ""
	},
	"DoCampaignFarms": {
		"original": "function DoCampaignFarms takes boolean state returns nothing",
		"fileName": "common.ai",
		"name": "DoCampaignFarms",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "state"
		}],
		"insertText": "DoCampaignFarms(state)",
		"documentation": ""
	},
	"GetMinorCreep": {
		"original": "function GetMinorCreep takes nothing returns unit",
		"fileName": "common.ai",
		"name": "GetMinorCreep",
		"isConstant": false,
		"isNative": false,
		"returnType": "unit",
		"insertText": "GetMinorCreep()",
		"documentation": ""
	},
	"GetMajorCreep": {
		"original": "function GetMajorCreep takes nothing returns unit",
		"fileName": "common.ai",
		"name": "GetMajorCreep",
		"isConstant": false,
		"isNative": false,
		"returnType": "unit",
		"insertText": "GetMajorCreep()",
		"documentation": ""
	},
	"GetGold": {
		"original": "function GetGold takes nothing returns integer",
		"fileName": "common.ai",
		"name": "GetGold",
		"isConstant": false,
		"isNative": false,
		"returnType": "integer",
		"insertText": "GetGold()",
		"documentation": "当前金钱数"
	},
	"GetWood": {
		"original": "function GetWood takes nothing returns integer",
		"fileName": "common.ai",
		"name": "GetWood",
		"isConstant": false,
		"isNative": false,
		"returnType": "integer",
		"insertText": "GetWood()",
		"documentation": "当前木材数"
	},
	"InitBuildArray": {
		"original": "function InitBuildArray takes nothing returns nothing",
		"fileName": "common.ai",
		"name": "InitBuildArray",
		"isConstant": false,
		"isNative": false,
		"insertText": "InitBuildArray()",
		"documentation": ""
	},
	"InitAssaultGroup": {
		"original": "function InitAssaultGroup takes nothing returns nothing",
		"fileName": "common.ai",
		"name": "InitAssaultGroup",
		"isConstant": false,
		"isNative": false,
		"insertText": "InitAssaultGroup()",
		"documentation": ""
	},
	"InitDefenseGroup": {
		"original": "function InitDefenseGroup takes nothing returns nothing",
		"fileName": "common.ai",
		"name": "InitDefenseGroup",
		"isConstant": false,
		"isNative": false,
		"insertText": "InitDefenseGroup()",
		"documentation": ""
	},
	"InitMeleeGroup": {
		"original": "function InitMeleeGroup takes nothing returns nothing",
		"fileName": "common.ai",
		"name": "InitMeleeGroup",
		"isConstant": false,
		"isNative": false,
		"insertText": "InitMeleeGroup()",
		"documentation": ""
	},
	"PrepFullSuicide": {
		"original": "function PrepFullSuicide takes nothing returns nothing",
		"fileName": "common.ai",
		"name": "PrepFullSuicide",
		"isConstant": false,
		"isNative": false,
		"insertText": "PrepFullSuicide()",
		"documentation": ""
	},
	"SetReplacements": {
		"original": "function SetReplacements takes integer easy, integer med, integer hard returns nothing",
		"fileName": "common.ai",
		"name": "SetReplacements",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "easy"
		}, {
			"type": "integer",
			"name": "med"
		}, {
			"type": "integer",
			"name": "hard"
		}],
		"insertText": "SetReplacements(easy, med, hard)",
		"documentation": ""
	},
	"StartTownBuilder": {
		"original": "function StartTownBuilder takes code func returns nothing",
		"fileName": "common.ai",
		"name": "StartTownBuilder",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "code",
			"name": "func"
		}],
		"insertText": "StartTownBuilder(func)",
		"documentation": ""
	},
	"SetBuildAll": {
		"original": "function SetBuildAll takes integer t, integer qty, integer unitid, integer town returns nothing",
		"fileName": "common.ai",
		"name": "SetBuildAll",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "t"
		}, {
			"type": "integer",
			"name": "qty"
		}, {
			"type": "integer",
			"name": "unitid"
		}, {
			"type": "integer",
			"name": "town"
		}],
		"insertText": "SetBuildAll(t, qty, unitid, town)",
		"documentation": ""
	},
	"SetBuildUnit": {
		"original": "function SetBuildUnit takes integer qty, integer unitid returns nothing",
		"fileName": "common.ai",
		"name": "SetBuildUnit",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "qty"
		}, {
			"type": "integer",
			"name": "unitid"
		}],
		"insertText": "SetBuildUnit(qty, unitid)",
		"documentation": ""
	},
	"SetBuildNext": {
		"original": "function SetBuildNext takes integer qty, integer unitid returns nothing",
		"fileName": "common.ai",
		"name": "SetBuildNext",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "qty"
		}, {
			"type": "integer",
			"name": "unitid"
		}],
		"insertText": "SetBuildNext(qty, unitid)",
		"documentation": ""
	},
	"SetBuildUnitEx": {
		"original": "function SetBuildUnitEx takes integer easy, integer med, integer hard, integer unitid returns nothing",
		"fileName": "common.ai",
		"name": "SetBuildUnitEx",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "easy"
		}, {
			"type": "integer",
			"name": "med"
		}, {
			"type": "integer",
			"name": "hard"
		}, {
			"type": "integer",
			"name": "unitid"
		}],
		"insertText": "SetBuildUnitEx(easy, med, hard, unitid)",
		"documentation": ""
	},
	"SecondaryTown": {
		"original": "function SecondaryTown takes integer town, integer qty, integer unitid returns nothing",
		"fileName": "common.ai",
		"name": "SecondaryTown",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "town"
		}, {
			"type": "integer",
			"name": "qty"
		}, {
			"type": "integer",
			"name": "unitid"
		}],
		"insertText": "SecondaryTown(town, qty, unitid)",
		"documentation": ""
	},
	"SecTown": {
		"original": "function SecTown takes integer town, integer qty, integer unitid returns nothing",
		"fileName": "common.ai",
		"name": "SecTown",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "town"
		}, {
			"type": "integer",
			"name": "qty"
		}, {
			"type": "integer",
			"name": "unitid"
		}],
		"insertText": "SecTown(town, qty, unitid)",
		"documentation": ""
	},
	"SetBuildUpgr": {
		"original": "function SetBuildUpgr takes integer qty, integer unitid returns nothing",
		"fileName": "common.ai",
		"name": "SetBuildUpgr",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "qty"
		}, {
			"type": "integer",
			"name": "unitid"
		}],
		"insertText": "SetBuildUpgr(qty, unitid)",
		"documentation": ""
	},
	"SetBuildUpgrEx": {
		"original": "function SetBuildUpgrEx takes integer easy, integer med, integer hard, integer unitid returns nothing",
		"fileName": "common.ai",
		"name": "SetBuildUpgrEx",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "easy"
		}, {
			"type": "integer",
			"name": "med"
		}, {
			"type": "integer",
			"name": "hard"
		}, {
			"type": "integer",
			"name": "unitid"
		}],
		"insertText": "SetBuildUpgrEx(easy, med, hard, unitid)",
		"documentation": ""
	},
	"SetBuildExpa": {
		"original": "function SetBuildExpa takes integer qty, integer unitid returns nothing",
		"fileName": "common.ai",
		"name": "SetBuildExpa",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "qty"
		}, {
			"type": "integer",
			"name": "unitid"
		}],
		"insertText": "SetBuildExpa(qty, unitid)",
		"documentation": ""
	},
	"StartUpgrade": {
		"original": "function StartUpgrade takes integer level, integer upgid returns boolean",
		"fileName": "common.ai",
		"name": "StartUpgrade",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "level"
		}, {
			"type": "integer",
			"name": "upgid"
		}],
		"returnType": "boolean",
		"insertText": "StartUpgrade(level, upgid)",
		"documentation": ""
	},
	"BuildFactory": {
		"original": "function BuildFactory takes integer unitid returns nothing",
		"fileName": "common.ai",
		"name": "BuildFactory",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "unitid"
		}],
		"insertText": "BuildFactory(unitid)",
		"documentation": ""
	},
	"HallsCompleted": {
		"original": "function HallsCompleted takes integer unitid returns boolean",
		"fileName": "common.ai",
		"name": "HallsCompleted",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "unitid"
		}],
		"returnType": "boolean",
		"insertText": "HallsCompleted(unitid)",
		"documentation": ""
	},
	"GuardSecondary": {
		"original": "function GuardSecondary takes integer townid, integer qty, integer unitid returns nothing",
		"fileName": "common.ai",
		"name": "GuardSecondary",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "townid"
		}, {
			"type": "integer",
			"name": "qty"
		}, {
			"type": "integer",
			"name": "unitid"
		}],
		"insertText": "GuardSecondary(townid, qty, unitid)",
		"documentation": ""
	},
	"GetUnitCountEx": {
		"original": "function GetUnitCountEx takes integer unitid, boolean only_done, integer townid returns integer",
		"fileName": "common.ai",
		"name": "GetUnitCountEx",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "unitid"
		}, {
			"type": "boolean",
			"name": "only_done"
		}, {
			"type": "integer",
			"name": "townid"
		}],
		"returnType": "integer",
		"insertText": "GetUnitCountEx(unitid, only_done, townid)",
		"documentation": ""
	},
	"TownCountEx": {
		"original": "function TownCountEx takes integer unitid, boolean only_done, integer townid returns integer",
		"fileName": "common.ai",
		"name": "TownCountEx",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "unitid"
		}, {
			"type": "boolean",
			"name": "only_done"
		}, {
			"type": "integer",
			"name": "townid"
		}],
		"returnType": "integer",
		"insertText": "TownCountEx(unitid, only_done, townid)",
		"documentation": ""
	},
	"TownCountDone": {
		"original": "function TownCountDone takes integer base returns integer",
		"fileName": "common.ai",
		"name": "TownCountDone",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "base"
		}],
		"returnType": "integer",
		"insertText": "TownCountDone(base)",
		"documentation": ""
	},
	"TownCount": {
		"original": "function TownCount takes integer base returns integer",
		"fileName": "common.ai",
		"name": "TownCount",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "base"
		}],
		"returnType": "integer",
		"insertText": "TownCount(base)",
		"documentation": ""
	},
	"BasicExpansion": {
		"original": "function BasicExpansion takes boolean build_it, integer unitid returns nothing",
		"fileName": "common.ai",
		"name": "BasicExpansion",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "build_it"
		}, {
			"type": "integer",
			"name": "unitid"
		}],
		"insertText": "BasicExpansion(build_it, unitid)",
		"documentation": ""
	},
	"UpgradeAll": {
		"original": "function UpgradeAll takes integer baseid, integer newid returns nothing",
		"fileName": "common.ai",
		"name": "UpgradeAll",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "baseid"
		}, {
			"type": "integer",
			"name": "newid"
		}],
		"insertText": "UpgradeAll(baseid, newid)",
		"documentation": ""
	},
	"TownCountTown": {
		"original": "function TownCountTown takes integer base, integer townid returns integer",
		"fileName": "common.ai",
		"name": "TownCountTown",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "base"
		}, {
			"type": "integer",
			"name": "townid"
		}],
		"returnType": "integer",
		"insertText": "TownCountTown(base, townid)",
		"documentation": ""
	},
	"FoodPool": {
		"original": "function FoodPool takes integer food, boolean weak, integer id1, integer use1, boolean strong, integer id2, integer use2 returns nothing",
		"fileName": "common.ai",
		"name": "FoodPool",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "food"
		}, {
			"type": "boolean",
			"name": "weak"
		}, {
			"type": "integer",
			"name": "id1"
		}, {
			"type": "integer",
			"name": "use1"
		}, {
			"type": "boolean",
			"name": "strong"
		}, {
			"type": "integer",
			"name": "id2"
		}, {
			"type": "integer",
			"name": "use2"
		}],
		"insertText": "FoodPool(food, weak, id1, use1, strong, id2, use2)",
		"documentation": ""
	},
	"MeleeTownHall": {
		"original": "function MeleeTownHall takes integer townid, integer unitid returns nothing",
		"fileName": "common.ai",
		"name": "MeleeTownHall",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "townid"
		}, {
			"type": "integer",
			"name": "unitid"
		}],
		"insertText": "MeleeTownHall(townid, unitid)",
		"documentation": ""
	},
	"WaitForUnits": {
		"original": "function WaitForUnits takes integer unitid, integer qty returns nothing",
		"fileName": "common.ai",
		"name": "WaitForUnits",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "unitid"
		}, {
			"type": "integer",
			"name": "qty"
		}],
		"insertText": "WaitForUnits(unitid, qty)",
		"documentation": ""
	},
	"StartUnit": {
		"original": "function StartUnit takes integer ask_qty, integer unitid, integer town returns boolean",
		"fileName": "common.ai",
		"name": "StartUnit",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "ask_qty"
		}, {
			"type": "integer",
			"name": "unitid"
		}, {
			"type": "integer",
			"name": "town"
		}],
		"returnType": "boolean",
		"insertText": "StartUnit(ask_qty, unitid, town)",
		"documentation": ""
	},
	"WaitForTown": {
		"original": "function WaitForTown takes integer towns, integer townid returns nothing",
		"fileName": "common.ai",
		"name": "WaitForTown",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "towns"
		}, {
			"type": "integer",
			"name": "townid"
		}],
		"insertText": "WaitForTown(towns, townid)",
		"documentation": ""
	},
	"StartExpansion": {
		"original": "function StartExpansion takes integer qty, integer hall returns boolean",
		"fileName": "common.ai",
		"name": "StartExpansion",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "qty"
		}, {
			"type": "integer",
			"name": "hall"
		}],
		"returnType": "boolean",
		"insertText": "StartExpansion(qty, hall)",
		"documentation": ""
	},
	"OneBuildLoop": {
		"original": "function OneBuildLoop takes nothing returns nothing",
		"fileName": "common.ai",
		"name": "OneBuildLoop",
		"isConstant": false,
		"isNative": false,
		"insertText": "OneBuildLoop()",
		"documentation": ""
	},
	"StaggerSleep": {
		"original": "function StaggerSleep takes real base, real spread returns nothing",
		"fileName": "common.ai",
		"name": "StaggerSleep",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "base"
		}, {
			"type": "real",
			"name": "spread"
		}],
		"insertText": "StaggerSleep(base, spread)",
		"documentation": ""
	},
	"BuildLoop": {
		"original": "function BuildLoop takes nothing returns nothing",
		"fileName": "common.ai",
		"name": "BuildLoop",
		"isConstant": false,
		"isNative": false,
		"insertText": "BuildLoop()",
		"documentation": ""
	},
	"StartBuildLoop": {
		"original": "function StartBuildLoop takes nothing returns nothing",
		"fileName": "common.ai",
		"name": "StartBuildLoop",
		"isConstant": false,
		"isNative": false,
		"insertText": "StartBuildLoop()",
		"documentation": ""
	},
	"SetInitialWave": {
		"original": "function SetInitialWave takes integer seconds returns nothing",
		"fileName": "common.ai",
		"name": "SetInitialWave",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "seconds"
		}],
		"insertText": "SetInitialWave(seconds)",
		"documentation": ""
	},
	"AddSleepSeconds": {
		"original": "function AddSleepSeconds takes integer seconds returns nothing",
		"fileName": "common.ai",
		"name": "AddSleepSeconds",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "seconds"
		}],
		"insertText": "AddSleepSeconds(seconds)",
		"documentation": ""
	},
	"SleepForever": {
		"original": "function SleepForever takes nothing returns nothing",
		"fileName": "common.ai",
		"name": "SleepForever",
		"isConstant": false,
		"isNative": false,
		"insertText": "SleepForever()",
		"documentation": ""
	},
	"PlayGame": {
		"original": "function PlayGame takes nothing returns nothing",
		"fileName": "common.ai",
		"name": "PlayGame",
		"isConstant": false,
		"isNative": false,
		"insertText": "PlayGame()",
		"documentation": ""
	},
	"ConvertNeeds": {
		"original": "function ConvertNeeds takes integer unitid returns nothing",
		"fileName": "common.ai",
		"name": "ConvertNeeds",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "unitid"
		}],
		"insertText": "ConvertNeeds(unitid)",
		"documentation": ""
	},
	"Conversions": {
		"original": "function Conversions takes integer desire, integer unitid returns nothing",
		"fileName": "common.ai",
		"name": "Conversions",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "desire"
		}, {
			"type": "integer",
			"name": "unitid"
		}],
		"insertText": "Conversions(desire, unitid)",
		"documentation": ""
	},
	"SetAssaultGroup": {
		"original": "function SetAssaultGroup takes integer qty, integer max, integer unitid returns nothing",
		"fileName": "common.ai",
		"name": "SetAssaultGroup",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "qty"
		}, {
			"type": "integer",
			"name": "max"
		}, {
			"type": "integer",
			"name": "unitid"
		}],
		"insertText": "SetAssaultGroup(qty, max, unitid)",
		"documentation": ""
	},
	"Interleave3": {
		"original": "function Interleave3 takes integer e1, integer m1, integer h1, integer u1, integer e2, integer m2, integer h2, integer u2, integer e3, integer m3, integer h3, integer u3 returns nothing",
		"fileName": "common.ai",
		"name": "Interleave3",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "e1"
		}, {
			"type": "integer",
			"name": "m1"
		}, {
			"type": "integer",
			"name": "h1"
		}, {
			"type": "integer",
			"name": "u1"
		}, {
			"type": "integer",
			"name": "e2"
		}, {
			"type": "integer",
			"name": "m2"
		}, {
			"type": "integer",
			"name": "h2"
		}, {
			"type": "integer",
			"name": "u2"
		}, {
			"type": "integer",
			"name": "e3"
		}, {
			"type": "integer",
			"name": "m3"
		}, {
			"type": "integer",
			"name": "h3"
		}, {
			"type": "integer",
			"name": "u3"
		}],
		"insertText": "Interleave3(e1, m1, h1, u1, e2, m2, h2, u2, e3, m3, h3, u3)",
		"documentation": ""
	},
	"SetMeleeGroup": {
		"original": "function SetMeleeGroup takes integer unitid returns nothing",
		"fileName": "common.ai",
		"name": "SetMeleeGroup",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "unitid"
		}],
		"insertText": "SetMeleeGroup(unitid)",
		"documentation": ""
	},
	"CampaignDefender": {
		"original": "function CampaignDefender takes integer level, integer qty, integer unitid returns nothing",
		"fileName": "common.ai",
		"name": "CampaignDefender",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "level"
		}, {
			"type": "integer",
			"name": "qty"
		}, {
			"type": "integer",
			"name": "unitid"
		}],
		"insertText": "CampaignDefender(level, qty, unitid)",
		"documentation": ""
	},
	"CampaignDefenderEx": {
		"original": "function CampaignDefenderEx takes integer easy, integer med, integer hard, integer unitid returns nothing",
		"fileName": "common.ai",
		"name": "CampaignDefenderEx",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "easy"
		}, {
			"type": "integer",
			"name": "med"
		}, {
			"type": "integer",
			"name": "hard"
		}, {
			"type": "integer",
			"name": "unitid"
		}],
		"insertText": "CampaignDefenderEx(easy, med, hard, unitid)",
		"documentation": ""
	},
	"CampaignAttacker": {
		"original": "function CampaignAttacker takes integer level, integer qty, integer unitid returns nothing",
		"fileName": "common.ai",
		"name": "CampaignAttacker",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "level"
		}, {
			"type": "integer",
			"name": "qty"
		}, {
			"type": "integer",
			"name": "unitid"
		}],
		"insertText": "CampaignAttacker(level, qty, unitid)",
		"documentation": ""
	},
	"CampaignAttackerEx": {
		"original": "function CampaignAttackerEx takes integer easy, integer med, integer hard, integer unitid returns nothing",
		"fileName": "common.ai",
		"name": "CampaignAttackerEx",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "easy"
		}, {
			"type": "integer",
			"name": "med"
		}, {
			"type": "integer",
			"name": "hard"
		}, {
			"type": "integer",
			"name": "unitid"
		}],
		"insertText": "CampaignAttackerEx(easy, med, hard, unitid)",
		"documentation": ""
	},
	"FormGroup": {
		"original": "function FormGroup takes integer seconds, boolean testReady returns nothing",
		"fileName": "common.ai",
		"name": "FormGroup",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "seconds"
		}, {
			"type": "boolean",
			"name": "testReady"
		}],
		"insertText": "FormGroup(seconds, testReady)",
		"documentation": ""
	},
	"WavePrepare": {
		"original": "function WavePrepare takes integer unitid returns integer",
		"fileName": "common.ai",
		"name": "WavePrepare",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "unitid"
		}],
		"returnType": "integer",
		"insertText": "WavePrepare(unitid)",
		"documentation": ""
	},
	"PrepTime": {
		"original": "function PrepTime takes nothing returns integer",
		"fileName": "common.ai",
		"name": "PrepTime",
		"isConstant": false,
		"isNative": false,
		"returnType": "integer",
		"insertText": "PrepTime()",
		"documentation": ""
	},
	"PrepSuicideOnPlayer": {
		"original": "function PrepSuicideOnPlayer takes integer seconds returns boolean",
		"fileName": "common.ai",
		"name": "PrepSuicideOnPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "seconds"
		}],
		"returnType": "boolean",
		"insertText": "PrepSuicideOnPlayer(seconds)",
		"documentation": ""
	},
	"SleepUntilAtGoal": {
		"original": "function SleepUntilAtGoal takes nothing returns nothing",
		"fileName": "common.ai",
		"name": "SleepUntilAtGoal",
		"isConstant": false,
		"isNative": false,
		"insertText": "SleepUntilAtGoal()",
		"documentation": ""
	},
	"SleepInCombat": {
		"original": "function SleepInCombat takes nothing returns nothing",
		"fileName": "common.ai",
		"name": "SleepInCombat",
		"isConstant": false,
		"isNative": false,
		"insertText": "SleepInCombat()",
		"documentation": ""
	},
	"AttackMoveXYA": {
		"original": "function AttackMoveXYA takes integer x, integer y returns nothing",
		"fileName": "common.ai",
		"name": "AttackMoveXYA",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "x"
		}, {
			"type": "integer",
			"name": "y"
		}],
		"insertText": "AttackMoveXYA(x, y)",
		"documentation": ""
	},
	"SuicideOnPlayerWave": {
		"original": "function SuicideOnPlayerWave takes nothing returns nothing",
		"fileName": "common.ai",
		"name": "SuicideOnPlayerWave",
		"isConstant": false,
		"isNative": false,
		"insertText": "SuicideOnPlayerWave()",
		"documentation": ""
	},
	"CommonSuicideOnPlayer": {
		"original": "function CommonSuicideOnPlayer takes boolean standard, boolean bldgs, integer seconds, player p, integer x, integer y returns nothing",
		"fileName": "common.ai",
		"name": "CommonSuicideOnPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "standard"
		}, {
			"type": "boolean",
			"name": "bldgs"
		}, {
			"type": "integer",
			"name": "seconds"
		}, {
			"type": "player",
			"name": "p"
		}, {
			"type": "integer",
			"name": "x"
		}, {
			"type": "integer",
			"name": "y"
		}],
		"insertText": "CommonSuicideOnPlayer(standard, bldgs, seconds, p, x, y)",
		"documentation": ""
	},
	"SuicideOnPlayer": {
		"original": "function SuicideOnPlayer takes integer seconds, player p returns nothing",
		"fileName": "common.ai",
		"name": "SuicideOnPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "seconds"
		}, {
			"type": "player",
			"name": "p"
		}],
		"insertText": "SuicideOnPlayer(seconds, p)",
		"documentation": ""
	},
	"SuicideOnUnits": {
		"original": "function SuicideOnUnits takes integer seconds, player p returns nothing",
		"fileName": "common.ai",
		"name": "SuicideOnUnits",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "seconds"
		}, {
			"type": "player",
			"name": "p"
		}],
		"insertText": "SuicideOnUnits(seconds, p)",
		"documentation": ""
	},
	"SuicideOnPoint": {
		"original": "function SuicideOnPoint takes integer seconds, player p, integer x, integer y returns nothing",
		"fileName": "common.ai",
		"name": "SuicideOnPoint",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "seconds"
		}, {
			"type": "player",
			"name": "p"
		}, {
			"type": "integer",
			"name": "x"
		}, {
			"type": "integer",
			"name": "y"
		}],
		"insertText": "SuicideOnPoint(seconds, p, x, y)",
		"documentation": ""
	},
	"SuicideUntilSignal": {
		"original": "function SuicideUntilSignal takes integer seconds, player p returns nothing",
		"fileName": "common.ai",
		"name": "SuicideUntilSignal",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "seconds"
		}, {
			"type": "player",
			"name": "p"
		}],
		"insertText": "SuicideUntilSignal(seconds, p)",
		"documentation": ""
	},
	"SuicideOnce": {
		"original": "function SuicideOnce takes integer easy, integer med, integer hard, integer unitid returns nothing",
		"fileName": "common.ai",
		"name": "SuicideOnce",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "easy"
		}, {
			"type": "integer",
			"name": "med"
		}, {
			"type": "integer",
			"name": "hard"
		}, {
			"type": "integer",
			"name": "unitid"
		}],
		"insertText": "SuicideOnce(easy, med, hard, unitid)",
		"documentation": ""
	},
	"SuicideUnitA": {
		"original": "function SuicideUnitA takes integer unitid returns nothing",
		"fileName": "common.ai",
		"name": "SuicideUnitA",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "unitid"
		}],
		"insertText": "SuicideUnitA(unitid)",
		"documentation": ""
	},
	"SuicideUnitB": {
		"original": "function SuicideUnitB takes integer unitid, integer playerid returns nothing",
		"fileName": "common.ai",
		"name": "SuicideUnitB",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "unitid"
		}, {
			"type": "integer",
			"name": "playerid"
		}],
		"insertText": "SuicideUnitB(unitid, playerid)",
		"documentation": ""
	},
	"SuicideUnits": {
		"original": "function SuicideUnits takes integer u1, integer u2, integer u3, integer u4, integer u5, integer u6, integer u7, integer u8, integer u9, integer uA returns nothing",
		"fileName": "common.ai",
		"name": "SuicideUnits",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "u1"
		}, {
			"type": "integer",
			"name": "u2"
		}, {
			"type": "integer",
			"name": "u3"
		}, {
			"type": "integer",
			"name": "u4"
		}, {
			"type": "integer",
			"name": "u5"
		}, {
			"type": "integer",
			"name": "u6"
		}, {
			"type": "integer",
			"name": "u7"
		}, {
			"type": "integer",
			"name": "u8"
		}, {
			"type": "integer",
			"name": "u9"
		}, {
			"type": "integer",
			"name": "uA"
		}],
		"insertText": "SuicideUnits(u1, u2, u3, u4, u5, u6, u7, u8, u9, uA)",
		"documentation": ""
	},
	"SuicideUnitsEx": {
		"original": "function SuicideUnitsEx takes integer playerid, integer u1, integer u2, integer u3, integer u4, integer u5, integer u6, integer u7, integer u8, integer u9, integer uA returns nothing",
		"fileName": "common.ai",
		"name": "SuicideUnitsEx",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "playerid"
		}, {
			"type": "integer",
			"name": "u1"
		}, {
			"type": "integer",
			"name": "u2"
		}, {
			"type": "integer",
			"name": "u3"
		}, {
			"type": "integer",
			"name": "u4"
		}, {
			"type": "integer",
			"name": "u5"
		}, {
			"type": "integer",
			"name": "u6"
		}, {
			"type": "integer",
			"name": "u7"
		}, {
			"type": "integer",
			"name": "u8"
		}, {
			"type": "integer",
			"name": "u9"
		}, {
			"type": "integer",
			"name": "uA"
		}],
		"insertText": "SuicideUnitsEx(playerid, u1, u2, u3, u4, u5, u6, u7, u8, u9, uA)",
		"documentation": ""
	},
	"SuicideOnPlayerEx": {
		"original": "function SuicideOnPlayerEx takes integer easy, integer med, integer hard, player p returns nothing",
		"fileName": "common.ai",
		"name": "SuicideOnPlayerEx",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "easy"
		}, {
			"type": "integer",
			"name": "med"
		}, {
			"type": "integer",
			"name": "hard"
		}, {
			"type": "player",
			"name": "p"
		}],
		"insertText": "SuicideOnPlayerEx(easy, med, hard, p)",
		"documentation": ""
	},
	"SuicideOnUnitsEx": {
		"original": "function SuicideOnUnitsEx takes integer easy, integer med, integer hard, player p returns nothing",
		"fileName": "common.ai",
		"name": "SuicideOnUnitsEx",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "easy"
		}, {
			"type": "integer",
			"name": "med"
		}, {
			"type": "integer",
			"name": "hard"
		}, {
			"type": "player",
			"name": "p"
		}],
		"insertText": "SuicideOnUnitsEx(easy, med, hard, p)",
		"documentation": ""
	},
	"SuicideOnPointEx": {
		"original": "function SuicideOnPointEx takes integer easy, integer med, integer hard, player p, integer x, integer y returns nothing",
		"fileName": "common.ai",
		"name": "SuicideOnPointEx",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "easy"
		}, {
			"type": "integer",
			"name": "med"
		}, {
			"type": "integer",
			"name": "hard"
		}, {
			"type": "player",
			"name": "p"
		}, {
			"type": "integer",
			"name": "x"
		}, {
			"type": "integer",
			"name": "y"
		}],
		"insertText": "SuicideOnPointEx(easy, med, hard, p, x, y)",
		"documentation": ""
	},
	"ForeverSuicideOnPlayer": {
		"original": "function ForeverSuicideOnPlayer takes integer seconds, player p returns nothing",
		"fileName": "common.ai",
		"name": "ForeverSuicideOnPlayer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "seconds"
		}, {
			"type": "player",
			"name": "p"
		}],
		"insertText": "ForeverSuicideOnPlayer(seconds, p)",
		"documentation": ""
	},
	"CommonSleepUntilTargetDead": {
		"original": "function CommonSleepUntilTargetDead takes unit target, boolean reform returns nothing",
		"fileName": "common.ai",
		"name": "CommonSleepUntilTargetDead",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "target"
		}, {
			"type": "boolean",
			"name": "reform"
		}],
		"insertText": "CommonSleepUntilTargetDead(target, reform)",
		"documentation": ""
	},
	"SleepUntilTargetDead": {
		"original": "function SleepUntilTargetDead takes unit target returns nothing",
		"fileName": "common.ai",
		"name": "SleepUntilTargetDead",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "target"
		}],
		"insertText": "SleepUntilTargetDead(target)",
		"documentation": ""
	},
	"ReformUntilTargetDead": {
		"original": "function ReformUntilTargetDead takes unit target returns nothing",
		"fileName": "common.ai",
		"name": "ReformUntilTargetDead",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "target"
		}],
		"insertText": "ReformUntilTargetDead(target)",
		"documentation": ""
	},
	"AttackMoveKillA": {
		"original": "function AttackMoveKillA takes unit target returns nothing",
		"fileName": "common.ai",
		"name": "AttackMoveKillA",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "target"
		}],
		"insertText": "AttackMoveKillA(target)",
		"documentation": ""
	},
	"MinorCreepAttack": {
		"original": "function MinorCreepAttack takes nothing returns nothing",
		"fileName": "common.ai",
		"name": "MinorCreepAttack",
		"isConstant": false,
		"isNative": false,
		"insertText": "MinorCreepAttack()",
		"documentation": ""
	},
	"MajorCreepAttack": {
		"original": "function MajorCreepAttack takes nothing returns nothing",
		"fileName": "common.ai",
		"name": "MajorCreepAttack",
		"isConstant": false,
		"isNative": false,
		"insertText": "MajorCreepAttack()",
		"documentation": ""
	},
	"CreepAttackEx": {
		"original": "function CreepAttackEx takes nothing returns nothing",
		"fileName": "common.ai",
		"name": "CreepAttackEx",
		"isConstant": false,
		"isNative": false,
		"insertText": "CreepAttackEx()",
		"documentation": ""
	},
	"AnyPlayerAttack": {
		"original": "function AnyPlayerAttack takes nothing returns nothing",
		"fileName": "common.ai",
		"name": "AnyPlayerAttack",
		"isConstant": false,
		"isNative": false,
		"insertText": "AnyPlayerAttack()",
		"documentation": ""
	},
	"ExpansionAttack": {
		"original": "function ExpansionAttack takes nothing returns nothing",
		"fileName": "common.ai",
		"name": "ExpansionAttack",
		"isConstant": false,
		"isNative": false,
		"insertText": "ExpansionAttack()",
		"documentation": ""
	},
	"AddSiege": {
		"original": "function AddSiege takes nothing returns nothing",
		"fileName": "common.ai",
		"name": "AddSiege",
		"isConstant": false,
		"isNative": false,
		"insertText": "AddSiege()",
		"documentation": ""
	},
	"GetAllyCount": {
		"original": "function GetAllyCount takes player whichPlayer returns integer",
		"fileName": "common.ai",
		"name": "GetAllyCount",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "integer",
		"insertText": "GetAllyCount(whichPlayer)",
		"documentation": ""
	},
	"SingleMeleeAttack": {
		"original": "function SingleMeleeAttack takes boolean needs_exp, boolean has_siege, boolean major_ok, boolean air_units returns nothing",
		"fileName": "common.ai",
		"name": "SingleMeleeAttack",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "needs_exp"
		}, {
			"type": "boolean",
			"name": "has_siege"
		}, {
			"type": "boolean",
			"name": "major_ok"
		}, {
			"type": "boolean",
			"name": "air_units"
		}],
		"insertText": "SingleMeleeAttack(needs_exp, has_siege, major_ok, air_units)",
		"documentation": ""
	},
	"GetZeppelin": {
		"original": "function GetZeppelin takes nothing returns nothing",
		"fileName": "common.ai",
		"name": "GetZeppelin",
		"isConstant": false,
		"isNative": false,
		"insertText": "GetZeppelin()",
		"documentation": ""
	},
	"FoodUsed": {
		"original": "function FoodUsed takes nothing returns integer",
		"fileName": "common.ai",
		"name": "FoodUsed",
		"isConstant": false,
		"isNative": false,
		"returnType": "integer",
		"insertText": "FoodUsed()",
		"documentation": "当前AI玩家的人口使用量"
	},
	"FoodCap": {
		"original": "function FoodCap takes nothing returns integer",
		"fileName": "common.ai",
		"name": "FoodCap",
		"isConstant": false,
		"isNative": false,
		"returnType": "integer",
		"insertText": "FoodCap()",
		"documentation": ""
	},
	"FoodSpace": {
		"original": "function FoodSpace takes nothing returns integer",
		"fileName": "common.ai",
		"name": "FoodSpace",
		"isConstant": false,
		"isNative": false,
		"returnType": "integer",
		"insertText": "FoodSpace()",
		"documentation": ""
	},
	"FoodAvail": {
		"original": "function FoodAvail takes integer base returns integer",
		"fileName": "common.ai",
		"name": "FoodAvail",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "base"
		}],
		"returnType": "integer",
		"insertText": "FoodAvail(base)",
		"documentation": ""
	},
	"BuildAttackers": {
		"original": "function BuildAttackers takes nothing returns nothing",
		"fileName": "common.ai",
		"name": "BuildAttackers",
		"isConstant": false,
		"isNative": false,
		"insertText": "BuildAttackers()",
		"documentation": ""
	},
	"BuildDefenders": {
		"original": "function BuildDefenders takes nothing returns nothing",
		"fileName": "common.ai",
		"name": "BuildDefenders",
		"isConstant": false,
		"isNative": false,
		"insertText": "BuildDefenders()",
		"documentation": ""
	},
	"CampaignBasicsA": {
		"original": "function CampaignBasicsA takes nothing returns nothing",
		"fileName": "common.ai",
		"name": "CampaignBasicsA",
		"isConstant": false,
		"isNative": false,
		"insertText": "CampaignBasicsA()",
		"documentation": ""
	},
	"CampaignBasics": {
		"original": "function CampaignBasics takes nothing returns nothing",
		"fileName": "common.ai",
		"name": "CampaignBasics",
		"isConstant": false,
		"isNative": false,
		"insertText": "CampaignBasics()",
		"documentation": ""
	},
	"CampaignAI": {
		"original": "function CampaignAI takes integer farms, code heroes returns nothing",
		"fileName": "common.ai",
		"name": "CampaignAI",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "farms"
		}, {
			"type": "code",
			"name": "heroes"
		}],
		"insertText": "CampaignAI(farms, heroes)",
		"documentation": ""
	},
	"UnsummonAll": {
		"original": "function UnsummonAll takes nothing returns nothing",
		"fileName": "common.ai",
		"name": "UnsummonAll",
		"isConstant": false,
		"isNative": false,
		"insertText": "UnsummonAll()",
		"documentation": ""
	},
	"SkillArrays": {
		"original": "function SkillArrays takes nothing returns integer",
		"fileName": "common.ai",
		"name": "SkillArrays",
		"isConstant": false,
		"isNative": false,
		"returnType": "integer",
		"insertText": "SkillArrays()",
		"documentation": ""
	},
	"SetSkillArray": {
		"original": "function SetSkillArray takes integer index, integer id returns nothing",
		"fileName": "common.ai",
		"name": "SetSkillArray",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "index"
		}, {
			"type": "integer",
			"name": "id"
		}],
		"insertText": "SetSkillArray(index, id)",
		"documentation": ""
	},
	"AwaitMeleeHeroes": {
		"original": "function AwaitMeleeHeroes takes nothing returns nothing",
		"fileName": "common.ai",
		"name": "AwaitMeleeHeroes",
		"isConstant": false,
		"isNative": false,
		"insertText": "AwaitMeleeHeroes()",
		"documentation": ""
	},
	"PickMeleeHero": {
		"original": "function PickMeleeHero takes race raceid returns integer",
		"fileName": "common.ai",
		"name": "PickMeleeHero",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "race",
			"name": "raceid"
		}],
		"returnType": "integer",
		"insertText": "PickMeleeHero(raceid)",
		"documentation": ""
	},
	"ConvertRace": {
		"original": "constant native ConvertRace                 takes integer i returns race",
		"fileName": "common.j",
		"name": "ConvertRace",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "race",
		"insertText": "ConvertRace(i)",
		"documentation": ""
	},
	"ConvertAllianceType": {
		"original": "constant native ConvertAllianceType         takes integer i returns alliancetype",
		"fileName": "common.j",
		"name": "ConvertAllianceType",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "alliancetype",
		"insertText": "ConvertAllianceType(i)",
		"documentation": ""
	},
	"ConvertRacePref": {
		"original": "constant native ConvertRacePref             takes integer i returns racepreference",
		"fileName": "common.j",
		"name": "ConvertRacePref",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "racepreference",
		"insertText": "ConvertRacePref(i)",
		"documentation": ""
	},
	"ConvertIGameState": {
		"original": "constant native ConvertIGameState           takes integer i returns igamestate",
		"fileName": "common.j",
		"name": "ConvertIGameState",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "igamestate",
		"insertText": "ConvertIGameState(i)",
		"documentation": ""
	},
	"ConvertFGameState": {
		"original": "constant native ConvertFGameState           takes integer i returns fgamestate",
		"fileName": "common.j",
		"name": "ConvertFGameState",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "fgamestate",
		"insertText": "ConvertFGameState(i)",
		"documentation": ""
	},
	"ConvertPlayerState": {
		"original": "constant native ConvertPlayerState          takes integer i returns playerstate",
		"fileName": "common.j",
		"name": "ConvertPlayerState",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "playerstate",
		"insertText": "ConvertPlayerState(i)",
		"documentation": ""
	},
	"ConvertPlayerScore": {
		"original": "constant native ConvertPlayerScore          takes integer i returns playerscore",
		"fileName": "common.j",
		"name": "ConvertPlayerScore",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "playerscore",
		"insertText": "ConvertPlayerScore(i)",
		"documentation": ""
	},
	"ConvertPlayerGameResult": {
		"original": "constant native ConvertPlayerGameResult     takes integer i returns playergameresult",
		"fileName": "common.j",
		"name": "ConvertPlayerGameResult",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "playergameresult",
		"insertText": "ConvertPlayerGameResult(i)",
		"documentation": ""
	},
	"ConvertUnitState": {
		"original": "constant native ConvertUnitState            takes integer i returns unitstate",
		"fileName": "common.j",
		"name": "ConvertUnitState",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "unitstate",
		"insertText": "ConvertUnitState(i)",
		"documentation": ""
	},
	"ConvertAIDifficulty": {
		"original": "constant native ConvertAIDifficulty         takes integer i returns aidifficulty",
		"fileName": "common.j",
		"name": "ConvertAIDifficulty",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "aidifficulty",
		"insertText": "ConvertAIDifficulty(i)",
		"documentation": ""
	},
	"ConvertGameEvent": {
		"original": "constant native ConvertGameEvent            takes integer i returns gameevent",
		"fileName": "common.j",
		"name": "ConvertGameEvent",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "gameevent",
		"insertText": "ConvertGameEvent(i)",
		"documentation": ""
	},
	"ConvertPlayerEvent": {
		"original": "constant native ConvertPlayerEvent          takes integer i returns playerevent",
		"fileName": "common.j",
		"name": "ConvertPlayerEvent",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "playerevent",
		"insertText": "ConvertPlayerEvent(i)",
		"documentation": ""
	},
	"ConvertPlayerUnitEvent": {
		"original": "constant native ConvertPlayerUnitEvent      takes integer i returns playerunitevent",
		"fileName": "common.j",
		"name": "ConvertPlayerUnitEvent",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "playerunitevent",
		"insertText": "ConvertPlayerUnitEvent(i)",
		"documentation": ""
	},
	"ConvertWidgetEvent": {
		"original": "constant native ConvertWidgetEvent          takes integer i returns widgetevent",
		"fileName": "common.j",
		"name": "ConvertWidgetEvent",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "widgetevent",
		"insertText": "ConvertWidgetEvent(i)",
		"documentation": ""
	},
	"ConvertDialogEvent": {
		"original": "constant native ConvertDialogEvent          takes integer i returns dialogevent",
		"fileName": "common.j",
		"name": "ConvertDialogEvent",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "dialogevent",
		"insertText": "ConvertDialogEvent(i)",
		"documentation": ""
	},
	"ConvertUnitEvent": {
		"original": "constant native ConvertUnitEvent            takes integer i returns unitevent",
		"fileName": "common.j",
		"name": "ConvertUnitEvent",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "unitevent",
		"insertText": "ConvertUnitEvent(i)",
		"documentation": ""
	},
	"ConvertLimitOp": {
		"original": "constant native ConvertLimitOp              takes integer i returns limitop",
		"fileName": "common.j",
		"name": "ConvertLimitOp",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "limitop",
		"insertText": "ConvertLimitOp(i)",
		"documentation": ""
	},
	"ConvertUnitType": {
		"original": "constant native ConvertUnitType             takes integer i returns unittype",
		"fileName": "common.j",
		"name": "ConvertUnitType",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "unittype",
		"insertText": "ConvertUnitType(i)",
		"documentation": ""
	},
	"ConvertGameSpeed": {
		"original": "constant native ConvertGameSpeed            takes integer i returns gamespeed",
		"fileName": "common.j",
		"name": "ConvertGameSpeed",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "gamespeed",
		"insertText": "ConvertGameSpeed(i)",
		"documentation": ""
	},
	"ConvertPlacement": {
		"original": "constant native ConvertPlacement            takes integer i returns placement",
		"fileName": "common.j",
		"name": "ConvertPlacement",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "placement",
		"insertText": "ConvertPlacement(i)",
		"documentation": ""
	},
	"ConvertStartLocPrio": {
		"original": "constant native ConvertStartLocPrio         takes integer i returns startlocprio",
		"fileName": "common.j",
		"name": "ConvertStartLocPrio",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "startlocprio",
		"insertText": "ConvertStartLocPrio(i)",
		"documentation": ""
	},
	"ConvertGameDifficulty": {
		"original": "constant native ConvertGameDifficulty       takes integer i returns gamedifficulty",
		"fileName": "common.j",
		"name": "ConvertGameDifficulty",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "gamedifficulty",
		"insertText": "ConvertGameDifficulty(i)",
		"documentation": ""
	},
	"ConvertGameType": {
		"original": "constant native ConvertGameType             takes integer i returns gametype",
		"fileName": "common.j",
		"name": "ConvertGameType",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "gametype",
		"insertText": "ConvertGameType(i)",
		"documentation": ""
	},
	"ConvertMapFlag": {
		"original": "constant native ConvertMapFlag              takes integer i returns mapflag",
		"fileName": "common.j",
		"name": "ConvertMapFlag",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "mapflag",
		"insertText": "ConvertMapFlag(i)",
		"documentation": ""
	},
	"ConvertMapVisibility": {
		"original": "constant native ConvertMapVisibility        takes integer i returns mapvisibility",
		"fileName": "common.j",
		"name": "ConvertMapVisibility",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "mapvisibility",
		"insertText": "ConvertMapVisibility(i)",
		"documentation": ""
	},
	"ConvertMapSetting": {
		"original": "constant native ConvertMapSetting           takes integer i returns mapsetting",
		"fileName": "common.j",
		"name": "ConvertMapSetting",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "mapsetting",
		"insertText": "ConvertMapSetting(i)",
		"documentation": ""
	},
	"ConvertMapDensity": {
		"original": "constant native ConvertMapDensity           takes integer i returns mapdensity",
		"fileName": "common.j",
		"name": "ConvertMapDensity",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "mapdensity",
		"insertText": "ConvertMapDensity(i)",
		"documentation": ""
	},
	"ConvertMapControl": {
		"original": "constant native ConvertMapControl           takes integer i returns mapcontrol",
		"fileName": "common.j",
		"name": "ConvertMapControl",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "mapcontrol",
		"insertText": "ConvertMapControl(i)",
		"documentation": ""
	},
	"ConvertPlayerColor": {
		"original": "constant native ConvertPlayerColor          takes integer i returns playercolor",
		"fileName": "common.j",
		"name": "ConvertPlayerColor",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "playercolor",
		"insertText": "ConvertPlayerColor(i)",
		"documentation": ""
	},
	"ConvertPlayerSlotState": {
		"original": "constant native ConvertPlayerSlotState      takes integer i returns playerslotstate",
		"fileName": "common.j",
		"name": "ConvertPlayerSlotState",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "playerslotstate",
		"insertText": "ConvertPlayerSlotState(i)",
		"documentation": ""
	},
	"ConvertVolumeGroup": {
		"original": "constant native ConvertVolumeGroup          takes integer i returns volumegroup",
		"fileName": "common.j",
		"name": "ConvertVolumeGroup",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "volumegroup",
		"insertText": "ConvertVolumeGroup(i)",
		"documentation": ""
	},
	"ConvertCameraField": {
		"original": "constant native ConvertCameraField          takes integer i returns camerafield",
		"fileName": "common.j",
		"name": "ConvertCameraField",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "camerafield",
		"insertText": "ConvertCameraField(i)",
		"documentation": ""
	},
	"ConvertBlendMode": {
		"original": "constant native ConvertBlendMode            takes integer i returns blendmode",
		"fileName": "common.j",
		"name": "ConvertBlendMode",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "blendmode",
		"insertText": "ConvertBlendMode(i)",
		"documentation": ""
	},
	"ConvertRarityControl": {
		"original": "constant native ConvertRarityControl        takes integer i returns raritycontrol",
		"fileName": "common.j",
		"name": "ConvertRarityControl",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "raritycontrol",
		"insertText": "ConvertRarityControl(i)",
		"documentation": ""
	},
	"ConvertTexMapFlags": {
		"original": "constant native ConvertTexMapFlags          takes integer i returns texmapflags",
		"fileName": "common.j",
		"name": "ConvertTexMapFlags",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "texmapflags",
		"insertText": "ConvertTexMapFlags(i)",
		"documentation": ""
	},
	"ConvertFogState": {
		"original": "constant native ConvertFogState             takes integer i returns fogstate",
		"fileName": "common.j",
		"name": "ConvertFogState",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "fogstate",
		"insertText": "ConvertFogState(i)",
		"documentation": ""
	},
	"ConvertEffectType": {
		"original": "constant native ConvertEffectType           takes integer i returns effecttype",
		"fileName": "common.j",
		"name": "ConvertEffectType",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "effecttype",
		"insertText": "ConvertEffectType(i)",
		"documentation": ""
	},
	"ConvertVersion": {
		"original": "constant native ConvertVersion              takes integer i returns version",
		"fileName": "common.j",
		"name": "ConvertVersion",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "version",
		"insertText": "ConvertVersion(i)",
		"documentation": ""
	},
	"ConvertItemType": {
		"original": "constant native ConvertItemType             takes integer i returns itemtype",
		"fileName": "common.j",
		"name": "ConvertItemType",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "itemtype",
		"insertText": "ConvertItemType(i)",
		"documentation": ""
	},
	"ConvertAttackType": {
		"original": "constant native ConvertAttackType           takes integer i returns attacktype",
		"fileName": "common.j",
		"name": "ConvertAttackType",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "attacktype",
		"insertText": "ConvertAttackType(i)",
		"documentation": ""
	},
	"ConvertDamageType": {
		"original": "constant native ConvertDamageType           takes integer i returns damagetype",
		"fileName": "common.j",
		"name": "ConvertDamageType",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "damagetype",
		"insertText": "ConvertDamageType(i)",
		"documentation": ""
	},
	"ConvertWeaponType": {
		"original": "constant native ConvertWeaponType           takes integer i returns weapontype",
		"fileName": "common.j",
		"name": "ConvertWeaponType",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "weapontype",
		"insertText": "ConvertWeaponType(i)",
		"documentation": ""
	},
	"ConvertSoundType": {
		"original": "constant native ConvertSoundType            takes integer i returns soundtype",
		"fileName": "common.j",
		"name": "ConvertSoundType",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "soundtype",
		"insertText": "ConvertSoundType(i)",
		"documentation": ""
	},
	"ConvertPathingType": {
		"original": "constant native ConvertPathingType          takes integer i returns pathingtype",
		"fileName": "common.j",
		"name": "ConvertPathingType",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "pathingtype",
		"insertText": "ConvertPathingType(i)",
		"documentation": ""
	},
	"OrderId": {
		"original": "constant native OrderId                     takes string  orderIdString     returns integer",
		"fileName": "common.j",
		"name": "OrderId",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "orderIdString"
		}],
		"returnType": "integer",
		"insertText": "OrderId(orderIdString)",
		"documentation": ""
	},
	"OrderId2String": {
		"original": "constant native OrderId2String              takes integer orderId           returns string",
		"fileName": "common.j",
		"name": "OrderId2String",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "orderId"
		}],
		"returnType": "string",
		"insertText": "OrderId2String(orderId)",
		"documentation": ""
	},
	"UnitId": {
		"original": "constant native UnitId                      takes string  unitIdString      returns integer",
		"fileName": "common.j",
		"name": "UnitId",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "unitIdString"
		}],
		"returnType": "integer",
		"insertText": "UnitId(unitIdString)",
		"documentation": ""
	},
	"UnitId2String": {
		"original": "constant native UnitId2String               takes integer unitId            returns string",
		"fileName": "common.j",
		"name": "UnitId2String",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "unitId"
		}],
		"returnType": "string",
		"insertText": "UnitId2String(unitId)",
		"documentation": ""
	},
	"AbilityId": {
		"original": "constant native AbilityId                   takes string  abilityIdString   returns integer",
		"fileName": "common.j",
		"name": "AbilityId",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "abilityIdString"
		}],
		"returnType": "integer",
		"insertText": "AbilityId(abilityIdString)",
		"documentation": ""
	},
	"AbilityId2String": {
		"original": "constant native AbilityId2String            takes integer abilityId         returns string",
		"fileName": "common.j",
		"name": "AbilityId2String",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "abilityId"
		}],
		"returnType": "string",
		"insertText": "AbilityId2String(abilityId)",
		"documentation": ""
	},
	"GetObjectName": {
		"original": "constant native GetObjectName               takes integer objectId          returns string",
		"fileName": "common.j",
		"name": "GetObjectName",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "objectId"
		}],
		"returnType": "string",
		"insertText": "GetObjectName(objectId)",
		"documentation": "物体名称 [C]"
	},
	"Deg2Rad": {
		"original": "native Deg2Rad  takes real degrees returns real",
		"fileName": "common.j",
		"name": "Deg2Rad",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "degrees"
		}],
		"returnType": "real",
		"insertText": "Deg2Rad(degrees)",
		"documentation": "转换 度 到 弧度"
	},
	"Rad2Deg": {
		"original": "native Rad2Deg  takes real radians returns real",
		"fileName": "common.j",
		"name": "Rad2Deg",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "radians"
		}],
		"returnType": "real",
		"insertText": "Rad2Deg(radians)",
		"documentation": "转换 弧度 到 度"
	},
	"Sin": {
		"original": "native Sin      takes real radians returns real",
		"fileName": "common.j",
		"name": "Sin",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "radians"
		}],
		"returnType": "real",
		"insertText": "Sin(radians)",
		"documentation": "正弦(弧度) [R]"
	},
	"Cos": {
		"original": "native Cos      takes real radians returns real",
		"fileName": "common.j",
		"name": "Cos",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "radians"
		}],
		"returnType": "real",
		"insertText": "Cos(radians)",
		"documentation": "余弦(弧度) [R]"
	},
	"Tan": {
		"original": "native Tan      takes real radians returns real",
		"fileName": "common.j",
		"name": "Tan",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "radians"
		}],
		"returnType": "real",
		"insertText": "Tan(radians)",
		"documentation": "正切(弧度) [R]"
	},
	"Asin": {
		"original": "native Asin     takes real y returns real",
		"fileName": "common.j",
		"name": "Asin",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "y"
		}],
		"returnType": "real",
		"insertText": "Asin(y)",
		"documentation": "反正弦(弧度) [R]"
	},
	"Acos": {
		"original": "native Acos     takes real x returns real",
		"fileName": "common.j",
		"name": "Acos",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}],
		"returnType": "real",
		"insertText": "Acos(x)",
		"documentation": "反余弦(弧度) [R]"
	},
	"Atan": {
		"original": "native Atan     takes real x returns real",
		"fileName": "common.j",
		"name": "Atan",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}],
		"returnType": "real",
		"insertText": "Atan(x)",
		"documentation": "反正切(弧度) [R]"
	},
	"Atan2": {
		"original": "native Atan2    takes real y, real x returns real",
		"fileName": "common.j",
		"name": "Atan2",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "x"
		}],
		"returnType": "real",
		"insertText": "Atan2(y, x)",
		"documentation": "反正切(Y:X)(弧度) [R]"
	},
	"SquareRoot": {
		"original": "native SquareRoot takes real x returns real",
		"fileName": "common.j",
		"name": "SquareRoot",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}],
		"returnType": "real",
		"insertText": "SquareRoot(x)",
		"documentation": "平方根"
	},
	"Pow": {
		"original": "native Pow      takes real x, real power returns real",
		"fileName": "common.j",
		"name": "Pow",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "power"
		}],
		"returnType": "real",
		"insertText": "Pow(x, power)",
		"documentation": "求幂"
	},
	"I2R": {
		"original": "native I2R  takes integer i returns real",
		"fileName": "common.j",
		"name": "I2R",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "real",
		"insertText": "I2R(i)",
		"documentation": "转换整数变量为实数"
	},
	"R2I": {
		"original": "native R2I  takes real r returns integer",
		"fileName": "common.j",
		"name": "R2I",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "r"
		}],
		"returnType": "integer",
		"insertText": "R2I(r)",
		"documentation": "转换实数为整数"
	},
	"I2S": {
		"original": "native I2S  takes integer i returns string",
		"fileName": "common.j",
		"name": "I2S",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "string",
		"insertText": "I2S(i)",
		"documentation": "将整数转换为字符串"
	},
	"R2S": {
		"original": "native R2S  takes real r returns string",
		"fileName": "common.j",
		"name": "R2S",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "r"
		}],
		"returnType": "string",
		"insertText": "R2S(r)",
		"documentation": "将实数转换为字符串"
	},
	"R2SW": {
		"original": "native R2SW takes real r, integer width, integer precision returns string",
		"fileName": "common.j",
		"name": "R2SW",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "r"
		}, {
			"type": "integer",
			"name": "width"
		}, {
			"type": "integer",
			"name": "precision"
		}],
		"returnType": "string",
		"insertText": "R2SW(r, width, precision)",
		"documentation": "将实数转换为格式化字符串"
	},
	"S2I": {
		"original": "native S2I  takes string s returns integer",
		"fileName": "common.j",
		"name": "S2I",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "s"
		}],
		"returnType": "integer",
		"insertText": "S2I(s)",
		"documentation": "转换字串符为整数"
	},
	"S2R": {
		"original": "native S2R  takes string s returns real",
		"fileName": "common.j",
		"name": "S2R",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "s"
		}],
		"returnType": "real",
		"insertText": "S2R(s)",
		"documentation": "转换字符串为实数"
	},
	"GetHandleId": {
		"original": "function GetHandleId takes handle h returns integer",
		"fileName": "YDWEBase_returnbug.j",
		"name": "GetHandleId",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "handle",
			"name": "h"
		}],
		"returnType": "integer",
		"insertText": "GetHandleId(h)",
		"documentation": "<1.24> 获取对象的h2i值 [C]"
	},
	"SubString": {
		"original": "native SubString takes string source, integer start, integer end returns string",
		"fileName": "common.j",
		"name": "SubString",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "source"
		}, {
			"type": "integer",
			"name": "start"
		}, {
			"type": "integer",
			"name": "end"
		}],
		"returnType": "string",
		"insertText": "SubString(source, start, end)",
		"documentation": "截取字符串 [R]"
	},
	"StringLength": {
		"original": "native StringLength takes string s returns integer",
		"fileName": "common.j",
		"name": "StringLength",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "s"
		}],
		"returnType": "integer",
		"insertText": "StringLength(s)",
		"documentation": "字串符长度"
	},
	"StringCase": {
		"original": "native StringCase takes string source, boolean upper returns string",
		"fileName": "common.j",
		"name": "StringCase",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "source"
		}, {
			"type": "boolean",
			"name": "upper"
		}],
		"returnType": "string",
		"insertText": "StringCase(source, upper)",
		"documentation": "将字串符转换为大小写字母"
	},
	"StringHash": {
		"original": "\tfunction StringHash takes string s returns integer",
		"fileName": "YDWEStringHash.j",
		"name": "StringHash",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}],
		"returnType": "integer",
		"insertText": "StringHash(s)",
		"documentation": "获取字符串的哈希值"
	},
	"GetLocalizedString": {
		"original": "native GetLocalizedString takes string source returns string",
		"fileName": "common.j",
		"name": "GetLocalizedString",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "source"
		}],
		"returnType": "string",
		"insertText": "GetLocalizedString(source)",
		"documentation": "本地字符串 [R]"
	},
	"GetLocalizedHotkey": {
		"original": "native GetLocalizedHotkey takes string source returns integer",
		"fileName": "common.j",
		"name": "GetLocalizedHotkey",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "source"
		}],
		"returnType": "integer",
		"insertText": "GetLocalizedHotkey(source)",
		"documentation": "本地热键 "
	},
	"SetMapName": {
		"original": "native SetMapName           takes string name returns nothing",
		"fileName": "common.j",
		"name": "SetMapName",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "name"
		}],
		"insertText": "SetMapName(name)",
		"documentation": ""
	},
	"SetMapDescription": {
		"original": "native SetMapDescription    takes string description returns nothing",
		"fileName": "common.j",
		"name": "SetMapDescription",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "description"
		}],
		"insertText": "SetMapDescription(description)",
		"documentation": ""
	},
	"SetTeams": {
		"original": "native SetTeams             takes integer teamcount returns nothing",
		"fileName": "common.j",
		"name": "SetTeams",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "teamcount"
		}],
		"insertText": "SetTeams(teamcount)",
		"documentation": ""
	},
	"SetPlayers": {
		"original": "native SetPlayers           takes integer playercount returns nothing",
		"fileName": "common.j",
		"name": "SetPlayers",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "playercount"
		}],
		"insertText": "SetPlayers(playercount)",
		"documentation": ""
	},
	"DefineStartLocation": {
		"original": "native DefineStartLocation      takes integer whichStartLoc, real x, real y returns nothing",
		"fileName": "common.j",
		"name": "DefineStartLocation",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "whichStartLoc"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"insertText": "DefineStartLocation(whichStartLoc, x, y)",
		"documentation": ""
	},
	"DefineStartLocationLoc": {
		"original": "native DefineStartLocationLoc   takes integer whichStartLoc, location whichLocation returns nothing",
		"fileName": "common.j",
		"name": "DefineStartLocationLoc",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "whichStartLoc"
		}, {
			"type": "location",
			"name": "whichLocation"
		}],
		"insertText": "DefineStartLocationLoc(whichStartLoc, whichLocation)",
		"documentation": ""
	},
	"SetStartLocPrioCount": {
		"original": "native SetStartLocPrioCount     takes integer whichStartLoc, integer prioSlotCount returns nothing",
		"fileName": "common.j",
		"name": "SetStartLocPrioCount",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "whichStartLoc"
		}, {
			"type": "integer",
			"name": "prioSlotCount"
		}],
		"insertText": "SetStartLocPrioCount(whichStartLoc, prioSlotCount)",
		"documentation": ""
	},
	"SetStartLocPrio": {
		"original": "native SetStartLocPrio          takes integer whichStartLoc, integer prioSlotIndex, integer otherStartLocIndex, startlocprio priority returns nothing",
		"fileName": "common.j",
		"name": "SetStartLocPrio",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "whichStartLoc"
		}, {
			"type": "integer",
			"name": "prioSlotIndex"
		}, {
			"type": "integer",
			"name": "otherStartLocIndex"
		}, {
			"type": "startlocprio",
			"name": "priority"
		}],
		"insertText": "SetStartLocPrio(whichStartLoc, prioSlotIndex, otherStartLocIndex, priority)",
		"documentation": ""
	},
	"GetStartLocPrioSlot": {
		"original": "native GetStartLocPrioSlot      takes integer whichStartLoc, integer prioSlotIndex returns integer",
		"fileName": "common.j",
		"name": "GetStartLocPrioSlot",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "whichStartLoc"
		}, {
			"type": "integer",
			"name": "prioSlotIndex"
		}],
		"returnType": "integer",
		"insertText": "GetStartLocPrioSlot(whichStartLoc, prioSlotIndex)",
		"documentation": ""
	},
	"GetStartLocPrio": {
		"original": "native GetStartLocPrio          takes integer whichStartLoc, integer prioSlotIndex returns startlocprio",
		"fileName": "common.j",
		"name": "GetStartLocPrio",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "whichStartLoc"
		}, {
			"type": "integer",
			"name": "prioSlotIndex"
		}],
		"returnType": "startlocprio",
		"insertText": "GetStartLocPrio(whichStartLoc, prioSlotIndex)",
		"documentation": ""
	},
	"SetGameTypeSupported": {
		"original": "native SetGameTypeSupported takes gametype whichGameType, boolean value returns nothing",
		"fileName": "common.j",
		"name": "SetGameTypeSupported",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gametype",
			"name": "whichGameType"
		}, {
			"type": "boolean",
			"name": "value"
		}],
		"insertText": "SetGameTypeSupported(whichGameType, value)",
		"documentation": ""
	},
	"SetMapFlag": {
		"original": "native SetMapFlag           takes mapflag whichMapFlag, boolean value returns nothing",
		"fileName": "common.j",
		"name": "SetMapFlag",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "mapflag",
			"name": "whichMapFlag"
		}, {
			"type": "boolean",
			"name": "value"
		}],
		"insertText": "SetMapFlag(whichMapFlag, value)",
		"documentation": "设置地图参数"
	},
	"SetGamePlacement": {
		"original": "native SetGamePlacement     takes placement whichPlacementType returns nothing",
		"fileName": "common.j",
		"name": "SetGamePlacement",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "placement",
			"name": "whichPlacementType"
		}],
		"insertText": "SetGamePlacement(whichPlacementType)",
		"documentation": ""
	},
	"SetGameSpeed": {
		"original": "native SetGameSpeed         takes gamespeed whichspeed returns nothing",
		"fileName": "common.j",
		"name": "SetGameSpeed",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamespeed",
			"name": "whichspeed"
		}],
		"insertText": "SetGameSpeed(whichspeed)",
		"documentation": "设定游戏速度"
	},
	"SetGameDifficulty": {
		"original": "native SetGameDifficulty    takes gamedifficulty whichdifficulty returns nothing",
		"fileName": "common.j",
		"name": "SetGameDifficulty",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamedifficulty",
			"name": "whichdifficulty"
		}],
		"insertText": "SetGameDifficulty(whichdifficulty)",
		"documentation": "设置游戏难度 [R]"
	},
	"SetResourceDensity": {
		"original": "native SetResourceDensity   takes mapdensity whichdensity returns nothing",
		"fileName": "common.j",
		"name": "SetResourceDensity",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "mapdensity",
			"name": "whichdensity"
		}],
		"insertText": "SetResourceDensity(whichdensity)",
		"documentation": ""
	},
	"SetCreatureDensity": {
		"original": "native SetCreatureDensity   takes mapdensity whichdensity returns nothing",
		"fileName": "common.j",
		"name": "SetCreatureDensity",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "mapdensity",
			"name": "whichdensity"
		}],
		"insertText": "SetCreatureDensity(whichdensity)",
		"documentation": ""
	},
	"GetTeams": {
		"original": "native GetTeams             takes nothing returns integer",
		"fileName": "common.j",
		"name": "GetTeams",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "GetTeams()",
		"documentation": "队伍数量"
	},
	"GetPlayers": {
		"original": "native GetPlayers           takes nothing returns integer",
		"fileName": "common.j",
		"name": "GetPlayers",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "GetPlayers()",
		"documentation": "玩家数量"
	},
	"IsGameTypeSupported": {
		"original": "native IsGameTypeSupported  takes gametype whichGameType returns boolean",
		"fileName": "common.j",
		"name": "IsGameTypeSupported",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gametype",
			"name": "whichGameType"
		}],
		"returnType": "boolean",
		"insertText": "IsGameTypeSupported(whichGameType)",
		"documentation": ""
	},
	"GetGameTypeSelected": {
		"original": "native GetGameTypeSelected  takes nothing returns gametype",
		"fileName": "common.j",
		"name": "GetGameTypeSelected",
		"isConstant": false,
		"isNative": true,
		"returnType": "gametype",
		"insertText": "GetGameTypeSelected()",
		"documentation": ""
	},
	"IsMapFlagSet": {
		"original": "native IsMapFlagSet         takes mapflag whichMapFlag returns boolean",
		"fileName": "common.j",
		"name": "IsMapFlagSet",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "mapflag",
			"name": "whichMapFlag"
		}],
		"returnType": "boolean",
		"insertText": "IsMapFlagSet(whichMapFlag)",
		"documentation": "地图参数"
	},
	"GetGamePlacement": {
		"original": "constant native GetGamePlacement     takes nothing returns placement",
		"fileName": "common.j",
		"name": "GetGamePlacement",
		"isConstant": true,
		"isNative": true,
		"returnType": "placement",
		"insertText": "GetGamePlacement()",
		"documentation": ""
	},
	"GetGameSpeed": {
		"original": "constant native GetGameSpeed         takes nothing returns gamespeed",
		"fileName": "common.j",
		"name": "GetGameSpeed",
		"isConstant": true,
		"isNative": true,
		"returnType": "gamespeed",
		"insertText": "GetGameSpeed()",
		"documentation": "当前游戏速度"
	},
	"GetGameDifficulty": {
		"original": "constant native GetGameDifficulty    takes nothing returns gamedifficulty",
		"fileName": "common.j",
		"name": "GetGameDifficulty",
		"isConstant": true,
		"isNative": true,
		"returnType": "gamedifficulty",
		"insertText": "GetGameDifficulty()",
		"documentation": "难度等级"
	},
	"GetResourceDensity": {
		"original": "constant native GetResourceDensity   takes nothing returns mapdensity",
		"fileName": "common.j",
		"name": "GetResourceDensity",
		"isConstant": true,
		"isNative": true,
		"returnType": "mapdensity",
		"insertText": "GetResourceDensity()",
		"documentation": ""
	},
	"GetCreatureDensity": {
		"original": "constant native GetCreatureDensity   takes nothing returns mapdensity",
		"fileName": "common.j",
		"name": "GetCreatureDensity",
		"isConstant": true,
		"isNative": true,
		"returnType": "mapdensity",
		"insertText": "GetCreatureDensity()",
		"documentation": ""
	},
	"GetStartLocationX": {
		"original": "constant native GetStartLocationX    takes integer whichStartLocation returns real",
		"fileName": "common.j",
		"name": "GetStartLocationX",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "whichStartLocation"
		}],
		"returnType": "real",
		"insertText": "GetStartLocationX(whichStartLocation)",
		"documentation": ""
	},
	"GetStartLocationY": {
		"original": "constant native GetStartLocationY    takes integer whichStartLocation returns real",
		"fileName": "common.j",
		"name": "GetStartLocationY",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "whichStartLocation"
		}],
		"returnType": "real",
		"insertText": "GetStartLocationY(whichStartLocation)",
		"documentation": ""
	},
	"GetStartLocationLoc": {
		"original": "constant native GetStartLocationLoc  takes integer whichStartLocation returns location",
		"fileName": "common.j",
		"name": "GetStartLocationLoc",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "whichStartLocation"
		}],
		"returnType": "location",
		"insertText": "GetStartLocationLoc(whichStartLocation)",
		"documentation": ""
	},
	"SetPlayerTeam": {
		"original": "native SetPlayerTeam            takes player whichPlayer, integer whichTeam returns nothing",
		"fileName": "common.j",
		"name": "SetPlayerTeam",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "integer",
			"name": "whichTeam"
		}],
		"insertText": "SetPlayerTeam(whichPlayer, whichTeam)",
		"documentation": "设置玩家队伍"
	},
	"SetPlayerStartLocation": {
		"original": "native SetPlayerStartLocation   takes player whichPlayer, integer startLocIndex returns nothing",
		"fileName": "common.j",
		"name": "SetPlayerStartLocation",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "integer",
			"name": "startLocIndex"
		}],
		"insertText": "SetPlayerStartLocation(whichPlayer, startLocIndex)",
		"documentation": ""
	},
	"ForcePlayerStartLocation": {
		"original": "native ForcePlayerStartLocation takes player whichPlayer, integer startLocIndex returns nothing ",
		"fileName": "common.j",
		"name": "ForcePlayerStartLocation",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "integer",
			"name": "startLocIndex"
		}],
		"insertText": "ForcePlayerStartLocation(whichPlayer, startLocIndex)",
		"documentation": ""
	},
	"SetPlayerColor": {
		"original": "native SetPlayerColor           takes player whichPlayer, playercolor color returns nothing",
		"fileName": "common.j",
		"name": "SetPlayerColor",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "playercolor",
			"name": "color"
		}],
		"insertText": "SetPlayerColor(whichPlayer, color)",
		"documentation": "改变玩家颜色 [R]"
	},
	"SetPlayerAlliance": {
		"original": "native SetPlayerAlliance        takes player sourcePlayer, player otherPlayer, alliancetype whichAllianceSetting, boolean value returns nothing",
		"fileName": "common.j",
		"name": "SetPlayerAlliance",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "sourcePlayer"
		}, {
			"type": "player",
			"name": "otherPlayer"
		}, {
			"type": "alliancetype",
			"name": "whichAllianceSetting"
		}, {
			"type": "boolean",
			"name": "value"
		}],
		"insertText": "SetPlayerAlliance(sourcePlayer, otherPlayer, whichAllianceSetting, value)",
		"documentation": "设置联盟状态(指定项目) [R]"
	},
	"SetPlayerTaxRate": {
		"original": "native SetPlayerTaxRate         takes player sourcePlayer, player otherPlayer, playerstate whichResource, integer rate returns nothing",
		"fileName": "common.j",
		"name": "SetPlayerTaxRate",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "sourcePlayer"
		}, {
			"type": "player",
			"name": "otherPlayer"
		}, {
			"type": "playerstate",
			"name": "whichResource"
		}, {
			"type": "integer",
			"name": "rate"
		}],
		"insertText": "SetPlayerTaxRate(sourcePlayer, otherPlayer, whichResource, rate)",
		"documentation": "设置税率 [R]"
	},
	"SetPlayerRacePreference": {
		"original": "native SetPlayerRacePreference  takes player whichPlayer, racepreference whichRacePreference returns nothing",
		"fileName": "common.j",
		"name": "SetPlayerRacePreference",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "racepreference",
			"name": "whichRacePreference"
		}],
		"insertText": "SetPlayerRacePreference(whichPlayer, whichRacePreference)",
		"documentation": ""
	},
	"SetPlayerRaceSelectable": {
		"original": "native SetPlayerRaceSelectable  takes player whichPlayer, boolean value returns nothing",
		"fileName": "common.j",
		"name": "SetPlayerRaceSelectable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "boolean",
			"name": "value"
		}],
		"insertText": "SetPlayerRaceSelectable(whichPlayer, value)",
		"documentation": ""
	},
	"SetPlayerController": {
		"original": "native SetPlayerController      takes player whichPlayer, mapcontrol controlType returns nothing",
		"fileName": "common.j",
		"name": "SetPlayerController",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "mapcontrol",
			"name": "controlType"
		}],
		"insertText": "SetPlayerController(whichPlayer, controlType)",
		"documentation": ""
	},
	"SetPlayerName": {
		"original": "native SetPlayerName            takes player whichPlayer, string name returns nothing",
		"fileName": "common.j",
		"name": "SetPlayerName",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "name"
		}],
		"insertText": "SetPlayerName(whichPlayer, name)",
		"documentation": "设置玩家名字"
	},
	"SetPlayerOnScoreScreen": {
		"original": "native SetPlayerOnScoreScreen   takes player whichPlayer, boolean flag returns nothing",
		"fileName": "common.j",
		"name": "SetPlayerOnScoreScreen",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "SetPlayerOnScoreScreen(whichPlayer, flag)",
		"documentation": "显示/隐藏计分屏显示 [R]"
	},
	"GetPlayerTeam": {
		"original": "native GetPlayerTeam            takes player whichPlayer returns integer",
		"fileName": "common.j",
		"name": "GetPlayerTeam",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "integer",
		"insertText": "GetPlayerTeam(whichPlayer)",
		"documentation": "玩家在的队伍"
	},
	"GetPlayerStartLocation": {
		"original": "native GetPlayerStartLocation   takes player whichPlayer returns integer",
		"fileName": "common.j",
		"name": "GetPlayerStartLocation",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "integer",
		"insertText": "GetPlayerStartLocation(whichPlayer)",
		"documentation": ""
	},
	"GetPlayerColor": {
		"original": "native GetPlayerColor           takes player whichPlayer returns playercolor",
		"fileName": "common.j",
		"name": "GetPlayerColor",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "playercolor",
		"insertText": "GetPlayerColor(whichPlayer)",
		"documentation": "玩家的颜色"
	},
	"GetPlayerSelectable": {
		"original": "native GetPlayerSelectable      takes player whichPlayer returns boolean",
		"fileName": "common.j",
		"name": "GetPlayerSelectable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "boolean",
		"insertText": "GetPlayerSelectable(whichPlayer)",
		"documentation": ""
	},
	"GetPlayerController": {
		"original": "native GetPlayerController      takes player whichPlayer returns mapcontrol",
		"fileName": "common.j",
		"name": "GetPlayerController",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "mapcontrol",
		"insertText": "GetPlayerController(whichPlayer)",
		"documentation": "玩家控制者"
	},
	"GetPlayerSlotState": {
		"original": "native GetPlayerSlotState       takes player whichPlayer returns playerslotstate",
		"fileName": "common.j",
		"name": "GetPlayerSlotState",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "playerslotstate",
		"insertText": "GetPlayerSlotState(whichPlayer)",
		"documentation": "玩家游戏属性"
	},
	"GetPlayerTaxRate": {
		"original": "native GetPlayerTaxRate         takes player sourcePlayer, player otherPlayer, playerstate whichResource returns integer",
		"fileName": "common.j",
		"name": "GetPlayerTaxRate",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "sourcePlayer"
		}, {
			"type": "player",
			"name": "otherPlayer"
		}, {
			"type": "playerstate",
			"name": "whichResource"
		}],
		"returnType": "integer",
		"insertText": "GetPlayerTaxRate(sourcePlayer, otherPlayer, whichResource)",
		"documentation": "玩家税率 [R]"
	},
	"IsPlayerRacePrefSet": {
		"original": "native IsPlayerRacePrefSet      takes player whichPlayer, racepreference pref returns boolean",
		"fileName": "common.j",
		"name": "IsPlayerRacePrefSet",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "racepreference",
			"name": "pref"
		}],
		"returnType": "boolean",
		"insertText": "IsPlayerRacePrefSet(whichPlayer, pref)",
		"documentation": "玩家的种族选择"
	},
	"GetPlayerName": {
		"original": "native GetPlayerName            takes player whichPlayer returns string",
		"fileName": "common.j",
		"name": "GetPlayerName",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "string",
		"insertText": "GetPlayerName(whichPlayer)",
		"documentation": "玩家名字"
	},
	"CreateTimer": {
		"original": "native CreateTimer          takes nothing returns timer",
		"fileName": "common.j",
		"name": "CreateTimer",
		"isConstant": false,
		"isNative": true,
		"returnType": "timer",
		"insertText": "CreateTimer()",
		"documentation": "新建计时器 [R]"
	},
	"DestroyTimer": {
		"original": "native DestroyTimer         takes timer whichTimer returns nothing",
		"fileName": "common.j",
		"name": "DestroyTimer",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "timer",
			"name": "whichTimer"
		}],
		"insertText": "DestroyTimer(whichTimer)",
		"documentation": "删除计时器 [R]"
	},
	"TimerStart": {
		"original": "native TimerStart           takes timer whichTimer, real timeout, boolean periodic, code handlerFunc returns nothing",
		"fileName": "common.j",
		"name": "TimerStart",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "timer",
			"name": "whichTimer"
		}, {
			"type": "real",
			"name": "timeout"
		}, {
			"type": "boolean",
			"name": "periodic"
		}, {
			"type": "code",
			"name": "handlerFunc"
		}],
		"insertText": "TimerStart(whichTimer, timeout, periodic, handlerFunc)",
		"documentation": "运行计时器 [C]"
	},
	"TimerGetElapsed": {
		"original": "native TimerGetElapsed      takes timer whichTimer returns real",
		"fileName": "common.j",
		"name": "TimerGetElapsed",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "timer",
			"name": "whichTimer"
		}],
		"returnType": "real",
		"insertText": "TimerGetElapsed(whichTimer)",
		"documentation": "计时器经过的时间"
	},
	"TimerGetRemaining": {
		"original": "native TimerGetRemaining    takes timer whichTimer returns real",
		"fileName": "common.j",
		"name": "TimerGetRemaining",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "timer",
			"name": "whichTimer"
		}],
		"returnType": "real",
		"insertText": "TimerGetRemaining(whichTimer)",
		"documentation": "计时器剩余时间"
	},
	"TimerGetTimeout": {
		"original": "native TimerGetTimeout      takes timer whichTimer returns real",
		"fileName": "common.j",
		"name": "TimerGetTimeout",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "timer",
			"name": "whichTimer"
		}],
		"returnType": "real",
		"insertText": "TimerGetTimeout(whichTimer)",
		"documentation": "计时器初始的时间"
	},
	"PauseTimer": {
		"original": "native PauseTimer           takes timer whichTimer returns nothing",
		"fileName": "common.j",
		"name": "PauseTimer",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "timer",
			"name": "whichTimer"
		}],
		"insertText": "PauseTimer(whichTimer)",
		"documentation": "暂停计时器 [R]"
	},
	"ResumeTimer": {
		"original": "native ResumeTimer          takes timer whichTimer returns nothing",
		"fileName": "common.j",
		"name": "ResumeTimer",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "timer",
			"name": "whichTimer"
		}],
		"insertText": "ResumeTimer(whichTimer)",
		"documentation": "恢复计时器 [R]"
	},
	"GetExpiredTimer": {
		"original": "native GetExpiredTimer      takes nothing returns timer",
		"fileName": "common.j",
		"name": "GetExpiredTimer",
		"isConstant": false,
		"isNative": true,
		"returnType": "timer",
		"insertText": "GetExpiredTimer()",
		"documentation": "事件响应 - 计时器期满"
	},
	"CreateGroup": {
		"original": "native CreateGroup                          takes nothing returns group",
		"fileName": "common.j",
		"name": "CreateGroup",
		"isConstant": false,
		"isNative": true,
		"returnType": "group",
		"insertText": "CreateGroup()",
		"documentation": "新建的单位组 [R]"
	},
	"DestroyGroup": {
		"original": "native DestroyGroup                         takes group whichGroup returns nothing",
		"fileName": "common.j",
		"name": "DestroyGroup",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}],
		"insertText": "DestroyGroup(whichGroup)",
		"documentation": "删除单位组 [R]"
	},
	"GroupAddUnit": {
		"original": "native GroupAddUnit                         takes group whichGroup, unit whichUnit returns nothing",
		"fileName": "common.j",
		"name": "GroupAddUnit",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"insertText": "GroupAddUnit(whichGroup, whichUnit)",
		"documentation": "添加单位 [R]"
	},
	"GroupRemoveUnit": {
		"original": "native GroupRemoveUnit                      takes group whichGroup, unit whichUnit returns nothing",
		"fileName": "common.j",
		"name": "GroupRemoveUnit",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"insertText": "GroupRemoveUnit(whichGroup, whichUnit)",
		"documentation": "移除单位 [R]"
	},
	"GroupClear": {
		"original": "native GroupClear                           takes group whichGroup returns nothing",
		"fileName": "common.j",
		"name": "GroupClear",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}],
		"insertText": "GroupClear(whichGroup)",
		"documentation": "清除"
	},
	"GroupEnumUnitsOfType": {
		"original": "native GroupEnumUnitsOfType                 takes group whichGroup, string unitname, boolexpr filter returns nothing",
		"fileName": "common.j",
		"name": "GroupEnumUnitsOfType",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}, {
			"type": "string",
			"name": "unitname"
		}, {
			"type": "boolexpr",
			"name": "filter"
		}],
		"insertText": "GroupEnumUnitsOfType(whichGroup, unitname, filter)",
		"documentation": ""
	},
	"GroupEnumUnitsOfPlayer": {
		"original": "native GroupEnumUnitsOfPlayer               takes group whichGroup, player whichPlayer, boolexpr filter returns nothing",
		"fileName": "common.j",
		"name": "GroupEnumUnitsOfPlayer",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "boolexpr",
			"name": "filter"
		}],
		"insertText": "GroupEnumUnitsOfPlayer(whichGroup, whichPlayer, filter)",
		"documentation": ""
	},
	"GroupEnumUnitsOfTypeCounted": {
		"original": "native GroupEnumUnitsOfTypeCounted          takes group whichGroup, string unitname, boolexpr filter, integer countLimit returns nothing",
		"fileName": "common.j",
		"name": "GroupEnumUnitsOfTypeCounted",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}, {
			"type": "string",
			"name": "unitname"
		}, {
			"type": "boolexpr",
			"name": "filter"
		}, {
			"type": "integer",
			"name": "countLimit"
		}],
		"insertText": "GroupEnumUnitsOfTypeCounted(whichGroup, unitname, filter, countLimit)",
		"documentation": ""
	},
	"GroupEnumUnitsInRect": {
		"original": "native GroupEnumUnitsInRect                 takes group whichGroup, rect r, boolexpr filter returns nothing",
		"fileName": "common.j",
		"name": "GroupEnumUnitsInRect",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}, {
			"type": "rect",
			"name": "r"
		}, {
			"type": "boolexpr",
			"name": "filter"
		}],
		"insertText": "GroupEnumUnitsInRect(whichGroup, r, filter)",
		"documentation": ""
	},
	"GroupEnumUnitsInRectCounted": {
		"original": "native GroupEnumUnitsInRectCounted          takes group whichGroup, rect r, boolexpr filter, integer countLimit returns nothing",
		"fileName": "common.j",
		"name": "GroupEnumUnitsInRectCounted",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}, {
			"type": "rect",
			"name": "r"
		}, {
			"type": "boolexpr",
			"name": "filter"
		}, {
			"type": "integer",
			"name": "countLimit"
		}],
		"insertText": "GroupEnumUnitsInRectCounted(whichGroup, r, filter, countLimit)",
		"documentation": ""
	},
	"GroupEnumUnitsInRange": {
		"original": "native GroupEnumUnitsInRange                takes group whichGroup, real x, real y, real radius, boolexpr filter returns nothing",
		"fileName": "common.j",
		"name": "GroupEnumUnitsInRange",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "radius"
		}, {
			"type": "boolexpr",
			"name": "filter"
		}],
		"insertText": "GroupEnumUnitsInRange(whichGroup, x, y, radius, filter)",
		"documentation": "选取单位添加到单位组(坐标)"
	},
	"GroupEnumUnitsInRangeOfLoc": {
		"original": "native GroupEnumUnitsInRangeOfLoc           takes group whichGroup, location whichLocation, real radius, boolexpr filter returns nothing",
		"fileName": "common.j",
		"name": "GroupEnumUnitsInRangeOfLoc",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}, {
			"type": "location",
			"name": "whichLocation"
		}, {
			"type": "real",
			"name": "radius"
		}, {
			"type": "boolexpr",
			"name": "filter"
		}],
		"insertText": "GroupEnumUnitsInRangeOfLoc(whichGroup, whichLocation, radius, filter)",
		"documentation": "选取单位添加到单位组(点)"
	},
	"GroupEnumUnitsInRangeCounted": {
		"original": "native GroupEnumUnitsInRangeCounted         takes group whichGroup, real x, real y, real radius, boolexpr filter, integer countLimit returns nothing",
		"fileName": "common.j",
		"name": "GroupEnumUnitsInRangeCounted",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "radius"
		}, {
			"type": "boolexpr",
			"name": "filter"
		}, {
			"type": "integer",
			"name": "countLimit"
		}],
		"insertText": "GroupEnumUnitsInRangeCounted(whichGroup, x, y, radius, filter, countLimit)",
		"documentation": "选取单位添加到单位组(坐标)(不建议使用)"
	},
	"GroupEnumUnitsInRangeOfLocCounted": {
		"original": "native GroupEnumUnitsInRangeOfLocCounted    takes group whichGroup, location whichLocation, real radius, boolexpr filter, integer countLimit returns nothing",
		"fileName": "common.j",
		"name": "GroupEnumUnitsInRangeOfLocCounted",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}, {
			"type": "location",
			"name": "whichLocation"
		}, {
			"type": "real",
			"name": "radius"
		}, {
			"type": "boolexpr",
			"name": "filter"
		}, {
			"type": "integer",
			"name": "countLimit"
		}],
		"insertText": "GroupEnumUnitsInRangeOfLocCounted(whichGroup, whichLocation, radius, filter, countLimit)",
		"documentation": "选取单位添加到单位组(点)(不建议使用)"
	},
	"GroupEnumUnitsSelected": {
		"original": "native GroupEnumUnitsSelected               takes group whichGroup, player whichPlayer, boolexpr filter returns nothing",
		"fileName": "common.j",
		"name": "GroupEnumUnitsSelected",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "boolexpr",
			"name": "filter"
		}],
		"insertText": "GroupEnumUnitsSelected(whichGroup, whichPlayer, filter)",
		"documentation": ""
	},
	"GroupImmediateOrder": {
		"original": "native GroupImmediateOrder                  takes group whichGroup, string order returns boolean",
		"fileName": "common.j",
		"name": "GroupImmediateOrder",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}, {
			"type": "string",
			"name": "order"
		}],
		"returnType": "boolean",
		"insertText": "GroupImmediateOrder(whichGroup, order)",
		"documentation": "发送单位组命令到 没有目标"
	},
	"GroupImmediateOrderById": {
		"original": "native GroupImmediateOrderById              takes group whichGroup, integer order returns boolean",
		"fileName": "common.j",
		"name": "GroupImmediateOrderById",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}, {
			"type": "integer",
			"name": "order"
		}],
		"returnType": "boolean",
		"insertText": "GroupImmediateOrderById(whichGroup, order)",
		"documentation": "发布命令(无目标)(ID)"
	},
	"GroupPointOrder": {
		"original": "native GroupPointOrder                      takes group whichGroup, string order, real x, real y returns boolean",
		"fileName": "common.j",
		"name": "GroupPointOrder",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}, {
			"type": "string",
			"name": "order"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"returnType": "boolean",
		"insertText": "GroupPointOrder(whichGroup, order, x, y)",
		"documentation": "发布命令(指定坐标) [R]"
	},
	"GroupPointOrderLoc": {
		"original": "native GroupPointOrderLoc                   takes group whichGroup, string order, location whichLocation returns boolean",
		"fileName": "common.j",
		"name": "GroupPointOrderLoc",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}, {
			"type": "string",
			"name": "order"
		}, {
			"type": "location",
			"name": "whichLocation"
		}],
		"returnType": "boolean",
		"insertText": "GroupPointOrderLoc(whichGroup, order, whichLocation)",
		"documentation": "发送单位组命令到 点"
	},
	"GroupPointOrderById": {
		"original": "native GroupPointOrderById                  takes group whichGroup, integer order, real x, real y returns boolean",
		"fileName": "common.j",
		"name": "GroupPointOrderById",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}, {
			"type": "integer",
			"name": "order"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"returnType": "boolean",
		"insertText": "GroupPointOrderById(whichGroup, order, x, y)",
		"documentation": "发布命令(指定坐标)(ID)"
	},
	"GroupPointOrderByIdLoc": {
		"original": "native GroupPointOrderByIdLoc               takes group whichGroup, integer order, location whichLocation returns boolean",
		"fileName": "common.j",
		"name": "GroupPointOrderByIdLoc",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}, {
			"type": "integer",
			"name": "order"
		}, {
			"type": "location",
			"name": "whichLocation"
		}],
		"returnType": "boolean",
		"insertText": "GroupPointOrderByIdLoc(whichGroup, order, whichLocation)",
		"documentation": "发布命令(指定点)(ID)"
	},
	"GroupTargetOrder": {
		"original": "native GroupTargetOrder                     takes group whichGroup, string order, widget targetWidget returns boolean",
		"fileName": "common.j",
		"name": "GroupTargetOrder",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}, {
			"type": "string",
			"name": "order"
		}, {
			"type": "widget",
			"name": "targetWidget"
		}],
		"returnType": "boolean",
		"insertText": "GroupTargetOrder(whichGroup, order, targetWidget)",
		"documentation": "发送单位组命令到 单位"
	},
	"GroupTargetOrderById": {
		"original": "native GroupTargetOrderById                 takes group whichGroup, integer order, widget targetWidget returns boolean",
		"fileName": "common.j",
		"name": "GroupTargetOrderById",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}, {
			"type": "integer",
			"name": "order"
		}, {
			"type": "widget",
			"name": "targetWidget"
		}],
		"returnType": "boolean",
		"insertText": "GroupTargetOrderById(whichGroup, order, targetWidget)",
		"documentation": "发布命令(指定单位)(ID)"
	},
	"ForGroup": {
		"original": "native ForGroup                 takes group whichGroup, code callback returns nothing",
		"fileName": "common.j",
		"name": "ForGroup",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}, {
			"type": "code",
			"name": "callback"
		}],
		"insertText": "ForGroup(whichGroup, callback)",
		"documentation": "选取所有单位在单位组做 多动作"
	},
	"FirstOfGroup": {
		"original": "native FirstOfGroup             takes group whichGroup returns unit",
		"fileName": "common.j",
		"name": "FirstOfGroup",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "group",
			"name": "whichGroup"
		}],
		"returnType": "unit",
		"insertText": "FirstOfGroup(whichGroup)",
		"documentation": "单位组中第一个单位"
	},
	"CreateForce": {
		"original": "native CreateForce              takes nothing returns force",
		"fileName": "common.j",
		"name": "CreateForce",
		"isConstant": false,
		"isNative": true,
		"returnType": "force",
		"insertText": "CreateForce()",
		"documentation": "新建玩家组 [R]"
	},
	"DestroyForce": {
		"original": "native DestroyForce             takes force whichForce returns nothing",
		"fileName": "common.j",
		"name": "DestroyForce",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "force",
			"name": "whichForce"
		}],
		"insertText": "DestroyForce(whichForce)",
		"documentation": "删除玩家组 [R]"
	},
	"ForceAddPlayer": {
		"original": "native ForceAddPlayer           takes force whichForce, player whichPlayer returns nothing",
		"fileName": "common.j",
		"name": "ForceAddPlayer",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "force",
			"name": "whichForce"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "ForceAddPlayer(whichForce, whichPlayer)",
		"documentation": "添加玩家 [R]"
	},
	"ForceRemovePlayer": {
		"original": "native ForceRemovePlayer        takes force whichForce, player whichPlayer returns nothing",
		"fileName": "common.j",
		"name": "ForceRemovePlayer",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "force",
			"name": "whichForce"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "ForceRemovePlayer(whichForce, whichPlayer)",
		"documentation": "移除玩家 [R]"
	},
	"ForceClear": {
		"original": "native ForceClear               takes force whichForce returns nothing",
		"fileName": "common.j",
		"name": "ForceClear",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "force",
			"name": "whichForce"
		}],
		"insertText": "ForceClear(whichForce)",
		"documentation": "清除玩家"
	},
	"ForceEnumPlayers": {
		"original": "native ForceEnumPlayers         takes force whichForce, boolexpr filter returns nothing",
		"fileName": "common.j",
		"name": "ForceEnumPlayers",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "force",
			"name": "whichForce"
		}, {
			"type": "boolexpr",
			"name": "filter"
		}],
		"insertText": "ForceEnumPlayers(whichForce, filter)",
		"documentation": ""
	},
	"ForceEnumPlayersCounted": {
		"original": "native ForceEnumPlayersCounted  takes force whichForce, boolexpr filter, integer countLimit returns nothing",
		"fileName": "common.j",
		"name": "ForceEnumPlayersCounted",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "force",
			"name": "whichForce"
		}, {
			"type": "boolexpr",
			"name": "filter"
		}, {
			"type": "integer",
			"name": "countLimit"
		}],
		"insertText": "ForceEnumPlayersCounted(whichForce, filter, countLimit)",
		"documentation": ""
	},
	"ForceEnumAllies": {
		"original": "native ForceEnumAllies          takes force whichForce, player whichPlayer, boolexpr filter returns nothing",
		"fileName": "common.j",
		"name": "ForceEnumAllies",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "force",
			"name": "whichForce"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "boolexpr",
			"name": "filter"
		}],
		"insertText": "ForceEnumAllies(whichForce, whichPlayer, filter)",
		"documentation": ""
	},
	"ForceEnumEnemies": {
		"original": "native ForceEnumEnemies         takes force whichForce, player whichPlayer, boolexpr filter returns nothing",
		"fileName": "common.j",
		"name": "ForceEnumEnemies",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "force",
			"name": "whichForce"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "boolexpr",
			"name": "filter"
		}],
		"insertText": "ForceEnumEnemies(whichForce, whichPlayer, filter)",
		"documentation": ""
	},
	"ForForce": {
		"original": "native ForForce                 takes force whichForce, code callback returns nothing",
		"fileName": "common.j",
		"name": "ForForce",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "force",
			"name": "whichForce"
		}, {
			"type": "code",
			"name": "callback"
		}],
		"insertText": "ForForce(whichForce, callback)",
		"documentation": "选取所有玩家在玩家组做动作(单一的)"
	},
	"Rect": {
		"original": "native Rect                     takes real minx, real miny, real maxx, real maxy returns rect",
		"fileName": "common.j",
		"name": "Rect",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "minx"
		}, {
			"type": "real",
			"name": "miny"
		}, {
			"type": "real",
			"name": "maxx"
		}, {
			"type": "real",
			"name": "maxy"
		}],
		"returnType": "rect",
		"insertText": "Rect(minx, miny, maxx, maxy)",
		"documentation": "将坐标转换为区域"
	},
	"RectFromLoc": {
		"original": "native RectFromLoc              takes location min, location max returns rect",
		"fileName": "common.j",
		"name": "RectFromLoc",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "location",
			"name": "min"
		}, {
			"type": "location",
			"name": "max"
		}],
		"returnType": "rect",
		"insertText": "RectFromLoc(min, max)",
		"documentation": "将点转换为区域"
	},
	"RemoveRect": {
		"original": "native RemoveRect               takes rect whichRect returns nothing",
		"fileName": "common.j",
		"name": "RemoveRect",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "rect",
			"name": "whichRect"
		}],
		"insertText": "RemoveRect(whichRect)",
		"documentation": "删除矩形区域 [R]"
	},
	"SetRect": {
		"original": "native SetRect                  takes rect whichRect, real minx, real miny, real maxx, real maxy returns nothing",
		"fileName": "common.j",
		"name": "SetRect",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "rect",
			"name": "whichRect"
		}, {
			"type": "real",
			"name": "minx"
		}, {
			"type": "real",
			"name": "miny"
		}, {
			"type": "real",
			"name": "maxx"
		}, {
			"type": "real",
			"name": "maxy"
		}],
		"insertText": "SetRect(whichRect, minx, miny, maxx, maxy)",
		"documentation": "设置矩形区域(指定坐标) [R]"
	},
	"SetRectFromLoc": {
		"original": "native SetRectFromLoc           takes rect whichRect, location min, location max returns nothing",
		"fileName": "common.j",
		"name": "SetRectFromLoc",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "rect",
			"name": "whichRect"
		}, {
			"type": "location",
			"name": "min"
		}, {
			"type": "location",
			"name": "max"
		}],
		"insertText": "SetRectFromLoc(whichRect, min, max)",
		"documentation": "设置矩形区域(指定点) [R]"
	},
	"MoveRectTo": {
		"original": "native MoveRectTo               takes rect whichRect, real newCenterX, real newCenterY returns nothing",
		"fileName": "common.j",
		"name": "MoveRectTo",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "rect",
			"name": "whichRect"
		}, {
			"type": "real",
			"name": "newCenterX"
		}, {
			"type": "real",
			"name": "newCenterY"
		}],
		"insertText": "MoveRectTo(whichRect, newCenterX, newCenterY)",
		"documentation": "移动矩形区域(指定坐标) [R]"
	},
	"MoveRectToLoc": {
		"original": "native MoveRectToLoc            takes rect whichRect, location newCenterLoc returns nothing",
		"fileName": "common.j",
		"name": "MoveRectToLoc",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "rect",
			"name": "whichRect"
		}, {
			"type": "location",
			"name": "newCenterLoc"
		}],
		"insertText": "MoveRectToLoc(whichRect, newCenterLoc)",
		"documentation": "移动区域"
	},
	"GetRectCenterX": {
		"original": "native GetRectCenterX           takes rect whichRect returns real",
		"fileName": "common.j",
		"name": "GetRectCenterX",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "rect",
			"name": "whichRect"
		}],
		"returnType": "real",
		"insertText": "GetRectCenterX(whichRect)",
		"documentation": "区域中心的 X 坐标"
	},
	"GetRectCenterY": {
		"original": "native GetRectCenterY           takes rect whichRect returns real",
		"fileName": "common.j",
		"name": "GetRectCenterY",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "rect",
			"name": "whichRect"
		}],
		"returnType": "real",
		"insertText": "GetRectCenterY(whichRect)",
		"documentation": "区域中心的 Y 坐标"
	},
	"GetRectMinX": {
		"original": "native GetRectMinX              takes rect whichRect returns real",
		"fileName": "common.j",
		"name": "GetRectMinX",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "rect",
			"name": "whichRect"
		}],
		"returnType": "real",
		"insertText": "GetRectMinX(whichRect)",
		"documentation": "区域最小 X 坐标"
	},
	"GetRectMinY": {
		"original": "native GetRectMinY              takes rect whichRect returns real",
		"fileName": "common.j",
		"name": "GetRectMinY",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "rect",
			"name": "whichRect"
		}],
		"returnType": "real",
		"insertText": "GetRectMinY(whichRect)",
		"documentation": "区域最小 Y 坐标"
	},
	"GetRectMaxX": {
		"original": "native GetRectMaxX              takes rect whichRect returns real",
		"fileName": "common.j",
		"name": "GetRectMaxX",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "rect",
			"name": "whichRect"
		}],
		"returnType": "real",
		"insertText": "GetRectMaxX(whichRect)",
		"documentation": "区域最大 X 坐标"
	},
	"GetRectMaxY": {
		"original": "native GetRectMaxY              takes rect whichRect returns real",
		"fileName": "common.j",
		"name": "GetRectMaxY",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "rect",
			"name": "whichRect"
		}],
		"returnType": "real",
		"insertText": "GetRectMaxY(whichRect)",
		"documentation": "区域最大 Y 坐标"
	},
	"CreateRegion": {
		"original": "native CreateRegion             takes nothing returns region",
		"fileName": "common.j",
		"name": "CreateRegion",
		"isConstant": false,
		"isNative": true,
		"returnType": "region",
		"insertText": "CreateRegion()",
		"documentation": "新建区域 [R]"
	},
	"RemoveRegion": {
		"original": "native RemoveRegion             takes region whichRegion returns nothing",
		"fileName": "common.j",
		"name": "RemoveRegion",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "region",
			"name": "whichRegion"
		}],
		"insertText": "RemoveRegion(whichRegion)",
		"documentation": "删除不规则区域 [R]"
	},
	"RegionAddRect": {
		"original": "native RegionAddRect            takes region whichRegion, rect r returns nothing",
		"fileName": "common.j",
		"name": "RegionAddRect",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "region",
			"name": "whichRegion"
		}, {
			"type": "rect",
			"name": "r"
		}],
		"insertText": "RegionAddRect(whichRegion, r)",
		"documentation": "添加区域 [R]"
	},
	"RegionClearRect": {
		"original": "native RegionClearRect          takes region whichRegion, rect r returns nothing",
		"fileName": "common.j",
		"name": "RegionClearRect",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "region",
			"name": "whichRegion"
		}, {
			"type": "rect",
			"name": "r"
		}],
		"insertText": "RegionClearRect(whichRegion, r)",
		"documentation": "移除区域 [R]"
	},
	"RegionAddCell": {
		"original": "native RegionAddCell           takes region whichRegion, real x, real y returns nothing",
		"fileName": "common.j",
		"name": "RegionAddCell",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "region",
			"name": "whichRegion"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"insertText": "RegionAddCell(whichRegion, x, y)",
		"documentation": "添加单元点(指定坐标) [R]"
	},
	"RegionAddCellAtLoc": {
		"original": "native RegionAddCellAtLoc      takes region whichRegion, location whichLocation returns nothing",
		"fileName": "common.j",
		"name": "RegionAddCellAtLoc",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "region",
			"name": "whichRegion"
		}, {
			"type": "location",
			"name": "whichLocation"
		}],
		"insertText": "RegionAddCellAtLoc(whichRegion, whichLocation)",
		"documentation": "添加单元点(指定点) [R]"
	},
	"RegionClearCell": {
		"original": "native RegionClearCell         takes region whichRegion, real x, real y returns nothing",
		"fileName": "common.j",
		"name": "RegionClearCell",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "region",
			"name": "whichRegion"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"insertText": "RegionClearCell(whichRegion, x, y)",
		"documentation": "移除单元点(指定坐标) [R]"
	},
	"RegionClearCellAtLoc": {
		"original": "native RegionClearCellAtLoc    takes region whichRegion, location whichLocation returns nothing",
		"fileName": "common.j",
		"name": "RegionClearCellAtLoc",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "region",
			"name": "whichRegion"
		}, {
			"type": "location",
			"name": "whichLocation"
		}],
		"insertText": "RegionClearCellAtLoc(whichRegion, whichLocation)",
		"documentation": "移除单元点(指定点) [R]"
	},
	"Location": {
		"original": "native Location                 takes real x, real y returns location",
		"fileName": "common.j",
		"name": "Location",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"returnType": "location",
		"insertText": "Location(x, y)",
		"documentation": "转换坐标到点"
	},
	"RemoveLocation": {
		"original": "native RemoveLocation           takes location whichLocation returns nothing",
		"fileName": "common.j",
		"name": "RemoveLocation",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "location",
			"name": "whichLocation"
		}],
		"insertText": "RemoveLocation(whichLocation)",
		"documentation": "清除点 [R]"
	},
	"MoveLocation": {
		"original": "native MoveLocation             takes location whichLocation, real newX, real newY returns nothing",
		"fileName": "common.j",
		"name": "MoveLocation",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "location",
			"name": "whichLocation"
		}, {
			"type": "real",
			"name": "newX"
		}, {
			"type": "real",
			"name": "newY"
		}],
		"insertText": "MoveLocation(whichLocation, newX, newY)",
		"documentation": "移动点 [R]"
	},
	"GetLocationX": {
		"original": "native GetLocationX             takes location whichLocation returns real",
		"fileName": "common.j",
		"name": "GetLocationX",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "location",
			"name": "whichLocation"
		}],
		"returnType": "real",
		"insertText": "GetLocationX(whichLocation)",
		"documentation": "X 坐标"
	},
	"GetLocationY": {
		"original": "native GetLocationY             takes location whichLocation returns real",
		"fileName": "common.j",
		"name": "GetLocationY",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "location",
			"name": "whichLocation"
		}],
		"returnType": "real",
		"insertText": "GetLocationY(whichLocation)",
		"documentation": "Y 坐标"
	},
	"GetLocationZ": {
		"original": "native GetLocationZ             takes location whichLocation returns real",
		"fileName": "common.j",
		"name": "GetLocationZ",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "location",
			"name": "whichLocation"
		}],
		"returnType": "real",
		"insertText": "GetLocationZ(whichLocation)",
		"documentation": "点的Z轴高度 [R]"
	},
	"IsUnitInRegion": {
		"original": "native IsUnitInRegion               takes region whichRegion, unit whichUnit returns boolean",
		"fileName": "common.j",
		"name": "IsUnitInRegion",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "region",
			"name": "whichRegion"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitInRegion(whichRegion, whichUnit)",
		"documentation": "在不规则区域内 [R]"
	},
	"IsPointInRegion": {
		"original": "native IsPointInRegion              takes region whichRegion, real x, real y returns boolean",
		"fileName": "common.j",
		"name": "IsPointInRegion",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "region",
			"name": "whichRegion"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"returnType": "boolean",
		"insertText": "IsPointInRegion(whichRegion, x, y)",
		"documentation": "包含坐标"
	},
	"IsLocationInRegion": {
		"original": "native IsLocationInRegion           takes region whichRegion, location whichLocation returns boolean",
		"fileName": "common.j",
		"name": "IsLocationInRegion",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "region",
			"name": "whichRegion"
		}, {
			"type": "location",
			"name": "whichLocation"
		}],
		"returnType": "boolean",
		"insertText": "IsLocationInRegion(whichRegion, whichLocation)",
		"documentation": "包含点"
	},
	"GetWorldBounds": {
		"original": "native GetWorldBounds           takes nothing returns rect",
		"fileName": "common.j",
		"name": "GetWorldBounds",
		"isConstant": false,
		"isNative": true,
		"returnType": "rect",
		"insertText": "GetWorldBounds()",
		"documentation": ""
	},
	"CreateTrigger": {
		"original": "native CreateTrigger    takes nothing returns trigger",
		"fileName": "common.j",
		"name": "CreateTrigger",
		"isConstant": false,
		"isNative": true,
		"returnType": "trigger",
		"insertText": "CreateTrigger()",
		"documentation": "新建触发 [R]"
	},
	"DestroyTrigger": {
		"original": "native DestroyTrigger   takes trigger whichTrigger returns nothing",
		"fileName": "common.j",
		"name": "DestroyTrigger",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}],
		"insertText": "DestroyTrigger(whichTrigger)",
		"documentation": "删除触发器 [R]"
	},
	"ResetTrigger": {
		"original": "native ResetTrigger     takes trigger whichTrigger returns nothing",
		"fileName": "common.j",
		"name": "ResetTrigger",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}],
		"insertText": "ResetTrigger(whichTrigger)",
		"documentation": ""
	},
	"EnableTrigger": {
		"original": "native EnableTrigger    takes trigger whichTrigger returns nothing",
		"fileName": "common.j",
		"name": "EnableTrigger",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}],
		"insertText": "EnableTrigger(whichTrigger)",
		"documentation": "打开触发器"
	},
	"DisableTrigger": {
		"original": "native DisableTrigger   takes trigger whichTrigger returns nothing",
		"fileName": "common.j",
		"name": "DisableTrigger",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}],
		"insertText": "DisableTrigger(whichTrigger)",
		"documentation": "关掉触发器"
	},
	"IsTriggerEnabled": {
		"original": "native IsTriggerEnabled takes trigger whichTrigger returns boolean",
		"fileName": "common.j",
		"name": "IsTriggerEnabled",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}],
		"returnType": "boolean",
		"insertText": "IsTriggerEnabled(whichTrigger)",
		"documentation": "触发器打开"
	},
	"TriggerWaitOnSleeps": {
		"original": "native TriggerWaitOnSleeps   takes trigger whichTrigger, boolean flag returns nothing",
		"fileName": "common.j",
		"name": "TriggerWaitOnSleeps",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "TriggerWaitOnSleeps(whichTrigger, flag)",
		"documentation": ""
	},
	"IsTriggerWaitOnSleeps": {
		"original": "native IsTriggerWaitOnSleeps takes trigger whichTrigger returns boolean",
		"fileName": "common.j",
		"name": "IsTriggerWaitOnSleeps",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}],
		"returnType": "boolean",
		"insertText": "IsTriggerWaitOnSleeps(whichTrigger)",
		"documentation": ""
	},
	"GetFilterUnit": {
		"original": "constant native GetFilterUnit       takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetFilterUnit",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetFilterUnit()",
		"documentation": "匹配的单位"
	},
	"GetEnumUnit": {
		"original": "constant native GetEnumUnit         takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetEnumUnit",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetEnumUnit()",
		"documentation": "选取的单位"
	},
	"GetFilterDestructable": {
		"original": "constant native GetFilterDestructable   takes nothing returns destructable",
		"fileName": "common.j",
		"name": "GetFilterDestructable",
		"isConstant": true,
		"isNative": true,
		"returnType": "destructable",
		"insertText": "GetFilterDestructable()",
		"documentation": "匹配的可毁坏物"
	},
	"GetEnumDestructable": {
		"original": "constant native GetEnumDestructable     takes nothing returns destructable",
		"fileName": "common.j",
		"name": "GetEnumDestructable",
		"isConstant": true,
		"isNative": true,
		"returnType": "destructable",
		"insertText": "GetEnumDestructable()",
		"documentation": "选取的可毁坏物"
	},
	"GetFilterItem": {
		"original": "constant native GetFilterItem           takes nothing returns item",
		"fileName": "common.j",
		"name": "GetFilterItem",
		"isConstant": true,
		"isNative": true,
		"returnType": "item",
		"insertText": "GetFilterItem()",
		"documentation": "匹配的物品"
	},
	"GetEnumItem": {
		"original": "constant native GetEnumItem             takes nothing returns item",
		"fileName": "common.j",
		"name": "GetEnumItem",
		"isConstant": true,
		"isNative": true,
		"returnType": "item",
		"insertText": "GetEnumItem()",
		"documentation": "选取的物品"
	},
	"GetFilterPlayer": {
		"original": "constant native GetFilterPlayer     takes nothing returns player",
		"fileName": "common.j",
		"name": "GetFilterPlayer",
		"isConstant": true,
		"isNative": true,
		"returnType": "player",
		"insertText": "GetFilterPlayer()",
		"documentation": "匹配的玩家"
	},
	"GetEnumPlayer": {
		"original": "constant native GetEnumPlayer       takes nothing returns player",
		"fileName": "common.j",
		"name": "GetEnumPlayer",
		"isConstant": true,
		"isNative": true,
		"returnType": "player",
		"insertText": "GetEnumPlayer()",
		"documentation": "选取的玩家"
	},
	"GetTriggeringTrigger": {
		"original": "constant native GetTriggeringTrigger    takes nothing returns trigger",
		"fileName": "common.j",
		"name": "GetTriggeringTrigger",
		"isConstant": true,
		"isNative": true,
		"returnType": "trigger",
		"insertText": "GetTriggeringTrigger()",
		"documentation": "当前触发器"
	},
	"GetTriggerEventId": {
		"original": "constant native GetTriggerEventId       takes nothing returns eventid",
		"fileName": "common.j",
		"name": "GetTriggerEventId",
		"isConstant": true,
		"isNative": true,
		"returnType": "eventid",
		"insertText": "GetTriggerEventId()",
		"documentation": ""
	},
	"GetTriggerEvalCount": {
		"original": "constant native GetTriggerEvalCount     takes trigger whichTrigger returns integer",
		"fileName": "common.j",
		"name": "GetTriggerEvalCount",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}],
		"returnType": "integer",
		"insertText": "GetTriggerEvalCount(whichTrigger)",
		"documentation": "触发器赋值统计"
	},
	"GetTriggerExecCount": {
		"original": "constant native GetTriggerExecCount     takes trigger whichTrigger returns integer",
		"fileName": "common.j",
		"name": "GetTriggerExecCount",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}],
		"returnType": "integer",
		"insertText": "GetTriggerExecCount(whichTrigger)",
		"documentation": "触发器运行次数统计"
	},
	"ExecuteFunc": {
		"original": "native ExecuteFunc          takes string funcName returns nothing",
		"fileName": "common.j",
		"name": "ExecuteFunc",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "funcName"
		}],
		"insertText": "ExecuteFunc(funcName)",
		"documentation": "运行函数 [R]"
	},
	"And": {
		"original": "native And              takes boolexpr operandA, boolexpr operandB returns boolexpr",
		"fileName": "common.j",
		"name": "And",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolexpr",
			"name": "operandA"
		}, {
			"type": "boolexpr",
			"name": "operandB"
		}],
		"returnType": "boolexpr",
		"insertText": "And(operandA, operandB)",
		"documentation": ""
	},
	"Or": {
		"original": "native Or               takes boolexpr operandA, boolexpr operandB returns boolexpr",
		"fileName": "common.j",
		"name": "Or",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolexpr",
			"name": "operandA"
		}, {
			"type": "boolexpr",
			"name": "operandB"
		}],
		"returnType": "boolexpr",
		"insertText": "Or(operandA, operandB)",
		"documentation": ""
	},
	"Not": {
		"original": "native Not              takes boolexpr operand returns boolexpr",
		"fileName": "common.j",
		"name": "Not",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolexpr",
			"name": "operand"
		}],
		"returnType": "boolexpr",
		"insertText": "Not(operand)",
		"documentation": ""
	},
	"Condition": {
		"original": "native Condition        takes code func returns conditionfunc",
		"fileName": "common.j",
		"name": "Condition",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "code",
			"name": "func"
		}],
		"returnType": "conditionfunc",
		"insertText": "Condition(func)",
		"documentation": "限制条件为"
	},
	"DestroyCondition": {
		"original": "native DestroyCondition takes conditionfunc c returns nothing",
		"fileName": "common.j",
		"name": "DestroyCondition",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "conditionfunc",
			"name": "c"
		}],
		"insertText": "DestroyCondition(c)",
		"documentation": ""
	},
	"Filter": {
		"original": "native Filter           takes code func returns filterfunc",
		"fileName": "common.j",
		"name": "Filter",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "code",
			"name": "func"
		}],
		"returnType": "filterfunc",
		"insertText": "Filter(func)",
		"documentation": ""
	},
	"DestroyFilter": {
		"original": "native DestroyFilter    takes filterfunc f returns nothing",
		"fileName": "common.j",
		"name": "DestroyFilter",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "filterfunc",
			"name": "f"
		}],
		"insertText": "DestroyFilter(f)",
		"documentation": ""
	},
	"DestroyBoolExpr": {
		"original": "native DestroyBoolExpr  takes boolexpr e returns nothing",
		"fileName": "common.j",
		"name": "DestroyBoolExpr",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolexpr",
			"name": "e"
		}],
		"insertText": "DestroyBoolExpr(e)",
		"documentation": ""
	},
	"TriggerRegisterVariableEvent": {
		"original": "native TriggerRegisterVariableEvent takes trigger whichTrigger, string varName, limitop opcode, real limitval returns event",
		"fileName": "common.j",
		"name": "TriggerRegisterVariableEvent",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}, {
			"type": "string",
			"name": "varName"
		}, {
			"type": "limitop",
			"name": "opcode"
		}, {
			"type": "real",
			"name": "limitval"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterVariableEvent(whichTrigger, varName, opcode, limitval)",
		"documentation": "变量的值"
	},
	"TriggerRegisterTimerEvent": {
		"original": "native TriggerRegisterTimerEvent takes trigger whichTrigger, real timeout, boolean periodic returns event",
		"fileName": "common.j",
		"name": "TriggerRegisterTimerEvent",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}, {
			"type": "real",
			"name": "timeout"
		}, {
			"type": "boolean",
			"name": "periodic"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterTimerEvent(whichTrigger, timeout, periodic)",
		"documentation": ""
	},
	"TriggerRegisterTimerExpireEvent": {
		"original": "native TriggerRegisterTimerExpireEvent takes trigger whichTrigger, timer t returns event",
		"fileName": "common.j",
		"name": "TriggerRegisterTimerExpireEvent",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}, {
			"type": "timer",
			"name": "t"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterTimerExpireEvent(whichTrigger, t)",
		"documentation": ""
	},
	"TriggerRegisterGameStateEvent": {
		"original": "native TriggerRegisterGameStateEvent takes trigger whichTrigger, gamestate whichState, limitop opcode, real limitval returns event",
		"fileName": "common.j",
		"name": "TriggerRegisterGameStateEvent",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}, {
			"type": "gamestate",
			"name": "whichState"
		}, {
			"type": "limitop",
			"name": "opcode"
		}, {
			"type": "real",
			"name": "limitval"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterGameStateEvent(whichTrigger, whichState, opcode, limitval)",
		"documentation": ""
	},
	"TriggerRegisterDialogEvent": {
		"original": "native TriggerRegisterDialogEvent       takes trigger whichTrigger, dialog whichDialog returns event",
		"fileName": "common.j",
		"name": "TriggerRegisterDialogEvent",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}, {
			"type": "dialog",
			"name": "whichDialog"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterDialogEvent(whichTrigger, whichDialog)",
		"documentation": ""
	},
	"TriggerRegisterDialogButtonEvent": {
		"original": "native TriggerRegisterDialogButtonEvent takes trigger whichTrigger, button whichButton returns event",
		"fileName": "common.j",
		"name": "TriggerRegisterDialogButtonEvent",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}, {
			"type": "button",
			"name": "whichButton"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterDialogButtonEvent(whichTrigger, whichButton)",
		"documentation": "对话框按钮被点击 [R]"
	},
	"GetEventGameState": {
		"original": "constant native GetEventGameState takes nothing returns gamestate",
		"fileName": "common.j",
		"name": "GetEventGameState",
		"isConstant": true,
		"isNative": true,
		"returnType": "gamestate",
		"insertText": "GetEventGameState()",
		"documentation": ""
	},
	"TriggerRegisterGameEvent": {
		"original": "native TriggerRegisterGameEvent takes trigger whichTrigger, gameevent whichGameEvent returns event",
		"fileName": "common.j",
		"name": "TriggerRegisterGameEvent",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}, {
			"type": "gameevent",
			"name": "whichGameEvent"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterGameEvent(whichTrigger, whichGameEvent)",
		"documentation": "比赛游戏事件"
	},
	"GetWinningPlayer": {
		"original": "constant native GetWinningPlayer takes nothing returns player",
		"fileName": "common.j",
		"name": "GetWinningPlayer",
		"isConstant": true,
		"isNative": true,
		"returnType": "player",
		"insertText": "GetWinningPlayer()",
		"documentation": ""
	},
	"TriggerRegisterEnterRegion": {
		"original": "native TriggerRegisterEnterRegion takes trigger whichTrigger, region whichRegion, boolexpr filter returns event",
		"fileName": "common.j",
		"name": "TriggerRegisterEnterRegion",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}, {
			"type": "region",
			"name": "whichRegion"
		}, {
			"type": "boolexpr",
			"name": "filter"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterEnterRegion(whichTrigger, whichRegion, filter)",
		"documentation": "单位进入不规则区域(指定条件) [R]"
	},
	"GetTriggeringRegion": {
		"original": "constant native GetTriggeringRegion takes nothing returns region",
		"fileName": "common.j",
		"name": "GetTriggeringRegion",
		"isConstant": true,
		"isNative": true,
		"returnType": "region",
		"insertText": "GetTriggeringRegion()",
		"documentation": "触发区域 [R]"
	},
	"GetEnteringUnit": {
		"original": "constant native GetEnteringUnit takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetEnteringUnit",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetEnteringUnit()",
		"documentation": "正在进入的单位"
	},
	"TriggerRegisterLeaveRegion": {
		"original": "native TriggerRegisterLeaveRegion takes trigger whichTrigger, region whichRegion, boolexpr filter returns event",
		"fileName": "common.j",
		"name": "TriggerRegisterLeaveRegion",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}, {
			"type": "region",
			"name": "whichRegion"
		}, {
			"type": "boolexpr",
			"name": "filter"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterLeaveRegion(whichTrigger, whichRegion, filter)",
		"documentation": "单位离开不规则区域(指定条件) [R]"
	},
	"GetLeavingUnit": {
		"original": "constant native GetLeavingUnit takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetLeavingUnit",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetLeavingUnit()",
		"documentation": "正在离开的单位"
	},
	"TriggerRegisterTrackableHitEvent": {
		"original": "native TriggerRegisterTrackableHitEvent takes trigger whichTrigger, trackable t returns event",
		"fileName": "common.j",
		"name": "TriggerRegisterTrackableHitEvent",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}, {
			"type": "trackable",
			"name": "t"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterTrackableHitEvent(whichTrigger, t)",
		"documentation": "鼠标点击可追踪物 [R]"
	},
	"TriggerRegisterTrackableTrackEvent": {
		"original": "native TriggerRegisterTrackableTrackEvent takes trigger whichTrigger, trackable t returns event",
		"fileName": "common.j",
		"name": "TriggerRegisterTrackableTrackEvent",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}, {
			"type": "trackable",
			"name": "t"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterTrackableTrackEvent(whichTrigger, t)",
		"documentation": "鼠标移动到追踪对象 [R]"
	},
	"GetTriggeringTrackable": {
		"original": "constant native GetTriggeringTrackable takes nothing returns trackable",
		"fileName": "common.j",
		"name": "GetTriggeringTrackable",
		"isConstant": true,
		"isNative": true,
		"returnType": "trackable",
		"insertText": "GetTriggeringTrackable()",
		"documentation": "事件响应 - 触发可追踪物 [R]"
	},
	"GetClickedButton": {
		"original": "constant native GetClickedButton takes nothing returns button",
		"fileName": "common.j",
		"name": "GetClickedButton",
		"isConstant": true,
		"isNative": true,
		"returnType": "button",
		"insertText": "GetClickedButton()",
		"documentation": ""
	},
	"GetClickedDialog": {
		"original": "constant native GetClickedDialog    takes nothing returns dialog",
		"fileName": "common.j",
		"name": "GetClickedDialog",
		"isConstant": true,
		"isNative": true,
		"returnType": "dialog",
		"insertText": "GetClickedDialog()",
		"documentation": ""
	},
	"GetTournamentFinishSoonTimeRemaining": {
		"original": "constant native GetTournamentFinishSoonTimeRemaining takes nothing returns real",
		"fileName": "common.j",
		"name": "GetTournamentFinishSoonTimeRemaining",
		"isConstant": true,
		"isNative": true,
		"returnType": "real",
		"insertText": "GetTournamentFinishSoonTimeRemaining()",
		"documentation": "比赛剩余时间"
	},
	"GetTournamentFinishNowRule": {
		"original": "constant native GetTournamentFinishNowRule takes nothing returns integer",
		"fileName": "common.j",
		"name": "GetTournamentFinishNowRule",
		"isConstant": true,
		"isNative": true,
		"returnType": "integer",
		"insertText": "GetTournamentFinishNowRule()",
		"documentation": "比赛结束规则"
	},
	"GetTournamentFinishNowPlayer": {
		"original": "constant native GetTournamentFinishNowPlayer takes nothing returns player",
		"fileName": "common.j",
		"name": "GetTournamentFinishNowPlayer",
		"isConstant": true,
		"isNative": true,
		"returnType": "player",
		"insertText": "GetTournamentFinishNowPlayer()",
		"documentation": ""
	},
	"GetTournamentScore": {
		"original": "constant native GetTournamentScore takes player whichPlayer returns integer",
		"fileName": "common.j",
		"name": "GetTournamentScore",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "integer",
		"insertText": "GetTournamentScore(whichPlayer)",
		"documentation": "对战比赛得分"
	},
	"GetSaveBasicFilename": {
		"original": "constant native GetSaveBasicFilename takes nothing returns string",
		"fileName": "common.j",
		"name": "GetSaveBasicFilename",
		"isConstant": true,
		"isNative": true,
		"returnType": "string",
		"insertText": "GetSaveBasicFilename()",
		"documentation": "储存游戏文件名"
	},
	"TriggerRegisterPlayerEvent": {
		"original": "native TriggerRegisterPlayerEvent takes trigger whichTrigger, player  whichPlayer, playerevent whichPlayerEvent returns event",
		"fileName": "common.j",
		"name": "TriggerRegisterPlayerEvent",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "playerevent",
			"name": "whichPlayerEvent"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterPlayerEvent(whichTrigger, whichPlayer, whichPlayerEvent)",
		"documentation": ""
	},
	"GetTriggerPlayer": {
		"original": "constant native GetTriggerPlayer takes nothing returns player",
		"fileName": "common.j",
		"name": "GetTriggerPlayer",
		"isConstant": true,
		"isNative": true,
		"returnType": "player",
		"insertText": "GetTriggerPlayer()",
		"documentation": "触发玩家"
	},
	"TriggerRegisterPlayerUnitEvent": {
		"original": "native TriggerRegisterPlayerUnitEvent takes trigger whichTrigger, player whichPlayer, playerunitevent whichPlayerUnitEvent, boolexpr filter returns event",
		"fileName": "common.j",
		"name": "TriggerRegisterPlayerUnitEvent",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "playerunitevent",
			"name": "whichPlayerUnitEvent"
		}, {
			"type": "boolexpr",
			"name": "filter"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterPlayerUnitEvent(whichTrigger, whichPlayer, whichPlayerUnitEvent, filter)",
		"documentation": ""
	},
	"GetLevelingUnit": {
		"original": "constant native GetLevelingUnit takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetLevelingUnit",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetLevelingUnit()",
		"documentation": "英雄升级"
	},
	"GetLearningUnit": {
		"original": "constant native GetLearningUnit      takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetLearningUnit",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetLearningUnit()",
		"documentation": "学习技能的英雄"
	},
	"GetLearnedSkill": {
		"original": "constant native GetLearnedSkill      takes nothing returns integer",
		"fileName": "common.j",
		"name": "GetLearnedSkill",
		"isConstant": true,
		"isNative": true,
		"returnType": "integer",
		"insertText": "GetLearnedSkill()",
		"documentation": "学习技能 [R]"
	},
	"GetLearnedSkillLevel": {
		"original": "constant native GetLearnedSkillLevel takes nothing returns integer",
		"fileName": "common.j",
		"name": "GetLearnedSkillLevel",
		"isConstant": true,
		"isNative": true,
		"returnType": "integer",
		"insertText": "GetLearnedSkillLevel()",
		"documentation": "学习的技能的等级"
	},
	"GetRevivableUnit": {
		"original": "constant native GetRevivableUnit takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetRevivableUnit",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetRevivableUnit()",
		"documentation": "可复活的英雄"
	},
	"GetRevivingUnit": {
		"original": "constant native GetRevivingUnit takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetRevivingUnit",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetRevivingUnit()",
		"documentation": "复活英雄"
	},
	"GetAttacker": {
		"original": "constant native GetAttacker takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetAttacker",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetAttacker()",
		"documentation": "攻击的单位"
	},
	"GetRescuer": {
		"original": "constant native GetRescuer  takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetRescuer",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetRescuer()",
		"documentation": ""
	},
	"GetDyingUnit": {
		"original": "constant native GetDyingUnit takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetDyingUnit",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetDyingUnit()",
		"documentation": "垂死的单位"
	},
	"GetKillingUnit": {
		"original": "constant native GetKillingUnit takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetKillingUnit",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetKillingUnit()",
		"documentation": ""
	},
	"GetDecayingUnit": {
		"original": "constant native GetDecayingUnit takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetDecayingUnit",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetDecayingUnit()",
		"documentation": "尸体腐烂单位"
	},
	"GetConstructingStructure": {
		"original": "constant native GetConstructingStructure takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetConstructingStructure",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetConstructingStructure()",
		"documentation": "正在建造的建筑"
	},
	"GetCancelledStructure": {
		"original": "constant native GetCancelledStructure takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetCancelledStructure",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetCancelledStructure()",
		"documentation": "取消建造中的建筑"
	},
	"GetConstructedStructure": {
		"original": "constant native GetConstructedStructure takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetConstructedStructure",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetConstructedStructure()",
		"documentation": "已建造的建筑"
	},
	"GetResearchingUnit": {
		"original": "constant native GetResearchingUnit takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetResearchingUnit",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetResearchingUnit()",
		"documentation": "研究科技单位"
	},
	"GetResearched": {
		"original": "constant native GetResearched takes nothing returns integer",
		"fileName": "common.j",
		"name": "GetResearched",
		"isConstant": true,
		"isNative": true,
		"returnType": "integer",
		"insertText": "GetResearched()",
		"documentation": "研究的 科技-类型"
	},
	"GetTrainedUnitType": {
		"original": "constant native GetTrainedUnitType takes nothing returns integer",
		"fileName": "common.j",
		"name": "GetTrainedUnitType",
		"isConstant": true,
		"isNative": true,
		"returnType": "integer",
		"insertText": "GetTrainedUnitType()",
		"documentation": "训练的单位类型"
	},
	"GetTrainedUnit": {
		"original": "constant native GetTrainedUnit takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetTrainedUnit",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetTrainedUnit()",
		"documentation": "训练单位"
	},
	"GetDetectedUnit": {
		"original": "constant native GetDetectedUnit takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetDetectedUnit",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetDetectedUnit()",
		"documentation": ""
	},
	"GetSummoningUnit": {
		"original": "constant native GetSummoningUnit    takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetSummoningUnit",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetSummoningUnit()",
		"documentation": "正在召唤的单位"
	},
	"GetSummonedUnit": {
		"original": "constant native GetSummonedUnit     takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetSummonedUnit",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetSummonedUnit()",
		"documentation": "已召唤单位"
	},
	"GetTransportUnit": {
		"original": "constant native GetTransportUnit    takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetTransportUnit",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetTransportUnit()",
		"documentation": ""
	},
	"GetLoadedUnit": {
		"original": "constant native GetLoadedUnit       takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetLoadedUnit",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetLoadedUnit()",
		"documentation": ""
	},
	"GetSellingUnit": {
		"original": "constant native GetSellingUnit      takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetSellingUnit",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetSellingUnit()",
		"documentation": "出售单位"
	},
	"GetSoldUnit": {
		"original": "constant native GetSoldUnit         takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetSoldUnit",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetSoldUnit()",
		"documentation": "被出售单位"
	},
	"GetBuyingUnit": {
		"original": "constant native GetBuyingUnit       takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetBuyingUnit",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetBuyingUnit()",
		"documentation": "在购买的单位"
	},
	"GetSoldItem": {
		"original": "constant native GetSoldItem         takes nothing returns item",
		"fileName": "common.j",
		"name": "GetSoldItem",
		"isConstant": true,
		"isNative": true,
		"returnType": "item",
		"insertText": "GetSoldItem()",
		"documentation": "卖出的物品"
	},
	"GetChangingUnit": {
		"original": "constant native GetChangingUnit             takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetChangingUnit",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetChangingUnit()",
		"documentation": "改变了所有者的单位"
	},
	"GetChangingUnitPrevOwner": {
		"original": "constant native GetChangingUnitPrevOwner    takes nothing returns player",
		"fileName": "common.j",
		"name": "GetChangingUnitPrevOwner",
		"isConstant": true,
		"isNative": true,
		"returnType": "player",
		"insertText": "GetChangingUnitPrevOwner()",
		"documentation": "前一个所有者"
	},
	"GetManipulatingUnit": {
		"original": "constant native GetManipulatingUnit takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetManipulatingUnit",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetManipulatingUnit()",
		"documentation": "英雄操作物品"
	},
	"GetManipulatedItem": {
		"original": "constant native GetManipulatedItem  takes nothing returns item",
		"fileName": "common.j",
		"name": "GetManipulatedItem",
		"isConstant": true,
		"isNative": true,
		"returnType": "item",
		"insertText": "GetManipulatedItem()",
		"documentation": "物品存在操作"
	},
	"GetOrderedUnit": {
		"original": "constant native GetOrderedUnit takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetOrderedUnit",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetOrderedUnit()",
		"documentation": "收到命令的单位"
	},
	"GetIssuedOrderId": {
		"original": "constant native GetIssuedOrderId takes nothing returns integer",
		"fileName": "common.j",
		"name": "GetIssuedOrderId",
		"isConstant": true,
		"isNative": true,
		"returnType": "integer",
		"insertText": "GetIssuedOrderId()",
		"documentation": ""
	},
	"GetOrderPointX": {
		"original": "constant native GetOrderPointX takes nothing returns real",
		"fileName": "common.j",
		"name": "GetOrderPointX",
		"isConstant": true,
		"isNative": true,
		"returnType": "real",
		"insertText": "GetOrderPointX()",
		"documentation": "命令发布点X坐标 [R]"
	},
	"GetOrderPointY": {
		"original": "constant native GetOrderPointY takes nothing returns real",
		"fileName": "common.j",
		"name": "GetOrderPointY",
		"isConstant": true,
		"isNative": true,
		"returnType": "real",
		"insertText": "GetOrderPointY()",
		"documentation": "命令发布点Y坐标 [R]"
	},
	"GetOrderPointLoc": {
		"original": "constant native GetOrderPointLoc takes nothing returns location",
		"fileName": "common.j",
		"name": "GetOrderPointLoc",
		"isConstant": true,
		"isNative": true,
		"returnType": "location",
		"insertText": "GetOrderPointLoc()",
		"documentation": "目标的位置"
	},
	"GetOrderTarget": {
		"original": "constant native GetOrderTarget              takes nothing returns widget",
		"fileName": "common.j",
		"name": "GetOrderTarget",
		"isConstant": true,
		"isNative": true,
		"returnType": "widget",
		"insertText": "GetOrderTarget()",
		"documentation": ""
	},
	"GetOrderTargetDestructable": {
		"original": "constant native GetOrderTargetDestructable  takes nothing returns destructable",
		"fileName": "common.j",
		"name": "GetOrderTargetDestructable",
		"isConstant": true,
		"isNative": true,
		"returnType": "destructable",
		"insertText": "GetOrderTargetDestructable()",
		"documentation": "目标的可毁坏物"
	},
	"GetOrderTargetItem": {
		"original": "constant native GetOrderTargetItem          takes nothing returns item",
		"fileName": "common.j",
		"name": "GetOrderTargetItem",
		"isConstant": true,
		"isNative": true,
		"returnType": "item",
		"insertText": "GetOrderTargetItem()",
		"documentation": "目标的物品"
	},
	"GetOrderTargetUnit": {
		"original": "constant native GetOrderTargetUnit          takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetOrderTargetUnit",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetOrderTargetUnit()",
		"documentation": "目标的单位"
	},
	"GetSpellAbilityUnit": {
		"original": "constant native GetSpellAbilityUnit         takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetSpellAbilityUnit",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetSpellAbilityUnit()",
		"documentation": "技能单位"
	},
	"GetSpellAbilityId": {
		"original": "constant native GetSpellAbilityId           takes nothing returns integer",
		"fileName": "common.j",
		"name": "GetSpellAbilityId",
		"isConstant": true,
		"isNative": true,
		"returnType": "integer",
		"insertText": "GetSpellAbilityId()",
		"documentation": "使用的技能"
	},
	"GetSpellAbility": {
		"original": "constant native GetSpellAbility             takes nothing returns ability",
		"fileName": "common.j",
		"name": "GetSpellAbility",
		"isConstant": true,
		"isNative": true,
		"returnType": "ability",
		"insertText": "GetSpellAbility()",
		"documentation": ""
	},
	"GetSpellTargetLoc": {
		"original": "constant native GetSpellTargetLoc           takes nothing returns location",
		"fileName": "common.j",
		"name": "GetSpellTargetLoc",
		"isConstant": true,
		"isNative": true,
		"returnType": "location",
		"insertText": "GetSpellTargetLoc()",
		"documentation": "对其使用技能的目标点"
	},
	"GetSpellTargetX": {
		"original": "function GetSpellTargetX takes nothing returns real",
		"fileName": "YDWEBase_returnbug.j",
		"name": "GetSpellTargetX",
		"isConstant": false,
		"isNative": false,
		"returnType": "real",
		"insertText": "GetSpellTargetX()",
		"documentation": "技能施放点X坐标"
	},
	"GetSpellTargetY": {
		"original": "function GetSpellTargetY takes nothing returns real",
		"fileName": "YDWEBase_returnbug.j",
		"name": "GetSpellTargetY",
		"isConstant": false,
		"isNative": false,
		"returnType": "real",
		"insertText": "GetSpellTargetY()",
		"documentation": "技能施放点Y坐标"
	},
	"GetSpellTargetDestructable": {
		"original": "constant native GetSpellTargetDestructable  takes nothing returns destructable",
		"fileName": "common.j",
		"name": "GetSpellTargetDestructable",
		"isConstant": true,
		"isNative": true,
		"returnType": "destructable",
		"insertText": "GetSpellTargetDestructable()",
		"documentation": "对其使用技能的目标可毁坏物"
	},
	"GetSpellTargetItem": {
		"original": "constant native GetSpellTargetItem          takes nothing returns item",
		"fileName": "common.j",
		"name": "GetSpellTargetItem",
		"isConstant": true,
		"isNative": true,
		"returnType": "item",
		"insertText": "GetSpellTargetItem()",
		"documentation": "对其使用技能的目标物品"
	},
	"GetSpellTargetUnit": {
		"original": "constant native GetSpellTargetUnit          takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetSpellTargetUnit",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetSpellTargetUnit()",
		"documentation": "对其使用技能的目标单位"
	},
	"TriggerRegisterPlayerAllianceChange": {
		"original": "native TriggerRegisterPlayerAllianceChange takes trigger whichTrigger, player whichPlayer, alliancetype whichAlliance returns event",
		"fileName": "common.j",
		"name": "TriggerRegisterPlayerAllianceChange",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "alliancetype",
			"name": "whichAlliance"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterPlayerAllianceChange(whichTrigger, whichPlayer, whichAlliance)",
		"documentation": "联盟状态改变(特殊)"
	},
	"TriggerRegisterPlayerStateEvent": {
		"original": "native TriggerRegisterPlayerStateEvent takes trigger whichTrigger, player whichPlayer, playerstate whichState, limitop opcode, real limitval returns event",
		"fileName": "common.j",
		"name": "TriggerRegisterPlayerStateEvent",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "playerstate",
			"name": "whichState"
		}, {
			"type": "limitop",
			"name": "opcode"
		}, {
			"type": "real",
			"name": "limitval"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterPlayerStateEvent(whichTrigger, whichPlayer, whichState, opcode, limitval)",
		"documentation": "属性"
	},
	"GetEventPlayerState": {
		"original": "constant native GetEventPlayerState takes nothing returns playerstate",
		"fileName": "common.j",
		"name": "GetEventPlayerState",
		"isConstant": true,
		"isNative": true,
		"returnType": "playerstate",
		"insertText": "GetEventPlayerState()",
		"documentation": ""
	},
	"TriggerRegisterPlayerChatEvent": {
		"original": "native TriggerRegisterPlayerChatEvent takes trigger whichTrigger, player whichPlayer, string chatMessageToDetect, boolean exactMatchOnly returns event",
		"fileName": "common.j",
		"name": "TriggerRegisterPlayerChatEvent",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "chatMessageToDetect"
		}, {
			"type": "boolean",
			"name": "exactMatchOnly"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterPlayerChatEvent(whichTrigger, whichPlayer, chatMessageToDetect, exactMatchOnly)",
		"documentation": "玩家输入聊天信息"
	},
	"GetEventPlayerChatString": {
		"original": "constant native GetEventPlayerChatString takes nothing returns string",
		"fileName": "common.j",
		"name": "GetEventPlayerChatString",
		"isConstant": true,
		"isNative": true,
		"returnType": "string",
		"insertText": "GetEventPlayerChatString()",
		"documentation": "输入的聊天字符"
	},
	"GetEventPlayerChatStringMatched": {
		"original": "constant native GetEventPlayerChatStringMatched takes nothing returns string",
		"fileName": "common.j",
		"name": "GetEventPlayerChatStringMatched",
		"isConstant": true,
		"isNative": true,
		"returnType": "string",
		"insertText": "GetEventPlayerChatStringMatched()",
		"documentation": "匹配的聊天字符"
	},
	"TriggerRegisterDeathEvent": {
		"original": "native TriggerRegisterDeathEvent takes trigger whichTrigger, widget whichWidget returns event",
		"fileName": "common.j",
		"name": "TriggerRegisterDeathEvent",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}, {
			"type": "widget",
			"name": "whichWidget"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterDeathEvent(whichTrigger, whichWidget)",
		"documentation": "可毁坏物死亡"
	},
	"GetTriggerUnit": {
		"original": "constant native GetTriggerUnit takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetTriggerUnit",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetTriggerUnit()",
		"documentation": "触发单位"
	},
	"TriggerRegisterUnitStateEvent": {
		"original": "native TriggerRegisterUnitStateEvent takes trigger whichTrigger, unit whichUnit, unitstate whichState, limitop opcode, real limitval returns event",
		"fileName": "common.j",
		"name": "TriggerRegisterUnitStateEvent",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "unitstate",
			"name": "whichState"
		}, {
			"type": "limitop",
			"name": "opcode"
		}, {
			"type": "real",
			"name": "limitval"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterUnitStateEvent(whichTrigger, whichUnit, whichState, opcode, limitval)",
		"documentation": ""
	},
	"GetEventUnitState": {
		"original": "constant native GetEventUnitState takes nothing returns unitstate",
		"fileName": "common.j",
		"name": "GetEventUnitState",
		"isConstant": true,
		"isNative": true,
		"returnType": "unitstate",
		"insertText": "GetEventUnitState()",
		"documentation": ""
	},
	"TriggerRegisterUnitEvent": {
		"original": "native TriggerRegisterUnitEvent takes trigger whichTrigger, unit whichUnit, unitevent whichEvent returns event",
		"fileName": "common.j",
		"name": "TriggerRegisterUnitEvent",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "unitevent",
			"name": "whichEvent"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterUnitEvent(whichTrigger, whichUnit, whichEvent)",
		"documentation": "详细单位的事件"
	},
	"GetEventDamage": {
		"original": "constant native GetEventDamage takes nothing returns real",
		"fileName": "common.j",
		"name": "GetEventDamage",
		"isConstant": true,
		"isNative": true,
		"returnType": "real",
		"insertText": "GetEventDamage()",
		"documentation": "被伤害的生命值"
	},
	"GetEventDamageSource": {
		"original": "constant native GetEventDamageSource takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetEventDamageSource",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetEventDamageSource()",
		"documentation": "伤害来源"
	},
	"GetEventDetectingPlayer": {
		"original": "constant native GetEventDetectingPlayer takes nothing returns player",
		"fileName": "common.j",
		"name": "GetEventDetectingPlayer",
		"isConstant": true,
		"isNative": true,
		"returnType": "player",
		"insertText": "GetEventDetectingPlayer()",
		"documentation": ""
	},
	"TriggerRegisterFilterUnitEvent": {
		"original": "native TriggerRegisterFilterUnitEvent takes trigger whichTrigger, unit whichUnit, unitevent whichEvent, boolexpr filter returns event",
		"fileName": "common.j",
		"name": "TriggerRegisterFilterUnitEvent",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "unitevent",
			"name": "whichEvent"
		}, {
			"type": "boolexpr",
			"name": "filter"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterFilterUnitEvent(whichTrigger, whichUnit, whichEvent, filter)",
		"documentation": ""
	},
	"GetEventTargetUnit": {
		"original": "constant native GetEventTargetUnit takes nothing returns unit",
		"fileName": "common.j",
		"name": "GetEventTargetUnit",
		"isConstant": true,
		"isNative": true,
		"returnType": "unit",
		"insertText": "GetEventTargetUnit()",
		"documentation": "目标单位"
	},
	"TriggerRegisterUnitInRange": {
		"original": "native TriggerRegisterUnitInRange takes trigger whichTrigger, unit whichUnit, real range, boolexpr filter returns event",
		"fileName": "common.j",
		"name": "TriggerRegisterUnitInRange",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "range"
		}, {
			"type": "boolexpr",
			"name": "filter"
		}],
		"returnType": "event",
		"insertText": "TriggerRegisterUnitInRange(whichTrigger, whichUnit, range, filter)",
		"documentation": ""
	},
	"TriggerAddCondition": {
		"original": "native TriggerAddCondition    takes trigger whichTrigger, boolexpr condition returns triggercondition",
		"fileName": "common.j",
		"name": "TriggerAddCondition",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}, {
			"type": "boolexpr",
			"name": "condition"
		}],
		"returnType": "triggercondition",
		"insertText": "TriggerAddCondition(whichTrigger, condition)",
		"documentation": "添加触发器限制条件"
	},
	"TriggerRemoveCondition": {
		"original": "native TriggerRemoveCondition takes trigger whichTrigger, triggercondition whichCondition returns nothing",
		"fileName": "common.j",
		"name": "TriggerRemoveCondition",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}, {
			"type": "triggercondition",
			"name": "whichCondition"
		}],
		"insertText": "TriggerRemoveCondition(whichTrigger, whichCondition)",
		"documentation": ""
	},
	"TriggerClearConditions": {
		"original": "native TriggerClearConditions takes trigger whichTrigger returns nothing",
		"fileName": "common.j",
		"name": "TriggerClearConditions",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}],
		"insertText": "TriggerClearConditions(whichTrigger)",
		"documentation": ""
	},
	"TriggerAddAction": {
		"original": "native TriggerAddAction     takes trigger whichTrigger, code actionFunc returns triggeraction",
		"fileName": "common.j",
		"name": "TriggerAddAction",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}, {
			"type": "code",
			"name": "actionFunc"
		}],
		"returnType": "triggeraction",
		"insertText": "TriggerAddAction(whichTrigger, actionFunc)",
		"documentation": "添加触发器动作"
	},
	"TriggerRemoveAction": {
		"original": "native TriggerRemoveAction  takes trigger whichTrigger, triggeraction whichAction returns nothing",
		"fileName": "common.j",
		"name": "TriggerRemoveAction",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}, {
			"type": "triggeraction",
			"name": "whichAction"
		}],
		"insertText": "TriggerRemoveAction(whichTrigger, whichAction)",
		"documentation": ""
	},
	"TriggerClearActions": {
		"original": "native TriggerClearActions  takes trigger whichTrigger returns nothing",
		"fileName": "common.j",
		"name": "TriggerClearActions",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}],
		"insertText": "TriggerClearActions(whichTrigger)",
		"documentation": ""
	},
	"TriggerSleepAction": {
		"original": "native TriggerSleepAction   takes real timeout returns nothing",
		"fileName": "common.j",
		"name": "TriggerSleepAction",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "timeout"
		}],
		"insertText": "TriggerSleepAction(timeout)",
		"documentation": "等待"
	},
	"TriggerWaitForSound": {
		"original": "native TriggerWaitForSound  takes sound s, real offset returns nothing",
		"fileName": "common.j",
		"name": "TriggerWaitForSound",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "sound",
			"name": "s"
		}, {
			"type": "real",
			"name": "offset"
		}],
		"insertText": "TriggerWaitForSound(s, offset)",
		"documentation": ""
	},
	"TriggerEvaluate": {
		"original": "native TriggerEvaluate      takes trigger whichTrigger returns boolean",
		"fileName": "common.j",
		"name": "TriggerEvaluate",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}],
		"returnType": "boolean",
		"insertText": "TriggerEvaluate(whichTrigger)",
		"documentation": "触发器有条件"
	},
	"TriggerExecute": {
		"original": "native TriggerExecute       takes trigger whichTrigger returns nothing",
		"fileName": "common.j",
		"name": "TriggerExecute",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}],
		"insertText": "TriggerExecute(whichTrigger)",
		"documentation": "运行触发器 (忽略条件)"
	},
	"TriggerExecuteWait": {
		"original": "native TriggerExecuteWait   takes trigger whichTrigger returns nothing",
		"fileName": "common.j",
		"name": "TriggerExecuteWait",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "trigger",
			"name": "whichTrigger"
		}],
		"insertText": "TriggerExecuteWait(whichTrigger)",
		"documentation": ""
	},
	"TriggerSyncStart": {
		"original": "native TriggerSyncStart     takes nothing returns nothing",
		"fileName": "common.j",
		"name": "TriggerSyncStart",
		"isConstant": false,
		"isNative": true,
		"insertText": "TriggerSyncStart()",
		"documentation": ""
	},
	"TriggerSyncReady": {
		"original": "native TriggerSyncReady     takes nothing returns nothing",
		"fileName": "common.j",
		"name": "TriggerSyncReady",
		"isConstant": false,
		"isNative": true,
		"insertText": "TriggerSyncReady()",
		"documentation": ""
	},
	"GetWidgetLife": {
		"original": "native  GetWidgetLife   takes widget whichWidget returns real",
		"fileName": "common.j",
		"name": "GetWidgetLife",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "widget",
			"name": "whichWidget"
		}],
		"returnType": "real",
		"insertText": "GetWidgetLife(whichWidget)",
		"documentation": ""
	},
	"SetWidgetLife": {
		"original": "native  SetWidgetLife   takes widget whichWidget, real newLife returns nothing",
		"fileName": "common.j",
		"name": "SetWidgetLife",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "widget",
			"name": "whichWidget"
		}, {
			"type": "real",
			"name": "newLife"
		}],
		"insertText": "SetWidgetLife(whichWidget, newLife)",
		"documentation": ""
	},
	"GetWidgetX": {
		"original": "native  GetWidgetX      takes widget whichWidget returns real",
		"fileName": "common.j",
		"name": "GetWidgetX",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "widget",
			"name": "whichWidget"
		}],
		"returnType": "real",
		"insertText": "GetWidgetX(whichWidget)",
		"documentation": ""
	},
	"GetWidgetY": {
		"original": "native  GetWidgetY      takes widget whichWidget returns real",
		"fileName": "common.j",
		"name": "GetWidgetY",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "widget",
			"name": "whichWidget"
		}],
		"returnType": "real",
		"insertText": "GetWidgetY(whichWidget)",
		"documentation": ""
	},
	"GetTriggerWidget": {
		"original": "constant native GetTriggerWidget takes nothing returns widget",
		"fileName": "common.j",
		"name": "GetTriggerWidget",
		"isConstant": true,
		"isNative": true,
		"returnType": "widget",
		"insertText": "GetTriggerWidget()",
		"documentation": ""
	},
	"CreateDestructable": {
		"original": "native          CreateDestructable          takes integer objectid, real x, real y, real face, real scale, integer variation returns destructable",
		"fileName": "common.j",
		"name": "CreateDestructable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "objectid"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "face"
		}, {
			"type": "real",
			"name": "scale"
		}, {
			"type": "integer",
			"name": "variation"
		}],
		"returnType": "destructable",
		"insertText": "CreateDestructable(objectid, x, y, face, scale, variation)",
		"documentation": ""
	},
	"CreateDestructableZ": {
		"original": "native          CreateDestructableZ         takes integer objectid, real x, real y, real z, real face, real scale, integer variation returns destructable",
		"fileName": "common.j",
		"name": "CreateDestructableZ",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "objectid"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "z"
		}, {
			"type": "real",
			"name": "face"
		}, {
			"type": "real",
			"name": "scale"
		}, {
			"type": "integer",
			"name": "variation"
		}],
		"returnType": "destructable",
		"insertText": "CreateDestructableZ(objectid, x, y, z, face, scale, variation)",
		"documentation": "新建可破坏物 [R]"
	},
	"CreateDeadDestructable": {
		"original": "native          CreateDeadDestructable      takes integer objectid, real x, real y, real face, real scale, integer variation returns destructable",
		"fileName": "common.j",
		"name": "CreateDeadDestructable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "objectid"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "face"
		}, {
			"type": "real",
			"name": "scale"
		}, {
			"type": "integer",
			"name": "variation"
		}],
		"returnType": "destructable",
		"insertText": "CreateDeadDestructable(objectid, x, y, face, scale, variation)",
		"documentation": ""
	},
	"CreateDeadDestructableZ": {
		"original": "native          CreateDeadDestructableZ     takes integer objectid, real x, real y, real z, real face, real scale, integer variation returns destructable",
		"fileName": "common.j",
		"name": "CreateDeadDestructableZ",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "objectid"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "z"
		}, {
			"type": "real",
			"name": "face"
		}, {
			"type": "real",
			"name": "scale"
		}, {
			"type": "integer",
			"name": "variation"
		}],
		"returnType": "destructable",
		"insertText": "CreateDeadDestructableZ(objectid, x, y, z, face, scale, variation)",
		"documentation": "新建可破坏物(死亡的) [R]"
	},
	"RemoveDestructable": {
		"original": "native          RemoveDestructable          takes destructable d returns nothing",
		"fileName": "common.j",
		"name": "RemoveDestructable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "destructable",
			"name": "d"
		}],
		"insertText": "RemoveDestructable(d)",
		"documentation": "删除 可毁坏物"
	},
	"KillDestructable": {
		"original": "native          KillDestructable            takes destructable d returns nothing",
		"fileName": "common.j",
		"name": "KillDestructable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "destructable",
			"name": "d"
		}],
		"insertText": "KillDestructable(d)",
		"documentation": "杀死 可毁坏物"
	},
	"SetDestructableInvulnerable": {
		"original": "native          SetDestructableInvulnerable takes destructable d, boolean flag returns nothing",
		"fileName": "common.j",
		"name": "SetDestructableInvulnerable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "destructable",
			"name": "d"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "SetDestructableInvulnerable(d, flag)",
		"documentation": ""
	},
	"IsDestructableInvulnerable": {
		"original": "native          IsDestructableInvulnerable  takes destructable d returns boolean",
		"fileName": "common.j",
		"name": "IsDestructableInvulnerable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "destructable",
			"name": "d"
		}],
		"returnType": "boolean",
		"insertText": "IsDestructableInvulnerable(d)",
		"documentation": ""
	},
	"EnumDestructablesInRect": {
		"original": "native          EnumDestructablesInRect     takes rect r, boolexpr filter, code actionFunc returns nothing",
		"fileName": "common.j",
		"name": "EnumDestructablesInRect",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "rect",
			"name": "r"
		}, {
			"type": "boolexpr",
			"name": "filter"
		}, {
			"type": "code",
			"name": "actionFunc"
		}],
		"insertText": "EnumDestructablesInRect(r, filter, actionFunc)",
		"documentation": ""
	},
	"GetDestructableTypeId": {
		"original": "native          GetDestructableTypeId       takes destructable d returns integer",
		"fileName": "common.j",
		"name": "GetDestructableTypeId",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "destructable",
			"name": "d"
		}],
		"returnType": "integer",
		"insertText": "GetDestructableTypeId(d)",
		"documentation": "建筑的类型"
	},
	"GetDestructableX": {
		"original": "native          GetDestructableX            takes destructable d returns real",
		"fileName": "common.j",
		"name": "GetDestructableX",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "destructable",
			"name": "d"
		}],
		"returnType": "real",
		"insertText": "GetDestructableX(d)",
		"documentation": "可破坏物所在X轴坐标 [R]"
	},
	"GetDestructableY": {
		"original": "native          GetDestructableY            takes destructable d returns real",
		"fileName": "common.j",
		"name": "GetDestructableY",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "destructable",
			"name": "d"
		}],
		"returnType": "real",
		"insertText": "GetDestructableY(d)",
		"documentation": "可破坏物所在Y轴坐标 [R]"
	},
	"SetDestructableLife": {
		"original": "native          SetDestructableLife         takes destructable d, real life returns nothing",
		"fileName": "common.j",
		"name": "SetDestructableLife",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "destructable",
			"name": "d"
		}, {
			"type": "real",
			"name": "life"
		}],
		"insertText": "SetDestructableLife(d, life)",
		"documentation": "设置 可毁坏物 生命 (值)"
	},
	"GetDestructableLife": {
		"original": "native          GetDestructableLife         takes destructable d returns real",
		"fileName": "common.j",
		"name": "GetDestructableLife",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "destructable",
			"name": "d"
		}],
		"returnType": "real",
		"insertText": "GetDestructableLife(d)",
		"documentation": "生命值 (可毁坏物)"
	},
	"SetDestructableMaxLife": {
		"original": "native          SetDestructableMaxLife      takes destructable d, real max returns nothing",
		"fileName": "common.j",
		"name": "SetDestructableMaxLife",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "destructable",
			"name": "d"
		}, {
			"type": "real",
			"name": "max"
		}],
		"insertText": "SetDestructableMaxLife(d, max)",
		"documentation": ""
	},
	"GetDestructableMaxLife": {
		"original": "native          GetDestructableMaxLife      takes destructable d returns real",
		"fileName": "common.j",
		"name": "GetDestructableMaxLife",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "destructable",
			"name": "d"
		}],
		"returnType": "real",
		"insertText": "GetDestructableMaxLife(d)",
		"documentation": "最大生命值 (可毁坏物)"
	},
	"DestructableRestoreLife": {
		"original": "native          DestructableRestoreLife     takes destructable d, real life, boolean birth returns nothing",
		"fileName": "common.j",
		"name": "DestructableRestoreLife",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "destructable",
			"name": "d"
		}, {
			"type": "real",
			"name": "life"
		}, {
			"type": "boolean",
			"name": "birth"
		}],
		"insertText": "DestructableRestoreLife(d, life, birth)",
		"documentation": "复活 可毁坏物"
	},
	"QueueDestructableAnimation": {
		"original": "native          QueueDestructableAnimation  takes destructable d, string whichAnimation returns nothing",
		"fileName": "common.j",
		"name": "QueueDestructableAnimation",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "destructable",
			"name": "d"
		}, {
			"type": "string",
			"name": "whichAnimation"
		}],
		"insertText": "QueueDestructableAnimation(d, whichAnimation)",
		"documentation": ""
	},
	"SetDestructableAnimation": {
		"original": "native          SetDestructableAnimation    takes destructable d, string whichAnimation returns nothing",
		"fileName": "common.j",
		"name": "SetDestructableAnimation",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "destructable",
			"name": "d"
		}, {
			"type": "string",
			"name": "whichAnimation"
		}],
		"insertText": "SetDestructableAnimation(d, whichAnimation)",
		"documentation": ""
	},
	"SetDestructableAnimationSpeed": {
		"original": "native          SetDestructableAnimationSpeed takes destructable d, real speedFactor returns nothing",
		"fileName": "common.j",
		"name": "SetDestructableAnimationSpeed",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "destructable",
			"name": "d"
		}, {
			"type": "real",
			"name": "speedFactor"
		}],
		"insertText": "SetDestructableAnimationSpeed(d, speedFactor)",
		"documentation": "改变可破坏物动画播放速度 [R]"
	},
	"ShowDestructable": {
		"original": "native          ShowDestructable            takes destructable d, boolean flag returns nothing",
		"fileName": "common.j",
		"name": "ShowDestructable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "destructable",
			"name": "d"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "ShowDestructable(d, flag)",
		"documentation": "显示/隐藏 [R]"
	},
	"GetDestructableOccluderHeight": {
		"original": "native          GetDestructableOccluderHeight takes destructable d returns real",
		"fileName": "common.j",
		"name": "GetDestructableOccluderHeight",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "destructable",
			"name": "d"
		}],
		"returnType": "real",
		"insertText": "GetDestructableOccluderHeight(d)",
		"documentation": "闭塞高度 (可毁坏物)"
	},
	"SetDestructableOccluderHeight": {
		"original": "native          SetDestructableOccluderHeight takes destructable d, real height returns nothing",
		"fileName": "common.j",
		"name": "SetDestructableOccluderHeight",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "destructable",
			"name": "d"
		}, {
			"type": "real",
			"name": "height"
		}],
		"insertText": "SetDestructableOccluderHeight(d, height)",
		"documentation": "设置闭塞高度"
	},
	"GetDestructableName": {
		"original": "native          GetDestructableName         takes destructable d returns string",
		"fileName": "common.j",
		"name": "GetDestructableName",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "destructable",
			"name": "d"
		}],
		"returnType": "string",
		"insertText": "GetDestructableName(d)",
		"documentation": "可毁坏物的名字"
	},
	"GetTriggerDestructable": {
		"original": "constant native GetTriggerDestructable takes nothing returns destructable",
		"fileName": "common.j",
		"name": "GetTriggerDestructable",
		"isConstant": true,
		"isNative": true,
		"returnType": "destructable",
		"insertText": "GetTriggerDestructable()",
		"documentation": ""
	},
	"CreateItem": {
		"original": "native          CreateItem      takes integer itemid, real x, real y returns item",
		"fileName": "common.j",
		"name": "CreateItem",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "itemid"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"returnType": "item",
		"insertText": "CreateItem(itemid, x, y)",
		"documentation": "创建"
	},
	"RemoveItem": {
		"original": "native          RemoveItem      takes item whichItem returns nothing",
		"fileName": "common.j",
		"name": "RemoveItem",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}],
		"insertText": "RemoveItem(whichItem)",
		"documentation": "删除物品"
	},
	"GetItemPlayer": {
		"original": "native          GetItemPlayer   takes item whichItem returns player",
		"fileName": "common.j",
		"name": "GetItemPlayer",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}],
		"returnType": "player",
		"insertText": "GetItemPlayer(whichItem)",
		"documentation": "物品的所有者"
	},
	"GetItemTypeId": {
		"original": "native          GetItemTypeId   takes item i returns integer",
		"fileName": "common.j",
		"name": "GetItemTypeId",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "item",
			"name": "i"
		}],
		"returnType": "integer",
		"insertText": "GetItemTypeId(i)",
		"documentation": "物品的类型"
	},
	"GetItemX": {
		"original": "native          GetItemX        takes item i returns real",
		"fileName": "common.j",
		"name": "GetItemX",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "item",
			"name": "i"
		}],
		"returnType": "real",
		"insertText": "GetItemX(i)",
		"documentation": "物品的X轴坐标 [R]"
	},
	"GetItemY": {
		"original": "native          GetItemY        takes item i returns real",
		"fileName": "common.j",
		"name": "GetItemY",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "item",
			"name": "i"
		}],
		"returnType": "real",
		"insertText": "GetItemY(i)",
		"documentation": "物品的Y轴坐标 [R]"
	},
	"SetItemPosition": {
		"original": "native          SetItemPosition takes item i, real x, real y returns nothing",
		"fileName": "common.j",
		"name": "SetItemPosition",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "item",
			"name": "i"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"insertText": "SetItemPosition(i, x, y)",
		"documentation": "移动物品到坐标(立即)(指定坐标) [R]"
	},
	"SetItemDropOnDeath": {
		"original": "native          SetItemDropOnDeath  takes item whichItem, boolean flag returns nothing",
		"fileName": "common.j",
		"name": "SetItemDropOnDeath",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "SetItemDropOnDeath(whichItem, flag)",
		"documentation": ""
	},
	"SetItemDroppable": {
		"original": "native          SetItemDroppable takes item i, boolean flag returns nothing",
		"fileName": "common.j",
		"name": "SetItemDroppable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "item",
			"name": "i"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "SetItemDroppable(i, flag)",
		"documentation": ""
	},
	"SetItemPawnable": {
		"original": "native          SetItemPawnable takes item i, boolean flag returns nothing",
		"fileName": "common.j",
		"name": "SetItemPawnable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "item",
			"name": "i"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "SetItemPawnable(i, flag)",
		"documentation": "设置物品能否变卖"
	},
	"SetItemPlayer": {
		"original": "native          SetItemPlayer    takes item whichItem, player whichPlayer, boolean changeColor returns nothing",
		"fileName": "common.j",
		"name": "SetItemPlayer",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "boolean",
			"name": "changeColor"
		}],
		"insertText": "SetItemPlayer(whichItem, whichPlayer, changeColor)",
		"documentation": ""
	},
	"SetItemInvulnerable": {
		"original": "native          SetItemInvulnerable takes item whichItem, boolean flag returns nothing",
		"fileName": "common.j",
		"name": "SetItemInvulnerable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "SetItemInvulnerable(whichItem, flag)",
		"documentation": ""
	},
	"IsItemInvulnerable": {
		"original": "native          IsItemInvulnerable  takes item whichItem returns boolean",
		"fileName": "common.j",
		"name": "IsItemInvulnerable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}],
		"returnType": "boolean",
		"insertText": "IsItemInvulnerable(whichItem)",
		"documentation": "物品是无敌的"
	},
	"SetItemVisible": {
		"original": "native          SetItemVisible  takes item whichItem, boolean show returns nothing",
		"fileName": "common.j",
		"name": "SetItemVisible",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}, {
			"type": "boolean",
			"name": "show"
		}],
		"insertText": "SetItemVisible(whichItem, show)",
		"documentation": "显示/隐藏 [R]"
	},
	"IsItemVisible": {
		"original": "native          IsItemVisible   takes item whichItem returns boolean",
		"fileName": "common.j",
		"name": "IsItemVisible",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}],
		"returnType": "boolean",
		"insertText": "IsItemVisible(whichItem)",
		"documentation": "物品可见 [R]"
	},
	"IsItemOwned": {
		"original": "native          IsItemOwned     takes item whichItem returns boolean",
		"fileName": "common.j",
		"name": "IsItemOwned",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}],
		"returnType": "boolean",
		"insertText": "IsItemOwned(whichItem)",
		"documentation": "物品所有者"
	},
	"IsItemPowerup": {
		"original": "native          IsItemPowerup   takes item whichItem returns boolean",
		"fileName": "common.j",
		"name": "IsItemPowerup",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}],
		"returnType": "boolean",
		"insertText": "IsItemPowerup(whichItem)",
		"documentation": "物品是拾取时自动使用的 [R]"
	},
	"IsItemSellable": {
		"original": "native          IsItemSellable  takes item whichItem returns boolean",
		"fileName": "common.j",
		"name": "IsItemSellable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}],
		"returnType": "boolean",
		"insertText": "IsItemSellable(whichItem)",
		"documentation": "物品可被市场随机出售 [R]"
	},
	"IsItemPawnable": {
		"original": "native          IsItemPawnable  takes item whichItem returns boolean",
		"fileName": "common.j",
		"name": "IsItemPawnable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}],
		"returnType": "boolean",
		"insertText": "IsItemPawnable(whichItem)",
		"documentation": "物品可被抵押 [R]"
	},
	"IsItemIdPowerup": {
		"original": "native          IsItemIdPowerup takes integer itemId returns boolean",
		"fileName": "common.j",
		"name": "IsItemIdPowerup",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "itemId"
		}],
		"returnType": "boolean",
		"insertText": "IsItemIdPowerup(itemId)",
		"documentation": ""
	},
	"IsItemIdSellable": {
		"original": "native          IsItemIdSellable takes integer itemId returns boolean",
		"fileName": "common.j",
		"name": "IsItemIdSellable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "itemId"
		}],
		"returnType": "boolean",
		"insertText": "IsItemIdSellable(itemId)",
		"documentation": ""
	},
	"IsItemIdPawnable": {
		"original": "native          IsItemIdPawnable takes integer itemId returns boolean",
		"fileName": "common.j",
		"name": "IsItemIdPawnable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "itemId"
		}],
		"returnType": "boolean",
		"insertText": "IsItemIdPawnable(itemId)",
		"documentation": ""
	},
	"EnumItemsInRect": {
		"original": "native          EnumItemsInRect     takes rect r, boolexpr filter, code actionFunc returns nothing",
		"fileName": "common.j",
		"name": "EnumItemsInRect",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "rect",
			"name": "r"
		}, {
			"type": "boolexpr",
			"name": "filter"
		}, {
			"type": "code",
			"name": "actionFunc"
		}],
		"insertText": "EnumItemsInRect(r, filter, actionFunc)",
		"documentation": ""
	},
	"GetItemLevel": {
		"original": "native          GetItemLevel    takes item whichItem returns integer",
		"fileName": "common.j",
		"name": "GetItemLevel",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}],
		"returnType": "integer",
		"insertText": "GetItemLevel(whichItem)",
		"documentation": "物品等级"
	},
	"GetItemType": {
		"original": "native          GetItemType     takes item whichItem returns itemtype",
		"fileName": "common.j",
		"name": "GetItemType",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}],
		"returnType": "itemtype",
		"insertText": "GetItemType(whichItem)",
		"documentation": "物品的类别"
	},
	"SetItemDropID": {
		"original": "native          SetItemDropID   takes item whichItem, integer unitId returns nothing",
		"fileName": "common.j",
		"name": "SetItemDropID",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}, {
			"type": "integer",
			"name": "unitId"
		}],
		"insertText": "SetItemDropID(whichItem, unitId)",
		"documentation": "设置重生神符的产生单位类型"
	},
	"GetItemName": {
		"original": "constant native GetItemName     takes item whichItem returns string",
		"fileName": "common.j",
		"name": "GetItemName",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}],
		"returnType": "string",
		"insertText": "GetItemName(whichItem)",
		"documentation": "物品名"
	},
	"GetItemCharges": {
		"original": "native          GetItemCharges  takes item whichItem returns integer",
		"fileName": "common.j",
		"name": "GetItemCharges",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}],
		"returnType": "integer",
		"insertText": "GetItemCharges(whichItem)",
		"documentation": "物品的数量"
	},
	"SetItemCharges": {
		"original": "native          SetItemCharges  takes item whichItem, integer charges returns nothing",
		"fileName": "common.j",
		"name": "SetItemCharges",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}, {
			"type": "integer",
			"name": "charges"
		}],
		"insertText": "SetItemCharges(whichItem, charges)",
		"documentation": "设置物品数量[使用次数]"
	},
	"GetItemUserData": {
		"original": "native          GetItemUserData takes item whichItem returns integer",
		"fileName": "common.j",
		"name": "GetItemUserData",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}],
		"returnType": "integer",
		"insertText": "GetItemUserData(whichItem)",
		"documentation": "物品自定义值"
	},
	"SetItemUserData": {
		"original": "native          SetItemUserData takes item whichItem, integer data returns nothing",
		"fileName": "common.j",
		"name": "SetItemUserData",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "item",
			"name": "whichItem"
		}, {
			"type": "integer",
			"name": "data"
		}],
		"insertText": "SetItemUserData(whichItem, data)",
		"documentation": "设置物品自定义数据"
	},
	"CreateUnit": {
		"original": "native          CreateUnit              takes player id, integer unitid, real x, real y, real face returns unit",
		"fileName": "common.j",
		"name": "CreateUnit",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "id"
		}, {
			"type": "integer",
			"name": "unitid"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "face"
		}],
		"returnType": "unit",
		"insertText": "CreateUnit(id, unitid, x, y, face)",
		"documentation": "新建单位(指定坐标) [R]"
	},
	"CreateUnitByName": {
		"original": "native          CreateUnitByName        takes player whichPlayer, string unitname, real x, real y, real face returns unit",
		"fileName": "common.j",
		"name": "CreateUnitByName",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "unitname"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "face"
		}],
		"returnType": "unit",
		"insertText": "CreateUnitByName(whichPlayer, unitname, x, y, face)",
		"documentation": ""
	},
	"CreateUnitAtLoc": {
		"original": "native          CreateUnitAtLoc         takes player id, integer unitid, location whichLocation, real face returns unit",
		"fileName": "common.j",
		"name": "CreateUnitAtLoc",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "id"
		}, {
			"type": "integer",
			"name": "unitid"
		}, {
			"type": "location",
			"name": "whichLocation"
		}, {
			"type": "real",
			"name": "face"
		}],
		"returnType": "unit",
		"insertText": "CreateUnitAtLoc(id, unitid, whichLocation, face)",
		"documentation": "新建单位(指定点) [R]"
	},
	"CreateUnitAtLocByName": {
		"original": "native          CreateUnitAtLocByName   takes player id, string unitname, location whichLocation, real face returns unit",
		"fileName": "common.j",
		"name": "CreateUnitAtLocByName",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "id"
		}, {
			"type": "string",
			"name": "unitname"
		}, {
			"type": "location",
			"name": "whichLocation"
		}, {
			"type": "real",
			"name": "face"
		}],
		"returnType": "unit",
		"insertText": "CreateUnitAtLocByName(id, unitname, whichLocation, face)",
		"documentation": ""
	},
	"CreateCorpse": {
		"original": "native          CreateCorpse            takes player whichPlayer, integer unitid, real x, real y, real face returns unit",
		"fileName": "common.j",
		"name": "CreateCorpse",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "integer",
			"name": "unitid"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "face"
		}],
		"returnType": "unit",
		"insertText": "CreateCorpse(whichPlayer, unitid, x, y, face)",
		"documentation": "新建尸体 [R]"
	},
	"KillUnit": {
		"original": "native          KillUnit            takes unit whichUnit returns nothing",
		"fileName": "common.j",
		"name": "KillUnit",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"insertText": "KillUnit(whichUnit)",
		"documentation": "杀死单位"
	},
	"RemoveUnit": {
		"original": "native          RemoveUnit          takes unit whichUnit returns nothing",
		"fileName": "common.j",
		"name": "RemoveUnit",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"insertText": "RemoveUnit(whichUnit)",
		"documentation": "删除单位"
	},
	"ShowUnit": {
		"original": "native          ShowUnit            takes unit whichUnit, boolean show returns nothing",
		"fileName": "common.j",
		"name": "ShowUnit",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "boolean",
			"name": "show"
		}],
		"insertText": "ShowUnit(whichUnit, show)",
		"documentation": "显示/隐藏 [R]"
	},
	"SetUnitState": {
		"original": "native          SetUnitState        takes unit whichUnit, unitstate whichUnitState, real newVal returns nothing",
		"fileName": "common.j",
		"name": "SetUnitState",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "unitstate",
			"name": "whichUnitState"
		}, {
			"type": "real",
			"name": "newVal"
		}],
		"insertText": "SetUnitState(whichUnit, whichUnitState, newVal)",
		"documentation": "设置单位属性 [R]"
	},
	"SetUnitX": {
		"original": "native          SetUnitX            takes unit whichUnit, real newX returns nothing",
		"fileName": "common.j",
		"name": "SetUnitX",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "newX"
		}],
		"insertText": "SetUnitX(whichUnit, newX)",
		"documentation": "设置X坐标 [R]"
	},
	"SetUnitY": {
		"original": "native          SetUnitY            takes unit whichUnit, real newY returns nothing",
		"fileName": "common.j",
		"name": "SetUnitY",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "newY"
		}],
		"insertText": "SetUnitY(whichUnit, newY)",
		"documentation": "设置Y坐标 [R]"
	},
	"SetUnitPosition": {
		"original": "native          SetUnitPosition     takes unit whichUnit, real newX, real newY returns nothing",
		"fileName": "common.j",
		"name": "SetUnitPosition",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "newX"
		}, {
			"type": "real",
			"name": "newY"
		}],
		"insertText": "SetUnitPosition(whichUnit, newX, newY)",
		"documentation": "移动单位(立即)(指定坐标) [R]"
	},
	"SetUnitPositionLoc": {
		"original": "native          SetUnitPositionLoc  takes unit whichUnit, location whichLocation returns nothing",
		"fileName": "common.j",
		"name": "SetUnitPositionLoc",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "location",
			"name": "whichLocation"
		}],
		"insertText": "SetUnitPositionLoc(whichUnit, whichLocation)",
		"documentation": "移动单位 (立刻)"
	},
	"SetUnitFacing": {
		"original": "native          SetUnitFacing       takes unit whichUnit, real facingAngle returns nothing",
		"fileName": "common.j",
		"name": "SetUnitFacing",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "facingAngle"
		}],
		"insertText": "SetUnitFacing(whichUnit, facingAngle)",
		"documentation": "设置单位面向角度 [R]"
	},
	"SetUnitFacingTimed": {
		"original": "native          SetUnitFacingTimed  takes unit whichUnit, real facingAngle, real duration returns nothing",
		"fileName": "common.j",
		"name": "SetUnitFacingTimed",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "facingAngle"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "SetUnitFacingTimed(whichUnit, facingAngle, duration)",
		"documentation": "设置单位面对角度"
	},
	"SetUnitMoveSpeed": {
		"original": "native          SetUnitMoveSpeed    takes unit whichUnit, real newSpeed returns nothing",
		"fileName": "common.j",
		"name": "SetUnitMoveSpeed",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "newSpeed"
		}],
		"insertText": "SetUnitMoveSpeed(whichUnit, newSpeed)",
		"documentation": "设置单位移动速度"
	},
	"SetUnitFlyHeight": {
		"original": "native          SetUnitFlyHeight    takes unit whichUnit, real newHeight, real rate returns nothing",
		"fileName": "common.j",
		"name": "SetUnitFlyHeight",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "newHeight"
		}, {
			"type": "real",
			"name": "rate"
		}],
		"insertText": "SetUnitFlyHeight(whichUnit, newHeight, rate)",
		"documentation": ""
	},
	"SetUnitTurnSpeed": {
		"original": "native          SetUnitTurnSpeed    takes unit whichUnit, real newTurnSpeed returns nothing",
		"fileName": "common.j",
		"name": "SetUnitTurnSpeed",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "newTurnSpeed"
		}],
		"insertText": "SetUnitTurnSpeed(whichUnit, newTurnSpeed)",
		"documentation": ""
	},
	"SetUnitPropWindow": {
		"original": "native          SetUnitPropWindow   takes unit whichUnit, real newPropWindowAngle returns nothing",
		"fileName": "common.j",
		"name": "SetUnitPropWindow",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "newPropWindowAngle"
		}],
		"insertText": "SetUnitPropWindow(whichUnit, newPropWindowAngle)",
		"documentation": "改变单位转向角度(弧度制) [R]"
	},
	"SetUnitAcquireRange": {
		"original": "native          SetUnitAcquireRange takes unit whichUnit, real newAcquireRange returns nothing",
		"fileName": "common.j",
		"name": "SetUnitAcquireRange",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "newAcquireRange"
		}],
		"insertText": "SetUnitAcquireRange(whichUnit, newAcquireRange)",
		"documentation": ""
	},
	"SetUnitCreepGuard": {
		"original": "native          SetUnitCreepGuard   takes unit whichUnit, boolean creepGuard returns nothing",
		"fileName": "common.j",
		"name": "SetUnitCreepGuard",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "boolean",
			"name": "creepGuard"
		}],
		"insertText": "SetUnitCreepGuard(whichUnit, creepGuard)",
		"documentation": "锁定指定单位的警戒点 [R]"
	},
	"GetUnitAcquireRange": {
		"original": "native          GetUnitAcquireRange     takes unit whichUnit returns real",
		"fileName": "common.j",
		"name": "GetUnitAcquireRange",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "real",
		"insertText": "GetUnitAcquireRange(whichUnit)",
		"documentation": "单位射程 (当前)"
	},
	"GetUnitTurnSpeed": {
		"original": "native          GetUnitTurnSpeed        takes unit whichUnit returns real",
		"fileName": "common.j",
		"name": "GetUnitTurnSpeed",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "real",
		"insertText": "GetUnitTurnSpeed(whichUnit)",
		"documentation": "转向速度 (当前)"
	},
	"GetUnitPropWindow": {
		"original": "native          GetUnitPropWindow       takes unit whichUnit returns real",
		"fileName": "common.j",
		"name": "GetUnitPropWindow",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "real",
		"insertText": "GetUnitPropWindow(whichUnit)",
		"documentation": "当前转向角度(弧度制) [R]"
	},
	"GetUnitFlyHeight": {
		"original": "native          GetUnitFlyHeight        takes unit whichUnit returns real",
		"fileName": "common.j",
		"name": "GetUnitFlyHeight",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "real",
		"insertText": "GetUnitFlyHeight(whichUnit)",
		"documentation": "飞行高度 (当前)"
	},
	"GetUnitDefaultAcquireRange": {
		"original": "native          GetUnitDefaultAcquireRange      takes unit whichUnit returns real",
		"fileName": "common.j",
		"name": "GetUnitDefaultAcquireRange",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "real",
		"insertText": "GetUnitDefaultAcquireRange(whichUnit)",
		"documentation": "单位射程 (默认)"
	},
	"GetUnitDefaultTurnSpeed": {
		"original": "native          GetUnitDefaultTurnSpeed         takes unit whichUnit returns real",
		"fileName": "common.j",
		"name": "GetUnitDefaultTurnSpeed",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "real",
		"insertText": "GetUnitDefaultTurnSpeed(whichUnit)",
		"documentation": "转向速度 (默认)"
	},
	"GetUnitDefaultPropWindow": {
		"original": "native          GetUnitDefaultPropWindow        takes unit whichUnit returns real",
		"fileName": "common.j",
		"name": "GetUnitDefaultPropWindow",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "real",
		"insertText": "GetUnitDefaultPropWindow(whichUnit)",
		"documentation": ""
	},
	"GetUnitDefaultFlyHeight": {
		"original": "native          GetUnitDefaultFlyHeight         takes unit whichUnit returns real",
		"fileName": "common.j",
		"name": "GetUnitDefaultFlyHeight",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "real",
		"insertText": "GetUnitDefaultFlyHeight(whichUnit)",
		"documentation": "飞行高度 (默认)"
	},
	"SetUnitOwner": {
		"original": "native          SetUnitOwner        takes unit whichUnit, player whichPlayer, boolean changeColor returns nothing",
		"fileName": "common.j",
		"name": "SetUnitOwner",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "boolean",
			"name": "changeColor"
		}],
		"insertText": "SetUnitOwner(whichUnit, whichPlayer, changeColor)",
		"documentation": "改变单位所有者"
	},
	"SetUnitColor": {
		"original": "native          SetUnitColor        takes unit whichUnit, playercolor whichColor returns nothing",
		"fileName": "common.j",
		"name": "SetUnitColor",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "playercolor",
			"name": "whichColor"
		}],
		"insertText": "SetUnitColor(whichUnit, whichColor)",
		"documentation": "改变单位颜色"
	},
	"SetUnitScale": {
		"original": "native          SetUnitScale        takes unit whichUnit, real scaleX, real scaleY, real scaleZ returns nothing",
		"fileName": "common.j",
		"name": "SetUnitScale",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "scaleX"
		}, {
			"type": "real",
			"name": "scaleY"
		}, {
			"type": "real",
			"name": "scaleZ"
		}],
		"insertText": "SetUnitScale(whichUnit, scaleX, scaleY, scaleZ)",
		"documentation": "改变单位尺寸(按倍数) [R]"
	},
	"SetUnitTimeScale": {
		"original": "native          SetUnitTimeScale    takes unit whichUnit, real timeScale returns nothing",
		"fileName": "common.j",
		"name": "SetUnitTimeScale",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "timeScale"
		}],
		"insertText": "SetUnitTimeScale(whichUnit, timeScale)",
		"documentation": "改变单位动画播放速度(按倍数) [R]"
	},
	"SetUnitBlendTime": {
		"original": "native          SetUnitBlendTime    takes unit whichUnit, real blendTime returns nothing",
		"fileName": "common.j",
		"name": "SetUnitBlendTime",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "blendTime"
		}],
		"insertText": "SetUnitBlendTime(whichUnit, blendTime)",
		"documentation": ""
	},
	"SetUnitVertexColor": {
		"original": "native          SetUnitVertexColor  takes unit whichUnit, integer red, integer green, integer blue, integer alpha returns nothing",
		"fileName": "common.j",
		"name": "SetUnitVertexColor",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "red"
		}, {
			"type": "integer",
			"name": "green"
		}, {
			"type": "integer",
			"name": "blue"
		}, {
			"type": "integer",
			"name": "alpha"
		}],
		"insertText": "SetUnitVertexColor(whichUnit, red, green, blue, alpha)",
		"documentation": "改变单位的颜色(RGB:0-255) [R]"
	},
	"QueueUnitAnimation": {
		"original": "native          QueueUnitAnimation          takes unit whichUnit, string whichAnimation returns nothing",
		"fileName": "common.j",
		"name": "QueueUnitAnimation",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "string",
			"name": "whichAnimation"
		}],
		"insertText": "QueueUnitAnimation(whichUnit, whichAnimation)",
		"documentation": ""
	},
	"SetUnitAnimation": {
		"original": "native          SetUnitAnimation            takes unit whichUnit, string whichAnimation returns nothing",
		"fileName": "common.j",
		"name": "SetUnitAnimation",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "string",
			"name": "whichAnimation"
		}],
		"insertText": "SetUnitAnimation(whichUnit, whichAnimation)",
		"documentation": "播放单位动作"
	},
	"SetUnitAnimationByIndex": {
		"original": "native          SetUnitAnimationByIndex     takes unit whichUnit, integer whichAnimation returns nothing",
		"fileName": "common.j",
		"name": "SetUnitAnimationByIndex",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "whichAnimation"
		}],
		"insertText": "SetUnitAnimationByIndex(whichUnit, whichAnimation)",
		"documentation": "播放单位指定序号动动作 [R]"
	},
	"SetUnitAnimationWithRarity": {
		"original": "native          SetUnitAnimationWithRarity  takes unit whichUnit, string whichAnimation, raritycontrol rarity returns nothing",
		"fileName": "common.j",
		"name": "SetUnitAnimationWithRarity",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "string",
			"name": "whichAnimation"
		}, {
			"type": "raritycontrol",
			"name": "rarity"
		}],
		"insertText": "SetUnitAnimationWithRarity(whichUnit, whichAnimation, rarity)",
		"documentation": "播放单位动作 (指定概率)"
	},
	"AddUnitAnimationProperties": {
		"original": "native          AddUnitAnimationProperties  takes unit whichUnit, string animProperties, boolean add returns nothing",
		"fileName": "common.j",
		"name": "AddUnitAnimationProperties",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "string",
			"name": "animProperties"
		}, {
			"type": "boolean",
			"name": "add"
		}],
		"insertText": "AddUnitAnimationProperties(whichUnit, animProperties, add)",
		"documentation": "添加/删除 单位动画附加名 [R]"
	},
	"SetUnitLookAt": {
		"original": "native          SetUnitLookAt       takes unit whichUnit, string whichBone, unit lookAtTarget, real offsetX, real offsetY, real offsetZ returns nothing",
		"fileName": "common.j",
		"name": "SetUnitLookAt",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "string",
			"name": "whichBone"
		}, {
			"type": "unit",
			"name": "lookAtTarget"
		}, {
			"type": "real",
			"name": "offsetX"
		}, {
			"type": "real",
			"name": "offsetY"
		}, {
			"type": "real",
			"name": "offsetZ"
		}],
		"insertText": "SetUnitLookAt(whichUnit, whichBone, lookAtTarget, offsetX, offsetY, offsetZ)",
		"documentation": "锁定单位脸面对方向"
	},
	"ResetUnitLookAt": {
		"original": "native          ResetUnitLookAt     takes unit whichUnit returns nothing",
		"fileName": "common.j",
		"name": "ResetUnitLookAt",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"insertText": "ResetUnitLookAt(whichUnit)",
		"documentation": "重置单位面对方向"
	},
	"SetUnitRescuable": {
		"original": "native          SetUnitRescuable    takes unit whichUnit, player byWhichPlayer, boolean flag returns nothing",
		"fileName": "common.j",
		"name": "SetUnitRescuable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "player",
			"name": "byWhichPlayer"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "SetUnitRescuable(whichUnit, byWhichPlayer, flag)",
		"documentation": "设置可否营救(对玩家) [R]"
	},
	"SetUnitRescueRange": {
		"original": "native          SetUnitRescueRange  takes unit whichUnit, real range returns nothing",
		"fileName": "common.j",
		"name": "SetUnitRescueRange",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "range"
		}],
		"insertText": "SetUnitRescueRange(whichUnit, range)",
		"documentation": "设置营救单位的营救距离"
	},
	"SetHeroStr": {
		"original": "native          SetHeroStr          takes unit whichHero, integer newStr, boolean permanent returns nothing",
		"fileName": "common.j",
		"name": "SetHeroStr",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichHero"
		}, {
			"type": "integer",
			"name": "newStr"
		}, {
			"type": "boolean",
			"name": "permanent"
		}],
		"insertText": "SetHeroStr(whichHero, newStr, permanent)",
		"documentation": "设置英雄力量 [R]"
	},
	"SetHeroAgi": {
		"original": "native          SetHeroAgi          takes unit whichHero, integer newAgi, boolean permanent returns nothing",
		"fileName": "common.j",
		"name": "SetHeroAgi",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichHero"
		}, {
			"type": "integer",
			"name": "newAgi"
		}, {
			"type": "boolean",
			"name": "permanent"
		}],
		"insertText": "SetHeroAgi(whichHero, newAgi, permanent)",
		"documentation": "设置英雄敏捷 [R]"
	},
	"SetHeroInt": {
		"original": "native          SetHeroInt          takes unit whichHero, integer newInt, boolean permanent returns nothing",
		"fileName": "common.j",
		"name": "SetHeroInt",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichHero"
		}, {
			"type": "integer",
			"name": "newInt"
		}, {
			"type": "boolean",
			"name": "permanent"
		}],
		"insertText": "SetHeroInt(whichHero, newInt, permanent)",
		"documentation": "设置英雄智力 [R]"
	},
	"GetHeroStr": {
		"original": "native          GetHeroStr          takes unit whichHero, boolean includeBonuses returns integer",
		"fileName": "common.j",
		"name": "GetHeroStr",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichHero"
		}, {
			"type": "boolean",
			"name": "includeBonuses"
		}],
		"returnType": "integer",
		"insertText": "GetHeroStr(whichHero, includeBonuses)",
		"documentation": "英雄力量 [R]"
	},
	"GetHeroAgi": {
		"original": "native          GetHeroAgi          takes unit whichHero, boolean includeBonuses returns integer",
		"fileName": "common.j",
		"name": "GetHeroAgi",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichHero"
		}, {
			"type": "boolean",
			"name": "includeBonuses"
		}],
		"returnType": "integer",
		"insertText": "GetHeroAgi(whichHero, includeBonuses)",
		"documentation": "英雄敏捷 [R]"
	},
	"GetHeroInt": {
		"original": "native          GetHeroInt          takes unit whichHero, boolean includeBonuses returns integer",
		"fileName": "common.j",
		"name": "GetHeroInt",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichHero"
		}, {
			"type": "boolean",
			"name": "includeBonuses"
		}],
		"returnType": "integer",
		"insertText": "GetHeroInt(whichHero, includeBonuses)",
		"documentation": "英雄智力 [R]"
	},
	"UnitStripHeroLevel": {
		"original": "native          UnitStripHeroLevel  takes unit whichHero, integer howManyLevels returns boolean",
		"fileName": "common.j",
		"name": "UnitStripHeroLevel",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichHero"
		}, {
			"type": "integer",
			"name": "howManyLevels"
		}],
		"returnType": "boolean",
		"insertText": "UnitStripHeroLevel(whichHero, howManyLevels)",
		"documentation": "降低等级 [R]"
	},
	"GetHeroXP": {
		"original": "native          GetHeroXP           takes unit whichHero returns integer",
		"fileName": "common.j",
		"name": "GetHeroXP",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichHero"
		}],
		"returnType": "integer",
		"insertText": "GetHeroXP(whichHero)",
		"documentation": "英雄的经验值"
	},
	"SetHeroXP": {
		"original": "native          SetHeroXP           takes unit whichHero, integer newXpVal,  boolean showEyeCandy returns nothing",
		"fileName": "common.j",
		"name": "SetHeroXP",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichHero"
		}, {
			"type": "integer",
			"name": "newXpVal"
		}, {
			"type": "boolean",
			"name": "showEyeCandy"
		}],
		"insertText": "SetHeroXP(whichHero, newXpVal, showEyeCandy)",
		"documentation": "设置英雄经验值"
	},
	"GetHeroSkillPoints": {
		"original": "native          GetHeroSkillPoints      takes unit whichHero returns integer",
		"fileName": "common.j",
		"name": "GetHeroSkillPoints",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichHero"
		}],
		"returnType": "integer",
		"insertText": "GetHeroSkillPoints(whichHero)",
		"documentation": "未用完的技能点数"
	},
	"UnitModifySkillPoints": {
		"original": "native          UnitModifySkillPoints   takes unit whichHero, integer skillPointDelta returns boolean",
		"fileName": "common.j",
		"name": "UnitModifySkillPoints",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichHero"
		}, {
			"type": "integer",
			"name": "skillPointDelta"
		}],
		"returnType": "boolean",
		"insertText": "UnitModifySkillPoints(whichHero, skillPointDelta)",
		"documentation": "添加剩余技能点 [R]"
	},
	"AddHeroXP": {
		"original": "native          AddHeroXP           takes unit whichHero, integer xpToAdd,   boolean showEyeCandy returns nothing",
		"fileName": "common.j",
		"name": "AddHeroXP",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichHero"
		}, {
			"type": "integer",
			"name": "xpToAdd"
		}, {
			"type": "boolean",
			"name": "showEyeCandy"
		}],
		"insertText": "AddHeroXP(whichHero, xpToAdd, showEyeCandy)",
		"documentation": "增加经验值 [R]"
	},
	"SetHeroLevel": {
		"original": "native          SetHeroLevel        takes unit whichHero, integer level,  boolean showEyeCandy returns nothing",
		"fileName": "common.j",
		"name": "SetHeroLevel",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichHero"
		}, {
			"type": "integer",
			"name": "level"
		}, {
			"type": "boolean",
			"name": "showEyeCandy"
		}],
		"insertText": "SetHeroLevel(whichHero, level, showEyeCandy)",
		"documentation": "设置英雄等级"
	},
	"GetHeroLevel": {
		"original": "constant native GetHeroLevel        takes unit whichHero returns integer",
		"fileName": "common.j",
		"name": "GetHeroLevel",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichHero"
		}],
		"returnType": "integer",
		"insertText": "GetHeroLevel(whichHero)",
		"documentation": "英雄等级"
	},
	"GetUnitLevel": {
		"original": "constant native GetUnitLevel        takes unit whichUnit returns integer",
		"fileName": "common.j",
		"name": "GetUnitLevel",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "integer",
		"insertText": "GetUnitLevel(whichUnit)",
		"documentation": "单位等级"
	},
	"GetHeroProperName": {
		"original": "native          GetHeroProperName   takes unit whichHero returns string",
		"fileName": "common.j",
		"name": "GetHeroProperName",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichHero"
		}],
		"returnType": "string",
		"insertText": "GetHeroProperName(whichHero)",
		"documentation": "英雄的姓名"
	},
	"SuspendHeroXP": {
		"original": "native          SuspendHeroXP       takes unit whichHero, boolean flag returns nothing",
		"fileName": "common.j",
		"name": "SuspendHeroXP",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichHero"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "SuspendHeroXP(whichHero, flag)",
		"documentation": "允许/禁止经验获取 [R]"
	},
	"IsSuspendedXP": {
		"original": "native          IsSuspendedXP       takes unit whichHero returns boolean",
		"fileName": "common.j",
		"name": "IsSuspendedXP",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichHero"
		}],
		"returnType": "boolean",
		"insertText": "IsSuspendedXP(whichHero)",
		"documentation": "英雄获得经验值"
	},
	"SelectHeroSkill": {
		"original": "native          SelectHeroSkill     takes unit whichHero, integer abilcode returns nothing",
		"fileName": "common.j",
		"name": "SelectHeroSkill",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichHero"
		}, {
			"type": "integer",
			"name": "abilcode"
		}],
		"insertText": "SelectHeroSkill(whichHero, abilcode)",
		"documentation": "英雄学习技能"
	},
	"GetUnitAbilityLevel": {
		"original": "native          GetUnitAbilityLevel takes unit whichUnit, integer abilcode returns integer",
		"fileName": "common.j",
		"name": "GetUnitAbilityLevel",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "abilcode"
		}],
		"returnType": "integer",
		"insertText": "GetUnitAbilityLevel(whichUnit, abilcode)",
		"documentation": "单位技能等级 [R]"
	},
	"DecUnitAbilityLevel": {
		"original": "native          DecUnitAbilityLevel takes unit whichUnit, integer abilcode returns integer",
		"fileName": "common.j",
		"name": "DecUnitAbilityLevel",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "abilcode"
		}],
		"returnType": "integer",
		"insertText": "DecUnitAbilityLevel(whichUnit, abilcode)",
		"documentation": "降低技能等级 [R]"
	},
	"IncUnitAbilityLevel": {
		"original": "native          IncUnitAbilityLevel takes unit whichUnit, integer abilcode returns integer",
		"fileName": "common.j",
		"name": "IncUnitAbilityLevel",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "abilcode"
		}],
		"returnType": "integer",
		"insertText": "IncUnitAbilityLevel(whichUnit, abilcode)",
		"documentation": "提升技能等级 [R]"
	},
	"SetUnitAbilityLevel": {
		"original": "native          SetUnitAbilityLevel takes unit whichUnit, integer abilcode, integer level returns integer",
		"fileName": "common.j",
		"name": "SetUnitAbilityLevel",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "abilcode"
		}, {
			"type": "integer",
			"name": "level"
		}],
		"returnType": "integer",
		"insertText": "SetUnitAbilityLevel(whichUnit, abilcode, level)",
		"documentation": "设置技能等级 [R]"
	},
	"ReviveHero": {
		"original": "native          ReviveHero          takes unit whichHero, real x, real y, boolean doEyecandy returns boolean",
		"fileName": "common.j",
		"name": "ReviveHero",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichHero"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "boolean",
			"name": "doEyecandy"
		}],
		"returnType": "boolean",
		"insertText": "ReviveHero(whichHero, x, y, doEyecandy)",
		"documentation": "立即复活(指定坐标) [R]"
	},
	"ReviveHeroLoc": {
		"original": "native          ReviveHeroLoc       takes unit whichHero, location loc, boolean doEyecandy returns boolean",
		"fileName": "common.j",
		"name": "ReviveHeroLoc",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichHero"
		}, {
			"type": "location",
			"name": "loc"
		}, {
			"type": "boolean",
			"name": "doEyecandy"
		}],
		"returnType": "boolean",
		"insertText": "ReviveHeroLoc(whichHero, loc, doEyecandy)",
		"documentation": "复活英雄（立即）"
	},
	"SetUnitExploded": {
		"original": "native          SetUnitExploded     takes unit whichUnit, boolean exploded returns nothing",
		"fileName": "common.j",
		"name": "SetUnitExploded",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "boolean",
			"name": "exploded"
		}],
		"insertText": "SetUnitExploded(whichUnit, exploded)",
		"documentation": ""
	},
	"SetUnitInvulnerable": {
		"original": "native          SetUnitInvulnerable takes unit whichUnit, boolean flag returns nothing",
		"fileName": "common.j",
		"name": "SetUnitInvulnerable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "SetUnitInvulnerable(whichUnit, flag)",
		"documentation": "设置单位 无敌/可攻击"
	},
	"PauseUnit": {
		"original": "native          PauseUnit           takes unit whichUnit, boolean flag returns nothing",
		"fileName": "common.j",
		"name": "PauseUnit",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "PauseUnit(whichUnit, flag)",
		"documentation": "暂停/恢复 [R]"
	},
	"IsUnitPaused": {
		"original": "native          IsUnitPaused        takes unit whichHero returns boolean",
		"fileName": "common.j",
		"name": "IsUnitPaused",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichHero"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitPaused(whichHero)",
		"documentation": ""
	},
	"SetUnitPathing": {
		"original": "native          SetUnitPathing      takes unit whichUnit, boolean flag returns nothing",
		"fileName": "common.j",
		"name": "SetUnitPathing",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "SetUnitPathing(whichUnit, flag)",
		"documentation": "设置碰撞 打开/关闭"
	},
	"ClearSelection": {
		"original": "native          ClearSelection      takes nothing returns nothing",
		"fileName": "common.j",
		"name": "ClearSelection",
		"isConstant": false,
		"isNative": true,
		"insertText": "ClearSelection()",
		"documentation": "清除所有选定"
	},
	"SelectUnit": {
		"original": "native          SelectUnit          takes unit whichUnit, boolean flag returns nothing",
		"fileName": "common.j",
		"name": "SelectUnit",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "SelectUnit(whichUnit, flag)",
		"documentation": ""
	},
	"GetUnitPointValue": {
		"original": "native          GetUnitPointValue       takes unit whichUnit returns integer",
		"fileName": "common.j",
		"name": "GetUnitPointValue",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "integer",
		"insertText": "GetUnitPointValue(whichUnit)",
		"documentation": "单位的 附加值"
	},
	"GetUnitPointValueByType": {
		"original": "native          GetUnitPointValueByType takes integer unitType returns integer",
		"fileName": "common.j",
		"name": "GetUnitPointValueByType",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "unitType"
		}],
		"returnType": "integer",
		"insertText": "GetUnitPointValueByType(unitType)",
		"documentation": "单位-类型的 附加值"
	},
	"UnitAddItem": {
		"original": "native          UnitAddItem             takes unit whichUnit, item whichItem returns boolean",
		"fileName": "common.j",
		"name": "UnitAddItem",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "item",
			"name": "whichItem"
		}],
		"returnType": "boolean",
		"insertText": "UnitAddItem(whichUnit, whichItem)",
		"documentation": "给予物品 [R]"
	},
	"UnitAddItemById": {
		"original": "native          UnitAddItemById         takes unit whichUnit, integer itemId returns item",
		"fileName": "common.j",
		"name": "UnitAddItemById",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "itemId"
		}],
		"returnType": "item",
		"insertText": "UnitAddItemById(whichUnit, itemId)",
		"documentation": ""
	},
	"UnitAddItemToSlotById": {
		"original": "native          UnitAddItemToSlotById   takes unit whichUnit, integer itemId, integer itemSlot returns boolean",
		"fileName": "common.j",
		"name": "UnitAddItemToSlotById",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "itemId"
		}, {
			"type": "integer",
			"name": "itemSlot"
		}],
		"returnType": "boolean",
		"insertText": "UnitAddItemToSlotById(whichUnit, itemId, itemSlot)",
		"documentation": "新建物品到指定物品栏 [R]"
	},
	"UnitRemoveItem": {
		"original": "native          UnitRemoveItem          takes unit whichUnit, item whichItem returns nothing",
		"fileName": "common.j",
		"name": "UnitRemoveItem",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "item",
			"name": "whichItem"
		}],
		"insertText": "UnitRemoveItem(whichUnit, whichItem)",
		"documentation": ""
	},
	"UnitRemoveItemFromSlot": {
		"original": "native          UnitRemoveItemFromSlot  takes unit whichUnit, integer itemSlot returns item",
		"fileName": "common.j",
		"name": "UnitRemoveItemFromSlot",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "itemSlot"
		}],
		"returnType": "item",
		"insertText": "UnitRemoveItemFromSlot(whichUnit, itemSlot)",
		"documentation": ""
	},
	"UnitHasItem": {
		"original": "native          UnitHasItem             takes unit whichUnit, item whichItem returns boolean",
		"fileName": "common.j",
		"name": "UnitHasItem",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "item",
			"name": "whichItem"
		}],
		"returnType": "boolean",
		"insertText": "UnitHasItem(whichUnit, whichItem)",
		"documentation": "英雄已有物品"
	},
	"UnitItemInSlot": {
		"original": "native          UnitItemInSlot          takes unit whichUnit, integer itemSlot returns item",
		"fileName": "common.j",
		"name": "UnitItemInSlot",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "itemSlot"
		}],
		"returnType": "item",
		"insertText": "UnitItemInSlot(whichUnit, itemSlot)",
		"documentation": "单位持有物品"
	},
	"UnitInventorySize": {
		"original": "native          UnitInventorySize       takes unit whichUnit returns integer",
		"fileName": "common.j",
		"name": "UnitInventorySize",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "integer",
		"insertText": "UnitInventorySize(whichUnit)",
		"documentation": ""
	},
	"UnitDropItemPoint": {
		"original": "native          UnitDropItemPoint       takes unit whichUnit, item whichItem, real x, real y returns boolean",
		"fileName": "common.j",
		"name": "UnitDropItemPoint",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "item",
			"name": "whichItem"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"returnType": "boolean",
		"insertText": "UnitDropItemPoint(whichUnit, whichItem, x, y)",
		"documentation": "发布丢弃物品命令(指定坐标) [R]"
	},
	"UnitDropItemSlot": {
		"original": "native          UnitDropItemSlot        takes unit whichUnit, item whichItem, integer slot returns boolean",
		"fileName": "common.j",
		"name": "UnitDropItemSlot",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "item",
			"name": "whichItem"
		}, {
			"type": "integer",
			"name": "slot"
		}],
		"returnType": "boolean",
		"insertText": "UnitDropItemSlot(whichUnit, whichItem, slot)",
		"documentation": "移动物品到物品栏 [R]"
	},
	"UnitDropItemTarget": {
		"original": "native          UnitDropItemTarget      takes unit whichUnit, item whichItem, widget target returns boolean",
		"fileName": "common.j",
		"name": "UnitDropItemTarget",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "item",
			"name": "whichItem"
		}, {
			"type": "widget",
			"name": "target"
		}],
		"returnType": "boolean",
		"insertText": "UnitDropItemTarget(whichUnit, whichItem, target)",
		"documentation": ""
	},
	"UnitUseItem": {
		"original": "native          UnitUseItem             takes unit whichUnit, item whichItem returns boolean",
		"fileName": "common.j",
		"name": "UnitUseItem",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "item",
			"name": "whichItem"
		}],
		"returnType": "boolean",
		"insertText": "UnitUseItem(whichUnit, whichItem)",
		"documentation": "使用物品"
	},
	"UnitUseItemPoint": {
		"original": "native          UnitUseItemPoint        takes unit whichUnit, item whichItem, real x, real y returns boolean",
		"fileName": "common.j",
		"name": "UnitUseItemPoint",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "item",
			"name": "whichItem"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"returnType": "boolean",
		"insertText": "UnitUseItemPoint(whichUnit, whichItem, x, y)",
		"documentation": "使用物品(指定坐标)"
	},
	"UnitUseItemTarget": {
		"original": "native          UnitUseItemTarget       takes unit whichUnit, item whichItem, widget target returns boolean",
		"fileName": "common.j",
		"name": "UnitUseItemTarget",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "item",
			"name": "whichItem"
		}, {
			"type": "widget",
			"name": "target"
		}],
		"returnType": "boolean",
		"insertText": "UnitUseItemTarget(whichUnit, whichItem, target)",
		"documentation": "对单位使用物品"
	},
	"GetUnitX": {
		"original": "constant native GetUnitX            takes unit whichUnit returns real",
		"fileName": "common.j",
		"name": "GetUnitX",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "real",
		"insertText": "GetUnitX(whichUnit)",
		"documentation": "单位所在X轴坐标 [R]"
	},
	"GetUnitY": {
		"original": "constant native GetUnitY            takes unit whichUnit returns real",
		"fileName": "common.j",
		"name": "GetUnitY",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "real",
		"insertText": "GetUnitY(whichUnit)",
		"documentation": "单位所在Y轴坐标 [R]"
	},
	"GetUnitLoc": {
		"original": "constant native GetUnitLoc          takes unit whichUnit returns location",
		"fileName": "common.j",
		"name": "GetUnitLoc",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "location",
		"insertText": "GetUnitLoc(whichUnit)",
		"documentation": "单位的位置"
	},
	"GetUnitFacing": {
		"original": "constant native GetUnitFacing       takes unit whichUnit returns real",
		"fileName": "common.j",
		"name": "GetUnitFacing",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "real",
		"insertText": "GetUnitFacing(whichUnit)",
		"documentation": "单位面向角度"
	},
	"GetUnitMoveSpeed": {
		"original": "constant native GetUnitMoveSpeed    takes unit whichUnit returns real",
		"fileName": "common.j",
		"name": "GetUnitMoveSpeed",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "real",
		"insertText": "GetUnitMoveSpeed(whichUnit)",
		"documentation": "单位移动速度 (当前)"
	},
	"GetUnitDefaultMoveSpeed": {
		"original": "constant native GetUnitDefaultMoveSpeed takes unit whichUnit returns real",
		"fileName": "common.j",
		"name": "GetUnitDefaultMoveSpeed",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "real",
		"insertText": "GetUnitDefaultMoveSpeed(whichUnit)",
		"documentation": "单位移动速度 (默认)"
	},
	"GetUnitState": {
		"original": "constant native GetUnitState        takes unit whichUnit, unitstate whichUnitState returns real",
		"fileName": "common.j",
		"name": "GetUnitState",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "unitstate",
			"name": "whichUnitState"
		}],
		"returnType": "real",
		"insertText": "GetUnitState(whichUnit, whichUnitState)",
		"documentation": "属性 [R]"
	},
	"GetOwningPlayer": {
		"original": "constant native GetOwningPlayer     takes unit whichUnit returns player",
		"fileName": "common.j",
		"name": "GetOwningPlayer",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "player",
		"insertText": "GetOwningPlayer(whichUnit)",
		"documentation": "单位的所有者"
	},
	"GetUnitTypeId": {
		"original": "constant native GetUnitTypeId       takes unit whichUnit returns integer",
		"fileName": "common.j",
		"name": "GetUnitTypeId",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "integer",
		"insertText": "GetUnitTypeId(whichUnit)",
		"documentation": "单位的类型"
	},
	"GetUnitRace": {
		"original": "constant native GetUnitRace         takes unit whichUnit returns race",
		"fileName": "common.j",
		"name": "GetUnitRace",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "race",
		"insertText": "GetUnitRace(whichUnit)",
		"documentation": "单位的种族"
	},
	"GetUnitName": {
		"original": "constant native GetUnitName         takes unit whichUnit returns string",
		"fileName": "common.j",
		"name": "GetUnitName",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "string",
		"insertText": "GetUnitName(whichUnit)",
		"documentation": "单位名字"
	},
	"GetUnitFoodUsed": {
		"original": "constant native GetUnitFoodUsed takes unit whichUnit returns integer",
		"fileName": "YDWEAdvancedUnitDataSystem.j",
		"name": "GetUnitFoodUsed",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "integer",
		"insertText": "GetUnitFoodUsed(whichUnit)",
		"documentation": "单位使用人口数量"
	},
	"GetUnitFoodMade": {
		"original": "constant native GetUnitFoodMade takes unit whichUnit returns integer",
		"fileName": "YDWEAdvancedUnitDataSystem.j",
		"name": "GetUnitFoodMade",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "integer",
		"insertText": "GetUnitFoodMade(whichUnit)",
		"documentation": "单位提供的人口"
	},
	"GetFoodMade": {
		"original": "constant native GetFoodMade         takes integer unitId returns integer",
		"fileName": "common.j",
		"name": "GetFoodMade",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "unitId"
		}],
		"returnType": "integer",
		"insertText": "GetFoodMade(unitId)",
		"documentation": "单位-类型 提供的人口"
	},
	"GetFoodUsed": {
		"original": "constant native GetFoodUsed         takes integer unitId returns integer",
		"fileName": "common.j",
		"name": "GetFoodUsed",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "unitId"
		}],
		"returnType": "integer",
		"insertText": "GetFoodUsed(unitId)",
		"documentation": "单位-类型 使用的人口"
	},
	"SetUnitUseFood": {
		"original": "native          SetUnitUseFood      takes unit whichUnit, boolean useFood returns nothing",
		"fileName": "common.j",
		"name": "SetUnitUseFood",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "boolean",
			"name": "useFood"
		}],
		"insertText": "SetUnitUseFood(whichUnit, useFood)",
		"documentation": "允许/禁止 人口占用 [R]"
	},
	"GetUnitRallyPoint": {
		"original": "constant native GetUnitRallyPoint           takes unit whichUnit returns location",
		"fileName": "common.j",
		"name": "GetUnitRallyPoint",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "location",
		"insertText": "GetUnitRallyPoint(whichUnit)",
		"documentation": "聚集点"
	},
	"GetUnitRallyUnit": {
		"original": "constant native GetUnitRallyUnit            takes unit whichUnit returns unit",
		"fileName": "common.j",
		"name": "GetUnitRallyUnit",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "unit",
		"insertText": "GetUnitRallyUnit(whichUnit)",
		"documentation": "拥有源聚集点单位"
	},
	"GetUnitRallyDestructable": {
		"original": "constant native GetUnitRallyDestructable    takes unit whichUnit returns destructable",
		"fileName": "common.j",
		"name": "GetUnitRallyDestructable",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "destructable",
		"insertText": "GetUnitRallyDestructable(whichUnit)",
		"documentation": "单位 聚集点"
	},
	"IsUnitInGroup": {
		"original": "constant native IsUnitInGroup       takes unit whichUnit, group whichGroup returns boolean",
		"fileName": "common.j",
		"name": "IsUnitInGroup",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "group",
			"name": "whichGroup"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitInGroup(whichUnit, whichGroup)",
		"documentation": "单位在 单位组"
	},
	"IsUnitInForce": {
		"original": "constant native IsUnitInForce       takes unit whichUnit, force whichForce returns boolean",
		"fileName": "common.j",
		"name": "IsUnitInForce",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "force",
			"name": "whichForce"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitInForce(whichUnit, whichForce)",
		"documentation": "是玩家组里玩家的单位"
	},
	"IsUnitOwnedByPlayer": {
		"original": "constant native IsUnitOwnedByPlayer takes unit whichUnit, player whichPlayer returns boolean",
		"fileName": "common.j",
		"name": "IsUnitOwnedByPlayer",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitOwnedByPlayer(whichUnit, whichPlayer)",
		"documentation": "是玩家的单位"
	},
	"IsUnitAlly": {
		"original": "constant native IsUnitAlly          takes unit whichUnit, player whichPlayer returns boolean",
		"fileName": "common.j",
		"name": "IsUnitAlly",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitAlly(whichUnit, whichPlayer)",
		"documentation": "单位所属玩家的同盟玩家"
	},
	"IsUnitEnemy": {
		"original": "constant native IsUnitEnemy         takes unit whichUnit, player whichPlayer returns boolean",
		"fileName": "common.j",
		"name": "IsUnitEnemy",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitEnemy(whichUnit, whichPlayer)",
		"documentation": "单位所属玩家的敌对玩家"
	},
	"IsUnitVisible": {
		"original": "constant native IsUnitVisible       takes unit whichUnit, player whichPlayer returns boolean",
		"fileName": "common.j",
		"name": "IsUnitVisible",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitVisible(whichUnit, whichPlayer)",
		"documentation": "单位对于玩家可见"
	},
	"IsUnitDetected": {
		"original": "constant native IsUnitDetected      takes unit whichUnit, player whichPlayer returns boolean",
		"fileName": "common.j",
		"name": "IsUnitDetected",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitDetected(whichUnit, whichPlayer)",
		"documentation": "被检测到"
	},
	"IsUnitInvisible": {
		"original": "constant native IsUnitInvisible     takes unit whichUnit, player whichPlayer returns boolean",
		"fileName": "common.j",
		"name": "IsUnitInvisible",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitInvisible(whichUnit, whichPlayer)",
		"documentation": "单位对于玩家不可见"
	},
	"IsUnitFogged": {
		"original": "constant native IsUnitFogged        takes unit whichUnit, player whichPlayer returns boolean",
		"fileName": "common.j",
		"name": "IsUnitFogged",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitFogged(whichUnit, whichPlayer)",
		"documentation": "单位被战争迷雾遮挡"
	},
	"IsUnitMasked": {
		"original": "constant native IsUnitMasked        takes unit whichUnit, player whichPlayer returns boolean",
		"fileName": "common.j",
		"name": "IsUnitMasked",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitMasked(whichUnit, whichPlayer)",
		"documentation": "单位被黑色阴影遮挡"
	},
	"IsUnitSelected": {
		"original": "constant native IsUnitSelected      takes unit whichUnit, player whichPlayer returns boolean",
		"fileName": "common.j",
		"name": "IsUnitSelected",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitSelected(whichUnit, whichPlayer)",
		"documentation": "玩家已选定单位"
	},
	"IsUnitRace": {
		"original": "constant native IsUnitRace          takes unit whichUnit, race whichRace returns boolean",
		"fileName": "common.j",
		"name": "IsUnitRace",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "race",
			"name": "whichRace"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitRace(whichUnit, whichRace)",
		"documentation": "单位种族检查"
	},
	"IsUnitType": {
		"original": "constant native IsUnitType          takes unit whichUnit, unittype whichUnitType returns boolean",
		"fileName": "common.j",
		"name": "IsUnitType",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "unittype",
			"name": "whichUnitType"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitType(whichUnit, whichUnitType)",
		"documentation": "检查单位 分类"
	},
	"IsUnit": {
		"original": "constant native IsUnit              takes unit whichUnit, unit whichSpecifiedUnit returns boolean",
		"fileName": "common.j",
		"name": "IsUnit",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "unit",
			"name": "whichSpecifiedUnit"
		}],
		"returnType": "boolean",
		"insertText": "IsUnit(whichUnit, whichSpecifiedUnit)",
		"documentation": "单位检查"
	},
	"IsUnitInRange": {
		"original": "constant native IsUnitInRange       takes unit whichUnit, unit otherUnit, real distance returns boolean",
		"fileName": "common.j",
		"name": "IsUnitInRange",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "unit",
			"name": "otherUnit"
		}, {
			"type": "real",
			"name": "distance"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitInRange(whichUnit, otherUnit, distance)",
		"documentation": "在指定单位范围内 [R]"
	},
	"IsUnitInRangeXY": {
		"original": "constant native IsUnitInRangeXY     takes unit whichUnit, real x, real y, real distance returns boolean",
		"fileName": "common.j",
		"name": "IsUnitInRangeXY",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "distance"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitInRangeXY(whichUnit, x, y, distance)",
		"documentation": "在指定坐标范围内 [R]"
	},
	"IsUnitInRangeLoc": {
		"original": "constant native IsUnitInRangeLoc    takes unit whichUnit, location whichLocation, real distance returns boolean",
		"fileName": "common.j",
		"name": "IsUnitInRangeLoc",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "location",
			"name": "whichLocation"
		}, {
			"type": "real",
			"name": "distance"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitInRangeLoc(whichUnit, whichLocation, distance)",
		"documentation": "在指定点范围内 [R]"
	},
	"IsUnitHidden": {
		"original": "constant native IsUnitHidden        takes unit whichUnit returns boolean",
		"fileName": "common.j",
		"name": "IsUnitHidden",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitHidden(whichUnit)",
		"documentation": ""
	},
	"IsUnitIllusion": {
		"original": "constant native IsUnitIllusion      takes unit whichUnit returns boolean",
		"fileName": "common.j",
		"name": "IsUnitIllusion",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitIllusion(whichUnit)",
		"documentation": ""
	},
	"IsUnitInTransport": {
		"original": "constant native IsUnitInTransport   takes unit whichUnit, unit whichTransport returns boolean",
		"fileName": "common.j",
		"name": "IsUnitInTransport",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "unit",
			"name": "whichTransport"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitInTransport(whichUnit, whichTransport)",
		"documentation": ""
	},
	"IsUnitLoaded": {
		"original": "constant native IsUnitLoaded        takes unit whichUnit returns boolean",
		"fileName": "common.j",
		"name": "IsUnitLoaded",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitLoaded(whichUnit)",
		"documentation": ""
	},
	"IsHeroUnitId": {
		"original": "constant native IsHeroUnitId        takes integer unitId returns boolean",
		"fileName": "common.j",
		"name": "IsHeroUnitId",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "unitId"
		}],
		"returnType": "boolean",
		"insertText": "IsHeroUnitId(unitId)",
		"documentation": "单位类型是英雄单位"
	},
	"IsUnitIdType": {
		"original": "constant native IsUnitIdType        takes integer unitId, unittype whichUnitType returns boolean",
		"fileName": "common.j",
		"name": "IsUnitIdType",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "unitId"
		}, {
			"type": "unittype",
			"name": "whichUnitType"
		}],
		"returnType": "boolean",
		"insertText": "IsUnitIdType(unitId, whichUnitType)",
		"documentation": "检查单位-类型 分类"
	},
	"UnitShareVision": {
		"original": "native UnitShareVision              takes unit whichUnit, player whichPlayer, boolean share returns nothing",
		"fileName": "common.j",
		"name": "UnitShareVision",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "boolean",
			"name": "share"
		}],
		"insertText": "UnitShareVision(whichUnit, whichPlayer, share)",
		"documentation": "共享视野 [R]"
	},
	"UnitSuspendDecay": {
		"original": "native UnitSuspendDecay             takes unit whichUnit, boolean suspend returns nothing",
		"fileName": "common.j",
		"name": "UnitSuspendDecay",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "boolean",
			"name": "suspend"
		}],
		"insertText": "UnitSuspendDecay(whichUnit, suspend)",
		"documentation": "暂停尸体腐烂 [R]"
	},
	"UnitAddType": {
		"original": "native UnitAddType                  takes unit whichUnit, unittype whichUnitType returns boolean",
		"fileName": "common.j",
		"name": "UnitAddType",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "unittype",
			"name": "whichUnitType"
		}],
		"returnType": "boolean",
		"insertText": "UnitAddType(whichUnit, whichUnitType)",
		"documentation": "添加类别 [R]"
	},
	"UnitRemoveType": {
		"original": "native UnitRemoveType               takes unit whichUnit, unittype whichUnitType returns boolean",
		"fileName": "common.j",
		"name": "UnitRemoveType",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "unittype",
			"name": "whichUnitType"
		}],
		"returnType": "boolean",
		"insertText": "UnitRemoveType(whichUnit, whichUnitType)",
		"documentation": "删除类别 [R]"
	},
	"UnitAddAbility": {
		"original": "native UnitAddAbility               takes unit whichUnit, integer abilityId returns boolean",
		"fileName": "common.j",
		"name": "UnitAddAbility",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "abilityId"
		}],
		"returnType": "boolean",
		"insertText": "UnitAddAbility(whichUnit, abilityId)",
		"documentation": "添加技能 [R]"
	},
	"UnitRemoveAbility": {
		"original": "native UnitRemoveAbility            takes unit whichUnit, integer abilityId returns boolean",
		"fileName": "common.j",
		"name": "UnitRemoveAbility",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "abilityId"
		}],
		"returnType": "boolean",
		"insertText": "UnitRemoveAbility(whichUnit, abilityId)",
		"documentation": "删除技能 [R]"
	},
	"UnitMakeAbilityPermanent": {
		"original": "native UnitMakeAbilityPermanent     takes unit whichUnit, boolean permanent, integer abilityId returns boolean",
		"fileName": "common.j",
		"name": "UnitMakeAbilityPermanent",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "boolean",
			"name": "permanent"
		}, {
			"type": "integer",
			"name": "abilityId"
		}],
		"returnType": "boolean",
		"insertText": "UnitMakeAbilityPermanent(whichUnit, permanent, abilityId)",
		"documentation": "设置技能永久性 [R]"
	},
	"UnitRemoveBuffs": {
		"original": "native UnitRemoveBuffs              takes unit whichUnit, boolean removePositive, boolean removeNegative returns nothing",
		"fileName": "common.j",
		"name": "UnitRemoveBuffs",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "boolean",
			"name": "removePositive"
		}, {
			"type": "boolean",
			"name": "removeNegative"
		}],
		"insertText": "UnitRemoveBuffs(whichUnit, removePositive, removeNegative)",
		"documentation": "删除魔法效果(指定极性) [R]"
	},
	"UnitRemoveBuffsEx": {
		"original": "native UnitRemoveBuffsEx            takes unit whichUnit, boolean removePositive, boolean removeNegative, boolean magic, boolean physical, boolean timedLife, boolean aura, boolean autoDispel returns nothing",
		"fileName": "common.j",
		"name": "UnitRemoveBuffsEx",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "boolean",
			"name": "removePositive"
		}, {
			"type": "boolean",
			"name": "removeNegative"
		}, {
			"type": "boolean",
			"name": "magic"
		}, {
			"type": "boolean",
			"name": "physical"
		}, {
			"type": "boolean",
			"name": "timedLife"
		}, {
			"type": "boolean",
			"name": "aura"
		}, {
			"type": "boolean",
			"name": "autoDispel"
		}],
		"insertText": "UnitRemoveBuffsEx(whichUnit, removePositive, removeNegative, magic, physical, timedLife, aura, autoDispel)",
		"documentation": "删除魔法效果(详细类别) [R]"
	},
	"UnitHasBuffsEx": {
		"original": "native UnitHasBuffsEx               takes unit whichUnit, boolean removePositive, boolean removeNegative, boolean magic, boolean physical, boolean timedLife, boolean aura, boolean autoDispel returns boolean",
		"fileName": "common.j",
		"name": "UnitHasBuffsEx",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "boolean",
			"name": "removePositive"
		}, {
			"type": "boolean",
			"name": "removeNegative"
		}, {
			"type": "boolean",
			"name": "magic"
		}, {
			"type": "boolean",
			"name": "physical"
		}, {
			"type": "boolean",
			"name": "timedLife"
		}, {
			"type": "boolean",
			"name": "aura"
		}, {
			"type": "boolean",
			"name": "autoDispel"
		}],
		"returnType": "boolean",
		"insertText": "UnitHasBuffsEx(whichUnit, removePositive, removeNegative, magic, physical, timedLife, aura, autoDispel)",
		"documentation": ""
	},
	"UnitCountBuffsEx": {
		"original": "native UnitCountBuffsEx             takes unit whichUnit, boolean removePositive, boolean removeNegative, boolean magic, boolean physical, boolean timedLife, boolean aura, boolean autoDispel returns integer",
		"fileName": "common.j",
		"name": "UnitCountBuffsEx",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "boolean",
			"name": "removePositive"
		}, {
			"type": "boolean",
			"name": "removeNegative"
		}, {
			"type": "boolean",
			"name": "magic"
		}, {
			"type": "boolean",
			"name": "physical"
		}, {
			"type": "boolean",
			"name": "timedLife"
		}, {
			"type": "boolean",
			"name": "aura"
		}, {
			"type": "boolean",
			"name": "autoDispel"
		}],
		"returnType": "integer",
		"insertText": "UnitCountBuffsEx(whichUnit, removePositive, removeNegative, magic, physical, timedLife, aura, autoDispel)",
		"documentation": "拥有Buff数量 [R]"
	},
	"UnitAddSleep": {
		"original": "native UnitAddSleep                 takes unit whichUnit, boolean add returns nothing",
		"fileName": "common.j",
		"name": "UnitAddSleep",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "boolean",
			"name": "add"
		}],
		"insertText": "UnitAddSleep(whichUnit, add)",
		"documentation": ""
	},
	"UnitCanSleep": {
		"original": "native UnitCanSleep                 takes unit whichUnit returns boolean",
		"fileName": "common.j",
		"name": "UnitCanSleep",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "boolean",
		"insertText": "UnitCanSleep(whichUnit)",
		"documentation": ""
	},
	"UnitAddSleepPerm": {
		"original": "native UnitAddSleepPerm             takes unit whichUnit, boolean add returns nothing",
		"fileName": "common.j",
		"name": "UnitAddSleepPerm",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "boolean",
			"name": "add"
		}],
		"insertText": "UnitAddSleepPerm(whichUnit, add)",
		"documentation": "设置单位睡眠(无论何时)"
	},
	"UnitCanSleepPerm": {
		"original": "native UnitCanSleepPerm             takes unit whichUnit returns boolean",
		"fileName": "common.j",
		"name": "UnitCanSleepPerm",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "boolean",
		"insertText": "UnitCanSleepPerm(whichUnit)",
		"documentation": "单位在睡觉"
	},
	"UnitIsSleeping": {
		"original": "native UnitIsSleeping               takes unit whichUnit returns boolean",
		"fileName": "common.j",
		"name": "UnitIsSleeping",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "boolean",
		"insertText": "UnitIsSleeping(whichUnit)",
		"documentation": ""
	},
	"UnitWakeUp": {
		"original": "native UnitWakeUp                   takes unit whichUnit returns nothing",
		"fileName": "common.j",
		"name": "UnitWakeUp",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"insertText": "UnitWakeUp(whichUnit)",
		"documentation": ""
	},
	"UnitApplyTimedLife": {
		"original": "native UnitApplyTimedLife           takes unit whichUnit, integer buffId, real duration returns nothing",
		"fileName": "common.j",
		"name": "UnitApplyTimedLife",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "buffId"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "UnitApplyTimedLife(whichUnit, buffId, duration)",
		"documentation": "设置生命周期 [R]"
	},
	"UnitIgnoreAlarm": {
		"original": "native UnitIgnoreAlarm              takes unit whichUnit, boolean flag returns boolean",
		"fileName": "common.j",
		"name": "UnitIgnoreAlarm",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"returnType": "boolean",
		"insertText": "UnitIgnoreAlarm(whichUnit, flag)",
		"documentation": ""
	},
	"UnitIgnoreAlarmToggled": {
		"original": "native UnitIgnoreAlarmToggled       takes unit whichUnit returns boolean",
		"fileName": "common.j",
		"name": "UnitIgnoreAlarmToggled",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "boolean",
		"insertText": "UnitIgnoreAlarmToggled(whichUnit)",
		"documentation": ""
	},
	"UnitResetCooldown": {
		"original": "native UnitResetCooldown            takes unit whichUnit returns nothing",
		"fileName": "common.j",
		"name": "UnitResetCooldown",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"insertText": "UnitResetCooldown(whichUnit)",
		"documentation": "重设单位技能Cooldown"
	},
	"UnitSetConstructionProgress": {
		"original": "native UnitSetConstructionProgress  takes unit whichUnit, integer constructionPercentage returns nothing",
		"fileName": "common.j",
		"name": "UnitSetConstructionProgress",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "constructionPercentage"
		}],
		"insertText": "UnitSetConstructionProgress(whichUnit, constructionPercentage)",
		"documentation": "设置建筑物 建筑升级比"
	},
	"UnitSetUpgradeProgress": {
		"original": "native UnitSetUpgradeProgress       takes unit whichUnit, integer upgradePercentage returns nothing",
		"fileName": "common.j",
		"name": "UnitSetUpgradeProgress",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "upgradePercentage"
		}],
		"insertText": "UnitSetUpgradeProgress(whichUnit, upgradePercentage)",
		"documentation": "设置建筑物 科技升级比"
	},
	"UnitPauseTimedLife": {
		"original": "native UnitPauseTimedLife           takes unit whichUnit, boolean flag returns nothing",
		"fileName": "common.j",
		"name": "UnitPauseTimedLife",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "UnitPauseTimedLife(whichUnit, flag)",
		"documentation": "暂停/恢复生命周期 [R]"
	},
	"UnitSetUsesAltIcon": {
		"original": "native UnitSetUsesAltIcon           takes unit whichUnit, boolean flag returns nothing",
		"fileName": "common.j",
		"name": "UnitSetUsesAltIcon",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "UnitSetUsesAltIcon(whichUnit, flag)",
		"documentation": ""
	},
	"UnitDamagePoint": {
		"original": "native UnitDamagePoint              takes unit whichUnit, real delay, real radius, real x, real y, real amount, boolean attack, boolean ranged, attacktype attackType, damagetype damageType, weapontype weaponType returns boolean",
		"fileName": "common.j",
		"name": "UnitDamagePoint",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "delay"
		}, {
			"type": "real",
			"name": "radius"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "amount"
		}, {
			"type": "boolean",
			"name": "attack"
		}, {
			"type": "boolean",
			"name": "ranged"
		}, {
			"type": "attacktype",
			"name": "attackType"
		}, {
			"type": "damagetype",
			"name": "damageType"
		}, {
			"type": "weapontype",
			"name": "weaponType"
		}],
		"returnType": "boolean",
		"insertText": "UnitDamagePoint(whichUnit, delay, radius, x, y, amount, attack, ranged, attackType, damageType, weaponType)",
		"documentation": "伤害区域 [R]"
	},
	"UnitDamageTarget": {
		"original": "native UnitDamageTarget             takes unit whichUnit, widget target, real amount, boolean attack, boolean ranged, attacktype attackType, damagetype damageType, weapontype weaponType returns boolean",
		"fileName": "common.j",
		"name": "UnitDamageTarget",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "widget",
			"name": "target"
		}, {
			"type": "real",
			"name": "amount"
		}, {
			"type": "boolean",
			"name": "attack"
		}, {
			"type": "boolean",
			"name": "ranged"
		}, {
			"type": "attacktype",
			"name": "attackType"
		}, {
			"type": "damagetype",
			"name": "damageType"
		}, {
			"type": "weapontype",
			"name": "weaponType"
		}],
		"returnType": "boolean",
		"insertText": "UnitDamageTarget(whichUnit, target, amount, attack, ranged, attackType, damageType, weaponType)",
		"documentation": "伤害目标 [R]"
	},
	"IssueImmediateOrder": {
		"original": "native IssueImmediateOrder          takes unit whichUnit, string order returns boolean",
		"fileName": "common.j",
		"name": "IssueImmediateOrder",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "string",
			"name": "order"
		}],
		"returnType": "boolean",
		"insertText": "IssueImmediateOrder(whichUnit, order)",
		"documentation": "给单位发送命令到 没有目标"
	},
	"IssueImmediateOrderById": {
		"original": "native IssueImmediateOrderById      takes unit whichUnit, integer order returns boolean",
		"fileName": "common.j",
		"name": "IssueImmediateOrderById",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "order"
		}],
		"returnType": "boolean",
		"insertText": "IssueImmediateOrderById(whichUnit, order)",
		"documentation": "发布命令(无目标)(ID)"
	},
	"IssuePointOrder": {
		"original": "native IssuePointOrder              takes unit whichUnit, string order, real x, real y returns boolean",
		"fileName": "common.j",
		"name": "IssuePointOrder",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "string",
			"name": "order"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"returnType": "boolean",
		"insertText": "IssuePointOrder(whichUnit, order, x, y)",
		"documentation": "发布命令(指定坐标)"
	},
	"IssuePointOrderLoc": {
		"original": "native IssuePointOrderLoc           takes unit whichUnit, string order, location whichLocation returns boolean",
		"fileName": "common.j",
		"name": "IssuePointOrderLoc",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "string",
			"name": "order"
		}, {
			"type": "location",
			"name": "whichLocation"
		}],
		"returnType": "boolean",
		"insertText": "IssuePointOrderLoc(whichUnit, order, whichLocation)",
		"documentation": "给单位发送命令到 点"
	},
	"IssuePointOrderById": {
		"original": "native IssuePointOrderById          takes unit whichUnit, integer order, real x, real y returns boolean",
		"fileName": "common.j",
		"name": "IssuePointOrderById",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "order"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"returnType": "boolean",
		"insertText": "IssuePointOrderById(whichUnit, order, x, y)",
		"documentation": "发布命令(指定坐标)(ID)"
	},
	"IssuePointOrderByIdLoc": {
		"original": "native IssuePointOrderByIdLoc       takes unit whichUnit, integer order, location whichLocation returns boolean",
		"fileName": "common.j",
		"name": "IssuePointOrderByIdLoc",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "order"
		}, {
			"type": "location",
			"name": "whichLocation"
		}],
		"returnType": "boolean",
		"insertText": "IssuePointOrderByIdLoc(whichUnit, order, whichLocation)",
		"documentation": "发布命令(指定点)(ID)"
	},
	"IssueTargetOrder": {
		"original": "native IssueTargetOrder             takes unit whichUnit, string order, widget targetWidget returns boolean",
		"fileName": "common.j",
		"name": "IssueTargetOrder",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "string",
			"name": "order"
		}, {
			"type": "widget",
			"name": "targetWidget"
		}],
		"returnType": "boolean",
		"insertText": "IssueTargetOrder(whichUnit, order, targetWidget)",
		"documentation": "给单位发送命令到 单位"
	},
	"IssueTargetOrderById": {
		"original": "native IssueTargetOrderById         takes unit whichUnit, integer order, widget targetWidget returns boolean",
		"fileName": "common.j",
		"name": "IssueTargetOrderById",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "order"
		}, {
			"type": "widget",
			"name": "targetWidget"
		}],
		"returnType": "boolean",
		"insertText": "IssueTargetOrderById(whichUnit, order, targetWidget)",
		"documentation": "发布命令(指定单位)(ID)"
	},
	"IssueInstantPointOrder": {
		"original": "native IssueInstantPointOrder       takes unit whichUnit, string order, real x, real y, widget instantTargetWidget returns boolean",
		"fileName": "common.j",
		"name": "IssueInstantPointOrder",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "string",
			"name": "order"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "widget",
			"name": "instantTargetWidget"
		}],
		"returnType": "boolean",
		"insertText": "IssueInstantPointOrder(whichUnit, order, x, y, instantTargetWidget)",
		"documentation": ""
	},
	"IssueInstantPointOrderById": {
		"original": "native IssueInstantPointOrderById   takes unit whichUnit, integer order, real x, real y, widget instantTargetWidget returns boolean",
		"fileName": "common.j",
		"name": "IssueInstantPointOrderById",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "order"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "widget",
			"name": "instantTargetWidget"
		}],
		"returnType": "boolean",
		"insertText": "IssueInstantPointOrderById(whichUnit, order, x, y, instantTargetWidget)",
		"documentation": ""
	},
	"IssueInstantTargetOrder": {
		"original": "native IssueInstantTargetOrder      takes unit whichUnit, string order, widget targetWidget, widget instantTargetWidget returns boolean",
		"fileName": "common.j",
		"name": "IssueInstantTargetOrder",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "string",
			"name": "order"
		}, {
			"type": "widget",
			"name": "targetWidget"
		}, {
			"type": "widget",
			"name": "instantTargetWidget"
		}],
		"returnType": "boolean",
		"insertText": "IssueInstantTargetOrder(whichUnit, order, targetWidget, instantTargetWidget)",
		"documentation": ""
	},
	"IssueInstantTargetOrderById": {
		"original": "native IssueInstantTargetOrderById  takes unit whichUnit, integer order, widget targetWidget, widget instantTargetWidget returns boolean",
		"fileName": "common.j",
		"name": "IssueInstantTargetOrderById",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "order"
		}, {
			"type": "widget",
			"name": "targetWidget"
		}, {
			"type": "widget",
			"name": "instantTargetWidget"
		}],
		"returnType": "boolean",
		"insertText": "IssueInstantTargetOrderById(whichUnit, order, targetWidget, instantTargetWidget)",
		"documentation": ""
	},
	"IssueBuildOrder": {
		"original": "native IssueBuildOrder              takes unit whichPeon, string unitToBuild, real x, real y returns boolean",
		"fileName": "common.j",
		"name": "IssueBuildOrder",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichPeon"
		}, {
			"type": "string",
			"name": "unitToBuild"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"returnType": "boolean",
		"insertText": "IssueBuildOrder(whichPeon, unitToBuild, x, y)",
		"documentation": ""
	},
	"IssueBuildOrderById": {
		"original": "native IssueBuildOrderById          takes unit whichPeon, integer unitId, real x, real y returns boolean",
		"fileName": "common.j",
		"name": "IssueBuildOrderById",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichPeon"
		}, {
			"type": "integer",
			"name": "unitId"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"returnType": "boolean",
		"insertText": "IssueBuildOrderById(whichPeon, unitId, x, y)",
		"documentation": "发布建造命令(指定坐标) [R]"
	},
	"IssueNeutralImmediateOrder": {
		"original": "native IssueNeutralImmediateOrder       takes player forWhichPlayer, unit neutralStructure, string unitToBuild returns boolean",
		"fileName": "common.j",
		"name": "IssueNeutralImmediateOrder",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "forWhichPlayer"
		}, {
			"type": "unit",
			"name": "neutralStructure"
		}, {
			"type": "string",
			"name": "unitToBuild"
		}],
		"returnType": "boolean",
		"insertText": "IssueNeutralImmediateOrder(forWhichPlayer, neutralStructure, unitToBuild)",
		"documentation": "发布中介命令(无目标)"
	},
	"IssueNeutralImmediateOrderById": {
		"original": "native IssueNeutralImmediateOrderById   takes player forWhichPlayer,unit neutralStructure, integer unitId returns boolean",
		"fileName": "common.j",
		"name": "IssueNeutralImmediateOrderById",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "forWhichPlayer"
		}, {
			"type": "unit",
			"name": "neutralStructure"
		}, {
			"type": "integer",
			"name": "unitId"
		}],
		"returnType": "boolean",
		"insertText": "IssueNeutralImmediateOrderById(forWhichPlayer, neutralStructure, unitId)",
		"documentation": "发布中介命令(无目标)(ID)"
	},
	"IssueNeutralPointOrder": {
		"original": "native IssueNeutralPointOrder           takes player forWhichPlayer,unit neutralStructure, string unitToBuild, real x, real y returns boolean",
		"fileName": "common.j",
		"name": "IssueNeutralPointOrder",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "forWhichPlayer"
		}, {
			"type": "unit",
			"name": "neutralStructure"
		}, {
			"type": "string",
			"name": "unitToBuild"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"returnType": "boolean",
		"insertText": "IssueNeutralPointOrder(forWhichPlayer, neutralStructure, unitToBuild, x, y)",
		"documentation": "发布中介命令(指定坐标)"
	},
	"IssueNeutralPointOrderById": {
		"original": "native IssueNeutralPointOrderById       takes player forWhichPlayer,unit neutralStructure, integer unitId, real x, real y returns boolean",
		"fileName": "common.j",
		"name": "IssueNeutralPointOrderById",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "forWhichPlayer"
		}, {
			"type": "unit",
			"name": "neutralStructure"
		}, {
			"type": "integer",
			"name": "unitId"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"returnType": "boolean",
		"insertText": "IssueNeutralPointOrderById(forWhichPlayer, neutralStructure, unitId, x, y)",
		"documentation": "发布中介命令(指定坐标)(ID)"
	},
	"IssueNeutralTargetOrder": {
		"original": "native IssueNeutralTargetOrder          takes player forWhichPlayer,unit neutralStructure, string unitToBuild, widget target returns boolean",
		"fileName": "common.j",
		"name": "IssueNeutralTargetOrder",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "forWhichPlayer"
		}, {
			"type": "unit",
			"name": "neutralStructure"
		}, {
			"type": "string",
			"name": "unitToBuild"
		}, {
			"type": "widget",
			"name": "target"
		}],
		"returnType": "boolean",
		"insertText": "IssueNeutralTargetOrder(forWhichPlayer, neutralStructure, unitToBuild, target)",
		"documentation": "发布中介命令(指定单位)"
	},
	"IssueNeutralTargetOrderById": {
		"original": "native IssueNeutralTargetOrderById      takes player forWhichPlayer,unit neutralStructure, integer unitId, widget target returns boolean",
		"fileName": "common.j",
		"name": "IssueNeutralTargetOrderById",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "forWhichPlayer"
		}, {
			"type": "unit",
			"name": "neutralStructure"
		}, {
			"type": "integer",
			"name": "unitId"
		}, {
			"type": "widget",
			"name": "target"
		}],
		"returnType": "boolean",
		"insertText": "IssueNeutralTargetOrderById(forWhichPlayer, neutralStructure, unitId, target)",
		"documentation": "发布中介命令(指定单位)(ID)"
	},
	"GetUnitCurrentOrder": {
		"original": "native GetUnitCurrentOrder          takes unit whichUnit returns integer",
		"fileName": "common.j",
		"name": "GetUnitCurrentOrder",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "integer",
		"insertText": "GetUnitCurrentOrder(whichUnit)",
		"documentation": "单位当前的命令"
	},
	"SetResourceAmount": {
		"original": "native SetResourceAmount            takes unit whichUnit, integer amount returns nothing",
		"fileName": "common.j",
		"name": "SetResourceAmount",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "amount"
		}],
		"insertText": "SetResourceAmount(whichUnit, amount)",
		"documentation": "设置金矿资源"
	},
	"AddResourceAmount": {
		"original": "native AddResourceAmount            takes unit whichUnit, integer amount returns nothing",
		"fileName": "common.j",
		"name": "AddResourceAmount",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "amount"
		}],
		"insertText": "AddResourceAmount(whichUnit, amount)",
		"documentation": ""
	},
	"GetResourceAmount": {
		"original": "native GetResourceAmount            takes unit whichUnit returns integer",
		"fileName": "common.j",
		"name": "GetResourceAmount",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "integer",
		"insertText": "GetResourceAmount(whichUnit)",
		"documentation": "黄金资源数量"
	},
	"WaygateGetDestinationX": {
		"original": "native WaygateGetDestinationX       takes unit waygate returns real",
		"fileName": "common.j",
		"name": "WaygateGetDestinationX",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "waygate"
		}],
		"returnType": "real",
		"insertText": "WaygateGetDestinationX(waygate)",
		"documentation": "传送门目的地X坐标"
	},
	"WaygateGetDestinationY": {
		"original": "native WaygateGetDestinationY       takes unit waygate returns real",
		"fileName": "common.j",
		"name": "WaygateGetDestinationY",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "waygate"
		}],
		"returnType": "real",
		"insertText": "WaygateGetDestinationY(waygate)",
		"documentation": "传送门目的地Y坐标"
	},
	"WaygateSetDestination": {
		"original": "native WaygateSetDestination        takes unit waygate, real x, real y returns nothing",
		"fileName": "common.j",
		"name": "WaygateSetDestination",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "waygate"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"insertText": "WaygateSetDestination(waygate, x, y)",
		"documentation": "设置传送门目的坐标 [R]"
	},
	"WaygateActivate": {
		"original": "native WaygateActivate              takes unit waygate, boolean activate returns nothing",
		"fileName": "common.j",
		"name": "WaygateActivate",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "waygate"
		}, {
			"type": "boolean",
			"name": "activate"
		}],
		"insertText": "WaygateActivate(waygate, activate)",
		"documentation": ""
	},
	"WaygateIsActive": {
		"original": "native WaygateIsActive              takes unit waygate returns boolean",
		"fileName": "common.j",
		"name": "WaygateIsActive",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "waygate"
		}],
		"returnType": "boolean",
		"insertText": "WaygateIsActive(waygate)",
		"documentation": ""
	},
	"AddItemToAllStock": {
		"original": "native AddItemToAllStock            takes integer itemId, integer currentStock, integer stockMax returns nothing",
		"fileName": "common.j",
		"name": "AddItemToAllStock",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "itemId"
		}, {
			"type": "integer",
			"name": "currentStock"
		}, {
			"type": "integer",
			"name": "stockMax"
		}],
		"insertText": "AddItemToAllStock(itemId, currentStock, stockMax)",
		"documentation": "增加 物品-类型 (到所有商店)"
	},
	"AddItemToStock": {
		"original": "native AddItemToStock               takes unit whichUnit, integer itemId, integer currentStock, integer stockMax returns nothing",
		"fileName": "common.j",
		"name": "AddItemToStock",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "itemId"
		}, {
			"type": "integer",
			"name": "currentStock"
		}, {
			"type": "integer",
			"name": "stockMax"
		}],
		"insertText": "AddItemToStock(whichUnit, itemId, currentStock, stockMax)",
		"documentation": ""
	},
	"AddUnitToAllStock": {
		"original": "native AddUnitToAllStock            takes integer unitId, integer currentStock, integer stockMax returns nothing",
		"fileName": "common.j",
		"name": "AddUnitToAllStock",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "unitId"
		}, {
			"type": "integer",
			"name": "currentStock"
		}, {
			"type": "integer",
			"name": "stockMax"
		}],
		"insertText": "AddUnitToAllStock(unitId, currentStock, stockMax)",
		"documentation": "增加 单位-类型 (到所有商店)"
	},
	"AddUnitToStock": {
		"original": "native AddUnitToStock               takes unit whichUnit, integer unitId, integer currentStock, integer stockMax returns nothing",
		"fileName": "common.j",
		"name": "AddUnitToStock",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "unitId"
		}, {
			"type": "integer",
			"name": "currentStock"
		}, {
			"type": "integer",
			"name": "stockMax"
		}],
		"insertText": "AddUnitToStock(whichUnit, unitId, currentStock, stockMax)",
		"documentation": ""
	},
	"RemoveItemFromAllStock": {
		"original": "native RemoveItemFromAllStock       takes integer itemId returns nothing",
		"fileName": "common.j",
		"name": "RemoveItemFromAllStock",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "itemId"
		}],
		"insertText": "RemoveItemFromAllStock(itemId)",
		"documentation": "删除 物品-类型 (从所有商店)"
	},
	"RemoveItemFromStock": {
		"original": "native RemoveItemFromStock          takes unit whichUnit, integer itemId returns nothing",
		"fileName": "common.j",
		"name": "RemoveItemFromStock",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "itemId"
		}],
		"insertText": "RemoveItemFromStock(whichUnit, itemId)",
		"documentation": ""
	},
	"RemoveUnitFromAllStock": {
		"original": "native RemoveUnitFromAllStock       takes integer unitId returns nothing",
		"fileName": "common.j",
		"name": "RemoveUnitFromAllStock",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "unitId"
		}],
		"insertText": "RemoveUnitFromAllStock(unitId)",
		"documentation": "删除 单位-类型 (从所有商店)"
	},
	"RemoveUnitFromStock": {
		"original": "native RemoveUnitFromStock          takes unit whichUnit, integer unitId returns nothing",
		"fileName": "common.j",
		"name": "RemoveUnitFromStock",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "unitId"
		}],
		"insertText": "RemoveUnitFromStock(whichUnit, unitId)",
		"documentation": ""
	},
	"SetAllItemTypeSlots": {
		"original": "native SetAllItemTypeSlots          takes integer slots returns nothing",
		"fileName": "common.j",
		"name": "SetAllItemTypeSlots",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "slots"
		}],
		"insertText": "SetAllItemTypeSlots(slots)",
		"documentation": "限制物品的位置 (从所有商店)"
	},
	"SetAllUnitTypeSlots": {
		"original": "native SetAllUnitTypeSlots          takes integer slots returns nothing",
		"fileName": "common.j",
		"name": "SetAllUnitTypeSlots",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "slots"
		}],
		"insertText": "SetAllUnitTypeSlots(slots)",
		"documentation": "限制单位的位置 (从所有商店)"
	},
	"SetItemTypeSlots": {
		"original": "native SetItemTypeSlots             takes unit whichUnit, integer slots returns nothing",
		"fileName": "common.j",
		"name": "SetItemTypeSlots",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "slots"
		}],
		"insertText": "SetItemTypeSlots(whichUnit, slots)",
		"documentation": "限制物品的位置 (从商店)"
	},
	"SetUnitTypeSlots": {
		"original": "native SetUnitTypeSlots             takes unit whichUnit, integer slots returns nothing",
		"fileName": "common.j",
		"name": "SetUnitTypeSlots",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "slots"
		}],
		"insertText": "SetUnitTypeSlots(whichUnit, slots)",
		"documentation": "限制单位的位置 (从商店)"
	},
	"GetUnitUserData": {
		"original": "native GetUnitUserData              takes unit whichUnit returns integer",
		"fileName": "common.j",
		"name": "GetUnitUserData",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "integer",
		"insertText": "GetUnitUserData(whichUnit)",
		"documentation": "单位自定义值"
	},
	"SetUnitUserData": {
		"original": "native SetUnitUserData              takes unit whichUnit, integer data returns nothing",
		"fileName": "common.j",
		"name": "SetUnitUserData",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "data"
		}],
		"insertText": "SetUnitUserData(whichUnit, data)",
		"documentation": "设置单位自定义数据"
	},
	"Player": {
		"original": "constant native Player              takes integer number returns player",
		"fileName": "common.j",
		"name": "Player",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "number"
		}],
		"returnType": "player",
		"insertText": "Player(number)",
		"documentation": ""
	},
	"GetLocalPlayer": {
		"original": "constant native GetLocalPlayer      takes nothing returns player",
		"fileName": "common.j",
		"name": "GetLocalPlayer",
		"isConstant": true,
		"isNative": true,
		"returnType": "player",
		"insertText": "GetLocalPlayer()",
		"documentation": "本地玩家 [R]"
	},
	"IsPlayerAlly": {
		"original": "constant native IsPlayerAlly        takes player whichPlayer, player otherPlayer returns boolean",
		"fileName": "common.j",
		"name": "IsPlayerAlly",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "player",
			"name": "otherPlayer"
		}],
		"returnType": "boolean",
		"insertText": "IsPlayerAlly(whichPlayer, otherPlayer)",
		"documentation": "玩家是玩家的同盟"
	},
	"IsPlayerEnemy": {
		"original": "constant native IsPlayerEnemy       takes player whichPlayer, player otherPlayer returns boolean",
		"fileName": "common.j",
		"name": "IsPlayerEnemy",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "player",
			"name": "otherPlayer"
		}],
		"returnType": "boolean",
		"insertText": "IsPlayerEnemy(whichPlayer, otherPlayer)",
		"documentation": "玩家是玩家的敌人"
	},
	"IsPlayerInForce": {
		"original": "constant native IsPlayerInForce     takes player whichPlayer, force whichForce returns boolean",
		"fileName": "common.j",
		"name": "IsPlayerInForce",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "force",
			"name": "whichForce"
		}],
		"returnType": "boolean",
		"insertText": "IsPlayerInForce(whichPlayer, whichForce)",
		"documentation": "玩家在玩家组"
	},
	"IsPlayerObserver": {
		"original": "constant native IsPlayerObserver    takes player whichPlayer returns boolean",
		"fileName": "common.j",
		"name": "IsPlayerObserver",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "boolean",
		"insertText": "IsPlayerObserver(whichPlayer)",
		"documentation": "玩家是裁判或观察者 [R]"
	},
	"IsVisibleToPlayer": {
		"original": "constant native IsVisibleToPlayer           takes real x, real y, player whichPlayer returns boolean",
		"fileName": "common.j",
		"name": "IsVisibleToPlayer",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "boolean",
		"insertText": "IsVisibleToPlayer(x, y, whichPlayer)",
		"documentation": "坐标可见"
	},
	"IsLocationVisibleToPlayer": {
		"original": "constant native IsLocationVisibleToPlayer   takes location whichLocation, player whichPlayer returns boolean",
		"fileName": "common.j",
		"name": "IsLocationVisibleToPlayer",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "location",
			"name": "whichLocation"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "boolean",
		"insertText": "IsLocationVisibleToPlayer(whichLocation, whichPlayer)",
		"documentation": "点对于玩家可见"
	},
	"IsFoggedToPlayer": {
		"original": "constant native IsFoggedToPlayer            takes real x, real y, player whichPlayer returns boolean",
		"fileName": "common.j",
		"name": "IsFoggedToPlayer",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "boolean",
		"insertText": "IsFoggedToPlayer(x, y, whichPlayer)",
		"documentation": "坐标在迷雾中"
	},
	"IsLocationFoggedToPlayer": {
		"original": "constant native IsLocationFoggedToPlayer    takes location whichLocation, player whichPlayer returns boolean",
		"fileName": "common.j",
		"name": "IsLocationFoggedToPlayer",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "location",
			"name": "whichLocation"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "boolean",
		"insertText": "IsLocationFoggedToPlayer(whichLocation, whichPlayer)",
		"documentation": "点被迷雾遮挡"
	},
	"IsMaskedToPlayer": {
		"original": "constant native IsMaskedToPlayer            takes real x, real y, player whichPlayer returns boolean",
		"fileName": "common.j",
		"name": "IsMaskedToPlayer",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "boolean",
		"insertText": "IsMaskedToPlayer(x, y, whichPlayer)",
		"documentation": "坐标在黑色阴影中"
	},
	"IsLocationMaskedToPlayer": {
		"original": "constant native IsLocationMaskedToPlayer    takes location whichLocation, player whichPlayer returns boolean",
		"fileName": "common.j",
		"name": "IsLocationMaskedToPlayer",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "location",
			"name": "whichLocation"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "boolean",
		"insertText": "IsLocationMaskedToPlayer(whichLocation, whichPlayer)",
		"documentation": "点被黑色阴影遮挡"
	},
	"GetPlayerRace": {
		"original": "constant native GetPlayerRace           takes player whichPlayer returns race",
		"fileName": "common.j",
		"name": "GetPlayerRace",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "race",
		"insertText": "GetPlayerRace(whichPlayer)",
		"documentation": "玩家的种族"
	},
	"GetPlayerId": {
		"original": "constant native GetPlayerId             takes player whichPlayer returns integer",
		"fileName": "common.j",
		"name": "GetPlayerId",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "integer",
		"insertText": "GetPlayerId(whichPlayer)",
		"documentation": "玩家ID - 1 [R]"
	},
	"GetPlayerUnitCount": {
		"original": "constant native GetPlayerUnitCount      takes player whichPlayer, boolean includeIncomplete returns integer",
		"fileName": "common.j",
		"name": "GetPlayerUnitCount",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "boolean",
			"name": "includeIncomplete"
		}],
		"returnType": "integer",
		"insertText": "GetPlayerUnitCount(whichPlayer, includeIncomplete)",
		"documentation": "单位数量"
	},
	"GetPlayerTypedUnitCount": {
		"original": "constant native GetPlayerTypedUnitCount takes player whichPlayer, string unitName, boolean includeIncomplete, boolean includeUpgrades returns integer",
		"fileName": "common.j",
		"name": "GetPlayerTypedUnitCount",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "unitName"
		}, {
			"type": "boolean",
			"name": "includeIncomplete"
		}, {
			"type": "boolean",
			"name": "includeUpgrades"
		}],
		"returnType": "integer",
		"insertText": "GetPlayerTypedUnitCount(whichPlayer, unitName, includeIncomplete, includeUpgrades)",
		"documentation": ""
	},
	"GetPlayerStructureCount": {
		"original": "constant native GetPlayerStructureCount takes player whichPlayer, boolean includeIncomplete returns integer",
		"fileName": "common.j",
		"name": "GetPlayerStructureCount",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "boolean",
			"name": "includeIncomplete"
		}],
		"returnType": "integer",
		"insertText": "GetPlayerStructureCount(whichPlayer, includeIncomplete)",
		"documentation": "获得建筑数量"
	},
	"GetPlayerState": {
		"original": "constant native GetPlayerState          takes player whichPlayer, playerstate whichPlayerState returns integer",
		"fileName": "common.j",
		"name": "GetPlayerState",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "playerstate",
			"name": "whichPlayerState"
		}],
		"returnType": "integer",
		"insertText": "GetPlayerState(whichPlayer, whichPlayerState)",
		"documentation": "获得玩家属性"
	},
	"GetPlayerScore": {
		"original": "constant native GetPlayerScore          takes player whichPlayer, playerscore whichPlayerScore returns integer",
		"fileName": "common.j",
		"name": "GetPlayerScore",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "playerscore",
			"name": "whichPlayerScore"
		}],
		"returnType": "integer",
		"insertText": "GetPlayerScore(whichPlayer, whichPlayerScore)",
		"documentation": "获得玩家得分"
	},
	"GetPlayerAlliance": {
		"original": "constant native GetPlayerAlliance       takes player sourcePlayer, player otherPlayer, alliancetype whichAllianceSetting returns boolean",
		"fileName": "common.j",
		"name": "GetPlayerAlliance",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "sourcePlayer"
		}, {
			"type": "player",
			"name": "otherPlayer"
		}, {
			"type": "alliancetype",
			"name": "whichAllianceSetting"
		}],
		"returnType": "boolean",
		"insertText": "GetPlayerAlliance(sourcePlayer, otherPlayer, whichAllianceSetting)",
		"documentation": "玩家与玩家结盟"
	},
	"GetPlayerHandicap": {
		"original": "constant native GetPlayerHandicap       takes player whichPlayer returns real",
		"fileName": "common.j",
		"name": "GetPlayerHandicap",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "real",
		"insertText": "GetPlayerHandicap(whichPlayer)",
		"documentation": ""
	},
	"GetPlayerHandicapXP": {
		"original": "constant native GetPlayerHandicapXP     takes player whichPlayer returns real",
		"fileName": "common.j",
		"name": "GetPlayerHandicapXP",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "real",
		"insertText": "GetPlayerHandicapXP(whichPlayer)",
		"documentation": ""
	},
	"SetPlayerHandicap": {
		"original": "constant native SetPlayerHandicap       takes player whichPlayer, real handicap returns nothing",
		"fileName": "common.j",
		"name": "SetPlayerHandicap",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "real",
			"name": "handicap"
		}],
		"insertText": "SetPlayerHandicap(whichPlayer, handicap)",
		"documentation": "设置生命上限 [R]"
	},
	"SetPlayerHandicapXP": {
		"original": "constant native SetPlayerHandicapXP     takes player whichPlayer, real handicap returns nothing",
		"fileName": "common.j",
		"name": "SetPlayerHandicapXP",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "real",
			"name": "handicap"
		}],
		"insertText": "SetPlayerHandicapXP(whichPlayer, handicap)",
		"documentation": "设置经验获得率 [R]"
	},
	"SetPlayerTechMaxAllowed": {
		"original": "constant native SetPlayerTechMaxAllowed takes player whichPlayer, integer techid, integer maximum returns nothing",
		"fileName": "common.j",
		"name": "SetPlayerTechMaxAllowed",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "integer",
			"name": "techid"
		}, {
			"type": "integer",
			"name": "maximum"
		}],
		"insertText": "SetPlayerTechMaxAllowed(whichPlayer, techid, maximum)",
		"documentation": ""
	},
	"GetPlayerTechMaxAllowed": {
		"original": "constant native GetPlayerTechMaxAllowed takes player whichPlayer, integer techid returns integer",
		"fileName": "common.j",
		"name": "GetPlayerTechMaxAllowed",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "integer",
			"name": "techid"
		}],
		"returnType": "integer",
		"insertText": "GetPlayerTechMaxAllowed(whichPlayer, techid)",
		"documentation": ""
	},
	"AddPlayerTechResearched": {
		"original": "constant native AddPlayerTechResearched takes player whichPlayer, integer techid, integer levels returns nothing",
		"fileName": "common.j",
		"name": "AddPlayerTechResearched",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "integer",
			"name": "techid"
		}, {
			"type": "integer",
			"name": "levels"
		}],
		"insertText": "AddPlayerTechResearched(whichPlayer, techid, levels)",
		"documentation": "增加科技等级"
	},
	"SetPlayerTechResearched": {
		"original": "constant native SetPlayerTechResearched takes player whichPlayer, integer techid, integer setToLevel returns nothing",
		"fileName": "common.j",
		"name": "SetPlayerTechResearched",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "integer",
			"name": "techid"
		}, {
			"type": "integer",
			"name": "setToLevel"
		}],
		"insertText": "SetPlayerTechResearched(whichPlayer, techid, setToLevel)",
		"documentation": ""
	},
	"GetPlayerTechResearched": {
		"original": "constant native GetPlayerTechResearched takes player whichPlayer, integer techid, boolean specificonly returns boolean",
		"fileName": "common.j",
		"name": "GetPlayerTechResearched",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "integer",
			"name": "techid"
		}, {
			"type": "boolean",
			"name": "specificonly"
		}],
		"returnType": "boolean",
		"insertText": "GetPlayerTechResearched(whichPlayer, techid, specificonly)",
		"documentation": ""
	},
	"GetPlayerTechCount": {
		"original": "constant native GetPlayerTechCount      takes player whichPlayer, integer techid, boolean specificonly returns integer",
		"fileName": "common.j",
		"name": "GetPlayerTechCount",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "integer",
			"name": "techid"
		}, {
			"type": "boolean",
			"name": "specificonly"
		}],
		"returnType": "integer",
		"insertText": "GetPlayerTechCount(whichPlayer, techid, specificonly)",
		"documentation": ""
	},
	"SetPlayerUnitsOwner": {
		"original": "native SetPlayerUnitsOwner takes player whichPlayer, integer newOwner returns nothing",
		"fileName": "common.j",
		"name": "SetPlayerUnitsOwner",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "integer",
			"name": "newOwner"
		}],
		"insertText": "SetPlayerUnitsOwner(whichPlayer, newOwner)",
		"documentation": ""
	},
	"CripplePlayer": {
		"original": "native CripplePlayer takes player whichPlayer, force toWhichPlayers, boolean flag returns nothing",
		"fileName": "common.j",
		"name": "CripplePlayer",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "force",
			"name": "toWhichPlayers"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "CripplePlayer(whichPlayer, toWhichPlayers, flag)",
		"documentation": ""
	},
	"SetPlayerAbilityAvailable": {
		"original": "native SetPlayerAbilityAvailable        takes player whichPlayer, integer abilid, boolean avail returns nothing",
		"fileName": "common.j",
		"name": "SetPlayerAbilityAvailable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "integer",
			"name": "abilid"
		}, {
			"type": "boolean",
			"name": "avail"
		}],
		"insertText": "SetPlayerAbilityAvailable(whichPlayer, abilid, avail)",
		"documentation": "允许/禁用 技能 [R]"
	},
	"SetPlayerState": {
		"original": "native SetPlayerState   takes player whichPlayer, playerstate whichPlayerState, integer value returns nothing",
		"fileName": "common.j",
		"name": "SetPlayerState",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "playerstate",
			"name": "whichPlayerState"
		}, {
			"type": "integer",
			"name": "value"
		}],
		"insertText": "SetPlayerState(whichPlayer, whichPlayerState, value)",
		"documentation": "设置玩家属性"
	},
	"RemovePlayer": {
		"original": "native RemovePlayer     takes player whichPlayer, playergameresult gameResult returns nothing",
		"fileName": "common.j",
		"name": "RemovePlayer",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "playergameresult",
			"name": "gameResult"
		}],
		"insertText": "RemovePlayer(whichPlayer, gameResult)",
		"documentation": "踢除玩家"
	},
	"CachePlayerHeroData": {
		"original": "native CachePlayerHeroData takes player whichPlayer returns nothing",
		"fileName": "common.j",
		"name": "CachePlayerHeroData",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "CachePlayerHeroData(whichPlayer)",
		"documentation": ""
	},
	"SetFogStateRect": {
		"original": "native  SetFogStateRect      takes player forWhichPlayer, fogstate whichState, rect where, boolean useSharedVision returns nothing",
		"fileName": "common.j",
		"name": "SetFogStateRect",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "forWhichPlayer"
		}, {
			"type": "fogstate",
			"name": "whichState"
		}, {
			"type": "rect",
			"name": "where"
		}, {
			"type": "boolean",
			"name": "useSharedVision"
		}],
		"insertText": "SetFogStateRect(forWhichPlayer, whichState, where, useSharedVision)",
		"documentation": "设置地图迷雾(矩形区域) [R]"
	},
	"SetFogStateRadius": {
		"original": "native  SetFogStateRadius    takes player forWhichPlayer, fogstate whichState, real centerx, real centerY, real radius, boolean useSharedVision returns nothing",
		"fileName": "common.j",
		"name": "SetFogStateRadius",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "forWhichPlayer"
		}, {
			"type": "fogstate",
			"name": "whichState"
		}, {
			"type": "real",
			"name": "centerx"
		}, {
			"type": "real",
			"name": "centerY"
		}, {
			"type": "real",
			"name": "radius"
		}, {
			"type": "boolean",
			"name": "useSharedVision"
		}],
		"insertText": "SetFogStateRadius(forWhichPlayer, whichState, centerx, centerY, radius, useSharedVision)",
		"documentation": "设置地图迷雾(圆范围) [R]"
	},
	"SetFogStateRadiusLoc": {
		"original": "native  SetFogStateRadiusLoc takes player forWhichPlayer, fogstate whichState, location center, real radius, boolean useSharedVision returns nothing",
		"fileName": "common.j",
		"name": "SetFogStateRadiusLoc",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "forWhichPlayer"
		}, {
			"type": "fogstate",
			"name": "whichState"
		}, {
			"type": "location",
			"name": "center"
		}, {
			"type": "real",
			"name": "radius"
		}, {
			"type": "boolean",
			"name": "useSharedVision"
		}],
		"insertText": "SetFogStateRadiusLoc(forWhichPlayer, whichState, center, radius, useSharedVision)",
		"documentation": ""
	},
	"FogMaskEnable": {
		"original": "native  FogMaskEnable        takes boolean enable returns nothing",
		"fileName": "common.j",
		"name": "FogMaskEnable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "enable"
		}],
		"insertText": "FogMaskEnable(enable)",
		"documentation": "启用/禁用黑色阴影 [R]"
	},
	"IsFogMaskEnabled": {
		"original": "native  IsFogMaskEnabled     takes nothing returns boolean",
		"fileName": "common.j",
		"name": "IsFogMaskEnabled",
		"isConstant": false,
		"isNative": true,
		"returnType": "boolean",
		"insertText": "IsFogMaskEnabled()",
		"documentation": "允许黑色阴影"
	},
	"FogEnable": {
		"original": "native  FogEnable            takes boolean enable returns nothing",
		"fileName": "common.j",
		"name": "FogEnable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "enable"
		}],
		"insertText": "FogEnable(enable)",
		"documentation": "启用/禁用 战争迷雾 [R]"
	},
	"IsFogEnabled": {
		"original": "native  IsFogEnabled         takes nothing returns boolean",
		"fileName": "common.j",
		"name": "IsFogEnabled",
		"isConstant": false,
		"isNative": true,
		"returnType": "boolean",
		"insertText": "IsFogEnabled()",
		"documentation": "允许战争迷雾"
	},
	"CreateFogModifierRect": {
		"original": "native CreateFogModifierRect        takes player forWhichPlayer, fogstate whichState, rect where, boolean useSharedVision, boolean afterUnits returns fogmodifier",
		"fileName": "common.j",
		"name": "CreateFogModifierRect",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "forWhichPlayer"
		}, {
			"type": "fogstate",
			"name": "whichState"
		}, {
			"type": "rect",
			"name": "where"
		}, {
			"type": "boolean",
			"name": "useSharedVision"
		}, {
			"type": "boolean",
			"name": "afterUnits"
		}],
		"returnType": "fogmodifier",
		"insertText": "CreateFogModifierRect(forWhichPlayer, whichState, where, useSharedVision, afterUnits)",
		"documentation": "新建可见度修正器(矩形区域) [R]"
	},
	"CreateFogModifierRadius": {
		"original": "native CreateFogModifierRadius      takes player forWhichPlayer, fogstate whichState, real centerx, real centerY, real radius, boolean useSharedVision, boolean afterUnits returns fogmodifier",
		"fileName": "common.j",
		"name": "CreateFogModifierRadius",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "forWhichPlayer"
		}, {
			"type": "fogstate",
			"name": "whichState"
		}, {
			"type": "real",
			"name": "centerx"
		}, {
			"type": "real",
			"name": "centerY"
		}, {
			"type": "real",
			"name": "radius"
		}, {
			"type": "boolean",
			"name": "useSharedVision"
		}, {
			"type": "boolean",
			"name": "afterUnits"
		}],
		"returnType": "fogmodifier",
		"insertText": "CreateFogModifierRadius(forWhichPlayer, whichState, centerx, centerY, radius, useSharedVision, afterUnits)",
		"documentation": "新建可见度修正器(圆范围) [R]"
	},
	"CreateFogModifierRadiusLoc": {
		"original": "native CreateFogModifierRadiusLoc   takes player forWhichPlayer, fogstate whichState, location center, real radius, boolean useSharedVision, boolean afterUnits returns fogmodifier",
		"fileName": "common.j",
		"name": "CreateFogModifierRadiusLoc",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "forWhichPlayer"
		}, {
			"type": "fogstate",
			"name": "whichState"
		}, {
			"type": "location",
			"name": "center"
		}, {
			"type": "real",
			"name": "radius"
		}, {
			"type": "boolean",
			"name": "useSharedVision"
		}, {
			"type": "boolean",
			"name": "afterUnits"
		}],
		"returnType": "fogmodifier",
		"insertText": "CreateFogModifierRadiusLoc(forWhichPlayer, whichState, center, radius, useSharedVision, afterUnits)",
		"documentation": ""
	},
	"DestroyFogModifier": {
		"original": "native DestroyFogModifier           takes fogmodifier whichFogModifier returns nothing",
		"fileName": "common.j",
		"name": "DestroyFogModifier",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "fogmodifier",
			"name": "whichFogModifier"
		}],
		"insertText": "DestroyFogModifier(whichFogModifier)",
		"documentation": "删除可见度修正器"
	},
	"FogModifierStart": {
		"original": "native FogModifierStart             takes fogmodifier whichFogModifier returns nothing",
		"fileName": "common.j",
		"name": "FogModifierStart",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "fogmodifier",
			"name": "whichFogModifier"
		}],
		"insertText": "FogModifierStart(whichFogModifier)",
		"documentation": "允许可见度修正器"
	},
	"FogModifierStop": {
		"original": "native FogModifierStop              takes fogmodifier whichFogModifier returns nothing",
		"fileName": "common.j",
		"name": "FogModifierStop",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "fogmodifier",
			"name": "whichFogModifier"
		}],
		"insertText": "FogModifierStop(whichFogModifier)",
		"documentation": "禁止可见度修正器"
	},
	"VersionGet": {
		"original": "native VersionGet takes nothing returns version",
		"fileName": "common.j",
		"name": "VersionGet",
		"isConstant": false,
		"isNative": true,
		"returnType": "version",
		"insertText": "VersionGet()",
		"documentation": ""
	},
	"VersionCompatible": {
		"original": "native VersionCompatible takes version whichVersion returns boolean",
		"fileName": "common.j",
		"name": "VersionCompatible",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "version",
			"name": "whichVersion"
		}],
		"returnType": "boolean",
		"insertText": "VersionCompatible(whichVersion)",
		"documentation": ""
	},
	"VersionSupported": {
		"original": "native VersionSupported takes version whichVersion returns boolean",
		"fileName": "common.j",
		"name": "VersionSupported",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "version",
			"name": "whichVersion"
		}],
		"returnType": "boolean",
		"insertText": "VersionSupported(whichVersion)",
		"documentation": ""
	},
	"EndGame": {
		"original": "native EndGame takes boolean doScoreScreen returns nothing",
		"fileName": "common.j",
		"name": "EndGame",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "doScoreScreen"
		}],
		"insertText": "EndGame(doScoreScreen)",
		"documentation": ""
	},
	"ChangeLevel": {
		"original": "native          ChangeLevel         takes string newLevel, boolean doScoreScreen returns nothing",
		"fileName": "common.j",
		"name": "ChangeLevel",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "newLevel"
		}, {
			"type": "boolean",
			"name": "doScoreScreen"
		}],
		"insertText": "ChangeLevel(newLevel, doScoreScreen)",
		"documentation": "切换关卡 [R]"
	},
	"RestartGame": {
		"original": "native          RestartGame         takes boolean doScoreScreen returns nothing",
		"fileName": "common.j",
		"name": "RestartGame",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "doScoreScreen"
		}],
		"insertText": "RestartGame(doScoreScreen)",
		"documentation": ""
	},
	"ReloadGame": {
		"original": "native          ReloadGame          takes nothing returns nothing",
		"fileName": "common.j",
		"name": "ReloadGame",
		"isConstant": false,
		"isNative": true,
		"insertText": "ReloadGame()",
		"documentation": ""
	},
	"SetCampaignMenuRace": {
		"original": "native          SetCampaignMenuRace takes race r returns nothing",
		"fileName": "common.j",
		"name": "SetCampaignMenuRace",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "race",
			"name": "r"
		}],
		"insertText": "SetCampaignMenuRace(r)",
		"documentation": ""
	},
	"SetCampaignMenuRaceEx": {
		"original": "native          SetCampaignMenuRaceEx takes integer campaignIndex returns nothing",
		"fileName": "common.j",
		"name": "SetCampaignMenuRaceEx",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "campaignIndex"
		}],
		"insertText": "SetCampaignMenuRaceEx(campaignIndex)",
		"documentation": ""
	},
	"ForceCampaignSelectScreen": {
		"original": "native          ForceCampaignSelectScreen takes nothing returns nothing",
		"fileName": "common.j",
		"name": "ForceCampaignSelectScreen",
		"isConstant": false,
		"isNative": true,
		"insertText": "ForceCampaignSelectScreen()",
		"documentation": ""
	},
	"LoadGame": {
		"original": "native          LoadGame            takes string saveFileName, boolean doScoreScreen returns nothing",
		"fileName": "common.j",
		"name": "LoadGame",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "saveFileName"
		}, {
			"type": "boolean",
			"name": "doScoreScreen"
		}],
		"insertText": "LoadGame(saveFileName, doScoreScreen)",
		"documentation": ""
	},
	"SaveGame": {
		"original": "native          SaveGame            takes string saveFileName returns nothing",
		"fileName": "common.j",
		"name": "SaveGame",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "saveFileName"
		}],
		"insertText": "SaveGame(saveFileName)",
		"documentation": "保存进度 [R]"
	},
	"RenameSaveDirectory": {
		"original": "native          RenameSaveDirectory takes string sourceDirName, string destDirName returns boolean",
		"fileName": "common.j",
		"name": "RenameSaveDirectory",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "sourceDirName"
		}, {
			"type": "string",
			"name": "destDirName"
		}],
		"returnType": "boolean",
		"insertText": "RenameSaveDirectory(sourceDirName, destDirName)",
		"documentation": ""
	},
	"RemoveSaveDirectory": {
		"original": "native          RemoveSaveDirectory takes string sourceDirName returns boolean",
		"fileName": "common.j",
		"name": "RemoveSaveDirectory",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "sourceDirName"
		}],
		"returnType": "boolean",
		"insertText": "RemoveSaveDirectory(sourceDirName)",
		"documentation": ""
	},
	"CopySaveGame": {
		"original": "native          CopySaveGame        takes string sourceSaveName, string destSaveName returns boolean",
		"fileName": "common.j",
		"name": "CopySaveGame",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "sourceSaveName"
		}, {
			"type": "string",
			"name": "destSaveName"
		}],
		"returnType": "boolean",
		"insertText": "CopySaveGame(sourceSaveName, destSaveName)",
		"documentation": ""
	},
	"SaveGameExists": {
		"original": "native          SaveGameExists      takes string saveName returns boolean",
		"fileName": "common.j",
		"name": "SaveGameExists",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "saveName"
		}],
		"returnType": "boolean",
		"insertText": "SaveGameExists(saveName)",
		"documentation": "游戏进度是存在的"
	},
	"SyncSelections": {
		"original": "native          SyncSelections      takes nothing returns nothing",
		"fileName": "common.j",
		"name": "SyncSelections",
		"isConstant": false,
		"isNative": true,
		"insertText": "SyncSelections()",
		"documentation": ""
	},
	"SetFloatGameState": {
		"original": "native          SetFloatGameState   takes fgamestate whichFloatGameState, real value returns nothing",
		"fileName": "common.j",
		"name": "SetFloatGameState",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "fgamestate",
			"name": "whichFloatGameState"
		}, {
			"type": "real",
			"name": "value"
		}],
		"insertText": "SetFloatGameState(whichFloatGameState, value)",
		"documentation": ""
	},
	"GetFloatGameState": {
		"original": "constant native GetFloatGameState   takes fgamestate whichFloatGameState returns real",
		"fileName": "common.j",
		"name": "GetFloatGameState",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "fgamestate",
			"name": "whichFloatGameState"
		}],
		"returnType": "real",
		"insertText": "GetFloatGameState(whichFloatGameState)",
		"documentation": ""
	},
	"SetIntegerGameState": {
		"original": "native          SetIntegerGameState takes igamestate whichIntegerGameState, integer value returns nothing",
		"fileName": "common.j",
		"name": "SetIntegerGameState",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "igamestate",
			"name": "whichIntegerGameState"
		}, {
			"type": "integer",
			"name": "value"
		}],
		"insertText": "SetIntegerGameState(whichIntegerGameState, value)",
		"documentation": ""
	},
	"GetIntegerGameState": {
		"original": "constant native GetIntegerGameState takes igamestate whichIntegerGameState returns integer",
		"fileName": "common.j",
		"name": "GetIntegerGameState",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "igamestate",
			"name": "whichIntegerGameState"
		}],
		"returnType": "integer",
		"insertText": "GetIntegerGameState(whichIntegerGameState)",
		"documentation": ""
	},
	"SetTutorialCleared": {
		"original": "native  SetTutorialCleared      takes boolean cleared returns nothing",
		"fileName": "common.j",
		"name": "SetTutorialCleared",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "cleared"
		}],
		"insertText": "SetTutorialCleared(cleared)",
		"documentation": ""
	},
	"SetMissionAvailable": {
		"original": "native  SetMissionAvailable     takes integer campaignNumber, integer missionNumber, boolean available returns nothing",
		"fileName": "common.j",
		"name": "SetMissionAvailable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "campaignNumber"
		}, {
			"type": "integer",
			"name": "missionNumber"
		}, {
			"type": "boolean",
			"name": "available"
		}],
		"insertText": "SetMissionAvailable(campaignNumber, missionNumber, available)",
		"documentation": ""
	},
	"SetCampaignAvailable": {
		"original": "native  SetCampaignAvailable    takes integer campaignNumber, boolean available  returns nothing",
		"fileName": "common.j",
		"name": "SetCampaignAvailable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "campaignNumber"
		}, {
			"type": "boolean",
			"name": "available"
		}],
		"insertText": "SetCampaignAvailable(campaignNumber, available)",
		"documentation": ""
	},
	"SetOpCinematicAvailable": {
		"original": "native  SetOpCinematicAvailable takes integer campaignNumber, boolean available  returns nothing",
		"fileName": "common.j",
		"name": "SetOpCinematicAvailable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "campaignNumber"
		}, {
			"type": "boolean",
			"name": "available"
		}],
		"insertText": "SetOpCinematicAvailable(campaignNumber, available)",
		"documentation": ""
	},
	"SetEdCinematicAvailable": {
		"original": "native  SetEdCinematicAvailable takes integer campaignNumber, boolean available  returns nothing",
		"fileName": "common.j",
		"name": "SetEdCinematicAvailable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "campaignNumber"
		}, {
			"type": "boolean",
			"name": "available"
		}],
		"insertText": "SetEdCinematicAvailable(campaignNumber, available)",
		"documentation": ""
	},
	"GetDefaultDifficulty": {
		"original": "native  GetDefaultDifficulty    takes nothing returns gamedifficulty",
		"fileName": "common.j",
		"name": "GetDefaultDifficulty",
		"isConstant": false,
		"isNative": true,
		"returnType": "gamedifficulty",
		"insertText": "GetDefaultDifficulty()",
		"documentation": ""
	},
	"SetDefaultDifficulty": {
		"original": "native  SetDefaultDifficulty    takes gamedifficulty g returns nothing",
		"fileName": "common.j",
		"name": "SetDefaultDifficulty",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamedifficulty",
			"name": "g"
		}],
		"insertText": "SetDefaultDifficulty(g)",
		"documentation": ""
	},
	"SetCustomCampaignButtonVisible": {
		"original": "native  SetCustomCampaignButtonVisible  takes integer whichButton, boolean visible returns nothing",
		"fileName": "common.j",
		"name": "SetCustomCampaignButtonVisible",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "whichButton"
		}, {
			"type": "boolean",
			"name": "visible"
		}],
		"insertText": "SetCustomCampaignButtonVisible(whichButton, visible)",
		"documentation": ""
	},
	"GetCustomCampaignButtonVisible": {
		"original": "native  GetCustomCampaignButtonVisible  takes integer whichButton returns boolean",
		"fileName": "common.j",
		"name": "GetCustomCampaignButtonVisible",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "whichButton"
		}],
		"returnType": "boolean",
		"insertText": "GetCustomCampaignButtonVisible(whichButton)",
		"documentation": ""
	},
	"DoNotSaveReplay": {
		"original": "native  DoNotSaveReplay         takes nothing returns nothing",
		"fileName": "common.j",
		"name": "DoNotSaveReplay",
		"isConstant": false,
		"isNative": true,
		"insertText": "DoNotSaveReplay()",
		"documentation": "关闭游戏录像功能 [R]"
	},
	"DialogCreate": {
		"original": "native DialogCreate                 takes nothing returns dialog",
		"fileName": "common.j",
		"name": "DialogCreate",
		"isConstant": false,
		"isNative": true,
		"returnType": "dialog",
		"insertText": "DialogCreate()",
		"documentation": "新建对话框 [R]"
	},
	"DialogDestroy": {
		"original": "native DialogDestroy                takes dialog whichDialog returns nothing",
		"fileName": "common.j",
		"name": "DialogDestroy",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "dialog",
			"name": "whichDialog"
		}],
		"insertText": "DialogDestroy(whichDialog)",
		"documentation": "删除 [R]"
	},
	"DialogClear": {
		"original": "native DialogClear                  takes dialog whichDialog returns nothing",
		"fileName": "common.j",
		"name": "DialogClear",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "dialog",
			"name": "whichDialog"
		}],
		"insertText": "DialogClear(whichDialog)",
		"documentation": ""
	},
	"DialogSetMessage": {
		"original": "native DialogSetMessage             takes dialog whichDialog, string messageText returns nothing",
		"fileName": "common.j",
		"name": "DialogSetMessage",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "dialog",
			"name": "whichDialog"
		}, {
			"type": "string",
			"name": "messageText"
		}],
		"insertText": "DialogSetMessage(whichDialog, messageText)",
		"documentation": ""
	},
	"DialogAddButton": {
		"original": "native DialogAddButton              takes dialog whichDialog, string buttonText, integer hotkey returns button",
		"fileName": "common.j",
		"name": "DialogAddButton",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "dialog",
			"name": "whichDialog"
		}, {
			"type": "string",
			"name": "buttonText"
		}, {
			"type": "integer",
			"name": "hotkey"
		}],
		"returnType": "button",
		"insertText": "DialogAddButton(whichDialog, buttonText, hotkey)",
		"documentation": "添加对话框按钮 [R]"
	},
	"DialogAddQuitButton": {
		"original": "native DialogAddQuitButton          takes dialog whichDialog, boolean doScoreScreen, string buttonText, integer hotkey returns button",
		"fileName": "common.j",
		"name": "DialogAddQuitButton",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "dialog",
			"name": "whichDialog"
		}, {
			"type": "boolean",
			"name": "doScoreScreen"
		}, {
			"type": "string",
			"name": "buttonText"
		}, {
			"type": "integer",
			"name": "hotkey"
		}],
		"returnType": "button",
		"insertText": "DialogAddQuitButton(whichDialog, doScoreScreen, buttonText, hotkey)",
		"documentation": "添加退出游戏按钮 [R]"
	},
	"DialogDisplay": {
		"original": "native DialogDisplay                takes player whichPlayer, dialog whichDialog, boolean flag returns nothing",
		"fileName": "common.j",
		"name": "DialogDisplay",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "dialog",
			"name": "whichDialog"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "DialogDisplay(whichPlayer, whichDialog, flag)",
		"documentation": "显示/隐藏 [R]"
	},
	"ReloadGameCachesFromDisk": {
		"original": "native  ReloadGameCachesFromDisk takes nothing returns boolean",
		"fileName": "common.j",
		"name": "ReloadGameCachesFromDisk",
		"isConstant": false,
		"isNative": true,
		"returnType": "boolean",
		"insertText": "ReloadGameCachesFromDisk()",
		"documentation": "读取所有缓存"
	},
	"InitGameCache": {
		"original": "native  InitGameCache    takes string campaignFile returns gamecache",
		"fileName": "common.j",
		"name": "InitGameCache",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "campaignFile"
		}],
		"returnType": "gamecache",
		"insertText": "InitGameCache(campaignFile)",
		"documentation": "新建游戏缓存 [R]"
	},
	"SaveGameCache": {
		"original": "native  SaveGameCache    takes gamecache whichCache returns boolean",
		"fileName": "common.j",
		"name": "SaveGameCache",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamecache",
			"name": "whichCache"
		}],
		"returnType": "boolean",
		"insertText": "SaveGameCache(whichCache)",
		"documentation": ""
	},
	"StoreInteger": {
		"original": "native  StoreInteger\t\t\t\t\ttakes gamecache cache, string missionKey, string key, integer value returns nothing",
		"fileName": "common.j",
		"name": "StoreInteger",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamecache",
			"name": "cache"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "string",
			"name": "key"
		}, {
			"type": "integer",
			"name": "value"
		}],
		"insertText": "StoreInteger(cache, missionKey, key, value)",
		"documentation": "记录整数"
	},
	"StoreReal": {
		"original": "native  StoreReal\t\t\t\t\t\ttakes gamecache cache, string missionKey, string key, real value returns nothing",
		"fileName": "common.j",
		"name": "StoreReal",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamecache",
			"name": "cache"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "string",
			"name": "key"
		}, {
			"type": "real",
			"name": "value"
		}],
		"insertText": "StoreReal(cache, missionKey, key, value)",
		"documentation": "记录实数"
	},
	"StoreBoolean": {
		"original": "native  StoreBoolean\t\t\t\t\ttakes gamecache cache, string missionKey, string key, boolean value returns nothing",
		"fileName": "common.j",
		"name": "StoreBoolean",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamecache",
			"name": "cache"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "string",
			"name": "key"
		}, {
			"type": "boolean",
			"name": "value"
		}],
		"insertText": "StoreBoolean(cache, missionKey, key, value)",
		"documentation": "记录布尔值"
	},
	"StoreUnit": {
		"original": "native  StoreUnit\t\t\t\t\t\ttakes gamecache cache, string missionKey, string key, unit whichUnit returns boolean",
		"fileName": "common.j",
		"name": "StoreUnit",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamecache",
			"name": "cache"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "string",
			"name": "key"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "boolean",
		"insertText": "StoreUnit(cache, missionKey, key, whichUnit)",
		"documentation": ""
	},
	"StoreString": {
		"original": "native  StoreString\t\t\t\t\t\ttakes gamecache cache, string missionKey, string key, string value returns boolean",
		"fileName": "common.j",
		"name": "StoreString",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamecache",
			"name": "cache"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "string",
			"name": "key"
		}, {
			"type": "string",
			"name": "value"
		}],
		"returnType": "boolean",
		"insertText": "StoreString(cache, missionKey, key, value)",
		"documentation": "记录字符串"
	},
	"SyncStoredInteger": {
		"original": "native SyncStoredInteger        takes gamecache cache, string missionKey, string key returns nothing",
		"fileName": "common.j",
		"name": "SyncStoredInteger",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamecache",
			"name": "cache"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "string",
			"name": "key"
		}],
		"insertText": "SyncStoredInteger(cache, missionKey, key)",
		"documentation": ""
	},
	"SyncStoredReal": {
		"original": "native SyncStoredReal           takes gamecache cache, string missionKey, string key returns nothing",
		"fileName": "common.j",
		"name": "SyncStoredReal",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamecache",
			"name": "cache"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "string",
			"name": "key"
		}],
		"insertText": "SyncStoredReal(cache, missionKey, key)",
		"documentation": ""
	},
	"SyncStoredBoolean": {
		"original": "native SyncStoredBoolean        takes gamecache cache, string missionKey, string key returns nothing",
		"fileName": "common.j",
		"name": "SyncStoredBoolean",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamecache",
			"name": "cache"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "string",
			"name": "key"
		}],
		"insertText": "SyncStoredBoolean(cache, missionKey, key)",
		"documentation": ""
	},
	"SyncStoredUnit": {
		"original": "native SyncStoredUnit           takes gamecache cache, string missionKey, string key returns nothing",
		"fileName": "common.j",
		"name": "SyncStoredUnit",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamecache",
			"name": "cache"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "string",
			"name": "key"
		}],
		"insertText": "SyncStoredUnit(cache, missionKey, key)",
		"documentation": ""
	},
	"SyncStoredString": {
		"original": "native SyncStoredString         takes gamecache cache, string missionKey, string key returns nothing",
		"fileName": "common.j",
		"name": "SyncStoredString",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamecache",
			"name": "cache"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "string",
			"name": "key"
		}],
		"insertText": "SyncStoredString(cache, missionKey, key)",
		"documentation": ""
	},
	"HaveStoredInteger": {
		"original": "native  HaveStoredInteger\t\t\t\t\ttakes gamecache cache, string missionKey, string key returns boolean",
		"fileName": "common.j",
		"name": "HaveStoredInteger",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamecache",
			"name": "cache"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "string",
			"name": "key"
		}],
		"returnType": "boolean",
		"insertText": "HaveStoredInteger(cache, missionKey, key)",
		"documentation": ""
	},
	"HaveStoredReal": {
		"original": "native  HaveStoredReal\t\t\t\t\t\ttakes gamecache cache, string missionKey, string key returns boolean",
		"fileName": "common.j",
		"name": "HaveStoredReal",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamecache",
			"name": "cache"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "string",
			"name": "key"
		}],
		"returnType": "boolean",
		"insertText": "HaveStoredReal(cache, missionKey, key)",
		"documentation": ""
	},
	"HaveStoredBoolean": {
		"original": "native  HaveStoredBoolean\t\t\t\t\ttakes gamecache cache, string missionKey, string key returns boolean",
		"fileName": "common.j",
		"name": "HaveStoredBoolean",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamecache",
			"name": "cache"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "string",
			"name": "key"
		}],
		"returnType": "boolean",
		"insertText": "HaveStoredBoolean(cache, missionKey, key)",
		"documentation": ""
	},
	"HaveStoredUnit": {
		"original": "native  HaveStoredUnit\t\t\t\t\t\ttakes gamecache cache, string missionKey, string key returns boolean",
		"fileName": "common.j",
		"name": "HaveStoredUnit",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamecache",
			"name": "cache"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "string",
			"name": "key"
		}],
		"returnType": "boolean",
		"insertText": "HaveStoredUnit(cache, missionKey, key)",
		"documentation": ""
	},
	"HaveStoredString": {
		"original": "native  HaveStoredString\t\t\t\t\ttakes gamecache cache, string missionKey, string key returns boolean",
		"fileName": "common.j",
		"name": "HaveStoredString",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamecache",
			"name": "cache"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "string",
			"name": "key"
		}],
		"returnType": "boolean",
		"insertText": "HaveStoredString(cache, missionKey, key)",
		"documentation": ""
	},
	"FlushGameCache": {
		"original": "native  FlushGameCache\t\t\t\t\t\ttakes gamecache cache returns nothing",
		"fileName": "common.j",
		"name": "FlushGameCache",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamecache",
			"name": "cache"
		}],
		"insertText": "FlushGameCache(cache)",
		"documentation": "删除缓存 [C]"
	},
	"FlushStoredMission": {
		"original": "native  FlushStoredMission\t\t\t\t\ttakes gamecache cache, string missionKey returns nothing",
		"fileName": "common.j",
		"name": "FlushStoredMission",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamecache",
			"name": "cache"
		}, {
			"type": "string",
			"name": "missionKey"
		}],
		"insertText": "FlushStoredMission(cache, missionKey)",
		"documentation": "删除类别"
	},
	"FlushStoredInteger": {
		"original": "native  FlushStoredInteger\t\t\t\t\ttakes gamecache cache, string missionKey, string key returns nothing",
		"fileName": "common.j",
		"name": "FlushStoredInteger",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamecache",
			"name": "cache"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "string",
			"name": "key"
		}],
		"insertText": "FlushStoredInteger(cache, missionKey, key)",
		"documentation": ""
	},
	"FlushStoredReal": {
		"original": "native  FlushStoredReal\t\t\t\t\t\ttakes gamecache cache, string missionKey, string key returns nothing",
		"fileName": "common.j",
		"name": "FlushStoredReal",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamecache",
			"name": "cache"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "string",
			"name": "key"
		}],
		"insertText": "FlushStoredReal(cache, missionKey, key)",
		"documentation": ""
	},
	"FlushStoredBoolean": {
		"original": "native  FlushStoredBoolean\t\t\t\t\ttakes gamecache cache, string missionKey, string key returns nothing",
		"fileName": "common.j",
		"name": "FlushStoredBoolean",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamecache",
			"name": "cache"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "string",
			"name": "key"
		}],
		"insertText": "FlushStoredBoolean(cache, missionKey, key)",
		"documentation": ""
	},
	"FlushStoredUnit": {
		"original": "native  FlushStoredUnit\t\t\t\t\t\ttakes gamecache cache, string missionKey, string key returns nothing",
		"fileName": "common.j",
		"name": "FlushStoredUnit",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamecache",
			"name": "cache"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "string",
			"name": "key"
		}],
		"insertText": "FlushStoredUnit(cache, missionKey, key)",
		"documentation": ""
	},
	"FlushStoredString": {
		"original": "native  FlushStoredString\t\t\t\t\ttakes gamecache cache, string missionKey, string key returns nothing",
		"fileName": "common.j",
		"name": "FlushStoredString",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamecache",
			"name": "cache"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "string",
			"name": "key"
		}],
		"insertText": "FlushStoredString(cache, missionKey, key)",
		"documentation": ""
	},
	"GetStoredInteger": {
		"original": "native  GetStoredInteger\t\t\t\ttakes gamecache cache, string missionKey, string key returns integer",
		"fileName": "common.j",
		"name": "GetStoredInteger",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamecache",
			"name": "cache"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "string",
			"name": "key"
		}],
		"returnType": "integer",
		"insertText": "GetStoredInteger(cache, missionKey, key)",
		"documentation": "缓存读取整数 [C]"
	},
	"GetStoredReal": {
		"original": "native  GetStoredReal\t\t\t\t\ttakes gamecache cache, string missionKey, string key returns real",
		"fileName": "common.j",
		"name": "GetStoredReal",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamecache",
			"name": "cache"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "string",
			"name": "key"
		}],
		"returnType": "real",
		"insertText": "GetStoredReal(cache, missionKey, key)",
		"documentation": "缓存读取实数 [C]"
	},
	"GetStoredBoolean": {
		"original": "native  GetStoredBoolean\t\t\t\ttakes gamecache cache, string missionKey, string key returns boolean",
		"fileName": "common.j",
		"name": "GetStoredBoolean",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamecache",
			"name": "cache"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "string",
			"name": "key"
		}],
		"returnType": "boolean",
		"insertText": "GetStoredBoolean(cache, missionKey, key)",
		"documentation": "读取布尔值[R]"
	},
	"GetStoredString": {
		"original": "native  GetStoredString\t\t\t\t\ttakes gamecache cache, string missionKey, string key returns string",
		"fileName": "common.j",
		"name": "GetStoredString",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamecache",
			"name": "cache"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "string",
			"name": "key"
		}],
		"returnType": "string",
		"insertText": "GetStoredString(cache, missionKey, key)",
		"documentation": "读取字符串 [C]"
	},
	"RestoreUnit": {
		"original": "native  RestoreUnit\t\t\t\t\t\ttakes gamecache cache, string missionKey, string key, player forWhichPlayer, real x, real y, real facing returns unit",
		"fileName": "common.j",
		"name": "RestoreUnit",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "gamecache",
			"name": "cache"
		}, {
			"type": "string",
			"name": "missionKey"
		}, {
			"type": "string",
			"name": "key"
		}, {
			"type": "player",
			"name": "forWhichPlayer"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "facing"
		}],
		"returnType": "unit",
		"insertText": "RestoreUnit(cache, missionKey, key, forWhichPlayer, x, y, facing)",
		"documentation": ""
	},
	"InitHashtable": {
		"original": "native  InitHashtable    takes nothing returns hashtable",
		"fileName": "common.j",
		"name": "InitHashtable",
		"isConstant": false,
		"isNative": true,
		"returnType": "hashtable",
		"insertText": "InitHashtable()",
		"documentation": "<1.24> 新建哈希表 [C]"
	},
	"SaveInteger": {
		"original": "native  SaveInteger\t\t\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, integer value returns nothing",
		"fileName": "common.j",
		"name": "SaveInteger",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "integer",
			"name": "value"
		}],
		"insertText": "SaveInteger(table, parentKey, childKey, value)",
		"documentation": "<1.24> 保存整数 [C]"
	},
	"SaveReal": {
		"original": "native  SaveReal\t\t\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, real value returns nothing",
		"fileName": "common.j",
		"name": "SaveReal",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "real",
			"name": "value"
		}],
		"insertText": "SaveReal(table, parentKey, childKey, value)",
		"documentation": "<1.24> 保存实数 [C]"
	},
	"SaveBoolean": {
		"original": "native  SaveBoolean\t\t\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, boolean value returns nothing",
		"fileName": "common.j",
		"name": "SaveBoolean",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "boolean",
			"name": "value"
		}],
		"insertText": "SaveBoolean(table, parentKey, childKey, value)",
		"documentation": "<1.24> 保存布尔 [C]"
	},
	"SaveStr": {
		"original": "native  SaveStr\t\t\t\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, string value returns boolean",
		"fileName": "common.j",
		"name": "SaveStr",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "string",
			"name": "value"
		}],
		"returnType": "boolean",
		"insertText": "SaveStr(table, parentKey, childKey, value)",
		"documentation": "<1.24> 保存字符串 [C]"
	},
	"SavePlayerHandle": {
		"original": "native  SavePlayerHandle\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, player whichPlayer returns boolean",
		"fileName": "common.j",
		"name": "SavePlayerHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "boolean",
		"insertText": "SavePlayerHandle(table, parentKey, childKey, whichPlayer)",
		"documentation": "<1.24> 保存玩家 [C]"
	},
	"SaveWidgetHandle": {
		"original": "native  SaveWidgetHandle\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, widget whichWidget returns boolean",
		"fileName": "common.j",
		"name": "SaveWidgetHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "widget",
			"name": "whichWidget"
		}],
		"returnType": "boolean",
		"insertText": "SaveWidgetHandle(table, parentKey, childKey, whichWidget)",
		"documentation": ""
	},
	"SaveDestructableHandle": {
		"original": "native  SaveDestructableHandle\t\t\ttakes hashtable table, integer parentKey, integer childKey, destructable whichDestructable returns boolean",
		"fileName": "common.j",
		"name": "SaveDestructableHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "destructable",
			"name": "whichDestructable"
		}],
		"returnType": "boolean",
		"insertText": "SaveDestructableHandle(table, parentKey, childKey, whichDestructable)",
		"documentation": "<1.24> 保存可破坏物 [C]"
	},
	"SaveItemHandle": {
		"original": "native  SaveItemHandle\t\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, item whichItem returns boolean",
		"fileName": "common.j",
		"name": "SaveItemHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "item",
			"name": "whichItem"
		}],
		"returnType": "boolean",
		"insertText": "SaveItemHandle(table, parentKey, childKey, whichItem)",
		"documentation": "<1.24> 保存物品 [C]"
	},
	"SaveUnitHandle": {
		"original": "native  SaveUnitHandle\t\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, unit whichUnit returns boolean",
		"fileName": "common.j",
		"name": "SaveUnitHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "boolean",
		"insertText": "SaveUnitHandle(table, parentKey, childKey, whichUnit)",
		"documentation": "<1.24> 保存单位 [C]"
	},
	"SaveAbilityHandle": {
		"original": "native  SaveAbilityHandle\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, ability whichAbility returns boolean",
		"fileName": "common.j",
		"name": "SaveAbilityHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "ability",
			"name": "whichAbility"
		}],
		"returnType": "boolean",
		"insertText": "SaveAbilityHandle(table, parentKey, childKey, whichAbility)",
		"documentation": ""
	},
	"SaveTimerHandle": {
		"original": "native  SaveTimerHandle\t\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, timer whichTimer returns boolean",
		"fileName": "common.j",
		"name": "SaveTimerHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "timer",
			"name": "whichTimer"
		}],
		"returnType": "boolean",
		"insertText": "SaveTimerHandle(table, parentKey, childKey, whichTimer)",
		"documentation": "<1.24> 保存计时器 [C]"
	},
	"SaveTriggerHandle": {
		"original": "native  SaveTriggerHandle\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, trigger whichTrigger returns boolean",
		"fileName": "common.j",
		"name": "SaveTriggerHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "trigger",
			"name": "whichTrigger"
		}],
		"returnType": "boolean",
		"insertText": "SaveTriggerHandle(table, parentKey, childKey, whichTrigger)",
		"documentation": "<1.24> 保存触发器 [C]"
	},
	"SaveTriggerConditionHandle": {
		"original": "native  SaveTriggerConditionHandle\t\ttakes hashtable table, integer parentKey, integer childKey, triggercondition whichTriggercondition returns boolean",
		"fileName": "common.j",
		"name": "SaveTriggerConditionHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "triggercondition",
			"name": "whichTriggercondition"
		}],
		"returnType": "boolean",
		"insertText": "SaveTriggerConditionHandle(table, parentKey, childKey, whichTriggercondition)",
		"documentation": "<1.24> 保存触发条件 [C]"
	},
	"SaveTriggerActionHandle": {
		"original": "native  SaveTriggerActionHandle\t\t\ttakes hashtable table, integer parentKey, integer childKey, triggeraction whichTriggeraction returns boolean",
		"fileName": "common.j",
		"name": "SaveTriggerActionHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "triggeraction",
			"name": "whichTriggeraction"
		}],
		"returnType": "boolean",
		"insertText": "SaveTriggerActionHandle(table, parentKey, childKey, whichTriggeraction)",
		"documentation": "<1.24> 保存触发动作 [C]"
	},
	"SaveTriggerEventHandle": {
		"original": "native  SaveTriggerEventHandle\t\t\ttakes hashtable table, integer parentKey, integer childKey, event whichEvent returns boolean",
		"fileName": "common.j",
		"name": "SaveTriggerEventHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "event",
			"name": "whichEvent"
		}],
		"returnType": "boolean",
		"insertText": "SaveTriggerEventHandle(table, parentKey, childKey, whichEvent)",
		"documentation": "<1.24> 保存触发事件 [C]"
	},
	"SaveForceHandle": {
		"original": "native  SaveForceHandle\t\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, force whichForce returns boolean",
		"fileName": "common.j",
		"name": "SaveForceHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "force",
			"name": "whichForce"
		}],
		"returnType": "boolean",
		"insertText": "SaveForceHandle(table, parentKey, childKey, whichForce)",
		"documentation": "<1.24> 保存玩家组 [C]"
	},
	"SaveGroupHandle": {
		"original": "native  SaveGroupHandle\t\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, group whichGroup returns boolean",
		"fileName": "common.j",
		"name": "SaveGroupHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "group",
			"name": "whichGroup"
		}],
		"returnType": "boolean",
		"insertText": "SaveGroupHandle(table, parentKey, childKey, whichGroup)",
		"documentation": "<1.24> 保存单位组 [C]"
	},
	"SaveLocationHandle": {
		"original": "native  SaveLocationHandle\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, location whichLocation returns boolean",
		"fileName": "common.j",
		"name": "SaveLocationHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "location",
			"name": "whichLocation"
		}],
		"returnType": "boolean",
		"insertText": "SaveLocationHandle(table, parentKey, childKey, whichLocation)",
		"documentation": "<1.24> 保存点 [C]"
	},
	"SaveRectHandle": {
		"original": "native  SaveRectHandle\t\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, rect whichRect returns boolean",
		"fileName": "common.j",
		"name": "SaveRectHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "rect",
			"name": "whichRect"
		}],
		"returnType": "boolean",
		"insertText": "SaveRectHandle(table, parentKey, childKey, whichRect)",
		"documentation": "<1.24> 保存区域(矩型) [C]"
	},
	"SaveBooleanExprHandle": {
		"original": "native  SaveBooleanExprHandle\t\t\ttakes hashtable table, integer parentKey, integer childKey, boolexpr whichBoolexpr returns boolean",
		"fileName": "common.j",
		"name": "SaveBooleanExprHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "boolexpr",
			"name": "whichBoolexpr"
		}],
		"returnType": "boolean",
		"insertText": "SaveBooleanExprHandle(table, parentKey, childKey, whichBoolexpr)",
		"documentation": "<1.24> 保存布尔表达式 [C]"
	},
	"SaveSoundHandle": {
		"original": "native  SaveSoundHandle\t\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, sound whichSound returns boolean",
		"fileName": "common.j",
		"name": "SaveSoundHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "sound",
			"name": "whichSound"
		}],
		"returnType": "boolean",
		"insertText": "SaveSoundHandle(table, parentKey, childKey, whichSound)",
		"documentation": "<1.24> 保存音效 [C]"
	},
	"SaveEffectHandle": {
		"original": "native  SaveEffectHandle\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, effect whichEffect returns boolean",
		"fileName": "common.j",
		"name": "SaveEffectHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "effect",
			"name": "whichEffect"
		}],
		"returnType": "boolean",
		"insertText": "SaveEffectHandle(table, parentKey, childKey, whichEffect)",
		"documentation": "<1.24> 保存特效 [C]"
	},
	"SaveUnitPoolHandle": {
		"original": "native  SaveUnitPoolHandle\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, unitpool whichUnitpool returns boolean",
		"fileName": "common.j",
		"name": "SaveUnitPoolHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "unitpool",
			"name": "whichUnitpool"
		}],
		"returnType": "boolean",
		"insertText": "SaveUnitPoolHandle(table, parentKey, childKey, whichUnitpool)",
		"documentation": "<1.24> 保存单位池 [C]"
	},
	"SaveItemPoolHandle": {
		"original": "native  SaveItemPoolHandle\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, itempool whichItempool returns boolean",
		"fileName": "common.j",
		"name": "SaveItemPoolHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "itempool",
			"name": "whichItempool"
		}],
		"returnType": "boolean",
		"insertText": "SaveItemPoolHandle(table, parentKey, childKey, whichItempool)",
		"documentation": "<1.24> 保存物品池 [C]"
	},
	"SaveQuestHandle": {
		"original": "native  SaveQuestHandle\t\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, quest whichQuest returns boolean",
		"fileName": "common.j",
		"name": "SaveQuestHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "quest",
			"name": "whichQuest"
		}],
		"returnType": "boolean",
		"insertText": "SaveQuestHandle(table, parentKey, childKey, whichQuest)",
		"documentation": "<1.24> 保存任务 [C]"
	},
	"SaveQuestItemHandle": {
		"original": "native  SaveQuestItemHandle\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, questitem whichQuestitem returns boolean",
		"fileName": "common.j",
		"name": "SaveQuestItemHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "questitem",
			"name": "whichQuestitem"
		}],
		"returnType": "boolean",
		"insertText": "SaveQuestItemHandle(table, parentKey, childKey, whichQuestitem)",
		"documentation": "<1.24> 保存任务要求 [C]"
	},
	"SaveDefeatConditionHandle": {
		"original": "native  SaveDefeatConditionHandle\t\ttakes hashtable table, integer parentKey, integer childKey, defeatcondition whichDefeatcondition returns boolean",
		"fileName": "common.j",
		"name": "SaveDefeatConditionHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "defeatcondition",
			"name": "whichDefeatcondition"
		}],
		"returnType": "boolean",
		"insertText": "SaveDefeatConditionHandle(table, parentKey, childKey, whichDefeatcondition)",
		"documentation": "<1.24> 保存失败条件 [C]"
	},
	"SaveTimerDialogHandle": {
		"original": "native  SaveTimerDialogHandle\t\t\ttakes hashtable table, integer parentKey, integer childKey, timerdialog whichTimerdialog returns boolean",
		"fileName": "common.j",
		"name": "SaveTimerDialogHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "timerdialog",
			"name": "whichTimerdialog"
		}],
		"returnType": "boolean",
		"insertText": "SaveTimerDialogHandle(table, parentKey, childKey, whichTimerdialog)",
		"documentation": "<1.24> 保存计时器窗口 [C]"
	},
	"SaveLeaderboardHandle": {
		"original": "native  SaveLeaderboardHandle\t\t\ttakes hashtable table, integer parentKey, integer childKey, leaderboard whichLeaderboard returns boolean",
		"fileName": "common.j",
		"name": "SaveLeaderboardHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "leaderboard",
			"name": "whichLeaderboard"
		}],
		"returnType": "boolean",
		"insertText": "SaveLeaderboardHandle(table, parentKey, childKey, whichLeaderboard)",
		"documentation": "<1.24> 保存排行榜 [C]"
	},
	"SaveMultiboardHandle": {
		"original": "native  SaveMultiboardHandle\t\t\ttakes hashtable table, integer parentKey, integer childKey, multiboard whichMultiboard returns boolean",
		"fileName": "common.j",
		"name": "SaveMultiboardHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "multiboard",
			"name": "whichMultiboard"
		}],
		"returnType": "boolean",
		"insertText": "SaveMultiboardHandle(table, parentKey, childKey, whichMultiboard)",
		"documentation": "<1.24> 保存多面板 [C]"
	},
	"SaveMultiboardItemHandle": {
		"original": "native  SaveMultiboardItemHandle\t\ttakes hashtable table, integer parentKey, integer childKey, multiboarditem whichMultiboarditem returns boolean",
		"fileName": "common.j",
		"name": "SaveMultiboardItemHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "multiboarditem",
			"name": "whichMultiboarditem"
		}],
		"returnType": "boolean",
		"insertText": "SaveMultiboardItemHandle(table, parentKey, childKey, whichMultiboarditem)",
		"documentation": "<1.24> 保存多面板项目 [C]"
	},
	"SaveTrackableHandle": {
		"original": "native  SaveTrackableHandle\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, trackable whichTrackable returns boolean",
		"fileName": "common.j",
		"name": "SaveTrackableHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "trackable",
			"name": "whichTrackable"
		}],
		"returnType": "boolean",
		"insertText": "SaveTrackableHandle(table, parentKey, childKey, whichTrackable)",
		"documentation": "<1.24> 保存可追踪物 [C]"
	},
	"SaveDialogHandle": {
		"original": "native  SaveDialogHandle\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, dialog whichDialog returns boolean",
		"fileName": "common.j",
		"name": "SaveDialogHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "dialog",
			"name": "whichDialog"
		}],
		"returnType": "boolean",
		"insertText": "SaveDialogHandle(table, parentKey, childKey, whichDialog)",
		"documentation": "<1.24> 保存对话框 [C]"
	},
	"SaveButtonHandle": {
		"original": "native  SaveButtonHandle\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, button whichButton returns boolean",
		"fileName": "common.j",
		"name": "SaveButtonHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "button",
			"name": "whichButton"
		}],
		"returnType": "boolean",
		"insertText": "SaveButtonHandle(table, parentKey, childKey, whichButton)",
		"documentation": "<1.24> 保存对话框按钮 [C]"
	},
	"SaveTextTagHandle": {
		"original": "native  SaveTextTagHandle\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, texttag whichTexttag returns boolean",
		"fileName": "common.j",
		"name": "SaveTextTagHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "texttag",
			"name": "whichTexttag"
		}],
		"returnType": "boolean",
		"insertText": "SaveTextTagHandle(table, parentKey, childKey, whichTexttag)",
		"documentation": "<1.24> 保存漂浮文字 [C]"
	},
	"SaveLightningHandle": {
		"original": "native  SaveLightningHandle\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, lightning whichLightning returns boolean",
		"fileName": "common.j",
		"name": "SaveLightningHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "lightning",
			"name": "whichLightning"
		}],
		"returnType": "boolean",
		"insertText": "SaveLightningHandle(table, parentKey, childKey, whichLightning)",
		"documentation": "<1.24> 保存闪电效果 [C]"
	},
	"SaveImageHandle": {
		"original": "native  SaveImageHandle\t\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, image whichImage returns boolean",
		"fileName": "common.j",
		"name": "SaveImageHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "image",
			"name": "whichImage"
		}],
		"returnType": "boolean",
		"insertText": "SaveImageHandle(table, parentKey, childKey, whichImage)",
		"documentation": "<1.24> 保存图像 [C]"
	},
	"SaveUbersplatHandle": {
		"original": "native  SaveUbersplatHandle\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, ubersplat whichUbersplat returns boolean",
		"fileName": "common.j",
		"name": "SaveUbersplatHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "ubersplat",
			"name": "whichUbersplat"
		}],
		"returnType": "boolean",
		"insertText": "SaveUbersplatHandle(table, parentKey, childKey, whichUbersplat)",
		"documentation": "<1.24> 保存地面纹理变化 [C]"
	},
	"SaveRegionHandle": {
		"original": "native  SaveRegionHandle\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, region whichRegion returns boolean",
		"fileName": "common.j",
		"name": "SaveRegionHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "region",
			"name": "whichRegion"
		}],
		"returnType": "boolean",
		"insertText": "SaveRegionHandle(table, parentKey, childKey, whichRegion)",
		"documentation": "<1.24> 保存区域(不规则) [C]"
	},
	"SaveFogStateHandle": {
		"original": "native  SaveFogStateHandle\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, fogstate whichFogState returns boolean",
		"fileName": "common.j",
		"name": "SaveFogStateHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "fogstate",
			"name": "whichFogState"
		}],
		"returnType": "boolean",
		"insertText": "SaveFogStateHandle(table, parentKey, childKey, whichFogState)",
		"documentation": "<1.24> 保存迷雾状态 [C]"
	},
	"SaveFogModifierHandle": {
		"original": "native  SaveFogModifierHandle\t\t\ttakes hashtable table, integer parentKey, integer childKey, fogmodifier whichFogModifier returns boolean",
		"fileName": "common.j",
		"name": "SaveFogModifierHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "fogmodifier",
			"name": "whichFogModifier"
		}],
		"returnType": "boolean",
		"insertText": "SaveFogModifierHandle(table, parentKey, childKey, whichFogModifier)",
		"documentation": "<1.24> 保存可见度修正器 [C]"
	},
	"SaveAgentHandle": {
		"original": "native  SaveAgentHandle\t\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, agent whichAgent returns boolean",
		"fileName": "common.j",
		"name": "SaveAgentHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "agent",
			"name": "whichAgent"
		}],
		"returnType": "boolean",
		"insertText": "SaveAgentHandle(table, parentKey, childKey, whichAgent)",
		"documentation": "<1.24> 保存实体对象 [C]"
	},
	"SaveHashtableHandle": {
		"original": "native  SaveHashtableHandle\t\t\t\ttakes hashtable table, integer parentKey, integer childKey, hashtable whichHashtable returns boolean",
		"fileName": "common.j",
		"name": "SaveHashtableHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "hashtable",
			"name": "whichHashtable"
		}],
		"returnType": "boolean",
		"insertText": "SaveHashtableHandle(table, parentKey, childKey, whichHashtable)",
		"documentation": "<1.24> 保存哈希表 [C]"
	},
	"LoadInteger": {
		"original": "native  LoadInteger\t\t\t\t\ttakes hashtable table, integer parentKey, integer childKey returns integer",
		"fileName": "common.j",
		"name": "LoadInteger",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "integer",
		"insertText": "LoadInteger(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取整数 [C]"
	},
	"LoadReal": {
		"original": "native  LoadReal\t\t\t\t\ttakes hashtable table, integer parentKey, integer childKey returns real",
		"fileName": "common.j",
		"name": "LoadReal",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "real",
		"insertText": "LoadReal(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取实数 [C]"
	},
	"LoadBoolean": {
		"original": "native  LoadBoolean\t\t\t\t    takes hashtable table, integer parentKey, integer childKey returns boolean",
		"fileName": "common.j",
		"name": "LoadBoolean",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "boolean",
		"insertText": "LoadBoolean(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取布尔 [C]"
	},
	"LoadStr": {
		"original": "native  LoadStr \t\t\t\t\ttakes hashtable table, integer parentKey, integer childKey returns string",
		"fileName": "common.j",
		"name": "LoadStr",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "string",
		"insertText": "LoadStr(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取字符串 [C]"
	},
	"LoadPlayerHandle": {
		"original": "native  LoadPlayerHandle\t\t\ttakes hashtable table, integer parentKey, integer childKey returns player",
		"fileName": "common.j",
		"name": "LoadPlayerHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "player",
		"insertText": "LoadPlayerHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取玩家 [C]"
	},
	"LoadWidgetHandle": {
		"original": "native  LoadWidgetHandle\t\t\ttakes hashtable table, integer parentKey, integer childKey returns widget",
		"fileName": "common.j",
		"name": "LoadWidgetHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "widget",
		"insertText": "LoadWidgetHandle(table, parentKey, childKey)",
		"documentation": ""
	},
	"LoadDestructableHandle": {
		"original": "native  LoadDestructableHandle\t\ttakes hashtable table, integer parentKey, integer childKey returns destructable",
		"fileName": "common.j",
		"name": "LoadDestructableHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "destructable",
		"insertText": "LoadDestructableHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取可破坏物 [C]"
	},
	"LoadItemHandle": {
		"original": "native  LoadItemHandle\t\t\t\ttakes hashtable table, integer parentKey, integer childKey returns item",
		"fileName": "common.j",
		"name": "LoadItemHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "item",
		"insertText": "LoadItemHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取物品 [C]"
	},
	"LoadUnitHandle": {
		"original": "native  LoadUnitHandle\t\t\t\ttakes hashtable table, integer parentKey, integer childKey returns unit",
		"fileName": "common.j",
		"name": "LoadUnitHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "unit",
		"insertText": "LoadUnitHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取单位 [C]"
	},
	"LoadAbilityHandle": {
		"original": "native  LoadAbilityHandle\t\t\ttakes hashtable table, integer parentKey, integer childKey returns ability",
		"fileName": "common.j",
		"name": "LoadAbilityHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "ability",
		"insertText": "LoadAbilityHandle(table, parentKey, childKey)",
		"documentation": ""
	},
	"LoadTimerHandle": {
		"original": "native  LoadTimerHandle\t\t\t\ttakes hashtable table, integer parentKey, integer childKey returns timer",
		"fileName": "common.j",
		"name": "LoadTimerHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "timer",
		"insertText": "LoadTimerHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取计时器 [C]"
	},
	"LoadTriggerHandle": {
		"original": "native  LoadTriggerHandle\t\t\ttakes hashtable table, integer parentKey, integer childKey returns trigger",
		"fileName": "common.j",
		"name": "LoadTriggerHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "trigger",
		"insertText": "LoadTriggerHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取触发器 [C]"
	},
	"LoadTriggerConditionHandle": {
		"original": "native  LoadTriggerConditionHandle\ttakes hashtable table, integer parentKey, integer childKey returns triggercondition",
		"fileName": "common.j",
		"name": "LoadTriggerConditionHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "triggercondition",
		"insertText": "LoadTriggerConditionHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取触发条件 [C]"
	},
	"LoadTriggerActionHandle": {
		"original": "native  LoadTriggerActionHandle\t\ttakes hashtable table, integer parentKey, integer childKey returns triggeraction",
		"fileName": "common.j",
		"name": "LoadTriggerActionHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "triggeraction",
		"insertText": "LoadTriggerActionHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取触发动作 [C]"
	},
	"LoadTriggerEventHandle": {
		"original": "native  LoadTriggerEventHandle\t\ttakes hashtable table, integer parentKey, integer childKey returns event",
		"fileName": "common.j",
		"name": "LoadTriggerEventHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "event",
		"insertText": "LoadTriggerEventHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取触发事件 [C]"
	},
	"LoadForceHandle": {
		"original": "native  LoadForceHandle\t\t\t\ttakes hashtable table, integer parentKey, integer childKey returns force",
		"fileName": "common.j",
		"name": "LoadForceHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "force",
		"insertText": "LoadForceHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取玩家组 [C]"
	},
	"LoadGroupHandle": {
		"original": "native  LoadGroupHandle\t\t\t\ttakes hashtable table, integer parentKey, integer childKey returns group",
		"fileName": "common.j",
		"name": "LoadGroupHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "group",
		"insertText": "LoadGroupHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取单位组 [C]"
	},
	"LoadLocationHandle": {
		"original": "native  LoadLocationHandle\t\t\ttakes hashtable table, integer parentKey, integer childKey returns location",
		"fileName": "common.j",
		"name": "LoadLocationHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "location",
		"insertText": "LoadLocationHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取点 [C]"
	},
	"LoadRectHandle": {
		"original": "native  LoadRectHandle\t\t\t\ttakes hashtable table, integer parentKey, integer childKey returns rect",
		"fileName": "common.j",
		"name": "LoadRectHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "rect",
		"insertText": "LoadRectHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取区域(矩型) [C]"
	},
	"LoadBooleanExprHandle": {
		"original": "native  LoadBooleanExprHandle\t\ttakes hashtable table, integer parentKey, integer childKey returns boolexpr",
		"fileName": "common.j",
		"name": "LoadBooleanExprHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "boolexpr",
		"insertText": "LoadBooleanExprHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取布尔表达式 [C]"
	},
	"LoadSoundHandle": {
		"original": "native  LoadSoundHandle\t\t\t\ttakes hashtable table, integer parentKey, integer childKey returns sound",
		"fileName": "common.j",
		"name": "LoadSoundHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "sound",
		"insertText": "LoadSoundHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取音效 [C]"
	},
	"LoadEffectHandle": {
		"original": "native  LoadEffectHandle\t\t\ttakes hashtable table, integer parentKey, integer childKey returns effect",
		"fileName": "common.j",
		"name": "LoadEffectHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "effect",
		"insertText": "LoadEffectHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取特效 [C]"
	},
	"LoadUnitPoolHandle": {
		"original": "native  LoadUnitPoolHandle\t\t\ttakes hashtable table, integer parentKey, integer childKey returns unitpool",
		"fileName": "common.j",
		"name": "LoadUnitPoolHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "unitpool",
		"insertText": "LoadUnitPoolHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取单位池 [C]"
	},
	"LoadItemPoolHandle": {
		"original": "native  LoadItemPoolHandle\t\t\ttakes hashtable table, integer parentKey, integer childKey returns itempool",
		"fileName": "common.j",
		"name": "LoadItemPoolHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "itempool",
		"insertText": "LoadItemPoolHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取物品池 [C]"
	},
	"LoadQuestHandle": {
		"original": "native  LoadQuestHandle\t\t\t\ttakes hashtable table, integer parentKey, integer childKey returns quest",
		"fileName": "common.j",
		"name": "LoadQuestHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "quest",
		"insertText": "LoadQuestHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取任务 [C]"
	},
	"LoadQuestItemHandle": {
		"original": "native  LoadQuestItemHandle\t\t\ttakes hashtable table, integer parentKey, integer childKey returns questitem",
		"fileName": "common.j",
		"name": "LoadQuestItemHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "questitem",
		"insertText": "LoadQuestItemHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取任务要求 [C]"
	},
	"LoadDefeatConditionHandle": {
		"original": "native  LoadDefeatConditionHandle\ttakes hashtable table, integer parentKey, integer childKey returns defeatcondition",
		"fileName": "common.j",
		"name": "LoadDefeatConditionHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "defeatcondition",
		"insertText": "LoadDefeatConditionHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取失败条件 [C]"
	},
	"LoadTimerDialogHandle": {
		"original": "native  LoadTimerDialogHandle\t\ttakes hashtable table, integer parentKey, integer childKey returns timerdialog",
		"fileName": "common.j",
		"name": "LoadTimerDialogHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "timerdialog",
		"insertText": "LoadTimerDialogHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取计时器窗口 [C]"
	},
	"LoadLeaderboardHandle": {
		"original": "native  LoadLeaderboardHandle\t\ttakes hashtable table, integer parentKey, integer childKey returns leaderboard",
		"fileName": "common.j",
		"name": "LoadLeaderboardHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "leaderboard",
		"insertText": "LoadLeaderboardHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取排行榜 [C]"
	},
	"LoadMultiboardHandle": {
		"original": "native  LoadMultiboardHandle\t\ttakes hashtable table, integer parentKey, integer childKey returns multiboard",
		"fileName": "common.j",
		"name": "LoadMultiboardHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "multiboard",
		"insertText": "LoadMultiboardHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取多面板 [C]"
	},
	"LoadMultiboardItemHandle": {
		"original": "native  LoadMultiboardItemHandle\ttakes hashtable table, integer parentKey, integer childKey returns multiboarditem",
		"fileName": "common.j",
		"name": "LoadMultiboardItemHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "multiboarditem",
		"insertText": "LoadMultiboardItemHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取多面板项目 [C]"
	},
	"LoadTrackableHandle": {
		"original": "native  LoadTrackableHandle\t\t\ttakes hashtable table, integer parentKey, integer childKey returns trackable",
		"fileName": "common.j",
		"name": "LoadTrackableHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "trackable",
		"insertText": "LoadTrackableHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取可追踪物 [C]"
	},
	"LoadDialogHandle": {
		"original": "native  LoadDialogHandle\t\t\ttakes hashtable table, integer parentKey, integer childKey returns dialog",
		"fileName": "common.j",
		"name": "LoadDialogHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "dialog",
		"insertText": "LoadDialogHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取对话框 [C]"
	},
	"LoadButtonHandle": {
		"original": "native  LoadButtonHandle\t\t\ttakes hashtable table, integer parentKey, integer childKey returns button",
		"fileName": "common.j",
		"name": "LoadButtonHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "button",
		"insertText": "LoadButtonHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取对话框按钮 [C]"
	},
	"LoadTextTagHandle": {
		"original": "native  LoadTextTagHandle\t\t\ttakes hashtable table, integer parentKey, integer childKey returns texttag",
		"fileName": "common.j",
		"name": "LoadTextTagHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "texttag",
		"insertText": "LoadTextTagHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取漂浮文字 [C]"
	},
	"LoadLightningHandle": {
		"original": "native  LoadLightningHandle\t\t\ttakes hashtable table, integer parentKey, integer childKey returns lightning",
		"fileName": "common.j",
		"name": "LoadLightningHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "lightning",
		"insertText": "LoadLightningHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取闪电效果 [C]"
	},
	"LoadImageHandle": {
		"original": "native  LoadImageHandle\t\t\t\ttakes hashtable table, integer parentKey, integer childKey returns image",
		"fileName": "common.j",
		"name": "LoadImageHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "image",
		"insertText": "LoadImageHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取图象 [C]"
	},
	"LoadUbersplatHandle": {
		"original": "native  LoadUbersplatHandle\t\t\ttakes hashtable table, integer parentKey, integer childKey returns ubersplat",
		"fileName": "common.j",
		"name": "LoadUbersplatHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "ubersplat",
		"insertText": "LoadUbersplatHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取地面纹理变化 [C]"
	},
	"LoadRegionHandle": {
		"original": "native  LoadRegionHandle\t\t\ttakes hashtable table, integer parentKey, integer childKey returns region",
		"fileName": "common.j",
		"name": "LoadRegionHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "region",
		"insertText": "LoadRegionHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取区域(不规则) [C]"
	},
	"LoadFogStateHandle": {
		"original": "native  LoadFogStateHandle\t\t\ttakes hashtable table, integer parentKey, integer childKey returns fogstate",
		"fileName": "common.j",
		"name": "LoadFogStateHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "fogstate",
		"insertText": "LoadFogStateHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取迷雾状态 [C]"
	},
	"LoadFogModifierHandle": {
		"original": "native  LoadFogModifierHandle\t\ttakes hashtable table, integer parentKey, integer childKey returns fogmodifier",
		"fileName": "common.j",
		"name": "LoadFogModifierHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "fogmodifier",
		"insertText": "LoadFogModifierHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取可见度修正器 [C]"
	},
	"LoadHashtableHandle": {
		"original": "native  LoadHashtableHandle\t\t\ttakes hashtable table, integer parentKey, integer childKey returns hashtable",
		"fileName": "common.j",
		"name": "LoadHashtableHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "hashtable",
		"insertText": "LoadHashtableHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取哈希表 [C]"
	},
	"HaveSavedInteger": {
		"original": "native  HaveSavedInteger\t\t\t\t\ttakes hashtable table, integer parentKey, integer childKey returns boolean",
		"fileName": "common.j",
		"name": "HaveSavedInteger",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "boolean",
		"insertText": "HaveSavedInteger(table, parentKey, childKey)",
		"documentation": ""
	},
	"HaveSavedReal": {
		"original": "native  HaveSavedReal\t\t\t\t\t\ttakes hashtable table, integer parentKey, integer childKey returns boolean",
		"fileName": "common.j",
		"name": "HaveSavedReal",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "boolean",
		"insertText": "HaveSavedReal(table, parentKey, childKey)",
		"documentation": ""
	},
	"HaveSavedBoolean": {
		"original": "native  HaveSavedBoolean\t\t\t\t\ttakes hashtable table, integer parentKey, integer childKey returns boolean",
		"fileName": "common.j",
		"name": "HaveSavedBoolean",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "boolean",
		"insertText": "HaveSavedBoolean(table, parentKey, childKey)",
		"documentation": ""
	},
	"HaveSavedString": {
		"original": "native  HaveSavedString\t\t\t\t\t    takes hashtable table, integer parentKey, integer childKey returns boolean",
		"fileName": "common.j",
		"name": "HaveSavedString",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "boolean",
		"insertText": "HaveSavedString(table, parentKey, childKey)",
		"documentation": ""
	},
	"HaveSavedHandle": {
		"original": "native  HaveSavedHandle     \t\t\t\ttakes hashtable table, integer parentKey, integer childKey returns boolean",
		"fileName": "common.j",
		"name": "HaveSavedHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "boolean",
		"insertText": "HaveSavedHandle(table, parentKey, childKey)",
		"documentation": ""
	},
	"RemoveSavedInteger": {
		"original": "native  RemoveSavedInteger\t\t\t\t\ttakes hashtable table, integer parentKey, integer childKey returns nothing",
		"fileName": "common.j",
		"name": "RemoveSavedInteger",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"insertText": "RemoveSavedInteger(table, parentKey, childKey)",
		"documentation": ""
	},
	"RemoveSavedReal": {
		"original": "native  RemoveSavedReal\t\t\t\t\t\ttakes hashtable table, integer parentKey, integer childKey returns nothing",
		"fileName": "common.j",
		"name": "RemoveSavedReal",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"insertText": "RemoveSavedReal(table, parentKey, childKey)",
		"documentation": ""
	},
	"RemoveSavedBoolean": {
		"original": "native  RemoveSavedBoolean\t\t\t\t\ttakes hashtable table, integer parentKey, integer childKey returns nothing",
		"fileName": "common.j",
		"name": "RemoveSavedBoolean",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"insertText": "RemoveSavedBoolean(table, parentKey, childKey)",
		"documentation": ""
	},
	"RemoveSavedString": {
		"original": "native  RemoveSavedString\t\t\t\t\ttakes hashtable table, integer parentKey, integer childKey returns nothing",
		"fileName": "common.j",
		"name": "RemoveSavedString",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"insertText": "RemoveSavedString(table, parentKey, childKey)",
		"documentation": ""
	},
	"RemoveSavedHandle": {
		"original": "native  RemoveSavedHandle\t\t\t\t\ttakes hashtable table, integer parentKey, integer childKey returns nothing",
		"fileName": "common.j",
		"name": "RemoveSavedHandle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"insertText": "RemoveSavedHandle(table, parentKey, childKey)",
		"documentation": ""
	},
	"FlushParentHashtable": {
		"original": "native  FlushParentHashtable\t\t\t\t\t\ttakes hashtable table returns nothing",
		"fileName": "common.j",
		"name": "FlushParentHashtable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}],
		"insertText": "FlushParentHashtable(table)",
		"documentation": "<1.24> 清空哈希表 [C]"
	},
	"FlushChildHashtable": {
		"original": "native  FlushChildHashtable\t\t\t\t\ttakes hashtable table, integer parentKey returns nothing",
		"fileName": "common.j",
		"name": "FlushChildHashtable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}],
		"insertText": "FlushChildHashtable(table, parentKey)",
		"documentation": "<1.24> 清空哈希表主索引 [C]"
	},
	"GetRandomInt": {
		"original": "native GetRandomInt takes integer lowBound, integer highBound returns integer",
		"fileName": "common.j",
		"name": "GetRandomInt",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "lowBound"
		}, {
			"type": "integer",
			"name": "highBound"
		}],
		"returnType": "integer",
		"insertText": "GetRandomInt(lowBound, highBound)",
		"documentation": "随机数字"
	},
	"GetRandomReal": {
		"original": "native GetRandomReal takes real lowBound, real highBound returns real",
		"fileName": "common.j",
		"name": "GetRandomReal",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "lowBound"
		}, {
			"type": "real",
			"name": "highBound"
		}],
		"returnType": "real",
		"insertText": "GetRandomReal(lowBound, highBound)",
		"documentation": "随机数"
	},
	"CreateUnitPool": {
		"original": "native CreateUnitPool           takes nothing returns unitpool",
		"fileName": "common.j",
		"name": "CreateUnitPool",
		"isConstant": false,
		"isNative": true,
		"returnType": "unitpool",
		"insertText": "CreateUnitPool()",
		"documentation": "新建单位池 [R]"
	},
	"DestroyUnitPool": {
		"original": "native DestroyUnitPool          takes unitpool whichPool returns nothing",
		"fileName": "common.j",
		"name": "DestroyUnitPool",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unitpool",
			"name": "whichPool"
		}],
		"insertText": "DestroyUnitPool(whichPool)",
		"documentation": "删除单位池 [R]"
	},
	"UnitPoolAddUnitType": {
		"original": "native UnitPoolAddUnitType      takes unitpool whichPool, integer unitId, real weight returns nothing",
		"fileName": "common.j",
		"name": "UnitPoolAddUnitType",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unitpool",
			"name": "whichPool"
		}, {
			"type": "integer",
			"name": "unitId"
		}, {
			"type": "real",
			"name": "weight"
		}],
		"insertText": "UnitPoolAddUnitType(whichPool, unitId, weight)",
		"documentation": "添加单位类型 [R]"
	},
	"UnitPoolRemoveUnitType": {
		"original": "native UnitPoolRemoveUnitType   takes unitpool whichPool, integer unitId returns nothing",
		"fileName": "common.j",
		"name": "UnitPoolRemoveUnitType",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unitpool",
			"name": "whichPool"
		}, {
			"type": "integer",
			"name": "unitId"
		}],
		"insertText": "UnitPoolRemoveUnitType(whichPool, unitId)",
		"documentation": "删除单位类型 [R]"
	},
	"PlaceRandomUnit": {
		"original": "native PlaceRandomUnit          takes unitpool whichPool, player forWhichPlayer, real x, real y, real facing returns unit",
		"fileName": "common.j",
		"name": "PlaceRandomUnit",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unitpool",
			"name": "whichPool"
		}, {
			"type": "player",
			"name": "forWhichPlayer"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "facing"
		}],
		"returnType": "unit",
		"insertText": "PlaceRandomUnit(whichPool, forWhichPlayer, x, y, facing)",
		"documentation": "选择放置单位 [R]"
	},
	"CreateItemPool": {
		"original": "native CreateItemPool           takes nothing returns itempool",
		"fileName": "common.j",
		"name": "CreateItemPool",
		"isConstant": false,
		"isNative": true,
		"returnType": "itempool",
		"insertText": "CreateItemPool()",
		"documentation": "新建物品池 [R]"
	},
	"DestroyItemPool": {
		"original": "native DestroyItemPool          takes itempool whichItemPool returns nothing",
		"fileName": "common.j",
		"name": "DestroyItemPool",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "itempool",
			"name": "whichItemPool"
		}],
		"insertText": "DestroyItemPool(whichItemPool)",
		"documentation": "删除物品池 [R]"
	},
	"ItemPoolAddItemType": {
		"original": "native ItemPoolAddItemType      takes itempool whichItemPool, integer itemId, real weight returns nothing",
		"fileName": "common.j",
		"name": "ItemPoolAddItemType",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "itempool",
			"name": "whichItemPool"
		}, {
			"type": "integer",
			"name": "itemId"
		}, {
			"type": "real",
			"name": "weight"
		}],
		"insertText": "ItemPoolAddItemType(whichItemPool, itemId, weight)",
		"documentation": "添加物品类型 [R]"
	},
	"ItemPoolRemoveItemType": {
		"original": "native ItemPoolRemoveItemType   takes itempool whichItemPool, integer itemId returns nothing",
		"fileName": "common.j",
		"name": "ItemPoolRemoveItemType",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "itempool",
			"name": "whichItemPool"
		}, {
			"type": "integer",
			"name": "itemId"
		}],
		"insertText": "ItemPoolRemoveItemType(whichItemPool, itemId)",
		"documentation": "删除物品类型 [R]"
	},
	"PlaceRandomItem": {
		"original": "native PlaceRandomItem          takes itempool whichItemPool, real x, real y returns item",
		"fileName": "common.j",
		"name": "PlaceRandomItem",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "itempool",
			"name": "whichItemPool"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"returnType": "item",
		"insertText": "PlaceRandomItem(whichItemPool, x, y)",
		"documentation": "选择放置物品 [R]"
	},
	"ChooseRandomCreep": {
		"original": "native ChooseRandomCreep        takes integer level returns integer",
		"fileName": "common.j",
		"name": "ChooseRandomCreep",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "level"
		}],
		"returnType": "integer",
		"insertText": "ChooseRandomCreep(level)",
		"documentation": ""
	},
	"ChooseRandomNPBuilding": {
		"original": "native ChooseRandomNPBuilding   takes nothing returns integer",
		"fileName": "common.j",
		"name": "ChooseRandomNPBuilding",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "ChooseRandomNPBuilding()",
		"documentation": ""
	},
	"ChooseRandomItem": {
		"original": "native ChooseRandomItem         takes integer level returns integer",
		"fileName": "common.j",
		"name": "ChooseRandomItem",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "level"
		}],
		"returnType": "integer",
		"insertText": "ChooseRandomItem(level)",
		"documentation": ""
	},
	"ChooseRandomItemEx": {
		"original": "native ChooseRandomItemEx       takes itemtype whichType, integer level returns integer",
		"fileName": "common.j",
		"name": "ChooseRandomItemEx",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "itemtype",
			"name": "whichType"
		}, {
			"type": "integer",
			"name": "level"
		}],
		"returnType": "integer",
		"insertText": "ChooseRandomItemEx(whichType, level)",
		"documentation": ""
	},
	"SetRandomSeed": {
		"original": "native SetRandomSeed            takes integer seed returns nothing",
		"fileName": "common.j",
		"name": "SetRandomSeed",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "seed"
		}],
		"insertText": "SetRandomSeed(seed)",
		"documentation": "设置随机种子"
	},
	"SetTerrainFog": {
		"original": "native SetTerrainFog                takes real a, real b, real c, real d, real e returns nothing",
		"fileName": "common.j",
		"name": "SetTerrainFog",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "a"
		}, {
			"type": "real",
			"name": "b"
		}, {
			"type": "real",
			"name": "c"
		}, {
			"type": "real",
			"name": "d"
		}, {
			"type": "real",
			"name": "e"
		}],
		"insertText": "SetTerrainFog(a, b, c, d, e)",
		"documentation": ""
	},
	"ResetTerrainFog": {
		"original": "native ResetTerrainFog              takes nothing returns nothing",
		"fileName": "common.j",
		"name": "ResetTerrainFog",
		"isConstant": false,
		"isNative": true,
		"insertText": "ResetTerrainFog()",
		"documentation": ""
	},
	"SetUnitFog": {
		"original": "native SetUnitFog                   takes real a, real b, real c, real d, real e returns nothing",
		"fileName": "common.j",
		"name": "SetUnitFog",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "a"
		}, {
			"type": "real",
			"name": "b"
		}, {
			"type": "real",
			"name": "c"
		}, {
			"type": "real",
			"name": "d"
		}, {
			"type": "real",
			"name": "e"
		}],
		"insertText": "SetUnitFog(a, b, c, d, e)",
		"documentation": ""
	},
	"SetTerrainFogEx": {
		"original": "native SetTerrainFogEx              takes integer style, real zstart, real zend, real density, real red, real green, real blue returns nothing",
		"fileName": "common.j",
		"name": "SetTerrainFogEx",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "style"
		}, {
			"type": "real",
			"name": "zstart"
		}, {
			"type": "real",
			"name": "zend"
		}, {
			"type": "real",
			"name": "density"
		}, {
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}],
		"insertText": "SetTerrainFogEx(style, zstart, zend, density, red, green, blue)",
		"documentation": "设置迷雾 [R]"
	},
	"DisplayTextToPlayer": {
		"original": "native DisplayTextToPlayer          takes player toPlayer, real x, real y, string message returns nothing",
		"fileName": "common.j",
		"name": "DisplayTextToPlayer",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "toPlayer"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "string",
			"name": "message"
		}],
		"insertText": "DisplayTextToPlayer(toPlayer, x, y, message)",
		"documentation": "对玩家显示文本消息(自动限时) [R]"
	},
	"DisplayTimedTextToPlayer": {
		"original": "native DisplayTimedTextToPlayer     takes player toPlayer, real x, real y, real duration, string message returns nothing",
		"fileName": "common.j",
		"name": "DisplayTimedTextToPlayer",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "toPlayer"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "duration"
		}, {
			"type": "string",
			"name": "message"
		}],
		"insertText": "DisplayTimedTextToPlayer(toPlayer, x, y, duration, message)",
		"documentation": "对玩家显示文本消息(指定时间) [R]"
	},
	"DisplayTimedTextFromPlayer": {
		"original": "native DisplayTimedTextFromPlayer   takes player toPlayer, real x, real y, real duration, string message returns nothing",
		"fileName": "common.j",
		"name": "DisplayTimedTextFromPlayer",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "toPlayer"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "duration"
		}, {
			"type": "string",
			"name": "message"
		}],
		"insertText": "DisplayTimedTextFromPlayer(toPlayer, x, y, duration, message)",
		"documentation": ""
	},
	"ClearTextMessages": {
		"original": "native ClearTextMessages            takes nothing returns nothing",
		"fileName": "common.j",
		"name": "ClearTextMessages",
		"isConstant": false,
		"isNative": true,
		"insertText": "ClearTextMessages()",
		"documentation": "清空文本信息(所有玩家) [R]"
	},
	"SetDayNightModels": {
		"original": "native SetDayNightModels            takes string terrainDNCFile, string unitDNCFile returns nothing",
		"fileName": "common.j",
		"name": "SetDayNightModels",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "terrainDNCFile"
		}, {
			"type": "string",
			"name": "unitDNCFile"
		}],
		"insertText": "SetDayNightModels(terrainDNCFile, unitDNCFile)",
		"documentation": ""
	},
	"SetSkyModel": {
		"original": "native SetSkyModel                  takes string skyModelFile returns nothing",
		"fileName": "common.j",
		"name": "SetSkyModel",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "skyModelFile"
		}],
		"insertText": "SetSkyModel(skyModelFile)",
		"documentation": "设置天空"
	},
	"EnableUserControl": {
		"original": "native EnableUserControl            takes boolean b returns nothing",
		"fileName": "common.j",
		"name": "EnableUserControl",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "b"
		}],
		"insertText": "EnableUserControl(b)",
		"documentation": "启用/禁用玩家控制权(所有玩家) [R]"
	},
	"EnableUserUI": {
		"original": "native EnableUserUI                 takes boolean b returns nothing",
		"fileName": "common.j",
		"name": "EnableUserUI",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "b"
		}],
		"insertText": "EnableUserUI(b)",
		"documentation": ""
	},
	"SuspendTimeOfDay": {
		"original": "native SuspendTimeOfDay             takes boolean b returns nothing",
		"fileName": "common.j",
		"name": "SuspendTimeOfDay",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "b"
		}],
		"insertText": "SuspendTimeOfDay(b)",
		"documentation": ""
	},
	"SetTimeOfDayScale": {
		"original": "native SetTimeOfDayScale            takes real r returns nothing",
		"fileName": "common.j",
		"name": "SetTimeOfDayScale",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "r"
		}],
		"insertText": "SetTimeOfDayScale(r)",
		"documentation": "设置昼夜时间流逝速度 [R]"
	},
	"GetTimeOfDayScale": {
		"original": "native GetTimeOfDayScale            takes nothing returns real",
		"fileName": "common.j",
		"name": "GetTimeOfDayScale",
		"isConstant": false,
		"isNative": true,
		"returnType": "real",
		"insertText": "GetTimeOfDayScale()",
		"documentation": ""
	},
	"ShowInterface": {
		"original": "native ShowInterface                takes boolean flag, real fadeDuration returns nothing",
		"fileName": "common.j",
		"name": "ShowInterface",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "flag"
		}, {
			"type": "real",
			"name": "fadeDuration"
		}],
		"insertText": "ShowInterface(flag, fadeDuration)",
		"documentation": "开启/关闭 信箱模式(所有玩家) [R]"
	},
	"PauseGame": {
		"original": "native PauseGame                    takes boolean flag returns nothing",
		"fileName": "common.j",
		"name": "PauseGame",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "PauseGame(flag)",
		"documentation": "暂停/恢复游戏 [R]"
	},
	"UnitAddIndicator": {
		"original": "native UnitAddIndicator             takes unit whichUnit, integer red, integer green, integer blue, integer alpha returns nothing",
		"fileName": "common.j",
		"name": "UnitAddIndicator",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "red"
		}, {
			"type": "integer",
			"name": "green"
		}, {
			"type": "integer",
			"name": "blue"
		}, {
			"type": "integer",
			"name": "alpha"
		}],
		"insertText": "UnitAddIndicator(whichUnit, red, green, blue, alpha)",
		"documentation": "闪动指示器(对单位) [R]"
	},
	"AddIndicator": {
		"original": "native AddIndicator                 takes widget whichWidget, integer red, integer green, integer blue, integer alpha returns nothing",
		"fileName": "common.j",
		"name": "AddIndicator",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "widget",
			"name": "whichWidget"
		}, {
			"type": "integer",
			"name": "red"
		}, {
			"type": "integer",
			"name": "green"
		}, {
			"type": "integer",
			"name": "blue"
		}, {
			"type": "integer",
			"name": "alpha"
		}],
		"insertText": "AddIndicator(whichWidget, red, green, blue, alpha)",
		"documentation": ""
	},
	"PingMinimap": {
		"original": "native PingMinimap                  takes real x, real y, real duration returns nothing",
		"fileName": "common.j",
		"name": "PingMinimap",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "PingMinimap(x, y, duration)",
		"documentation": "小地图信号(所有玩家) [R]"
	},
	"PingMinimapEx": {
		"original": "native PingMinimapEx                takes real x, real y, real duration, integer red, integer green, integer blue, boolean extraEffects returns nothing",
		"fileName": "common.j",
		"name": "PingMinimapEx",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "duration"
		}, {
			"type": "integer",
			"name": "red"
		}, {
			"type": "integer",
			"name": "green"
		}, {
			"type": "integer",
			"name": "blue"
		}, {
			"type": "boolean",
			"name": "extraEffects"
		}],
		"insertText": "PingMinimapEx(x, y, duration, red, green, blue, extraEffects)",
		"documentation": "小地图信号(指定颜色)(所有玩家) [R]"
	},
	"EnableOcclusion": {
		"original": "native EnableOcclusion              takes boolean flag returns nothing",
		"fileName": "common.j",
		"name": "EnableOcclusion",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "EnableOcclusion(flag)",
		"documentation": "允许/禁止闭塞(所有玩家) [R]"
	},
	"SetIntroShotText": {
		"original": "native SetIntroShotText             takes string introText returns nothing",
		"fileName": "common.j",
		"name": "SetIntroShotText",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "introText"
		}],
		"insertText": "SetIntroShotText(introText)",
		"documentation": ""
	},
	"SetIntroShotModel": {
		"original": "native SetIntroShotModel            takes string introModelPath returns nothing",
		"fileName": "common.j",
		"name": "SetIntroShotModel",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "introModelPath"
		}],
		"insertText": "SetIntroShotModel(introModelPath)",
		"documentation": ""
	},
	"EnableWorldFogBoundary": {
		"original": "native EnableWorldFogBoundary       takes boolean b returns nothing",
		"fileName": "common.j",
		"name": "EnableWorldFogBoundary",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "b"
		}],
		"insertText": "EnableWorldFogBoundary(b)",
		"documentation": "允许/禁止 边界染色(所有玩家) [R]"
	},
	"PlayModelCinematic": {
		"original": "native PlayModelCinematic           takes string modelName returns nothing",
		"fileName": "common.j",
		"name": "PlayModelCinematic",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "modelName"
		}],
		"insertText": "PlayModelCinematic(modelName)",
		"documentation": ""
	},
	"PlayCinematic": {
		"original": "native PlayCinematic                takes string movieName returns nothing",
		"fileName": "common.j",
		"name": "PlayCinematic",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "movieName"
		}],
		"insertText": "PlayCinematic(movieName)",
		"documentation": ""
	},
	"ForceUIKey": {
		"original": "native ForceUIKey                   takes string key returns nothing",
		"fileName": "common.j",
		"name": "ForceUIKey",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "key"
		}],
		"insertText": "ForceUIKey(key)",
		"documentation": ""
	},
	"ForceUICancel": {
		"original": "native ForceUICancel                takes nothing returns nothing",
		"fileName": "common.j",
		"name": "ForceUICancel",
		"isConstant": false,
		"isNative": true,
		"insertText": "ForceUICancel()",
		"documentation": ""
	},
	"DisplayLoadDialog": {
		"original": "native DisplayLoadDialog            takes nothing returns nothing",
		"fileName": "common.j",
		"name": "DisplayLoadDialog",
		"isConstant": false,
		"isNative": true,
		"insertText": "DisplayLoadDialog()",
		"documentation": ""
	},
	"SetAltMinimapIcon": {
		"original": "native SetAltMinimapIcon            takes string iconPath returns nothing",
		"fileName": "common.j",
		"name": "SetAltMinimapIcon",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "iconPath"
		}],
		"insertText": "SetAltMinimapIcon(iconPath)",
		"documentation": "改变小地图的特殊图标"
	},
	"DisableRestartMission": {
		"original": "native DisableRestartMission        takes boolean flag returns nothing",
		"fileName": "common.j",
		"name": "DisableRestartMission",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "DisableRestartMission(flag)",
		"documentation": "禁用 重新开始任务按钮"
	},
	"CreateTextTag": {
		"original": "native CreateTextTag                takes nothing returns texttag",
		"fileName": "common.j",
		"name": "CreateTextTag",
		"isConstant": false,
		"isNative": true,
		"returnType": "texttag",
		"insertText": "CreateTextTag()",
		"documentation": "新建漂浮文字 [R]"
	},
	"DestroyTextTag": {
		"original": "native DestroyTextTag               takes texttag t returns nothing",
		"fileName": "common.j",
		"name": "DestroyTextTag",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "texttag",
			"name": "t"
		}],
		"insertText": "DestroyTextTag(t)",
		"documentation": ""
	},
	"SetTextTagText": {
		"original": "native SetTextTagText               takes texttag t, string s, real height returns nothing",
		"fileName": "common.j",
		"name": "SetTextTagText",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "texttag",
			"name": "t"
		}, {
			"type": "string",
			"name": "s"
		}, {
			"type": "real",
			"name": "height"
		}],
		"insertText": "SetTextTagText(t, s, height)",
		"documentation": "改变文字内容 [R]"
	},
	"SetTextTagPos": {
		"original": "native SetTextTagPos                takes texttag t, real x, real y, real heightOffset returns nothing",
		"fileName": "common.j",
		"name": "SetTextTagPos",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "texttag",
			"name": "t"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "heightOffset"
		}],
		"insertText": "SetTextTagPos(t, x, y, heightOffset)",
		"documentation": "改变位置(坐标) [R]"
	},
	"SetTextTagPosUnit": {
		"original": "native SetTextTagPosUnit            takes texttag t, unit whichUnit, real heightOffset returns nothing",
		"fileName": "common.j",
		"name": "SetTextTagPosUnit",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "texttag",
			"name": "t"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "heightOffset"
		}],
		"insertText": "SetTextTagPosUnit(t, whichUnit, heightOffset)",
		"documentation": ""
	},
	"SetTextTagColor": {
		"original": "native SetTextTagColor              takes texttag t, integer red, integer green, integer blue, integer alpha returns nothing",
		"fileName": "common.j",
		"name": "SetTextTagColor",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "texttag",
			"name": "t"
		}, {
			"type": "integer",
			"name": "red"
		}, {
			"type": "integer",
			"name": "green"
		}, {
			"type": "integer",
			"name": "blue"
		}, {
			"type": "integer",
			"name": "alpha"
		}],
		"insertText": "SetTextTagColor(t, red, green, blue, alpha)",
		"documentation": "改变颜色 [R]"
	},
	"SetTextTagVelocity": {
		"original": "native SetTextTagVelocity           takes texttag t, real xvel, real yvel returns nothing",
		"fileName": "common.j",
		"name": "SetTextTagVelocity",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "texttag",
			"name": "t"
		}, {
			"type": "real",
			"name": "xvel"
		}, {
			"type": "real",
			"name": "yvel"
		}],
		"insertText": "SetTextTagVelocity(t, xvel, yvel)",
		"documentation": "设置速率 [R]"
	},
	"SetTextTagVisibility": {
		"original": "native SetTextTagVisibility         takes texttag t, boolean flag returns nothing",
		"fileName": "common.j",
		"name": "SetTextTagVisibility",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "texttag",
			"name": "t"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "SetTextTagVisibility(t, flag)",
		"documentation": "显示/隐藏 (所有玩家) [R]"
	},
	"SetTextTagSuspended": {
		"original": "native SetTextTagSuspended          takes texttag t, boolean flag returns nothing",
		"fileName": "common.j",
		"name": "SetTextTagSuspended",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "texttag",
			"name": "t"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "SetTextTagSuspended(t, flag)",
		"documentation": ""
	},
	"SetTextTagPermanent": {
		"original": "native SetTextTagPermanent          takes texttag t, boolean flag returns nothing",
		"fileName": "common.j",
		"name": "SetTextTagPermanent",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "texttag",
			"name": "t"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "SetTextTagPermanent(t, flag)",
		"documentation": ""
	},
	"SetTextTagAge": {
		"original": "native SetTextTagAge                takes texttag t, real age returns nothing",
		"fileName": "common.j",
		"name": "SetTextTagAge",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "texttag",
			"name": "t"
		}, {
			"type": "real",
			"name": "age"
		}],
		"insertText": "SetTextTagAge(t, age)",
		"documentation": ""
	},
	"SetTextTagLifespan": {
		"original": "native SetTextTagLifespan           takes texttag t, real lifespan returns nothing",
		"fileName": "common.j",
		"name": "SetTextTagLifespan",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "texttag",
			"name": "t"
		}, {
			"type": "real",
			"name": "lifespan"
		}],
		"insertText": "SetTextTagLifespan(t, lifespan)",
		"documentation": ""
	},
	"SetTextTagFadepoint": {
		"original": "native SetTextTagFadepoint          takes texttag t, real fadepoint returns nothing",
		"fileName": "common.j",
		"name": "SetTextTagFadepoint",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "texttag",
			"name": "t"
		}, {
			"type": "real",
			"name": "fadepoint"
		}],
		"insertText": "SetTextTagFadepoint(t, fadepoint)",
		"documentation": ""
	},
	"SetReservedLocalHeroButtons": {
		"original": "native SetReservedLocalHeroButtons  takes integer reserved returns nothing",
		"fileName": "common.j",
		"name": "SetReservedLocalHeroButtons",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "reserved"
		}],
		"insertText": "SetReservedLocalHeroButtons(reserved)",
		"documentation": "保留英雄按钮"
	},
	"GetAllyColorFilterState": {
		"original": "native GetAllyColorFilterState      takes nothing returns integer",
		"fileName": "common.j",
		"name": "GetAllyColorFilterState",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "GetAllyColorFilterState()",
		"documentation": "结盟滤色镜的设置值"
	},
	"SetAllyColorFilterState": {
		"original": "native SetAllyColorFilterState      takes integer state returns nothing",
		"fileName": "common.j",
		"name": "SetAllyColorFilterState",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "state"
		}],
		"insertText": "SetAllyColorFilterState(state)",
		"documentation": "设置结盟滤色镜"
	},
	"GetCreepCampFilterState": {
		"original": "native GetCreepCampFilterState      takes nothing returns boolean",
		"fileName": "common.j",
		"name": "GetCreepCampFilterState",
		"isConstant": false,
		"isNative": true,
		"returnType": "boolean",
		"insertText": "GetCreepCampFilterState()",
		"documentation": "野生单位显示是开启的"
	},
	"SetCreepCampFilterState": {
		"original": "native SetCreepCampFilterState      takes boolean state returns nothing",
		"fileName": "common.j",
		"name": "SetCreepCampFilterState",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "state"
		}],
		"insertText": "SetCreepCampFilterState(state)",
		"documentation": "显示/隐藏野生生物图标在小地图"
	},
	"EnableMinimapFilterButtons": {
		"original": "native EnableMinimapFilterButtons   takes boolean enableAlly, boolean enableCreep returns nothing",
		"fileName": "common.j",
		"name": "EnableMinimapFilterButtons",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "enableAlly"
		}, {
			"type": "boolean",
			"name": "enableCreep"
		}],
		"insertText": "EnableMinimapFilterButtons(enableAlly, enableCreep)",
		"documentation": "允许/禁止小地图按钮"
	},
	"EnableDragSelect": {
		"original": "native EnableDragSelect             takes boolean state, boolean ui returns nothing",
		"fileName": "common.j",
		"name": "EnableDragSelect",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "state"
		}, {
			"type": "boolean",
			"name": "ui"
		}],
		"insertText": "EnableDragSelect(state, ui)",
		"documentation": "允许/禁止框选"
	},
	"EnablePreSelect": {
		"original": "native EnablePreSelect              takes boolean state, boolean ui returns nothing",
		"fileName": "common.j",
		"name": "EnablePreSelect",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "state"
		}, {
			"type": "boolean",
			"name": "ui"
		}],
		"insertText": "EnablePreSelect(state, ui)",
		"documentation": "允许/禁止预选"
	},
	"EnableSelect": {
		"original": "native EnableSelect                 takes boolean state, boolean ui returns nothing",
		"fileName": "common.j",
		"name": "EnableSelect",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "state"
		}, {
			"type": "boolean",
			"name": "ui"
		}],
		"insertText": "EnableSelect(state, ui)",
		"documentation": "允许/禁止选择"
	},
	"CreateTrackable": {
		"original": "native CreateTrackable      takes string trackableModelPath, real x, real y, real facing returns trackable",
		"fileName": "common.j",
		"name": "CreateTrackable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "trackableModelPath"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "facing"
		}],
		"returnType": "trackable",
		"insertText": "CreateTrackable(trackableModelPath, x, y, facing)",
		"documentation": "新建可追踪物 [R]"
	},
	"CreateQuest": {
		"original": "native CreateQuest          takes nothing returns quest",
		"fileName": "common.j",
		"name": "CreateQuest",
		"isConstant": false,
		"isNative": true,
		"returnType": "quest",
		"insertText": "CreateQuest()",
		"documentation": "新建任务 [R]"
	},
	"DestroyQuest": {
		"original": "native DestroyQuest         takes quest whichQuest returns nothing",
		"fileName": "common.j",
		"name": "DestroyQuest",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "quest",
			"name": "whichQuest"
		}],
		"insertText": "DestroyQuest(whichQuest)",
		"documentation": ""
	},
	"QuestSetTitle": {
		"original": "native QuestSetTitle        takes quest whichQuest, string title returns nothing",
		"fileName": "common.j",
		"name": "QuestSetTitle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "quest",
			"name": "whichQuest"
		}, {
			"type": "string",
			"name": "title"
		}],
		"insertText": "QuestSetTitle(whichQuest, title)",
		"documentation": ""
	},
	"QuestSetDescription": {
		"original": "native QuestSetDescription  takes quest whichQuest, string description returns nothing",
		"fileName": "common.j",
		"name": "QuestSetDescription",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "quest",
			"name": "whichQuest"
		}, {
			"type": "string",
			"name": "description"
		}],
		"insertText": "QuestSetDescription(whichQuest, description)",
		"documentation": ""
	},
	"QuestSetIconPath": {
		"original": "native QuestSetIconPath     takes quest whichQuest, string iconPath returns nothing",
		"fileName": "common.j",
		"name": "QuestSetIconPath",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "quest",
			"name": "whichQuest"
		}, {
			"type": "string",
			"name": "iconPath"
		}],
		"insertText": "QuestSetIconPath(whichQuest, iconPath)",
		"documentation": ""
	},
	"QuestSetRequired": {
		"original": "native QuestSetRequired     takes quest whichQuest, boolean required   returns nothing",
		"fileName": "common.j",
		"name": "QuestSetRequired",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "quest",
			"name": "whichQuest"
		}, {
			"type": "boolean",
			"name": "required"
		}],
		"insertText": "QuestSetRequired(whichQuest, required)",
		"documentation": ""
	},
	"QuestSetCompleted": {
		"original": "native QuestSetCompleted    takes quest whichQuest, boolean completed  returns nothing",
		"fileName": "common.j",
		"name": "QuestSetCompleted",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "quest",
			"name": "whichQuest"
		}, {
			"type": "boolean",
			"name": "completed"
		}],
		"insertText": "QuestSetCompleted(whichQuest, completed)",
		"documentation": ""
	},
	"QuestSetDiscovered": {
		"original": "native QuestSetDiscovered   takes quest whichQuest, boolean discovered returns nothing",
		"fileName": "common.j",
		"name": "QuestSetDiscovered",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "quest",
			"name": "whichQuest"
		}, {
			"type": "boolean",
			"name": "discovered"
		}],
		"insertText": "QuestSetDiscovered(whichQuest, discovered)",
		"documentation": ""
	},
	"QuestSetFailed": {
		"original": "native QuestSetFailed       takes quest whichQuest, boolean failed     returns nothing",
		"fileName": "common.j",
		"name": "QuestSetFailed",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "quest",
			"name": "whichQuest"
		}, {
			"type": "boolean",
			"name": "failed"
		}],
		"insertText": "QuestSetFailed(whichQuest, failed)",
		"documentation": ""
	},
	"QuestSetEnabled": {
		"original": "native QuestSetEnabled      takes quest whichQuest, boolean enabled    returns nothing",
		"fileName": "common.j",
		"name": "QuestSetEnabled",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "quest",
			"name": "whichQuest"
		}, {
			"type": "boolean",
			"name": "enabled"
		}],
		"insertText": "QuestSetEnabled(whichQuest, enabled)",
		"documentation": "启用/禁用 任务 [R]"
	},
	"IsQuestRequired": {
		"original": "native IsQuestRequired     takes quest whichQuest returns boolean",
		"fileName": "common.j",
		"name": "IsQuestRequired",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "quest",
			"name": "whichQuest"
		}],
		"returnType": "boolean",
		"insertText": "IsQuestRequired(whichQuest)",
		"documentation": "任务是必须完成的"
	},
	"IsQuestCompleted": {
		"original": "native IsQuestCompleted    takes quest whichQuest returns boolean",
		"fileName": "common.j",
		"name": "IsQuestCompleted",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "quest",
			"name": "whichQuest"
		}],
		"returnType": "boolean",
		"insertText": "IsQuestCompleted(whichQuest)",
		"documentation": "任务完成"
	},
	"IsQuestDiscovered": {
		"original": "native IsQuestDiscovered   takes quest whichQuest returns boolean",
		"fileName": "common.j",
		"name": "IsQuestDiscovered",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "quest",
			"name": "whichQuest"
		}],
		"returnType": "boolean",
		"insertText": "IsQuestDiscovered(whichQuest)",
		"documentation": "任务已发现"
	},
	"IsQuestFailed": {
		"original": "native IsQuestFailed       takes quest whichQuest returns boolean",
		"fileName": "common.j",
		"name": "IsQuestFailed",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "quest",
			"name": "whichQuest"
		}],
		"returnType": "boolean",
		"insertText": "IsQuestFailed(whichQuest)",
		"documentation": "任务失败"
	},
	"IsQuestEnabled": {
		"original": "native IsQuestEnabled      takes quest whichQuest returns boolean",
		"fileName": "common.j",
		"name": "IsQuestEnabled",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "quest",
			"name": "whichQuest"
		}],
		"returnType": "boolean",
		"insertText": "IsQuestEnabled(whichQuest)",
		"documentation": "允许任务"
	},
	"QuestCreateItem": {
		"original": "native QuestCreateItem          takes quest whichQuest returns questitem",
		"fileName": "common.j",
		"name": "QuestCreateItem",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "quest",
			"name": "whichQuest"
		}],
		"returnType": "questitem",
		"insertText": "QuestCreateItem(whichQuest)",
		"documentation": ""
	},
	"QuestItemSetDescription": {
		"original": "native QuestItemSetDescription  takes questitem whichQuestItem, string description returns nothing",
		"fileName": "common.j",
		"name": "QuestItemSetDescription",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "questitem",
			"name": "whichQuestItem"
		}, {
			"type": "string",
			"name": "description"
		}],
		"insertText": "QuestItemSetDescription(whichQuestItem, description)",
		"documentation": ""
	},
	"QuestItemSetCompleted": {
		"original": "native QuestItemSetCompleted    takes questitem whichQuestItem, boolean completed returns nothing",
		"fileName": "common.j",
		"name": "QuestItemSetCompleted",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "questitem",
			"name": "whichQuestItem"
		}, {
			"type": "boolean",
			"name": "completed"
		}],
		"insertText": "QuestItemSetCompleted(whichQuestItem, completed)",
		"documentation": ""
	},
	"IsQuestItemCompleted": {
		"original": "native IsQuestItemCompleted     takes questitem whichQuestItem returns boolean",
		"fileName": "common.j",
		"name": "IsQuestItemCompleted",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "questitem",
			"name": "whichQuestItem"
		}],
		"returnType": "boolean",
		"insertText": "IsQuestItemCompleted(whichQuestItem)",
		"documentation": "任务条件完成"
	},
	"CreateDefeatCondition": {
		"original": "native CreateDefeatCondition            takes nothing returns defeatcondition",
		"fileName": "common.j",
		"name": "CreateDefeatCondition",
		"isConstant": false,
		"isNative": true,
		"returnType": "defeatcondition",
		"insertText": "CreateDefeatCondition()",
		"documentation": ""
	},
	"DestroyDefeatCondition": {
		"original": "native DestroyDefeatCondition           takes defeatcondition whichCondition returns nothing",
		"fileName": "common.j",
		"name": "DestroyDefeatCondition",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "defeatcondition",
			"name": "whichCondition"
		}],
		"insertText": "DestroyDefeatCondition(whichCondition)",
		"documentation": ""
	},
	"DefeatConditionSetDescription": {
		"original": "native DefeatConditionSetDescription    takes defeatcondition whichCondition, string description returns nothing",
		"fileName": "common.j",
		"name": "DefeatConditionSetDescription",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "defeatcondition",
			"name": "whichCondition"
		}, {
			"type": "string",
			"name": "description"
		}],
		"insertText": "DefeatConditionSetDescription(whichCondition, description)",
		"documentation": ""
	},
	"FlashQuestDialogButton": {
		"original": "native FlashQuestDialogButton   takes nothing returns nothing",
		"fileName": "common.j",
		"name": "FlashQuestDialogButton",
		"isConstant": false,
		"isNative": true,
		"insertText": "FlashQuestDialogButton()",
		"documentation": ""
	},
	"ForceQuestDialogUpdate": {
		"original": "native ForceQuestDialogUpdate   takes nothing returns nothing",
		"fileName": "common.j",
		"name": "ForceQuestDialogUpdate",
		"isConstant": false,
		"isNative": true,
		"insertText": "ForceQuestDialogUpdate()",
		"documentation": ""
	},
	"CreateTimerDialog": {
		"original": "native CreateTimerDialog                takes timer t returns timerdialog",
		"fileName": "common.j",
		"name": "CreateTimerDialog",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "timer",
			"name": "t"
		}],
		"returnType": "timerdialog",
		"insertText": "CreateTimerDialog(t)",
		"documentation": "新建计时器窗口 [R]"
	},
	"DestroyTimerDialog": {
		"original": "native DestroyTimerDialog               takes timerdialog whichDialog returns nothing",
		"fileName": "common.j",
		"name": "DestroyTimerDialog",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "timerdialog",
			"name": "whichDialog"
		}],
		"insertText": "DestroyTimerDialog(whichDialog)",
		"documentation": ""
	},
	"TimerDialogSetTitle": {
		"original": "native TimerDialogSetTitle              takes timerdialog whichDialog, string title returns nothing",
		"fileName": "common.j",
		"name": "TimerDialogSetTitle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "timerdialog",
			"name": "whichDialog"
		}, {
			"type": "string",
			"name": "title"
		}],
		"insertText": "TimerDialogSetTitle(whichDialog, title)",
		"documentation": ""
	},
	"TimerDialogSetTitleColor": {
		"original": "native TimerDialogSetTitleColor         takes timerdialog whichDialog, integer red, integer green, integer blue, integer alpha returns nothing",
		"fileName": "common.j",
		"name": "TimerDialogSetTitleColor",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "timerdialog",
			"name": "whichDialog"
		}, {
			"type": "integer",
			"name": "red"
		}, {
			"type": "integer",
			"name": "green"
		}, {
			"type": "integer",
			"name": "blue"
		}, {
			"type": "integer",
			"name": "alpha"
		}],
		"insertText": "TimerDialogSetTitleColor(whichDialog, red, green, blue, alpha)",
		"documentation": "改变计时器窗口文字颜色 [R]"
	},
	"TimerDialogSetTimeColor": {
		"original": "native TimerDialogSetTimeColor          takes timerdialog whichDialog, integer red, integer green, integer blue, integer alpha returns nothing",
		"fileName": "common.j",
		"name": "TimerDialogSetTimeColor",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "timerdialog",
			"name": "whichDialog"
		}, {
			"type": "integer",
			"name": "red"
		}, {
			"type": "integer",
			"name": "green"
		}, {
			"type": "integer",
			"name": "blue"
		}, {
			"type": "integer",
			"name": "alpha"
		}],
		"insertText": "TimerDialogSetTimeColor(whichDialog, red, green, blue, alpha)",
		"documentation": "改变计时器窗口计时颜色 [R]"
	},
	"TimerDialogSetSpeed": {
		"original": "native TimerDialogSetSpeed              takes timerdialog whichDialog, real speedMultFactor returns nothing",
		"fileName": "common.j",
		"name": "TimerDialogSetSpeed",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "timerdialog",
			"name": "whichDialog"
		}, {
			"type": "real",
			"name": "speedMultFactor"
		}],
		"insertText": "TimerDialogSetSpeed(whichDialog, speedMultFactor)",
		"documentation": "设置计时器窗口速率 [R]"
	},
	"TimerDialogDisplay": {
		"original": "native TimerDialogDisplay               takes timerdialog whichDialog, boolean display returns nothing",
		"fileName": "common.j",
		"name": "TimerDialogDisplay",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "timerdialog",
			"name": "whichDialog"
		}, {
			"type": "boolean",
			"name": "display"
		}],
		"insertText": "TimerDialogDisplay(whichDialog, display)",
		"documentation": "显示/隐藏 计时器窗口(所有玩家) [R]"
	},
	"IsTimerDialogDisplayed": {
		"original": "native IsTimerDialogDisplayed           takes timerdialog whichDialog returns boolean",
		"fileName": "common.j",
		"name": "IsTimerDialogDisplayed",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "timerdialog",
			"name": "whichDialog"
		}],
		"returnType": "boolean",
		"insertText": "IsTimerDialogDisplayed(whichDialog)",
		"documentation": ""
	},
	"TimerDialogSetRealTimeRemaining": {
		"original": "native TimerDialogSetRealTimeRemaining  takes timerdialog whichDialog, real timeRemaining returns nothing",
		"fileName": "common.j",
		"name": "TimerDialogSetRealTimeRemaining",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "timerdialog",
			"name": "whichDialog"
		}, {
			"type": "real",
			"name": "timeRemaining"
		}],
		"insertText": "TimerDialogSetRealTimeRemaining(whichDialog, timeRemaining)",
		"documentation": ""
	},
	"CreateLeaderboard": {
		"original": "native CreateLeaderboard                takes nothing returns leaderboard",
		"fileName": "common.j",
		"name": "CreateLeaderboard",
		"isConstant": false,
		"isNative": true,
		"returnType": "leaderboard",
		"insertText": "CreateLeaderboard()",
		"documentation": "新建排行榜 [R]"
	},
	"DestroyLeaderboard": {
		"original": "native DestroyLeaderboard               takes leaderboard lb returns nothing",
		"fileName": "common.j",
		"name": "DestroyLeaderboard",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}],
		"insertText": "DestroyLeaderboard(lb)",
		"documentation": ""
	},
	"LeaderboardDisplay": {
		"original": "native LeaderboardDisplay               takes leaderboard lb, boolean show returns nothing",
		"fileName": "common.j",
		"name": "LeaderboardDisplay",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "boolean",
			"name": "show"
		}],
		"insertText": "LeaderboardDisplay(lb, show)",
		"documentation": "显示/隐藏 [R]"
	},
	"IsLeaderboardDisplayed": {
		"original": "native IsLeaderboardDisplayed           takes leaderboard lb returns boolean",
		"fileName": "common.j",
		"name": "IsLeaderboardDisplayed",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}],
		"returnType": "boolean",
		"insertText": "IsLeaderboardDisplayed(lb)",
		"documentation": ""
	},
	"LeaderboardGetItemCount": {
		"original": "native LeaderboardGetItemCount          takes leaderboard lb returns integer",
		"fileName": "common.j",
		"name": "LeaderboardGetItemCount",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}],
		"returnType": "integer",
		"insertText": "LeaderboardGetItemCount(lb)",
		"documentation": "行数"
	},
	"LeaderboardSetSizeByItemCount": {
		"original": "native LeaderboardSetSizeByItemCount    takes leaderboard lb, integer count returns nothing",
		"fileName": "common.j",
		"name": "LeaderboardSetSizeByItemCount",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "integer",
			"name": "count"
		}],
		"insertText": "LeaderboardSetSizeByItemCount(lb, count)",
		"documentation": ""
	},
	"LeaderboardAddItem": {
		"original": "native LeaderboardAddItem               takes leaderboard lb, string label, integer value, player p returns nothing",
		"fileName": "common.j",
		"name": "LeaderboardAddItem",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "string",
			"name": "label"
		}, {
			"type": "integer",
			"name": "value"
		}, {
			"type": "player",
			"name": "p"
		}],
		"insertText": "LeaderboardAddItem(lb, label, value, p)",
		"documentation": ""
	},
	"LeaderboardRemoveItem": {
		"original": "native LeaderboardRemoveItem            takes leaderboard lb, integer index returns nothing",
		"fileName": "common.j",
		"name": "LeaderboardRemoveItem",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "integer",
			"name": "index"
		}],
		"insertText": "LeaderboardRemoveItem(lb, index)",
		"documentation": ""
	},
	"LeaderboardRemovePlayerItem": {
		"original": "native LeaderboardRemovePlayerItem      takes leaderboard lb, player p returns nothing",
		"fileName": "common.j",
		"name": "LeaderboardRemovePlayerItem",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "player",
			"name": "p"
		}],
		"insertText": "LeaderboardRemovePlayerItem(lb, p)",
		"documentation": ""
	},
	"LeaderboardClear": {
		"original": "native LeaderboardClear                 takes leaderboard lb returns nothing",
		"fileName": "common.j",
		"name": "LeaderboardClear",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}],
		"insertText": "LeaderboardClear(lb)",
		"documentation": "清空 [R]"
	},
	"LeaderboardSortItemsByValue": {
		"original": "native LeaderboardSortItemsByValue      takes leaderboard lb, boolean ascending returns nothing",
		"fileName": "common.j",
		"name": "LeaderboardSortItemsByValue",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "boolean",
			"name": "ascending"
		}],
		"insertText": "LeaderboardSortItemsByValue(lb, ascending)",
		"documentation": ""
	},
	"LeaderboardSortItemsByPlayer": {
		"original": "native LeaderboardSortItemsByPlayer     takes leaderboard lb, boolean ascending returns nothing",
		"fileName": "common.j",
		"name": "LeaderboardSortItemsByPlayer",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "boolean",
			"name": "ascending"
		}],
		"insertText": "LeaderboardSortItemsByPlayer(lb, ascending)",
		"documentation": ""
	},
	"LeaderboardSortItemsByLabel": {
		"original": "native LeaderboardSortItemsByLabel      takes leaderboard lb, boolean ascending returns nothing",
		"fileName": "common.j",
		"name": "LeaderboardSortItemsByLabel",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "boolean",
			"name": "ascending"
		}],
		"insertText": "LeaderboardSortItemsByLabel(lb, ascending)",
		"documentation": ""
	},
	"LeaderboardHasPlayerItem": {
		"original": "native LeaderboardHasPlayerItem         takes leaderboard lb, player p returns boolean",
		"fileName": "common.j",
		"name": "LeaderboardHasPlayerItem",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "player",
			"name": "p"
		}],
		"returnType": "boolean",
		"insertText": "LeaderboardHasPlayerItem(lb, p)",
		"documentation": ""
	},
	"LeaderboardGetPlayerIndex": {
		"original": "native LeaderboardGetPlayerIndex        takes leaderboard lb, player p returns integer",
		"fileName": "common.j",
		"name": "LeaderboardGetPlayerIndex",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "player",
			"name": "p"
		}],
		"returnType": "integer",
		"insertText": "LeaderboardGetPlayerIndex(lb, p)",
		"documentation": ""
	},
	"LeaderboardSetLabel": {
		"original": "native LeaderboardSetLabel              takes leaderboard lb, string label returns nothing",
		"fileName": "common.j",
		"name": "LeaderboardSetLabel",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "string",
			"name": "label"
		}],
		"insertText": "LeaderboardSetLabel(lb, label)",
		"documentation": ""
	},
	"LeaderboardGetLabelText": {
		"original": "native LeaderboardGetLabelText          takes leaderboard lb returns string",
		"fileName": "common.j",
		"name": "LeaderboardGetLabelText",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}],
		"returnType": "string",
		"insertText": "LeaderboardGetLabelText(lb)",
		"documentation": ""
	},
	"PlayerSetLeaderboard": {
		"original": "native PlayerSetLeaderboard             takes player toPlayer, leaderboard lb returns nothing",
		"fileName": "common.j",
		"name": "PlayerSetLeaderboard",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "toPlayer"
		}, {
			"type": "leaderboard",
			"name": "lb"
		}],
		"insertText": "PlayerSetLeaderboard(toPlayer, lb)",
		"documentation": "设置玩家使用的排行榜 [R]"
	},
	"PlayerGetLeaderboard": {
		"original": "native PlayerGetLeaderboard             takes player toPlayer returns leaderboard",
		"fileName": "common.j",
		"name": "PlayerGetLeaderboard",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "toPlayer"
		}],
		"returnType": "leaderboard",
		"insertText": "PlayerGetLeaderboard(toPlayer)",
		"documentation": ""
	},
	"LeaderboardSetLabelColor": {
		"original": "native LeaderboardSetLabelColor         takes leaderboard lb, integer red, integer green, integer blue, integer alpha returns nothing",
		"fileName": "common.j",
		"name": "LeaderboardSetLabelColor",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "integer",
			"name": "red"
		}, {
			"type": "integer",
			"name": "green"
		}, {
			"type": "integer",
			"name": "blue"
		}, {
			"type": "integer",
			"name": "alpha"
		}],
		"insertText": "LeaderboardSetLabelColor(lb, red, green, blue, alpha)",
		"documentation": "设置文字颜色 [R]"
	},
	"LeaderboardSetValueColor": {
		"original": "native LeaderboardSetValueColor         takes leaderboard lb, integer red, integer green, integer blue, integer alpha returns nothing",
		"fileName": "common.j",
		"name": "LeaderboardSetValueColor",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "integer",
			"name": "red"
		}, {
			"type": "integer",
			"name": "green"
		}, {
			"type": "integer",
			"name": "blue"
		}, {
			"type": "integer",
			"name": "alpha"
		}],
		"insertText": "LeaderboardSetValueColor(lb, red, green, blue, alpha)",
		"documentation": "设置数值颜色 [R]"
	},
	"LeaderboardSetStyle": {
		"original": "native LeaderboardSetStyle              takes leaderboard lb, boolean showLabel, boolean showNames, boolean showValues, boolean showIcons returns nothing",
		"fileName": "common.j",
		"name": "LeaderboardSetStyle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "boolean",
			"name": "showLabel"
		}, {
			"type": "boolean",
			"name": "showNames"
		}, {
			"type": "boolean",
			"name": "showValues"
		}, {
			"type": "boolean",
			"name": "showIcons"
		}],
		"insertText": "LeaderboardSetStyle(lb, showLabel, showNames, showValues, showIcons)",
		"documentation": ""
	},
	"LeaderboardSetItemValue": {
		"original": "native LeaderboardSetItemValue          takes leaderboard lb, integer whichItem, integer val returns nothing",
		"fileName": "common.j",
		"name": "LeaderboardSetItemValue",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "integer",
			"name": "whichItem"
		}, {
			"type": "integer",
			"name": "val"
		}],
		"insertText": "LeaderboardSetItemValue(lb, whichItem, val)",
		"documentation": ""
	},
	"LeaderboardSetItemLabel": {
		"original": "native LeaderboardSetItemLabel          takes leaderboard lb, integer whichItem, string val returns nothing",
		"fileName": "common.j",
		"name": "LeaderboardSetItemLabel",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "integer",
			"name": "whichItem"
		}, {
			"type": "string",
			"name": "val"
		}],
		"insertText": "LeaderboardSetItemLabel(lb, whichItem, val)",
		"documentation": ""
	},
	"LeaderboardSetItemStyle": {
		"original": "native LeaderboardSetItemStyle          takes leaderboard lb, integer whichItem, boolean showLabel, boolean showValue, boolean showIcon returns nothing",
		"fileName": "common.j",
		"name": "LeaderboardSetItemStyle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "integer",
			"name": "whichItem"
		}, {
			"type": "boolean",
			"name": "showLabel"
		}, {
			"type": "boolean",
			"name": "showValue"
		}, {
			"type": "boolean",
			"name": "showIcon"
		}],
		"insertText": "LeaderboardSetItemStyle(lb, whichItem, showLabel, showValue, showIcon)",
		"documentation": ""
	},
	"LeaderboardSetItemLabelColor": {
		"original": "native LeaderboardSetItemLabelColor     takes leaderboard lb, integer whichItem, integer red, integer green, integer blue, integer alpha returns nothing",
		"fileName": "common.j",
		"name": "LeaderboardSetItemLabelColor",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "integer",
			"name": "whichItem"
		}, {
			"type": "integer",
			"name": "red"
		}, {
			"type": "integer",
			"name": "green"
		}, {
			"type": "integer",
			"name": "blue"
		}, {
			"type": "integer",
			"name": "alpha"
		}],
		"insertText": "LeaderboardSetItemLabelColor(lb, whichItem, red, green, blue, alpha)",
		"documentation": ""
	},
	"LeaderboardSetItemValueColor": {
		"original": "native LeaderboardSetItemValueColor     takes leaderboard lb, integer whichItem, integer red, integer green, integer blue, integer alpha returns nothing",
		"fileName": "common.j",
		"name": "LeaderboardSetItemValueColor",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "leaderboard",
			"name": "lb"
		}, {
			"type": "integer",
			"name": "whichItem"
		}, {
			"type": "integer",
			"name": "red"
		}, {
			"type": "integer",
			"name": "green"
		}, {
			"type": "integer",
			"name": "blue"
		}, {
			"type": "integer",
			"name": "alpha"
		}],
		"insertText": "LeaderboardSetItemValueColor(lb, whichItem, red, green, blue, alpha)",
		"documentation": ""
	},
	"CreateMultiboard": {
		"original": "native CreateMultiboard                 takes nothing returns multiboard",
		"fileName": "common.j",
		"name": "CreateMultiboard",
		"isConstant": false,
		"isNative": true,
		"returnType": "multiboard",
		"insertText": "CreateMultiboard()",
		"documentation": "新建多面板 [R]"
	},
	"DestroyMultiboard": {
		"original": "native DestroyMultiboard                takes multiboard lb returns nothing",
		"fileName": "common.j",
		"name": "DestroyMultiboard",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "multiboard",
			"name": "lb"
		}],
		"insertText": "DestroyMultiboard(lb)",
		"documentation": ""
	},
	"MultiboardDisplay": {
		"original": "native MultiboardDisplay                takes multiboard lb, boolean show returns nothing",
		"fileName": "common.j",
		"name": "MultiboardDisplay",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "multiboard",
			"name": "lb"
		}, {
			"type": "boolean",
			"name": "show"
		}],
		"insertText": "MultiboardDisplay(lb, show)",
		"documentation": "显示/隐藏 [R]"
	},
	"IsMultiboardDisplayed": {
		"original": "native IsMultiboardDisplayed            takes multiboard lb returns boolean",
		"fileName": "common.j",
		"name": "IsMultiboardDisplayed",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "multiboard",
			"name": "lb"
		}],
		"returnType": "boolean",
		"insertText": "IsMultiboardDisplayed(lb)",
		"documentation": "多列面板 是已显示的"
	},
	"MultiboardMinimize": {
		"original": "native MultiboardMinimize               takes multiboard lb, boolean minimize returns nothing",
		"fileName": "common.j",
		"name": "MultiboardMinimize",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "multiboard",
			"name": "lb"
		}, {
			"type": "boolean",
			"name": "minimize"
		}],
		"insertText": "MultiboardMinimize(lb, minimize)",
		"documentation": "最大/最小化 [R]"
	},
	"IsMultiboardMinimized": {
		"original": "native IsMultiboardMinimized            takes multiboard lb returns boolean",
		"fileName": "common.j",
		"name": "IsMultiboardMinimized",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "multiboard",
			"name": "lb"
		}],
		"returnType": "boolean",
		"insertText": "IsMultiboardMinimized(lb)",
		"documentation": "多列面板 是最小化的"
	},
	"MultiboardClear": {
		"original": "native MultiboardClear                  takes multiboard lb returns nothing",
		"fileName": "common.j",
		"name": "MultiboardClear",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "multiboard",
			"name": "lb"
		}],
		"insertText": "MultiboardClear(lb)",
		"documentation": "清除 多列面板"
	},
	"MultiboardSetTitleText": {
		"original": "native MultiboardSetTitleText           takes multiboard lb, string label returns nothing",
		"fileName": "common.j",
		"name": "MultiboardSetTitleText",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "multiboard",
			"name": "lb"
		}, {
			"type": "string",
			"name": "label"
		}],
		"insertText": "MultiboardSetTitleText(lb, label)",
		"documentation": "改变 多列面板 标题"
	},
	"MultiboardGetTitleText": {
		"original": "native MultiboardGetTitleText           takes multiboard lb returns string",
		"fileName": "common.j",
		"name": "MultiboardGetTitleText",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "multiboard",
			"name": "lb"
		}],
		"returnType": "string",
		"insertText": "MultiboardGetTitleText(lb)",
		"documentation": "多列面板 的标题"
	},
	"MultiboardSetTitleTextColor": {
		"original": "native MultiboardSetTitleTextColor      takes multiboard lb, integer red, integer green, integer blue, integer alpha returns nothing",
		"fileName": "common.j",
		"name": "MultiboardSetTitleTextColor",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "multiboard",
			"name": "lb"
		}, {
			"type": "integer",
			"name": "red"
		}, {
			"type": "integer",
			"name": "green"
		}, {
			"type": "integer",
			"name": "blue"
		}, {
			"type": "integer",
			"name": "alpha"
		}],
		"insertText": "MultiboardSetTitleTextColor(lb, red, green, blue, alpha)",
		"documentation": "设置标题颜色 [R]"
	},
	"MultiboardGetRowCount": {
		"original": "native MultiboardGetRowCount            takes multiboard lb returns integer",
		"fileName": "common.j",
		"name": "MultiboardGetRowCount",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "multiboard",
			"name": "lb"
		}],
		"returnType": "integer",
		"insertText": "MultiboardGetRowCount(lb)",
		"documentation": "获得多列面板 的行数"
	},
	"MultiboardGetColumnCount": {
		"original": "native MultiboardGetColumnCount         takes multiboard lb returns integer",
		"fileName": "common.j",
		"name": "MultiboardGetColumnCount",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "multiboard",
			"name": "lb"
		}],
		"returnType": "integer",
		"insertText": "MultiboardGetColumnCount(lb)",
		"documentation": "获得多列面板 的列数"
	},
	"MultiboardSetColumnCount": {
		"original": "native MultiboardSetColumnCount         takes multiboard lb, integer count returns nothing",
		"fileName": "common.j",
		"name": "MultiboardSetColumnCount",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "multiboard",
			"name": "lb"
		}, {
			"type": "integer",
			"name": "count"
		}],
		"insertText": "MultiboardSetColumnCount(lb, count)",
		"documentation": "改变多列面板\u0027列数\u0027"
	},
	"MultiboardSetRowCount": {
		"original": "native MultiboardSetRowCount            takes multiboard lb, integer count returns nothing",
		"fileName": "common.j",
		"name": "MultiboardSetRowCount",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "multiboard",
			"name": "lb"
		}, {
			"type": "integer",
			"name": "count"
		}],
		"insertText": "MultiboardSetRowCount(lb, count)",
		"documentation": "改变多列面板\u0027行数\u0027"
	},
	"MultiboardSetItemsStyle": {
		"original": "native MultiboardSetItemsStyle          takes multiboard lb, boolean showValues, boolean showIcons returns nothing",
		"fileName": "common.j",
		"name": "MultiboardSetItemsStyle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "multiboard",
			"name": "lb"
		}, {
			"type": "boolean",
			"name": "showValues"
		}, {
			"type": "boolean",
			"name": "showIcons"
		}],
		"insertText": "MultiboardSetItemsStyle(lb, showValues, showIcons)",
		"documentation": "设置所有项目显示风格 [R]"
	},
	"MultiboardSetItemsValue": {
		"original": "native MultiboardSetItemsValue          takes multiboard lb, string value returns nothing",
		"fileName": "common.j",
		"name": "MultiboardSetItemsValue",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "multiboard",
			"name": "lb"
		}, {
			"type": "string",
			"name": "value"
		}],
		"insertText": "MultiboardSetItemsValue(lb, value)",
		"documentation": "设置所有项目文本 [R]"
	},
	"MultiboardSetItemsValueColor": {
		"original": "native MultiboardSetItemsValueColor     takes multiboard lb, integer red, integer green, integer blue, integer alpha returns nothing",
		"fileName": "common.j",
		"name": "MultiboardSetItemsValueColor",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "multiboard",
			"name": "lb"
		}, {
			"type": "integer",
			"name": "red"
		}, {
			"type": "integer",
			"name": "green"
		}, {
			"type": "integer",
			"name": "blue"
		}, {
			"type": "integer",
			"name": "alpha"
		}],
		"insertText": "MultiboardSetItemsValueColor(lb, red, green, blue, alpha)",
		"documentation": "设置所有项目颜色 [R]"
	},
	"MultiboardSetItemsWidth": {
		"original": "native MultiboardSetItemsWidth          takes multiboard lb, real width returns nothing",
		"fileName": "common.j",
		"name": "MultiboardSetItemsWidth",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "multiboard",
			"name": "lb"
		}, {
			"type": "real",
			"name": "width"
		}],
		"insertText": "MultiboardSetItemsWidth(lb, width)",
		"documentation": "设置所有项目宽度 [R]"
	},
	"MultiboardSetItemsIcon": {
		"original": "native MultiboardSetItemsIcon           takes multiboard lb, string iconPath returns nothing",
		"fileName": "common.j",
		"name": "MultiboardSetItemsIcon",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "multiboard",
			"name": "lb"
		}, {
			"type": "string",
			"name": "iconPath"
		}],
		"insertText": "MultiboardSetItemsIcon(lb, iconPath)",
		"documentation": "设置所有项目图标 [R]"
	},
	"MultiboardGetItem": {
		"original": "native MultiboardGetItem                takes multiboard lb, integer row, integer column returns multiboarditem",
		"fileName": "common.j",
		"name": "MultiboardGetItem",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "multiboard",
			"name": "lb"
		}, {
			"type": "integer",
			"name": "row"
		}, {
			"type": "integer",
			"name": "column"
		}],
		"returnType": "multiboarditem",
		"insertText": "MultiboardGetItem(lb, row, column)",
		"documentation": "多面板项目 [R]"
	},
	"MultiboardReleaseItem": {
		"original": "native MultiboardReleaseItem            takes multiboarditem mbi returns nothing",
		"fileName": "common.j",
		"name": "MultiboardReleaseItem",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "multiboarditem",
			"name": "mbi"
		}],
		"insertText": "MultiboardReleaseItem(mbi)",
		"documentation": "删除多面板项目 [R]"
	},
	"MultiboardSetItemStyle": {
		"original": "native MultiboardSetItemStyle           takes multiboarditem mbi, boolean showValue, boolean showIcon returns nothing",
		"fileName": "common.j",
		"name": "MultiboardSetItemStyle",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "multiboarditem",
			"name": "mbi"
		}, {
			"type": "boolean",
			"name": "showValue"
		}, {
			"type": "boolean",
			"name": "showIcon"
		}],
		"insertText": "MultiboardSetItemStyle(mbi, showValue, showIcon)",
		"documentation": "设置指定项目显示风格 [R]"
	},
	"MultiboardSetItemValue": {
		"original": "native MultiboardSetItemValue           takes multiboarditem mbi, string val returns nothing",
		"fileName": "common.j",
		"name": "MultiboardSetItemValue",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "multiboarditem",
			"name": "mbi"
		}, {
			"type": "string",
			"name": "val"
		}],
		"insertText": "MultiboardSetItemValue(mbi, val)",
		"documentation": "设置指定项目文本 [R]"
	},
	"MultiboardSetItemValueColor": {
		"original": "native MultiboardSetItemValueColor      takes multiboarditem mbi, integer red, integer green, integer blue, integer alpha returns nothing",
		"fileName": "common.j",
		"name": "MultiboardSetItemValueColor",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "multiboarditem",
			"name": "mbi"
		}, {
			"type": "integer",
			"name": "red"
		}, {
			"type": "integer",
			"name": "green"
		}, {
			"type": "integer",
			"name": "blue"
		}, {
			"type": "integer",
			"name": "alpha"
		}],
		"insertText": "MultiboardSetItemValueColor(mbi, red, green, blue, alpha)",
		"documentation": "设置指定项目颜色 [R]"
	},
	"MultiboardSetItemWidth": {
		"original": "native MultiboardSetItemWidth           takes multiboarditem mbi, real width returns nothing",
		"fileName": "common.j",
		"name": "MultiboardSetItemWidth",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "multiboarditem",
			"name": "mbi"
		}, {
			"type": "real",
			"name": "width"
		}],
		"insertText": "MultiboardSetItemWidth(mbi, width)",
		"documentation": "设置指定项目宽度 [R]"
	},
	"MultiboardSetItemIcon": {
		"original": "native MultiboardSetItemIcon            takes multiboarditem mbi, string iconFileName returns nothing",
		"fileName": "common.j",
		"name": "MultiboardSetItemIcon",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "multiboarditem",
			"name": "mbi"
		}, {
			"type": "string",
			"name": "iconFileName"
		}],
		"insertText": "MultiboardSetItemIcon(mbi, iconFileName)",
		"documentation": "设置指定项目图标 [R]"
	},
	"MultiboardSuppressDisplay": {
		"original": "native MultiboardSuppressDisplay        takes boolean flag returns nothing",
		"fileName": "common.j",
		"name": "MultiboardSuppressDisplay",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "MultiboardSuppressDisplay(flag)",
		"documentation": "显示/隐藏多面板模式 [R]"
	},
	"SetCameraPosition": {
		"original": "native SetCameraPosition            takes real x, real y returns nothing",
		"fileName": "common.j",
		"name": "SetCameraPosition",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"insertText": "SetCameraPosition(x, y)",
		"documentation": ""
	},
	"SetCameraQuickPosition": {
		"original": "native SetCameraQuickPosition       takes real x, real y returns nothing",
		"fileName": "common.j",
		"name": "SetCameraQuickPosition",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"insertText": "SetCameraQuickPosition(x, y)",
		"documentation": "设置空格键转向点(所有玩家) [R]"
	},
	"SetCameraBounds": {
		"original": "native SetCameraBounds              takes real x1, real y1, real x2, real y2, real x3, real y3, real x4, real y4 returns nothing",
		"fileName": "common.j",
		"name": "SetCameraBounds",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x1"
		}, {
			"type": "real",
			"name": "y1"
		}, {
			"type": "real",
			"name": "x2"
		}, {
			"type": "real",
			"name": "y2"
		}, {
			"type": "real",
			"name": "x3"
		}, {
			"type": "real",
			"name": "y3"
		}, {
			"type": "real",
			"name": "x4"
		}, {
			"type": "real",
			"name": "y4"
		}],
		"insertText": "SetCameraBounds(x1, y1, x2, y2, x3, y3, x4, y4)",
		"documentation": "设置可用镜头区域(所有玩家) [R]"
	},
	"StopCamera": {
		"original": "native StopCamera                   takes nothing returns nothing",
		"fileName": "common.j",
		"name": "StopCamera",
		"isConstant": false,
		"isNative": true,
		"insertText": "StopCamera()",
		"documentation": "停止播放镜头(所有玩家) [R]"
	},
	"ResetToGameCamera": {
		"original": "native ResetToGameCamera            takes real duration returns nothing",
		"fileName": "common.j",
		"name": "ResetToGameCamera",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "duration"
		}],
		"insertText": "ResetToGameCamera(duration)",
		"documentation": "重置游戏镜头(所有玩家) [R]"
	},
	"PanCameraTo": {
		"original": "native PanCameraTo                  takes real x, real y returns nothing",
		"fileName": "common.j",
		"name": "PanCameraTo",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"insertText": "PanCameraTo(x, y)",
		"documentation": ""
	},
	"PanCameraToTimed": {
		"original": "native PanCameraToTimed             takes real x, real y, real duration returns nothing",
		"fileName": "common.j",
		"name": "PanCameraToTimed",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "PanCameraToTimed(x, y, duration)",
		"documentation": "平移镜头(所有玩家)(限时) [R]"
	},
	"PanCameraToWithZ": {
		"original": "native PanCameraToWithZ             takes real x, real y, real zOffsetDest returns nothing",
		"fileName": "common.j",
		"name": "PanCameraToWithZ",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "zOffsetDest"
		}],
		"insertText": "PanCameraToWithZ(x, y, zOffsetDest)",
		"documentation": ""
	},
	"PanCameraToTimedWithZ": {
		"original": "native PanCameraToTimedWithZ        takes real x, real y, real zOffsetDest, real duration returns nothing",
		"fileName": "common.j",
		"name": "PanCameraToTimedWithZ",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "zOffsetDest"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "PanCameraToTimedWithZ(x, y, zOffsetDest, duration)",
		"documentation": "指定高度平移镜头(所有玩家)(限时) [R]"
	},
	"SetCinematicCamera": {
		"original": "native SetCinematicCamera           takes string cameraModelFile returns nothing",
		"fileName": "common.j",
		"name": "SetCinematicCamera",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "cameraModelFile"
		}],
		"insertText": "SetCinematicCamera(cameraModelFile)",
		"documentation": "播放电影镜头(所有玩家) [R]"
	},
	"SetCameraRotateMode": {
		"original": "native SetCameraRotateMode          takes real x, real y, real radiansToSweep, real duration returns nothing",
		"fileName": "common.j",
		"name": "SetCameraRotateMode",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "radiansToSweep"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "SetCameraRotateMode(x, y, radiansToSweep, duration)",
		"documentation": "指定点旋转镜头(所有玩家)(弧度)(限时) [R]"
	},
	"SetCameraField": {
		"original": "native SetCameraField               takes camerafield whichField, real value, real duration returns nothing",
		"fileName": "common.j",
		"name": "SetCameraField",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "camerafield",
			"name": "whichField"
		}, {
			"type": "real",
			"name": "value"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "SetCameraField(whichField, value, duration)",
		"documentation": "设置镜头属性(所有玩家)(限时) [R]"
	},
	"AdjustCameraField": {
		"original": "native AdjustCameraField            takes camerafield whichField, real offset, real duration returns nothing",
		"fileName": "common.j",
		"name": "AdjustCameraField",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "camerafield",
			"name": "whichField"
		}, {
			"type": "real",
			"name": "offset"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "AdjustCameraField(whichField, offset, duration)",
		"documentation": ""
	},
	"SetCameraTargetController": {
		"original": "native SetCameraTargetController    takes unit whichUnit, real xoffset, real yoffset, boolean inheritOrientation returns nothing",
		"fileName": "common.j",
		"name": "SetCameraTargetController",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "xoffset"
		}, {
			"type": "real",
			"name": "yoffset"
		}, {
			"type": "boolean",
			"name": "inheritOrientation"
		}],
		"insertText": "SetCameraTargetController(whichUnit, xoffset, yoffset, inheritOrientation)",
		"documentation": "锁定镜头到单位(所有玩家) [R]"
	},
	"SetCameraOrientController": {
		"original": "native SetCameraOrientController    takes unit whichUnit, real xoffset, real yoffset returns nothing",
		"fileName": "common.j",
		"name": "SetCameraOrientController",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "real",
			"name": "xoffset"
		}, {
			"type": "real",
			"name": "yoffset"
		}],
		"insertText": "SetCameraOrientController(whichUnit, xoffset, yoffset)",
		"documentation": "锁定镜头到单位(固定镜头源)(所有玩家) [R]"
	},
	"CreateCameraSetup": {
		"original": "native CreateCameraSetup                    takes nothing returns camerasetup",
		"fileName": "common.j",
		"name": "CreateCameraSetup",
		"isConstant": false,
		"isNative": true,
		"returnType": "camerasetup",
		"insertText": "CreateCameraSetup()",
		"documentation": ""
	},
	"CameraSetupSetField": {
		"original": "native CameraSetupSetField                  takes camerasetup whichSetup, camerafield whichField, real value, real duration returns nothing",
		"fileName": "common.j",
		"name": "CameraSetupSetField",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "camerasetup",
			"name": "whichSetup"
		}, {
			"type": "camerafield",
			"name": "whichField"
		}, {
			"type": "real",
			"name": "value"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "CameraSetupSetField(whichSetup, whichField, value, duration)",
		"documentation": ""
	},
	"CameraSetupGetField": {
		"original": "native CameraSetupGetField                  takes camerasetup whichSetup, camerafield whichField returns real",
		"fileName": "common.j",
		"name": "CameraSetupGetField",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "camerasetup",
			"name": "whichSetup"
		}, {
			"type": "camerafield",
			"name": "whichField"
		}],
		"returnType": "real",
		"insertText": "CameraSetupGetField(whichSetup, whichField)",
		"documentation": "镜头属性(指定镜头) [R]"
	},
	"CameraSetupSetDestPosition": {
		"original": "native CameraSetupSetDestPosition           takes camerasetup whichSetup, real x, real y, real duration returns nothing",
		"fileName": "common.j",
		"name": "CameraSetupSetDestPosition",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "camerasetup",
			"name": "whichSetup"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "CameraSetupSetDestPosition(whichSetup, x, y, duration)",
		"documentation": ""
	},
	"CameraSetupGetDestPositionLoc": {
		"original": "native CameraSetupGetDestPositionLoc        takes camerasetup whichSetup returns location",
		"fileName": "common.j",
		"name": "CameraSetupGetDestPositionLoc",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "camerasetup",
			"name": "whichSetup"
		}],
		"returnType": "location",
		"insertText": "CameraSetupGetDestPositionLoc(whichSetup)",
		"documentation": "摄象机的目标"
	},
	"CameraSetupGetDestPositionX": {
		"original": "native CameraSetupGetDestPositionX          takes camerasetup whichSetup returns real",
		"fileName": "common.j",
		"name": "CameraSetupGetDestPositionX",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "camerasetup",
			"name": "whichSetup"
		}],
		"returnType": "real",
		"insertText": "CameraSetupGetDestPositionX(whichSetup)",
		"documentation": ""
	},
	"CameraSetupGetDestPositionY": {
		"original": "native CameraSetupGetDestPositionY          takes camerasetup whichSetup returns real",
		"fileName": "common.j",
		"name": "CameraSetupGetDestPositionY",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "camerasetup",
			"name": "whichSetup"
		}],
		"returnType": "real",
		"insertText": "CameraSetupGetDestPositionY(whichSetup)",
		"documentation": ""
	},
	"CameraSetupApply": {
		"original": "native CameraSetupApply                     takes camerasetup whichSetup, boolean doPan, boolean panTimed returns nothing",
		"fileName": "common.j",
		"name": "CameraSetupApply",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "camerasetup",
			"name": "whichSetup"
		}, {
			"type": "boolean",
			"name": "doPan"
		}, {
			"type": "boolean",
			"name": "panTimed"
		}],
		"insertText": "CameraSetupApply(whichSetup, doPan, panTimed)",
		"documentation": ""
	},
	"CameraSetupApplyWithZ": {
		"original": "native CameraSetupApplyWithZ                takes camerasetup whichSetup, real zDestOffset returns nothing",
		"fileName": "common.j",
		"name": "CameraSetupApplyWithZ",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "camerasetup",
			"name": "whichSetup"
		}, {
			"type": "real",
			"name": "zDestOffset"
		}],
		"insertText": "CameraSetupApplyWithZ(whichSetup, zDestOffset)",
		"documentation": ""
	},
	"CameraSetupApplyForceDuration": {
		"original": "native CameraSetupApplyForceDuration        takes camerasetup whichSetup, boolean doPan, real forceDuration returns nothing",
		"fileName": "common.j",
		"name": "CameraSetupApplyForceDuration",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "camerasetup",
			"name": "whichSetup"
		}, {
			"type": "boolean",
			"name": "doPan"
		}, {
			"type": "real",
			"name": "forceDuration"
		}],
		"insertText": "CameraSetupApplyForceDuration(whichSetup, doPan, forceDuration)",
		"documentation": "应用镜头(所有玩家)(限时) [R]"
	},
	"CameraSetupApplyForceDurationWithZ": {
		"original": "native CameraSetupApplyForceDurationWithZ   takes camerasetup whichSetup, real zDestOffset, real forceDuration returns nothing",
		"fileName": "common.j",
		"name": "CameraSetupApplyForceDurationWithZ",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "camerasetup",
			"name": "whichSetup"
		}, {
			"type": "real",
			"name": "zDestOffset"
		}, {
			"type": "real",
			"name": "forceDuration"
		}],
		"insertText": "CameraSetupApplyForceDurationWithZ(whichSetup, zDestOffset, forceDuration)",
		"documentation": ""
	},
	"CameraSetTargetNoise": {
		"original": "native CameraSetTargetNoise             takes real mag, real velocity returns nothing",
		"fileName": "common.j",
		"name": "CameraSetTargetNoise",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "mag"
		}, {
			"type": "real",
			"name": "velocity"
		}],
		"insertText": "CameraSetTargetNoise(mag, velocity)",
		"documentation": ""
	},
	"CameraSetSourceNoise": {
		"original": "native CameraSetSourceNoise             takes real mag, real velocity returns nothing",
		"fileName": "common.j",
		"name": "CameraSetSourceNoise",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "mag"
		}, {
			"type": "real",
			"name": "velocity"
		}],
		"insertText": "CameraSetSourceNoise(mag, velocity)",
		"documentation": ""
	},
	"CameraSetTargetNoiseEx": {
		"original": "native CameraSetTargetNoiseEx           takes real mag, real velocity, boolean vertOnly returns nothing",
		"fileName": "common.j",
		"name": "CameraSetTargetNoiseEx",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "mag"
		}, {
			"type": "real",
			"name": "velocity"
		}, {
			"type": "boolean",
			"name": "vertOnly"
		}],
		"insertText": "CameraSetTargetNoiseEx(mag, velocity, vertOnly)",
		"documentation": "摇晃镜头目标(所有玩家) [R]"
	},
	"CameraSetSourceNoiseEx": {
		"original": "native CameraSetSourceNoiseEx           takes real mag, real velocity, boolean vertOnly returns nothing",
		"fileName": "common.j",
		"name": "CameraSetSourceNoiseEx",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "mag"
		}, {
			"type": "real",
			"name": "velocity"
		}, {
			"type": "boolean",
			"name": "vertOnly"
		}],
		"insertText": "CameraSetSourceNoiseEx(mag, velocity, vertOnly)",
		"documentation": "摇晃镜头源(所有玩家) [R]"
	},
	"CameraSetSmoothingFactor": {
		"original": "native CameraSetSmoothingFactor         takes real factor returns nothing",
		"fileName": "common.j",
		"name": "CameraSetSmoothingFactor",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "factor"
		}],
		"insertText": "CameraSetSmoothingFactor(factor)",
		"documentation": ""
	},
	"SetCineFilterTexture": {
		"original": "native SetCineFilterTexture             takes string filename returns nothing",
		"fileName": "common.j",
		"name": "SetCineFilterTexture",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "filename"
		}],
		"insertText": "SetCineFilterTexture(filename)",
		"documentation": ""
	},
	"SetCineFilterBlendMode": {
		"original": "native SetCineFilterBlendMode           takes blendmode whichMode returns nothing",
		"fileName": "common.j",
		"name": "SetCineFilterBlendMode",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "blendmode",
			"name": "whichMode"
		}],
		"insertText": "SetCineFilterBlendMode(whichMode)",
		"documentation": ""
	},
	"SetCineFilterTexMapFlags": {
		"original": "native SetCineFilterTexMapFlags         takes texmapflags whichFlags returns nothing",
		"fileName": "common.j",
		"name": "SetCineFilterTexMapFlags",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "texmapflags",
			"name": "whichFlags"
		}],
		"insertText": "SetCineFilterTexMapFlags(whichFlags)",
		"documentation": ""
	},
	"SetCineFilterStartUV": {
		"original": "native SetCineFilterStartUV             takes real minu, real minv, real maxu, real maxv returns nothing",
		"fileName": "common.j",
		"name": "SetCineFilterStartUV",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "minu"
		}, {
			"type": "real",
			"name": "minv"
		}, {
			"type": "real",
			"name": "maxu"
		}, {
			"type": "real",
			"name": "maxv"
		}],
		"insertText": "SetCineFilterStartUV(minu, minv, maxu, maxv)",
		"documentation": ""
	},
	"SetCineFilterEndUV": {
		"original": "native SetCineFilterEndUV               takes real minu, real minv, real maxu, real maxv returns nothing",
		"fileName": "common.j",
		"name": "SetCineFilterEndUV",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "minu"
		}, {
			"type": "real",
			"name": "minv"
		}, {
			"type": "real",
			"name": "maxu"
		}, {
			"type": "real",
			"name": "maxv"
		}],
		"insertText": "SetCineFilterEndUV(minu, minv, maxu, maxv)",
		"documentation": ""
	},
	"SetCineFilterStartColor": {
		"original": "native SetCineFilterStartColor          takes integer red, integer green, integer blue, integer alpha returns nothing",
		"fileName": "common.j",
		"name": "SetCineFilterStartColor",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "red"
		}, {
			"type": "integer",
			"name": "green"
		}, {
			"type": "integer",
			"name": "blue"
		}, {
			"type": "integer",
			"name": "alpha"
		}],
		"insertText": "SetCineFilterStartColor(red, green, blue, alpha)",
		"documentation": ""
	},
	"SetCineFilterEndColor": {
		"original": "native SetCineFilterEndColor            takes integer red, integer green, integer blue, integer alpha returns nothing",
		"fileName": "common.j",
		"name": "SetCineFilterEndColor",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "red"
		}, {
			"type": "integer",
			"name": "green"
		}, {
			"type": "integer",
			"name": "blue"
		}, {
			"type": "integer",
			"name": "alpha"
		}],
		"insertText": "SetCineFilterEndColor(red, green, blue, alpha)",
		"documentation": ""
	},
	"SetCineFilterDuration": {
		"original": "native SetCineFilterDuration            takes real duration returns nothing",
		"fileName": "common.j",
		"name": "SetCineFilterDuration",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "duration"
		}],
		"insertText": "SetCineFilterDuration(duration)",
		"documentation": ""
	},
	"DisplayCineFilter": {
		"original": "native DisplayCineFilter                takes boolean flag returns nothing",
		"fileName": "common.j",
		"name": "DisplayCineFilter",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "DisplayCineFilter(flag)",
		"documentation": ""
	},
	"IsCineFilterDisplayed": {
		"original": "native IsCineFilterDisplayed            takes nothing returns boolean",
		"fileName": "common.j",
		"name": "IsCineFilterDisplayed",
		"isConstant": false,
		"isNative": true,
		"returnType": "boolean",
		"insertText": "IsCineFilterDisplayed()",
		"documentation": ""
	},
	"SetCinematicScene": {
		"original": "native SetCinematicScene                takes integer portraitUnitId, playercolor color, string speakerTitle, string text, real sceneDuration, real voiceoverDuration returns nothing",
		"fileName": "common.j",
		"name": "SetCinematicScene",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "portraitUnitId"
		}, {
			"type": "playercolor",
			"name": "color"
		}, {
			"type": "string",
			"name": "speakerTitle"
		}, {
			"type": "string",
			"name": "text"
		}, {
			"type": "real",
			"name": "sceneDuration"
		}, {
			"type": "real",
			"name": "voiceoverDuration"
		}],
		"insertText": "SetCinematicScene(portraitUnitId, color, speakerTitle, text, sceneDuration, voiceoverDuration)",
		"documentation": ""
	},
	"EndCinematicScene": {
		"original": "native EndCinematicScene                takes nothing returns nothing",
		"fileName": "common.j",
		"name": "EndCinematicScene",
		"isConstant": false,
		"isNative": true,
		"insertText": "EndCinematicScene()",
		"documentation": ""
	},
	"ForceCinematicSubtitles": {
		"original": "native ForceCinematicSubtitles          takes boolean flag returns nothing",
		"fileName": "common.j",
		"name": "ForceCinematicSubtitles",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "ForceCinematicSubtitles(flag)",
		"documentation": ""
	},
	"GetCameraMargin": {
		"original": "native GetCameraMargin                  takes integer whichMargin returns real",
		"fileName": "common.j",
		"name": "GetCameraMargin",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "whichMargin"
		}],
		"returnType": "real",
		"insertText": "GetCameraMargin(whichMargin)",
		"documentation": ""
	},
	"GetCameraBoundMinX": {
		"original": "constant native GetCameraBoundMinX          takes nothing returns real",
		"fileName": "common.j",
		"name": "GetCameraBoundMinX",
		"isConstant": true,
		"isNative": true,
		"returnType": "real",
		"insertText": "GetCameraBoundMinX()",
		"documentation": ""
	},
	"GetCameraBoundMinY": {
		"original": "constant native GetCameraBoundMinY          takes nothing returns real",
		"fileName": "common.j",
		"name": "GetCameraBoundMinY",
		"isConstant": true,
		"isNative": true,
		"returnType": "real",
		"insertText": "GetCameraBoundMinY()",
		"documentation": ""
	},
	"GetCameraBoundMaxX": {
		"original": "constant native GetCameraBoundMaxX          takes nothing returns real",
		"fileName": "common.j",
		"name": "GetCameraBoundMaxX",
		"isConstant": true,
		"isNative": true,
		"returnType": "real",
		"insertText": "GetCameraBoundMaxX()",
		"documentation": ""
	},
	"GetCameraBoundMaxY": {
		"original": "constant native GetCameraBoundMaxY          takes nothing returns real",
		"fileName": "common.j",
		"name": "GetCameraBoundMaxY",
		"isConstant": true,
		"isNative": true,
		"returnType": "real",
		"insertText": "GetCameraBoundMaxY()",
		"documentation": ""
	},
	"GetCameraField": {
		"original": "constant native GetCameraField              takes camerafield whichField returns real",
		"fileName": "common.j",
		"name": "GetCameraField",
		"isConstant": true,
		"isNative": true,
		"args": [{
			"type": "camerafield",
			"name": "whichField"
		}],
		"returnType": "real",
		"insertText": "GetCameraField(whichField)",
		"documentation": "当前摄象机的数值"
	},
	"GetCameraTargetPositionX": {
		"original": "constant native GetCameraTargetPositionX    takes nothing returns real",
		"fileName": "common.j",
		"name": "GetCameraTargetPositionX",
		"isConstant": true,
		"isNative": true,
		"returnType": "real",
		"insertText": "GetCameraTargetPositionX()",
		"documentation": "当前摄象机的目标的 X 坐标"
	},
	"GetCameraTargetPositionY": {
		"original": "constant native GetCameraTargetPositionY    takes nothing returns real",
		"fileName": "common.j",
		"name": "GetCameraTargetPositionY",
		"isConstant": true,
		"isNative": true,
		"returnType": "real",
		"insertText": "GetCameraTargetPositionY()",
		"documentation": "当前摄象机的目标的 Y 坐标"
	},
	"GetCameraTargetPositionZ": {
		"original": "constant native GetCameraTargetPositionZ    takes nothing returns real",
		"fileName": "common.j",
		"name": "GetCameraTargetPositionZ",
		"isConstant": true,
		"isNative": true,
		"returnType": "real",
		"insertText": "GetCameraTargetPositionZ()",
		"documentation": "当前摄象机的目标的 Z 坐标"
	},
	"GetCameraTargetPositionLoc": {
		"original": "constant native GetCameraTargetPositionLoc  takes nothing returns location",
		"fileName": "common.j",
		"name": "GetCameraTargetPositionLoc",
		"isConstant": true,
		"isNative": true,
		"returnType": "location",
		"insertText": "GetCameraTargetPositionLoc()",
		"documentation": "当前摄象机的目标"
	},
	"GetCameraEyePositionX": {
		"original": "constant native GetCameraEyePositionX       takes nothing returns real",
		"fileName": "common.j",
		"name": "GetCameraEyePositionX",
		"isConstant": true,
		"isNative": true,
		"returnType": "real",
		"insertText": "GetCameraEyePositionX()",
		"documentation": "当前摄象机的位置的 X 坐标"
	},
	"GetCameraEyePositionY": {
		"original": "constant native GetCameraEyePositionY       takes nothing returns real",
		"fileName": "common.j",
		"name": "GetCameraEyePositionY",
		"isConstant": true,
		"isNative": true,
		"returnType": "real",
		"insertText": "GetCameraEyePositionY()",
		"documentation": "当前摄象机的位置的 Y 坐标"
	},
	"GetCameraEyePositionZ": {
		"original": "constant native GetCameraEyePositionZ       takes nothing returns real",
		"fileName": "common.j",
		"name": "GetCameraEyePositionZ",
		"isConstant": true,
		"isNative": true,
		"returnType": "real",
		"insertText": "GetCameraEyePositionZ()",
		"documentation": "当前摄象机的位置的 Z 坐标"
	},
	"GetCameraEyePositionLoc": {
		"original": "constant native GetCameraEyePositionLoc     takes nothing returns location",
		"fileName": "common.j",
		"name": "GetCameraEyePositionLoc",
		"isConstant": true,
		"isNative": true,
		"returnType": "location",
		"insertText": "GetCameraEyePositionLoc()",
		"documentation": "当前照相机的位置"
	},
	"NewSoundEnvironment": {
		"original": "native NewSoundEnvironment          takes string environmentName returns nothing",
		"fileName": "common.j",
		"name": "NewSoundEnvironment",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "environmentName"
		}],
		"insertText": "NewSoundEnvironment(environmentName)",
		"documentation": ""
	},
	"CreateSound": {
		"original": "native CreateSound                  takes string fileName, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate, string eaxSetting returns sound",
		"fileName": "common.j",
		"name": "CreateSound",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "fileName"
		}, {
			"type": "boolean",
			"name": "looping"
		}, {
			"type": "boolean",
			"name": "is3D"
		}, {
			"type": "boolean",
			"name": "stopwhenoutofrange"
		}, {
			"type": "integer",
			"name": "fadeInRate"
		}, {
			"type": "integer",
			"name": "fadeOutRate"
		}, {
			"type": "string",
			"name": "eaxSetting"
		}],
		"returnType": "sound",
		"insertText": "CreateSound(fileName, looping, is3D, stopwhenoutofrange, fadeInRate, fadeOutRate, eaxSetting)",
		"documentation": ""
	},
	"CreateSoundFilenameWithLabel": {
		"original": "native CreateSoundFilenameWithLabel takes string fileName, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate, string SLKEntryName returns sound",
		"fileName": "common.j",
		"name": "CreateSoundFilenameWithLabel",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "fileName"
		}, {
			"type": "boolean",
			"name": "looping"
		}, {
			"type": "boolean",
			"name": "is3D"
		}, {
			"type": "boolean",
			"name": "stopwhenoutofrange"
		}, {
			"type": "integer",
			"name": "fadeInRate"
		}, {
			"type": "integer",
			"name": "fadeOutRate"
		}, {
			"type": "string",
			"name": "SLKEntryName"
		}],
		"returnType": "sound",
		"insertText": "CreateSoundFilenameWithLabel(fileName, looping, is3D, stopwhenoutofrange, fadeInRate, fadeOutRate, SLKEntryName)",
		"documentation": ""
	},
	"CreateSoundFromLabel": {
		"original": "native CreateSoundFromLabel         takes string soundLabel, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate returns sound",
		"fileName": "common.j",
		"name": "CreateSoundFromLabel",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "soundLabel"
		}, {
			"type": "boolean",
			"name": "looping"
		}, {
			"type": "boolean",
			"name": "is3D"
		}, {
			"type": "boolean",
			"name": "stopwhenoutofrange"
		}, {
			"type": "integer",
			"name": "fadeInRate"
		}, {
			"type": "integer",
			"name": "fadeOutRate"
		}],
		"returnType": "sound",
		"insertText": "CreateSoundFromLabel(soundLabel, looping, is3D, stopwhenoutofrange, fadeInRate, fadeOutRate)",
		"documentation": ""
	},
	"CreateMIDISound": {
		"original": "native CreateMIDISound              takes string soundLabel, integer fadeInRate, integer fadeOutRate returns sound",
		"fileName": "common.j",
		"name": "CreateMIDISound",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "soundLabel"
		}, {
			"type": "integer",
			"name": "fadeInRate"
		}, {
			"type": "integer",
			"name": "fadeOutRate"
		}],
		"returnType": "sound",
		"insertText": "CreateMIDISound(soundLabel, fadeInRate, fadeOutRate)",
		"documentation": ""
	},
	"SetSoundParamsFromLabel": {
		"original": "native SetSoundParamsFromLabel      takes sound soundHandle, string soundLabel returns nothing",
		"fileName": "common.j",
		"name": "SetSoundParamsFromLabel",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "string",
			"name": "soundLabel"
		}],
		"insertText": "SetSoundParamsFromLabel(soundHandle, soundLabel)",
		"documentation": ""
	},
	"SetSoundDistanceCutoff": {
		"original": "native SetSoundDistanceCutoff       takes sound soundHandle, real cutoff returns nothing",
		"fileName": "common.j",
		"name": "SetSoundDistanceCutoff",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "real",
			"name": "cutoff"
		}],
		"insertText": "SetSoundDistanceCutoff(soundHandle, cutoff)",
		"documentation": ""
	},
	"SetSoundChannel": {
		"original": "native SetSoundChannel              takes sound soundHandle, integer channel returns nothing",
		"fileName": "common.j",
		"name": "SetSoundChannel",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "integer",
			"name": "channel"
		}],
		"insertText": "SetSoundChannel(soundHandle, channel)",
		"documentation": ""
	},
	"SetSoundVolume": {
		"original": "native SetSoundVolume               takes sound soundHandle, integer volume returns nothing",
		"fileName": "common.j",
		"name": "SetSoundVolume",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "integer",
			"name": "volume"
		}],
		"insertText": "SetSoundVolume(soundHandle, volume)",
		"documentation": "设置音效音量 [R]"
	},
	"SetSoundPitch": {
		"original": "native SetSoundPitch                takes sound soundHandle, real pitch returns nothing",
		"fileName": "common.j",
		"name": "SetSoundPitch",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "real",
			"name": "pitch"
		}],
		"insertText": "SetSoundPitch(soundHandle, pitch)",
		"documentation": ""
	},
	"SetSoundPlayPosition": {
		"original": "native SetSoundPlayPosition         takes sound soundHandle, integer millisecs returns nothing",
		"fileName": "common.j",
		"name": "SetSoundPlayPosition",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "integer",
			"name": "millisecs"
		}],
		"insertText": "SetSoundPlayPosition(soundHandle, millisecs)",
		"documentation": "设置音效播放时间点 [R]"
	},
	"SetSoundDistances": {
		"original": "native SetSoundDistances            takes sound soundHandle, real minDist, real maxDist returns nothing",
		"fileName": "common.j",
		"name": "SetSoundDistances",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "real",
			"name": "minDist"
		}, {
			"type": "real",
			"name": "maxDist"
		}],
		"insertText": "SetSoundDistances(soundHandle, minDist, maxDist)",
		"documentation": "设置3D声音距离"
	},
	"SetSoundConeAngles": {
		"original": "native SetSoundConeAngles           takes sound soundHandle, real inside, real outside, integer outsideVolume returns nothing",
		"fileName": "common.j",
		"name": "SetSoundConeAngles",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "real",
			"name": "inside"
		}, {
			"type": "real",
			"name": "outside"
		}, {
			"type": "integer",
			"name": "outsideVolume"
		}],
		"insertText": "SetSoundConeAngles(soundHandle, inside, outside, outsideVolume)",
		"documentation": ""
	},
	"SetSoundConeOrientation": {
		"original": "native SetSoundConeOrientation      takes sound soundHandle, real x, real y, real z returns nothing",
		"fileName": "common.j",
		"name": "SetSoundConeOrientation",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "z"
		}],
		"insertText": "SetSoundConeOrientation(soundHandle, x, y, z)",
		"documentation": ""
	},
	"SetSoundPosition": {
		"original": "native SetSoundPosition             takes sound soundHandle, real x, real y, real z returns nothing",
		"fileName": "common.j",
		"name": "SetSoundPosition",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "z"
		}],
		"insertText": "SetSoundPosition(soundHandle, x, y, z)",
		"documentation": "设置3D音效位置(指定坐标) [R]"
	},
	"SetSoundVelocity": {
		"original": "native SetSoundVelocity             takes sound soundHandle, real x, real y, real z returns nothing",
		"fileName": "common.j",
		"name": "SetSoundVelocity",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "z"
		}],
		"insertText": "SetSoundVelocity(soundHandle, x, y, z)",
		"documentation": ""
	},
	"AttachSoundToUnit": {
		"original": "native AttachSoundToUnit            takes sound soundHandle, unit whichUnit returns nothing",
		"fileName": "common.j",
		"name": "AttachSoundToUnit",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "unit",
			"name": "whichUnit"
		}],
		"insertText": "AttachSoundToUnit(soundHandle, whichUnit)",
		"documentation": ""
	},
	"StartSound": {
		"original": "native StartSound                   takes sound soundHandle returns nothing",
		"fileName": "common.j",
		"name": "StartSound",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}],
		"insertText": "StartSound(soundHandle)",
		"documentation": ""
	},
	"StopSound": {
		"original": "native StopSound                    takes sound soundHandle, boolean killWhenDone, boolean fadeOut returns nothing",
		"fileName": "common.j",
		"name": "StopSound",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "boolean",
			"name": "killWhenDone"
		}, {
			"type": "boolean",
			"name": "fadeOut"
		}],
		"insertText": "StopSound(soundHandle, killWhenDone, fadeOut)",
		"documentation": ""
	},
	"KillSoundWhenDone": {
		"original": "native KillSoundWhenDone            takes sound soundHandle returns nothing",
		"fileName": "common.j",
		"name": "KillSoundWhenDone",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}],
		"insertText": "KillSoundWhenDone(soundHandle)",
		"documentation": ""
	},
	"SetMapMusic": {
		"original": "native SetMapMusic                  takes string musicName, boolean random, integer index returns nothing",
		"fileName": "common.j",
		"name": "SetMapMusic",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "musicName"
		}, {
			"type": "boolean",
			"name": "random"
		}, {
			"type": "integer",
			"name": "index"
		}],
		"insertText": "SetMapMusic(musicName, random, index)",
		"documentation": "设置背景音乐列表 [R]"
	},
	"ClearMapMusic": {
		"original": "native ClearMapMusic                takes nothing returns nothing",
		"fileName": "common.j",
		"name": "ClearMapMusic",
		"isConstant": false,
		"isNative": true,
		"insertText": "ClearMapMusic()",
		"documentation": ""
	},
	"PlayMusic": {
		"original": "native PlayMusic                    takes string musicName returns nothing",
		"fileName": "common.j",
		"name": "PlayMusic",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "musicName"
		}],
		"insertText": "PlayMusic(musicName)",
		"documentation": ""
	},
	"PlayMusicEx": {
		"original": "native PlayMusicEx                  takes string musicName, integer frommsecs, integer fadeinmsecs returns nothing",
		"fileName": "common.j",
		"name": "PlayMusicEx",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "musicName"
		}, {
			"type": "integer",
			"name": "frommsecs"
		}, {
			"type": "integer",
			"name": "fadeinmsecs"
		}],
		"insertText": "PlayMusicEx(musicName, frommsecs, fadeinmsecs)",
		"documentation": ""
	},
	"StopMusic": {
		"original": "native StopMusic                    takes boolean fadeOut returns nothing",
		"fileName": "common.j",
		"name": "StopMusic",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "fadeOut"
		}],
		"insertText": "StopMusic(fadeOut)",
		"documentation": ""
	},
	"ResumeMusic": {
		"original": "native ResumeMusic                  takes nothing returns nothing",
		"fileName": "common.j",
		"name": "ResumeMusic",
		"isConstant": false,
		"isNative": true,
		"insertText": "ResumeMusic()",
		"documentation": ""
	},
	"PlayThematicMusic": {
		"original": "native PlayThematicMusic            takes string musicFileName returns nothing",
		"fileName": "common.j",
		"name": "PlayThematicMusic",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "musicFileName"
		}],
		"insertText": "PlayThematicMusic(musicFileName)",
		"documentation": "播放主题音乐 [C]"
	},
	"PlayThematicMusicEx": {
		"original": "native PlayThematicMusicEx          takes string musicFileName, integer frommsecs returns nothing",
		"fileName": "common.j",
		"name": "PlayThematicMusicEx",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "musicFileName"
		}, {
			"type": "integer",
			"name": "frommsecs"
		}],
		"insertText": "PlayThematicMusicEx(musicFileName, frommsecs)",
		"documentation": "跳播主题音乐 [R]"
	},
	"EndThematicMusic": {
		"original": "native EndThematicMusic             takes nothing returns nothing",
		"fileName": "common.j",
		"name": "EndThematicMusic",
		"isConstant": false,
		"isNative": true,
		"insertText": "EndThematicMusic()",
		"documentation": "停止主题音乐[C]"
	},
	"SetMusicVolume": {
		"original": "native SetMusicVolume               takes integer volume returns nothing",
		"fileName": "common.j",
		"name": "SetMusicVolume",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "volume"
		}],
		"insertText": "SetMusicVolume(volume)",
		"documentation": "设置背景音乐音量 [R]"
	},
	"SetMusicPlayPosition": {
		"original": "native SetMusicPlayPosition         takes integer millisecs returns nothing",
		"fileName": "common.j",
		"name": "SetMusicPlayPosition",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "millisecs"
		}],
		"insertText": "SetMusicPlayPosition(millisecs)",
		"documentation": "设置背景音乐播放时间点 [R]"
	},
	"SetThematicMusicPlayPosition": {
		"original": "native SetThematicMusicPlayPosition takes integer millisecs returns nothing",
		"fileName": "common.j",
		"name": "SetThematicMusicPlayPosition",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "millisecs"
		}],
		"insertText": "SetThematicMusicPlayPosition(millisecs)",
		"documentation": "设置主题音乐播放时间点 [R]"
	},
	"SetSoundDuration": {
		"original": "native SetSoundDuration             takes sound soundHandle, integer duration returns nothing",
		"fileName": "common.j",
		"name": "SetSoundDuration",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "integer",
			"name": "duration"
		}],
		"insertText": "SetSoundDuration(soundHandle, duration)",
		"documentation": ""
	},
	"GetSoundDuration": {
		"original": "native GetSoundDuration             takes sound soundHandle returns integer",
		"fileName": "common.j",
		"name": "GetSoundDuration",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}],
		"returnType": "integer",
		"insertText": "GetSoundDuration(soundHandle)",
		"documentation": ""
	},
	"GetSoundFileDuration": {
		"original": "native GetSoundFileDuration         takes string musicFileName returns integer",
		"fileName": "common.j",
		"name": "GetSoundFileDuration",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "musicFileName"
		}],
		"returnType": "integer",
		"insertText": "GetSoundFileDuration(musicFileName)",
		"documentation": ""
	},
	"VolumeGroupSetVolume": {
		"original": "native VolumeGroupSetVolume         takes volumegroup vgroup, real scale returns nothing",
		"fileName": "common.j",
		"name": "VolumeGroupSetVolume",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "volumegroup",
			"name": "vgroup"
		}, {
			"type": "real",
			"name": "scale"
		}],
		"insertText": "VolumeGroupSetVolume(vgroup, scale)",
		"documentation": "设置多通道音量 [R]"
	},
	"VolumeGroupReset": {
		"original": "native VolumeGroupReset             takes nothing returns nothing",
		"fileName": "common.j",
		"name": "VolumeGroupReset",
		"isConstant": false,
		"isNative": true,
		"insertText": "VolumeGroupReset()",
		"documentation": ""
	},
	"GetSoundIsPlaying": {
		"original": "native GetSoundIsPlaying            takes sound soundHandle returns boolean",
		"fileName": "common.j",
		"name": "GetSoundIsPlaying",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}],
		"returnType": "boolean",
		"insertText": "GetSoundIsPlaying(soundHandle)",
		"documentation": ""
	},
	"GetSoundIsLoading": {
		"original": "native GetSoundIsLoading            takes sound soundHandle returns boolean",
		"fileName": "common.j",
		"name": "GetSoundIsLoading",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}],
		"returnType": "boolean",
		"insertText": "GetSoundIsLoading(soundHandle)",
		"documentation": ""
	},
	"RegisterStackedSound": {
		"original": "native RegisterStackedSound         takes sound soundHandle, boolean byPosition, real rectwidth, real rectheight returns nothing",
		"fileName": "common.j",
		"name": "RegisterStackedSound",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "boolean",
			"name": "byPosition"
		}, {
			"type": "real",
			"name": "rectwidth"
		}, {
			"type": "real",
			"name": "rectheight"
		}],
		"insertText": "RegisterStackedSound(soundHandle, byPosition, rectwidth, rectheight)",
		"documentation": ""
	},
	"UnregisterStackedSound": {
		"original": "native UnregisterStackedSound       takes sound soundHandle, boolean byPosition, real rectwidth, real rectheight returns nothing",
		"fileName": "common.j",
		"name": "UnregisterStackedSound",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "sound",
			"name": "soundHandle"
		}, {
			"type": "boolean",
			"name": "byPosition"
		}, {
			"type": "real",
			"name": "rectwidth"
		}, {
			"type": "real",
			"name": "rectheight"
		}],
		"insertText": "UnregisterStackedSound(soundHandle, byPosition, rectwidth, rectheight)",
		"documentation": ""
	},
	"AddWeatherEffect": {
		"original": "native AddWeatherEffect             takes rect where, integer effectID returns weathereffect",
		"fileName": "common.j",
		"name": "AddWeatherEffect",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "rect",
			"name": "where"
		}, {
			"type": "integer",
			"name": "effectID"
		}],
		"returnType": "weathereffect",
		"insertText": "AddWeatherEffect(where, effectID)",
		"documentation": "新建天气效果 [R]"
	},
	"RemoveWeatherEffect": {
		"original": "native RemoveWeatherEffect          takes weathereffect whichEffect returns nothing",
		"fileName": "common.j",
		"name": "RemoveWeatherEffect",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "weathereffect",
			"name": "whichEffect"
		}],
		"insertText": "RemoveWeatherEffect(whichEffect)",
		"documentation": ""
	},
	"EnableWeatherEffect": {
		"original": "native EnableWeatherEffect          takes weathereffect whichEffect, boolean enable returns nothing",
		"fileName": "common.j",
		"name": "EnableWeatherEffect",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "weathereffect",
			"name": "whichEffect"
		}, {
			"type": "boolean",
			"name": "enable"
		}],
		"insertText": "EnableWeatherEffect(whichEffect, enable)",
		"documentation": "打开/关闭天气效果"
	},
	"TerrainDeformCrater": {
		"original": "native TerrainDeformCrater          takes real x, real y, real radius, real depth, integer duration, boolean permanent returns terraindeformation",
		"fileName": "common.j",
		"name": "TerrainDeformCrater",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "radius"
		}, {
			"type": "real",
			"name": "depth"
		}, {
			"type": "integer",
			"name": "duration"
		}, {
			"type": "boolean",
			"name": "permanent"
		}],
		"returnType": "terraindeformation",
		"insertText": "TerrainDeformCrater(x, y, radius, depth, duration, permanent)",
		"documentation": "新建地形变化:弹坑 [R]"
	},
	"TerrainDeformRipple": {
		"original": "native TerrainDeformRipple          takes real x, real y, real radius, real depth, integer duration, integer count, real spaceWaves, real timeWaves, real radiusStartPct, boolean limitNeg returns terraindeformation",
		"fileName": "common.j",
		"name": "TerrainDeformRipple",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "radius"
		}, {
			"type": "real",
			"name": "depth"
		}, {
			"type": "integer",
			"name": "duration"
		}, {
			"type": "integer",
			"name": "count"
		}, {
			"type": "real",
			"name": "spaceWaves"
		}, {
			"type": "real",
			"name": "timeWaves"
		}, {
			"type": "real",
			"name": "radiusStartPct"
		}, {
			"type": "boolean",
			"name": "limitNeg"
		}],
		"returnType": "terraindeformation",
		"insertText": "TerrainDeformRipple(x, y, radius, depth, duration, count, spaceWaves, timeWaves, radiusStartPct, limitNeg)",
		"documentation": "新建地形变化:波纹 [R]"
	},
	"TerrainDeformWave": {
		"original": "native TerrainDeformWave            takes real x, real y, real dirX, real dirY, real distance, real speed, real radius, real depth, integer trailTime, integer count returns terraindeformation",
		"fileName": "common.j",
		"name": "TerrainDeformWave",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "dirX"
		}, {
			"type": "real",
			"name": "dirY"
		}, {
			"type": "real",
			"name": "distance"
		}, {
			"type": "real",
			"name": "speed"
		}, {
			"type": "real",
			"name": "radius"
		}, {
			"type": "real",
			"name": "depth"
		}, {
			"type": "integer",
			"name": "trailTime"
		}, {
			"type": "integer",
			"name": "count"
		}],
		"returnType": "terraindeformation",
		"insertText": "TerrainDeformWave(x, y, dirX, dirY, distance, speed, radius, depth, trailTime, count)",
		"documentation": "新建地形变化:冲击波 [R]"
	},
	"TerrainDeformRandom": {
		"original": "native TerrainDeformRandom          takes real x, real y, real radius, real minDelta, real maxDelta, integer duration, integer updateInterval returns terraindeformation",
		"fileName": "common.j",
		"name": "TerrainDeformRandom",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "radius"
		}, {
			"type": "real",
			"name": "minDelta"
		}, {
			"type": "real",
			"name": "maxDelta"
		}, {
			"type": "integer",
			"name": "duration"
		}, {
			"type": "integer",
			"name": "updateInterval"
		}],
		"returnType": "terraindeformation",
		"insertText": "TerrainDeformRandom(x, y, radius, minDelta, maxDelta, duration, updateInterval)",
		"documentation": "新建地形变化:随机 [R]"
	},
	"TerrainDeformStop": {
		"original": "native TerrainDeformStop            takes terraindeformation deformation, integer duration returns nothing",
		"fileName": "common.j",
		"name": "TerrainDeformStop",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "terraindeformation",
			"name": "deformation"
		}, {
			"type": "integer",
			"name": "duration"
		}],
		"insertText": "TerrainDeformStop(deformation, duration)",
		"documentation": "停止地形变化 [R]"
	},
	"TerrainDeformStopAll": {
		"original": "native TerrainDeformStopAll         takes nothing returns nothing",
		"fileName": "common.j",
		"name": "TerrainDeformStopAll",
		"isConstant": false,
		"isNative": true,
		"insertText": "TerrainDeformStopAll()",
		"documentation": "停止所有地域变形"
	},
	"AddSpecialEffect": {
		"original": "native AddSpecialEffect             takes string modelName, real x, real y returns effect",
		"fileName": "common.j",
		"name": "AddSpecialEffect",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "modelName"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"returnType": "effect",
		"insertText": "AddSpecialEffect(modelName, x, y)",
		"documentation": "新建特效(创建到坐标) [R]"
	},
	"AddSpecialEffectLoc": {
		"original": "native AddSpecialEffectLoc          takes string modelName, location where returns effect",
		"fileName": "common.j",
		"name": "AddSpecialEffectLoc",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "modelName"
		}, {
			"type": "location",
			"name": "where"
		}],
		"returnType": "effect",
		"insertText": "AddSpecialEffectLoc(modelName, where)",
		"documentation": "新建特效(创建到点) [R]"
	},
	"AddSpecialEffectTarget": {
		"original": "native AddSpecialEffectTarget       takes string modelName, widget targetWidget, string attachPointName returns effect",
		"fileName": "common.j",
		"name": "AddSpecialEffectTarget",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "modelName"
		}, {
			"type": "widget",
			"name": "targetWidget"
		}, {
			"type": "string",
			"name": "attachPointName"
		}],
		"returnType": "effect",
		"insertText": "AddSpecialEffectTarget(modelName, targetWidget, attachPointName)",
		"documentation": "新建特效(创建到单位) [R]"
	},
	"DestroyEffect": {
		"original": "native DestroyEffect                takes effect whichEffect returns nothing",
		"fileName": "common.j",
		"name": "DestroyEffect",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "effect",
			"name": "whichEffect"
		}],
		"insertText": "DestroyEffect(whichEffect)",
		"documentation": ""
	},
	"AddSpellEffect": {
		"original": "native AddSpellEffect               takes string abilityString, effecttype t, real x, real y returns effect",
		"fileName": "common.j",
		"name": "AddSpellEffect",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "abilityString"
		}, {
			"type": "effecttype",
			"name": "t"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"returnType": "effect",
		"insertText": "AddSpellEffect(abilityString, t, x, y)",
		"documentation": ""
	},
	"AddSpellEffectLoc": {
		"original": "native AddSpellEffectLoc            takes string abilityString, effecttype t,location where returns effect",
		"fileName": "common.j",
		"name": "AddSpellEffectLoc",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "abilityString"
		}, {
			"type": "effecttype",
			"name": "t"
		}, {
			"type": "location",
			"name": "where"
		}],
		"returnType": "effect",
		"insertText": "AddSpellEffectLoc(abilityString, t, where)",
		"documentation": ""
	},
	"AddSpellEffectById": {
		"original": "native AddSpellEffectById           takes integer abilityId, effecttype t,real x, real y returns effect",
		"fileName": "common.j",
		"name": "AddSpellEffectById",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "abilityId"
		}, {
			"type": "effecttype",
			"name": "t"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"returnType": "effect",
		"insertText": "AddSpellEffectById(abilityId, t, x, y)",
		"documentation": "新建特效(指定技能，创建到坐标) [R]"
	},
	"AddSpellEffectByIdLoc": {
		"original": "native AddSpellEffectByIdLoc        takes integer abilityId, effecttype t,location where returns effect",
		"fileName": "common.j",
		"name": "AddSpellEffectByIdLoc",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "abilityId"
		}, {
			"type": "effecttype",
			"name": "t"
		}, {
			"type": "location",
			"name": "where"
		}],
		"returnType": "effect",
		"insertText": "AddSpellEffectByIdLoc(abilityId, t, where)",
		"documentation": "新建特效(指定技能，创建到点) [R]"
	},
	"AddSpellEffectTarget": {
		"original": "native AddSpellEffectTarget         takes string modelName, effecttype t, widget targetWidget, string attachPoint returns effect",
		"fileName": "common.j",
		"name": "AddSpellEffectTarget",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "modelName"
		}, {
			"type": "effecttype",
			"name": "t"
		}, {
			"type": "widget",
			"name": "targetWidget"
		}, {
			"type": "string",
			"name": "attachPoint"
		}],
		"returnType": "effect",
		"insertText": "AddSpellEffectTarget(modelName, t, targetWidget, attachPoint)",
		"documentation": ""
	},
	"AddSpellEffectTargetById": {
		"original": "native AddSpellEffectTargetById     takes integer abilityId, effecttype t, widget targetWidget, string attachPoint returns effect",
		"fileName": "common.j",
		"name": "AddSpellEffectTargetById",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "abilityId"
		}, {
			"type": "effecttype",
			"name": "t"
		}, {
			"type": "widget",
			"name": "targetWidget"
		}, {
			"type": "string",
			"name": "attachPoint"
		}],
		"returnType": "effect",
		"insertText": "AddSpellEffectTargetById(abilityId, t, targetWidget, attachPoint)",
		"documentation": "新建特效(指定技能，创建到单位) [R]"
	},
	"AddLightning": {
		"original": "native AddLightning                 takes string codeName, boolean checkVisibility, real x1, real y1, real x2, real y2 returns lightning",
		"fileName": "common.j",
		"name": "AddLightning",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "codeName"
		}, {
			"type": "boolean",
			"name": "checkVisibility"
		}, {
			"type": "real",
			"name": "x1"
		}, {
			"type": "real",
			"name": "y1"
		}, {
			"type": "real",
			"name": "x2"
		}, {
			"type": "real",
			"name": "y2"
		}],
		"returnType": "lightning",
		"insertText": "AddLightning(codeName, checkVisibility, x1, y1, x2, y2)",
		"documentation": "新建闪电效果 [R]"
	},
	"AddLightningEx": {
		"original": "native AddLightningEx               takes string codeName, boolean checkVisibility, real x1, real y1, real z1, real x2, real y2, real z2 returns lightning",
		"fileName": "common.j",
		"name": "AddLightningEx",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "codeName"
		}, {
			"type": "boolean",
			"name": "checkVisibility"
		}, {
			"type": "real",
			"name": "x1"
		}, {
			"type": "real",
			"name": "y1"
		}, {
			"type": "real",
			"name": "z1"
		}, {
			"type": "real",
			"name": "x2"
		}, {
			"type": "real",
			"name": "y2"
		}, {
			"type": "real",
			"name": "z2"
		}],
		"returnType": "lightning",
		"insertText": "AddLightningEx(codeName, checkVisibility, x1, y1, z1, x2, y2, z2)",
		"documentation": "新建闪电效果(指定Z轴) [R]"
	},
	"DestroyLightning": {
		"original": "native DestroyLightning             takes lightning whichBolt returns boolean",
		"fileName": "common.j",
		"name": "DestroyLightning",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "lightning",
			"name": "whichBolt"
		}],
		"returnType": "boolean",
		"insertText": "DestroyLightning(whichBolt)",
		"documentation": ""
	},
	"MoveLightning": {
		"original": "native MoveLightning                takes lightning whichBolt, boolean checkVisibility, real x1, real y1, real x2, real y2 returns boolean",
		"fileName": "common.j",
		"name": "MoveLightning",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "lightning",
			"name": "whichBolt"
		}, {
			"type": "boolean",
			"name": "checkVisibility"
		}, {
			"type": "real",
			"name": "x1"
		}, {
			"type": "real",
			"name": "y1"
		}, {
			"type": "real",
			"name": "x2"
		}, {
			"type": "real",
			"name": "y2"
		}],
		"returnType": "boolean",
		"insertText": "MoveLightning(whichBolt, checkVisibility, x1, y1, x2, y2)",
		"documentation": ""
	},
	"MoveLightningEx": {
		"original": "native MoveLightningEx              takes lightning whichBolt, boolean checkVisibility, real x1, real y1, real z1, real x2, real y2, real z2 returns boolean",
		"fileName": "common.j",
		"name": "MoveLightningEx",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "lightning",
			"name": "whichBolt"
		}, {
			"type": "boolean",
			"name": "checkVisibility"
		}, {
			"type": "real",
			"name": "x1"
		}, {
			"type": "real",
			"name": "y1"
		}, {
			"type": "real",
			"name": "z1"
		}, {
			"type": "real",
			"name": "x2"
		}, {
			"type": "real",
			"name": "y2"
		}, {
			"type": "real",
			"name": "z2"
		}],
		"returnType": "boolean",
		"insertText": "MoveLightningEx(whichBolt, checkVisibility, x1, y1, z1, x2, y2, z2)",
		"documentation": "移动闪电效果(指定坐标) [R]"
	},
	"GetLightningColorA": {
		"original": "native GetLightningColorA           takes lightning whichBolt returns real",
		"fileName": "common.j",
		"name": "GetLightningColorA",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "lightning",
			"name": "whichBolt"
		}],
		"returnType": "real",
		"insertText": "GetLightningColorA(whichBolt)",
		"documentation": ""
	},
	"GetLightningColorR": {
		"original": "native GetLightningColorR           takes lightning whichBolt returns real",
		"fileName": "common.j",
		"name": "GetLightningColorR",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "lightning",
			"name": "whichBolt"
		}],
		"returnType": "real",
		"insertText": "GetLightningColorR(whichBolt)",
		"documentation": ""
	},
	"GetLightningColorG": {
		"original": "native GetLightningColorG           takes lightning whichBolt returns real",
		"fileName": "common.j",
		"name": "GetLightningColorG",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "lightning",
			"name": "whichBolt"
		}],
		"returnType": "real",
		"insertText": "GetLightningColorG(whichBolt)",
		"documentation": ""
	},
	"GetLightningColorB": {
		"original": "native GetLightningColorB           takes lightning whichBolt returns real",
		"fileName": "common.j",
		"name": "GetLightningColorB",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "lightning",
			"name": "whichBolt"
		}],
		"returnType": "real",
		"insertText": "GetLightningColorB(whichBolt)",
		"documentation": ""
	},
	"SetLightningColor": {
		"original": "native SetLightningColor            takes lightning whichBolt, real r, real g, real b, real a returns boolean",
		"fileName": "common.j",
		"name": "SetLightningColor",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "lightning",
			"name": "whichBolt"
		}, {
			"type": "real",
			"name": "r"
		}, {
			"type": "real",
			"name": "g"
		}, {
			"type": "real",
			"name": "b"
		}, {
			"type": "real",
			"name": "a"
		}],
		"returnType": "boolean",
		"insertText": "SetLightningColor(whichBolt, r, g, b, a)",
		"documentation": ""
	},
	"GetAbilityEffect": {
		"original": "native GetAbilityEffect             takes string abilityString, effecttype t, integer index returns string",
		"fileName": "common.j",
		"name": "GetAbilityEffect",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "abilityString"
		}, {
			"type": "effecttype",
			"name": "t"
		}, {
			"type": "integer",
			"name": "index"
		}],
		"returnType": "string",
		"insertText": "GetAbilityEffect(abilityString, t, index)",
		"documentation": ""
	},
	"GetAbilityEffectById": {
		"original": "native GetAbilityEffectById         takes integer abilityId, effecttype t, integer index returns string",
		"fileName": "common.j",
		"name": "GetAbilityEffectById",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "abilityId"
		}, {
			"type": "effecttype",
			"name": "t"
		}, {
			"type": "integer",
			"name": "index"
		}],
		"returnType": "string",
		"insertText": "GetAbilityEffectById(abilityId, t, index)",
		"documentation": ""
	},
	"GetAbilitySound": {
		"original": "native GetAbilitySound              takes string abilityString, soundtype t returns string",
		"fileName": "common.j",
		"name": "GetAbilitySound",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "abilityString"
		}, {
			"type": "soundtype",
			"name": "t"
		}],
		"returnType": "string",
		"insertText": "GetAbilitySound(abilityString, t)",
		"documentation": ""
	},
	"GetAbilitySoundById": {
		"original": "native GetAbilitySoundById          takes integer abilityId, soundtype t returns string",
		"fileName": "common.j",
		"name": "GetAbilitySoundById",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "abilityId"
		}, {
			"type": "soundtype",
			"name": "t"
		}],
		"returnType": "string",
		"insertText": "GetAbilitySoundById(abilityId, t)",
		"documentation": ""
	},
	"GetTerrainCliffLevel": {
		"original": "native GetTerrainCliffLevel         takes real x, real y returns integer",
		"fileName": "common.j",
		"name": "GetTerrainCliffLevel",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"returnType": "integer",
		"insertText": "GetTerrainCliffLevel(x, y)",
		"documentation": "地形悬崖高度(指定坐标) [R]"
	},
	"SetWaterBaseColor": {
		"original": "native SetWaterBaseColor            takes integer red, integer green, integer blue, integer alpha returns nothing",
		"fileName": "common.j",
		"name": "SetWaterBaseColor",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "red"
		}, {
			"type": "integer",
			"name": "green"
		}, {
			"type": "integer",
			"name": "blue"
		}, {
			"type": "integer",
			"name": "alpha"
		}],
		"insertText": "SetWaterBaseColor(red, green, blue, alpha)",
		"documentation": "设置水颜色 [R]"
	},
	"SetWaterDeforms": {
		"original": "native SetWaterDeforms              takes boolean val returns nothing",
		"fileName": "common.j",
		"name": "SetWaterDeforms",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "boolean",
			"name": "val"
		}],
		"insertText": "SetWaterDeforms(val)",
		"documentation": "设置 水变形 开/关"
	},
	"GetTerrainType": {
		"original": "native GetTerrainType               takes real x, real y returns integer",
		"fileName": "common.j",
		"name": "GetTerrainType",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"returnType": "integer",
		"insertText": "GetTerrainType(x, y)",
		"documentation": "指定坐标地形 [R]"
	},
	"GetTerrainVariance": {
		"original": "native GetTerrainVariance           takes real x, real y returns integer",
		"fileName": "common.j",
		"name": "GetTerrainVariance",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"returnType": "integer",
		"insertText": "GetTerrainVariance(x, y)",
		"documentation": "地形样式(指定坐标) [R]"
	},
	"SetTerrainType": {
		"original": "native SetTerrainType               takes real x, real y, integer terrainType, integer variation, integer area, integer shape returns nothing",
		"fileName": "common.j",
		"name": "SetTerrainType",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "integer",
			"name": "terrainType"
		}, {
			"type": "integer",
			"name": "variation"
		}, {
			"type": "integer",
			"name": "area"
		}, {
			"type": "integer",
			"name": "shape"
		}],
		"insertText": "SetTerrainType(x, y, terrainType, variation, area, shape)",
		"documentation": "改变地形类型(指定坐标) [R]"
	},
	"IsTerrainPathable": {
		"original": "native IsTerrainPathable            takes real x, real y, pathingtype t returns boolean",
		"fileName": "common.j",
		"name": "IsTerrainPathable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "pathingtype",
			"name": "t"
		}],
		"returnType": "boolean",
		"insertText": "IsTerrainPathable(x, y, t)",
		"documentation": "地形通行状态关闭(指定坐标) [R]"
	},
	"SetTerrainPathable": {
		"original": "native SetTerrainPathable           takes real x, real y, pathingtype t, boolean flag returns nothing",
		"fileName": "common.j",
		"name": "SetTerrainPathable",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "pathingtype",
			"name": "t"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "SetTerrainPathable(x, y, t, flag)",
		"documentation": "设置地形通行状态(指定坐标) [R]"
	},
	"CreateImage": {
		"original": "native CreateImage                  takes string file, real sizeX, real sizeY, real sizeZ, real posX, real posY, real posZ, real originX, real originY, real originZ, integer imageType returns image",
		"fileName": "common.j",
		"name": "CreateImage",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "file"
		}, {
			"type": "real",
			"name": "sizeX"
		}, {
			"type": "real",
			"name": "sizeY"
		}, {
			"type": "real",
			"name": "sizeZ"
		}, {
			"type": "real",
			"name": "posX"
		}, {
			"type": "real",
			"name": "posY"
		}, {
			"type": "real",
			"name": "posZ"
		}, {
			"type": "real",
			"name": "originX"
		}, {
			"type": "real",
			"name": "originY"
		}, {
			"type": "real",
			"name": "originZ"
		}, {
			"type": "integer",
			"name": "imageType"
		}],
		"returnType": "image",
		"insertText": "CreateImage(file, sizeX, sizeY, sizeZ, posX, posY, posZ, originX, originY, originZ, imageType)",
		"documentation": "新建图像 [R]"
	},
	"DestroyImage": {
		"original": "native DestroyImage                 takes image whichImage returns nothing",
		"fileName": "common.j",
		"name": "DestroyImage",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "image",
			"name": "whichImage"
		}],
		"insertText": "DestroyImage(whichImage)",
		"documentation": "删除图像"
	},
	"ShowImage": {
		"original": "native ShowImage                    takes image whichImage, boolean flag returns nothing",
		"fileName": "common.j",
		"name": "ShowImage",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "image",
			"name": "whichImage"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "ShowImage(whichImage, flag)",
		"documentation": "显示/隐藏 [R]"
	},
	"SetImageConstantHeight": {
		"original": "native SetImageConstantHeight       takes image whichImage, boolean flag, real height returns nothing",
		"fileName": "common.j",
		"name": "SetImageConstantHeight",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "image",
			"name": "whichImage"
		}, {
			"type": "boolean",
			"name": "flag"
		}, {
			"type": "real",
			"name": "height"
		}],
		"insertText": "SetImageConstantHeight(whichImage, flag, height)",
		"documentation": "改变图像高度"
	},
	"SetImagePosition": {
		"original": "native SetImagePosition             takes image whichImage, real x, real y, real z returns nothing",
		"fileName": "common.j",
		"name": "SetImagePosition",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "image",
			"name": "whichImage"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "z"
		}],
		"insertText": "SetImagePosition(whichImage, x, y, z)",
		"documentation": "改变图像位置(指定坐标) [R]"
	},
	"SetImageColor": {
		"original": "native SetImageColor                takes image whichImage, integer red, integer green, integer blue, integer alpha returns nothing",
		"fileName": "common.j",
		"name": "SetImageColor",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "image",
			"name": "whichImage"
		}, {
			"type": "integer",
			"name": "red"
		}, {
			"type": "integer",
			"name": "green"
		}, {
			"type": "integer",
			"name": "blue"
		}, {
			"type": "integer",
			"name": "alpha"
		}],
		"insertText": "SetImageColor(whichImage, red, green, blue, alpha)",
		"documentation": "改变图像颜色 [R]"
	},
	"SetImageRender": {
		"original": "native SetImageRender               takes image whichImage, boolean flag returns nothing",
		"fileName": "common.j",
		"name": "SetImageRender",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "image",
			"name": "whichImage"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "SetImageRender(whichImage, flag)",
		"documentation": "改变图像着色状态"
	},
	"SetImageRenderAlways": {
		"original": "native SetImageRenderAlways         takes image whichImage, boolean flag returns nothing",
		"fileName": "common.j",
		"name": "SetImageRenderAlways",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "image",
			"name": "whichImage"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "SetImageRenderAlways(whichImage, flag)",
		"documentation": "改变图像永久着色状态"
	},
	"SetImageAboveWater": {
		"original": "native SetImageAboveWater           takes image whichImage, boolean flag, boolean useWaterAlpha returns nothing",
		"fileName": "common.j",
		"name": "SetImageAboveWater",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "image",
			"name": "whichImage"
		}, {
			"type": "boolean",
			"name": "flag"
		}, {
			"type": "boolean",
			"name": "useWaterAlpha"
		}],
		"insertText": "SetImageAboveWater(whichImage, flag, useWaterAlpha)",
		"documentation": "改变图像水上状态"
	},
	"SetImageType": {
		"original": "native SetImageType                 takes image whichImage, integer imageType returns nothing",
		"fileName": "common.j",
		"name": "SetImageType",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "image",
			"name": "whichImage"
		}, {
			"type": "integer",
			"name": "imageType"
		}],
		"insertText": "SetImageType(whichImage, imageType)",
		"documentation": "改变图像类型"
	},
	"CreateUbersplat": {
		"original": "native CreateUbersplat              takes real x, real y, string name, integer red, integer green, integer blue, integer alpha, boolean forcePaused, boolean noBirthTime returns ubersplat",
		"fileName": "common.j",
		"name": "CreateUbersplat",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "string",
			"name": "name"
		}, {
			"type": "integer",
			"name": "red"
		}, {
			"type": "integer",
			"name": "green"
		}, {
			"type": "integer",
			"name": "blue"
		}, {
			"type": "integer",
			"name": "alpha"
		}, {
			"type": "boolean",
			"name": "forcePaused"
		}, {
			"type": "boolean",
			"name": "noBirthTime"
		}],
		"returnType": "ubersplat",
		"insertText": "CreateUbersplat(x, y, name, red, green, blue, alpha, forcePaused, noBirthTime)",
		"documentation": "新建地面纹理变化 [R]"
	},
	"DestroyUbersplat": {
		"original": "native DestroyUbersplat             takes ubersplat whichSplat returns nothing",
		"fileName": "common.j",
		"name": "DestroyUbersplat",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "ubersplat",
			"name": "whichSplat"
		}],
		"insertText": "DestroyUbersplat(whichSplat)",
		"documentation": "删除地面纹理"
	},
	"ResetUbersplat": {
		"original": "native ResetUbersplat               takes ubersplat whichSplat returns nothing",
		"fileName": "common.j",
		"name": "ResetUbersplat",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "ubersplat",
			"name": "whichSplat"
		}],
		"insertText": "ResetUbersplat(whichSplat)",
		"documentation": "重置地面纹理"
	},
	"FinishUbersplat": {
		"original": "native FinishUbersplat              takes ubersplat whichSplat returns nothing",
		"fileName": "common.j",
		"name": "FinishUbersplat",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "ubersplat",
			"name": "whichSplat"
		}],
		"insertText": "FinishUbersplat(whichSplat)",
		"documentation": "完成地面纹理"
	},
	"ShowUbersplat": {
		"original": "native ShowUbersplat                takes ubersplat whichSplat, boolean flag returns nothing",
		"fileName": "common.j",
		"name": "ShowUbersplat",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "ubersplat",
			"name": "whichSplat"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "ShowUbersplat(whichSplat, flag)",
		"documentation": "显示/隐藏 地面纹理变化[R]"
	},
	"SetUbersplatRender": {
		"original": "native SetUbersplatRender           takes ubersplat whichSplat, boolean flag returns nothing",
		"fileName": "common.j",
		"name": "SetUbersplatRender",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "ubersplat",
			"name": "whichSplat"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "SetUbersplatRender(whichSplat, flag)",
		"documentation": "改变地面纹理着色状态"
	},
	"SetUbersplatRenderAlways": {
		"original": "native SetUbersplatRenderAlways     takes ubersplat whichSplat, boolean flag returns nothing",
		"fileName": "common.j",
		"name": "SetUbersplatRenderAlways",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "ubersplat",
			"name": "whichSplat"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "SetUbersplatRenderAlways(whichSplat, flag)",
		"documentation": "改变地面纹理永久着色状态"
	},
	"SetBlight": {
		"original": "native SetBlight                takes player whichPlayer, real x, real y, real radius, boolean addBlight returns nothing",
		"fileName": "common.j",
		"name": "SetBlight",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "radius"
		}, {
			"type": "boolean",
			"name": "addBlight"
		}],
		"insertText": "SetBlight(whichPlayer, x, y, radius, addBlight)",
		"documentation": "创建/删除荒芜地表(圆范围)(指定坐标) [R]"
	},
	"SetBlightRect": {
		"original": "native SetBlightRect            takes player whichPlayer, rect r, boolean addBlight returns nothing",
		"fileName": "common.j",
		"name": "SetBlightRect",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "rect",
			"name": "r"
		}, {
			"type": "boolean",
			"name": "addBlight"
		}],
		"insertText": "SetBlightRect(whichPlayer, r, addBlight)",
		"documentation": "创建/删除荒芜地表(矩形区域) [R]"
	},
	"SetBlightPoint": {
		"original": "native SetBlightPoint           takes player whichPlayer, real x, real y, boolean addBlight returns nothing",
		"fileName": "common.j",
		"name": "SetBlightPoint",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "boolean",
			"name": "addBlight"
		}],
		"insertText": "SetBlightPoint(whichPlayer, x, y, addBlight)",
		"documentation": ""
	},
	"SetBlightLoc": {
		"original": "native SetBlightLoc             takes player whichPlayer, location whichLocation, real radius, boolean addBlight returns nothing",
		"fileName": "common.j",
		"name": "SetBlightLoc",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "location",
			"name": "whichLocation"
		}, {
			"type": "real",
			"name": "radius"
		}, {
			"type": "boolean",
			"name": "addBlight"
		}],
		"insertText": "SetBlightLoc(whichPlayer, whichLocation, radius, addBlight)",
		"documentation": ""
	},
	"CreateBlightedGoldmine": {
		"original": "native CreateBlightedGoldmine   takes player id, real x, real y, real face returns unit",
		"fileName": "common.j",
		"name": "CreateBlightedGoldmine",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "id"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "face"
		}],
		"returnType": "unit",
		"insertText": "CreateBlightedGoldmine(id, x, y, face)",
		"documentation": "新建不死族金矿 [R]"
	},
	"IsPointBlighted": {
		"original": "native IsPointBlighted          takes real x, real y returns boolean",
		"fileName": "common.j",
		"name": "IsPointBlighted",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"returnType": "boolean",
		"insertText": "IsPointBlighted(x, y)",
		"documentation": "坐标点被荒芜地表覆盖 [R]"
	},
	"SetDoodadAnimation": {
		"original": "native SetDoodadAnimation       takes real x, real y, real radius, integer doodadID, boolean nearestOnly, string animName, boolean animRandom returns nothing",
		"fileName": "common.j",
		"name": "SetDoodadAnimation",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "radius"
		}, {
			"type": "integer",
			"name": "doodadID"
		}, {
			"type": "boolean",
			"name": "nearestOnly"
		}, {
			"type": "string",
			"name": "animName"
		}, {
			"type": "boolean",
			"name": "animRandom"
		}],
		"insertText": "SetDoodadAnimation(x, y, radius, doodadID, nearestOnly, animName, animRandom)",
		"documentation": "播放圆范围内地形装饰物动画 [R]"
	},
	"SetDoodadAnimationRect": {
		"original": "native SetDoodadAnimationRect   takes rect r, integer doodadID, string animName, boolean animRandom returns nothing",
		"fileName": "common.j",
		"name": "SetDoodadAnimationRect",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "rect",
			"name": "r"
		}, {
			"type": "integer",
			"name": "doodadID"
		}, {
			"type": "string",
			"name": "animName"
		}, {
			"type": "boolean",
			"name": "animRandom"
		}],
		"insertText": "SetDoodadAnimationRect(r, doodadID, animName, animRandom)",
		"documentation": "播放矩形区域内地形装饰物动画 [R]"
	},
	"StartMeleeAI": {
		"original": "native StartMeleeAI         takes player num, string script                 returns nothing",
		"fileName": "common.j",
		"name": "StartMeleeAI",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "num"
		}, {
			"type": "string",
			"name": "script"
		}],
		"insertText": "StartMeleeAI(num, script)",
		"documentation": "启动对战 AI "
	},
	"StartCampaignAI": {
		"original": "native StartCampaignAI      takes player num, string script                 returns nothing",
		"fileName": "common.j",
		"name": "StartCampaignAI",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "num"
		}, {
			"type": "string",
			"name": "script"
		}],
		"insertText": "StartCampaignAI(num, script)",
		"documentation": "启动战役 AI "
	},
	"CommandAI": {
		"original": "native CommandAI            takes player num, integer command, integer data returns nothing",
		"fileName": "common.j",
		"name": "CommandAI",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "num"
		}, {
			"type": "integer",
			"name": "command"
		}, {
			"type": "integer",
			"name": "data"
		}],
		"insertText": "CommandAI(num, command, data)",
		"documentation": "发送 AI 命令"
	},
	"PauseCompAI": {
		"original": "native PauseCompAI          takes player p,   boolean pause                 returns nothing",
		"fileName": "common.j",
		"name": "PauseCompAI",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "p"
		}, {
			"type": "boolean",
			"name": "pause"
		}],
		"insertText": "PauseCompAI(p, pause)",
		"documentation": "暂停/恢复 AI脚本运行 [R]"
	},
	"GetAIDifficulty": {
		"original": "native GetAIDifficulty      takes player num                                returns aidifficulty",
		"fileName": "common.j",
		"name": "GetAIDifficulty",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "num"
		}],
		"returnType": "aidifficulty",
		"insertText": "GetAIDifficulty(num)",
		"documentation": "对战 AI"
	},
	"RemoveGuardPosition": {
		"original": "native RemoveGuardPosition  takes unit hUnit                                returns nothing",
		"fileName": "common.j",
		"name": "RemoveGuardPosition",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "hUnit"
		}],
		"insertText": "RemoveGuardPosition(hUnit)",
		"documentation": "忽略单位的防守职责"
	},
	"RecycleGuardPosition": {
		"original": "native RecycleGuardPosition takes unit hUnit                                returns nothing",
		"fileName": "common.j",
		"name": "RecycleGuardPosition",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "hUnit"
		}],
		"insertText": "RecycleGuardPosition(hUnit)",
		"documentation": "恢复单位的防守职责"
	},
	"RemoveAllGuardPositions": {
		"original": "native RemoveAllGuardPositions takes player num                             returns nothing",
		"fileName": "common.j",
		"name": "RemoveAllGuardPositions",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "num"
		}],
		"insertText": "RemoveAllGuardPositions(num)",
		"documentation": "忽略所有单位的防守职责"
	},
	"Cheat": {
		"original": "native Cheat            takes string cheatStr returns nothing",
		"fileName": "common.j",
		"name": "Cheat",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "cheatStr"
		}],
		"insertText": "Cheat(cheatStr)",
		"documentation": "** Cheat标签 **"
	},
	"IsNoVictoryCheat": {
		"original": "native IsNoVictoryCheat takes nothing returns boolean",
		"fileName": "common.j",
		"name": "IsNoVictoryCheat",
		"isConstant": false,
		"isNative": true,
		"returnType": "boolean",
		"insertText": "IsNoVictoryCheat()",
		"documentation": "无法胜利 [R]"
	},
	"IsNoDefeatCheat": {
		"original": "native IsNoDefeatCheat  takes nothing returns boolean",
		"fileName": "common.j",
		"name": "IsNoDefeatCheat",
		"isConstant": false,
		"isNative": true,
		"returnType": "boolean",
		"insertText": "IsNoDefeatCheat()",
		"documentation": "无法失败 [R]"
	},
	"Preload": {
		"original": "native Preload          takes string filename returns nothing",
		"fileName": "common.j",
		"name": "Preload",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "filename"
		}],
		"insertText": "Preload(filename)",
		"documentation": "预读文件"
	},
	"PreloadEnd": {
		"original": "native PreloadEnd       takes real timeout returns nothing",
		"fileName": "common.j",
		"name": "PreloadEnd",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "timeout"
		}],
		"insertText": "PreloadEnd(timeout)",
		"documentation": "开始预读"
	},
	"PreloadStart": {
		"original": "native PreloadStart     takes nothing returns nothing",
		"fileName": "common.j",
		"name": "PreloadStart",
		"isConstant": false,
		"isNative": true,
		"insertText": "PreloadStart()",
		"documentation": ""
	},
	"PreloadRefresh": {
		"original": "native PreloadRefresh   takes nothing returns nothing",
		"fileName": "common.j",
		"name": "PreloadRefresh",
		"isConstant": false,
		"isNative": true,
		"insertText": "PreloadRefresh()",
		"documentation": ""
	},
	"PreloadEndEx": {
		"original": "native PreloadEndEx     takes nothing returns nothing",
		"fileName": "common.j",
		"name": "PreloadEndEx",
		"isConstant": false,
		"isNative": true,
		"insertText": "PreloadEndEx()",
		"documentation": ""
	},
	"PreloadGenClear": {
		"original": "native PreloadGenClear  takes nothing returns nothing",
		"fileName": "common.j",
		"name": "PreloadGenClear",
		"isConstant": false,
		"isNative": true,
		"insertText": "PreloadGenClear()",
		"documentation": ""
	},
	"PreloadGenStart": {
		"original": "native PreloadGenStart  takes nothing returns nothing",
		"fileName": "common.j",
		"name": "PreloadGenStart",
		"isConstant": false,
		"isNative": true,
		"insertText": "PreloadGenStart()",
		"documentation": ""
	},
	"PreloadGenEnd": {
		"original": "native PreloadGenEnd    takes string filename returns nothing",
		"fileName": "common.j",
		"name": "PreloadGenEnd",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "filename"
		}],
		"insertText": "PreloadGenEnd(filename)",
		"documentation": ""
	},
	"Preloader": {
		"original": "native Preloader        takes string filename returns nothing",
		"fileName": "common.j",
		"name": "Preloader",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "filename"
		}],
		"insertText": "Preloader(filename)",
		"documentation": "预读一批文件"
	},
	"YDWECountLivingPlayerUnitsOfTypeIdNull": {
		"original": "function YDWECountLivingPlayerUnitsOfTypeIdNull takes integer unitId, player whichPlayer returns integer",
		"fileName": "CountLivingPlayerUnitsOfTypeId.j",
		"name": "YDWECountLivingPlayerUnitsOfTypeIdNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "unitId"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "integer",
		"insertText": "YDWECountLivingPlayerUnitsOfTypeIdNull(unitId, whichPlayer)",
		"documentation": ""
	},
	"YDWEDelayedSuspendDecayNull": {
		"original": "function YDWEDelayedSuspendDecayNull takes nothing returns nothing",
		"fileName": "DelayedSuspendDecay.j",
		"name": "YDWEDelayedSuspendDecayNull",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEDelayedSuspendDecayNull()",
		"documentation": ""
	},
	"YDWEDelayedSuspendDecayBoneEnumNull": {
		"original": "function YDWEDelayedSuspendDecayBoneEnumNull takes nothing returns nothing",
		"fileName": "DelayedSuspendDecayBoneEnum.j",
		"name": "YDWEDelayedSuspendDecayBoneEnumNull",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEDelayedSuspendDecayBoneEnumNull()",
		"documentation": ""
	},
	"YDWEDelayedSuspendDecayFleshEnumNull": {
		"original": "function YDWEDelayedSuspendDecayFleshEnumNull takes nothing returns nothing",
		"fileName": "DelayedSuspendDecayFleshEnum.j",
		"name": "YDWEDelayedSuspendDecayFleshEnumNull",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEDelayedSuspendDecayFleshEnumNull()",
		"documentation": ""
	},
	"YDWEDelayedSuspendDecayStopAnimEnumNull": {
		"original": "function YDWEDelayedSuspendDecayStopAnimEnumNull takes nothing returns nothing",
		"fileName": "DelayedSuspendDecayStopAnimEnum.j",
		"name": "YDWEDelayedSuspendDecayStopAnimEnumNull",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEDelayedSuspendDecayStopAnimEnumNull()",
		"documentation": ""
	},
	"DzAPI_Map_SaveServerValue": {
		"original": "\tnative DzAPI_Map_SaveServerValue        takes player whichPlayer, string key, string value returns boolean",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_SaveServerValue",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}, {
			"type": "string",
			"name": "value"
		}],
		"returnType": "boolean",
		"insertText": "DzAPI_Map_SaveServerValue(whichPlayer, key, value)",
		"documentation": ""
	},
	"DzAPI_Map_GetServerValue": {
		"original": "    native DzAPI_Map_GetServerValue         takes player whichPlayer, string key returns string",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_GetServerValue",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}],
		"returnType": "string",
		"insertText": "DzAPI_Map_GetServerValue(whichPlayer, key)",
		"documentation": ""
	},
	"DzAPI_Map_Ladder_SetStat": {
		"original": "    native DzAPI_Map_Ladder_SetStat         takes player whichPlayer, string key, string value returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_Ladder_SetStat",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}, {
			"type": "string",
			"name": "value"
		}],
		"insertText": "DzAPI_Map_Ladder_SetStat(whichPlayer, key, value)",
		"documentation": ""
	},
	"DzAPI_Map_IsRPGLadder": {
		"original": "    native DzAPI_Map_IsRPGLadder            takes nothing returns boolean",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_IsRPGLadder",
		"isConstant": false,
		"isNative": true,
		"returnType": "boolean",
		"insertText": "DzAPI_Map_IsRPGLadder()",
		"documentation": ""
	},
	"DzAPI_Map_GetGameStartTime": {
		"original": "    native DzAPI_Map_GetGameStartTime       takes nothing returns integer",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_GetGameStartTime",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "DzAPI_Map_GetGameStartTime()",
		"documentation": ""
	},
	"DzAPI_Map_Stat_SetStat": {
		"original": "    native DzAPI_Map_Stat_SetStat           takes player whichPlayer, string key, string value returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_Stat_SetStat",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}, {
			"type": "string",
			"name": "value"
		}],
		"insertText": "DzAPI_Map_Stat_SetStat(whichPlayer, key, value)",
		"documentation": ""
	},
	"DzAPI_Map_GetMatchType": {
		"original": "    native DzAPI_Map_GetMatchType      \t\ttakes nothing returns integer",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_GetMatchType",
		"isConstant": false,
		"isNative": true,
		"returnType": "integer",
		"insertText": "DzAPI_Map_GetMatchType()",
		"documentation": ""
	},
	"DzAPI_Map_Ladder_SetPlayerStat": {
		"original": "    native DzAPI_Map_Ladder_SetPlayerStat   takes player whichPlayer, string key, string value returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_Ladder_SetPlayerStat",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}, {
			"type": "string",
			"name": "value"
		}],
		"insertText": "DzAPI_Map_Ladder_SetPlayerStat(whichPlayer, key, value)",
		"documentation": ""
	},
	"DzAPI_Map_GetServerValueErrorCode": {
		"original": "\tnative DzAPI_Map_GetServerValueErrorCode takes player whichPlayer returns integer",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_GetServerValueErrorCode",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "integer",
		"insertText": "DzAPI_Map_GetServerValueErrorCode(whichPlayer)",
		"documentation": ""
	},
	"DzAPI_Map_GetLadderLevel": {
		"original": "    native DzAPI_Map_GetLadderLevel         takes player whichPlayer returns integer",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_GetLadderLevel",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "integer",
		"insertText": "DzAPI_Map_GetLadderLevel(whichPlayer)",
		"documentation": ""
	},
	"DzAPI_Map_IsRedVIP": {
		"original": "\tnative DzAPI_Map_IsRedVIP               takes player whichPlayer returns boolean",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_IsRedVIP",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "boolean",
		"insertText": "DzAPI_Map_IsRedVIP(whichPlayer)",
		"documentation": ""
	},
	"DzAPI_Map_IsBlueVIP": {
		"original": "\tnative DzAPI_Map_IsBlueVIP              takes player whichPlayer returns boolean",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_IsBlueVIP",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "boolean",
		"insertText": "DzAPI_Map_IsBlueVIP(whichPlayer)",
		"documentation": ""
	},
	"DzAPI_Map_GetLadderRank": {
		"original": "\tnative DzAPI_Map_GetLadderRank          takes player whichPlayer returns integer",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_GetLadderRank",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "integer",
		"insertText": "DzAPI_Map_GetLadderRank(whichPlayer)",
		"documentation": ""
	},
	"DzAPI_Map_GetMapLevelRank": {
		"original": "\tnative DzAPI_Map_GetMapLevelRank        takes player whichPlayer returns integer",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_GetMapLevelRank",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "integer",
		"insertText": "DzAPI_Map_GetMapLevelRank(whichPlayer)",
		"documentation": ""
	},
	"DzAPI_Map_GetGuildName": {
		"original": "\tnative DzAPI_Map_GetGuildName           takes player whichPlayer returns string",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_GetGuildName",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "string",
		"insertText": "DzAPI_Map_GetGuildName(whichPlayer)",
		"documentation": ""
	},
	"DzAPI_Map_GetGuildRole": {
		"original": "\tnative DzAPI_Map_GetGuildRole           takes player whichPlayer returns integer",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_GetGuildRole",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "integer",
		"insertText": "DzAPI_Map_GetGuildRole(whichPlayer)",
		"documentation": ""
	},
	"DzAPI_Map_IsRPGLobby": {
		"original": "\tnative DzAPI_Map_IsRPGLobby             takes nothing returns boolean",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_IsRPGLobby",
		"isConstant": false,
		"isNative": true,
		"returnType": "boolean",
		"insertText": "DzAPI_Map_IsRPGLobby()",
		"documentation": ""
	},
	"DzAPI_Map_GetMapLevel": {
		"original": "\tnative DzAPI_Map_GetMapLevel            takes player whichPlayer returns integer",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_GetMapLevel",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "integer",
		"insertText": "DzAPI_Map_GetMapLevel(whichPlayer)",
		"documentation": ""
	},
	"DzAPI_Map_MissionComplete": {
		"original": "\tnative DzAPI_Map_MissionComplete        takes player whichPlayer, string key, string value returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_MissionComplete",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}, {
			"type": "string",
			"name": "value"
		}],
		"insertText": "DzAPI_Map_MissionComplete(whichPlayer, key, value)",
		"documentation": ""
	},
	"DzAPI_Map_GetActivityData": {
		"original": "\tnative DzAPI_Map_GetActivityData        takes nothing returns string",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_GetActivityData",
		"isConstant": false,
		"isNative": true,
		"returnType": "string",
		"insertText": "DzAPI_Map_GetActivityData()",
		"documentation": ""
	},
	"DzAPI_Map_GetMapConfig": {
		"original": "\tnative DzAPI_Map_GetMapConfig           takes string key returns string",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_GetMapConfig",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "key"
		}],
		"returnType": "string",
		"insertText": "DzAPI_Map_GetMapConfig(key)",
		"documentation": ""
	},
	"DzAPI_Map_HasMallItem": {
		"original": "\tnative DzAPI_Map_HasMallItem            takes player whichPlayer, string key returns boolean",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_HasMallItem",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}],
		"returnType": "boolean",
		"insertText": "DzAPI_Map_HasMallItem(whichPlayer, key)",
		"documentation": ""
	},
	"DzAPI_Map_SavePublicArchive": {
		"original": "\tnative DzAPI_Map_SavePublicArchive      takes player whichPlayer, string key, string value returns boolean",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_SavePublicArchive",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}, {
			"type": "string",
			"name": "value"
		}],
		"returnType": "boolean",
		"insertText": "DzAPI_Map_SavePublicArchive(whichPlayer, key, value)",
		"documentation": ""
	},
	"DzAPI_Map_GetPublicArchive": {
		"original": "\tnative DzAPI_Map_GetPublicArchive       takes player whichPlayer, string key returns string",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_GetPublicArchive",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}],
		"returnType": "string",
		"insertText": "DzAPI_Map_GetPublicArchive(whichPlayer, key)",
		"documentation": ""
	},
	"DzAPI_Map_UseConsumablesItem": {
		"original": "\tnative DzAPI_Map_UseConsumablesItem     takes player whichPlayer, string key returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_UseConsumablesItem",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}],
		"insertText": "DzAPI_Map_UseConsumablesItem(whichPlayer, key)",
		"documentation": ""
	},
	"DzAPI_Map_OrpgTrigger": {
		"original": "\tnative DzAPI_Map_OrpgTrigger            takes player whichPlayer, string key returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_OrpgTrigger",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}],
		"insertText": "DzAPI_Map_OrpgTrigger(whichPlayer, key)",
		"documentation": ""
	},
	"DzAPI_Map_GetServerArchiveDrop": {
		"original": "\tnative DzAPI_Map_GetServerArchiveDrop   takes player whichPlayer, string key returns string",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_GetServerArchiveDrop",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}],
		"returnType": "string",
		"insertText": "DzAPI_Map_GetServerArchiveDrop(whichPlayer, key)",
		"documentation": ""
	},
	"DzAPI_Map_GetServerArchiveEquip": {
		"original": "\tnative DzAPI_Map_GetServerArchiveEquip  takes player whichPlayer, string key returns integer",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_GetServerArchiveEquip",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}],
		"returnType": "integer",
		"insertText": "DzAPI_Map_GetServerArchiveEquip(whichPlayer, key)",
		"documentation": ""
	},
	"GetPlayerServerValueSuccess": {
		"original": "\tfunction GetPlayerServerValueSuccess takes player whichPlayer returns boolean",
		"fileName": "DzAPI.j",
		"name": "GetPlayerServerValueSuccess",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "boolean",
		"insertText": "GetPlayerServerValueSuccess(whichPlayer)",
		"documentation": ""
	},
	"DzAPI_Map_StoreInteger": {
		"original": " \tfunction DzAPI_Map_StoreInteger takes player whichPlayer, string key, integer value returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_StoreInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}, {
			"type": "integer",
			"name": "value"
		}],
		"insertText": "DzAPI_Map_StoreInteger(whichPlayer, key, value)",
		"documentation": ""
	},
	"DzAPI_Map_GetStoredInteger": {
		"original": "    function DzAPI_Map_GetStoredInteger takes player whichPlayer, string key returns integer",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_GetStoredInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}],
		"returnType": "integer",
		"insertText": "DzAPI_Map_GetStoredInteger(whichPlayer, key)",
		"documentation": ""
	},
	"DzAPI_Map_StoreReal": {
		"original": "    function DzAPI_Map_StoreReal takes player whichPlayer, string key, real value returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_StoreReal",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}, {
			"type": "real",
			"name": "value"
		}],
		"insertText": "DzAPI_Map_StoreReal(whichPlayer, key, value)",
		"documentation": ""
	},
	"DzAPI_Map_GetStoredReal": {
		"original": "    function DzAPI_Map_GetStoredReal takes player whichPlayer, string key returns real",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_GetStoredReal",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}],
		"returnType": "real",
		"insertText": "DzAPI_Map_GetStoredReal(whichPlayer, key)",
		"documentation": ""
	},
	"DzAPI_Map_StoreBoolean": {
		"original": "    function DzAPI_Map_StoreBoolean takes player whichPlayer, string key, boolean value returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_StoreBoolean",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}, {
			"type": "boolean",
			"name": "value"
		}],
		"insertText": "DzAPI_Map_StoreBoolean(whichPlayer, key, value)",
		"documentation": ""
	},
	"DzAPI_Map_GetStoredBoolean": {
		"original": "    function DzAPI_Map_GetStoredBoolean takes player whichPlayer, string key returns boolean",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_GetStoredBoolean",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}],
		"returnType": "boolean",
		"insertText": "DzAPI_Map_GetStoredBoolean(whichPlayer, key)",
		"documentation": ""
	},
	"DzAPI_Map_StoreString": {
		"original": "    function DzAPI_Map_StoreString takes player whichPlayer, string key, string value returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_StoreString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}, {
			"type": "string",
			"name": "value"
		}],
		"insertText": "DzAPI_Map_StoreString(whichPlayer, key, value)",
		"documentation": ""
	},
	"DzAPI_Map_GetStoredString": {
		"original": "    function DzAPI_Map_GetStoredString takes player whichPlayer, string key returns string",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_GetStoredString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}],
		"returnType": "string",
		"insertText": "DzAPI_Map_GetStoredString(whichPlayer, key)",
		"documentation": ""
	},
	"DzAPI_Map_GetStoredUnitType": {
		"original": "\tfunction DzAPI_Map_GetStoredUnitType takes player whichPlayer, string key returns integer",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_GetStoredUnitType",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}],
		"returnType": "integer",
		"insertText": "DzAPI_Map_GetStoredUnitType(whichPlayer, key)",
		"documentation": ""
	},
	"DzAPI_Map_GetStoredAbilityId": {
		"original": "\tfunction DzAPI_Map_GetStoredAbilityId takes player whichPlayer, string key returns integer",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_GetStoredAbilityId",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}],
		"returnType": "integer",
		"insertText": "DzAPI_Map_GetStoredAbilityId(whichPlayer, key)",
		"documentation": ""
	},
	"DzAPI_Map_FlushStoredMission": {
		"original": "    function DzAPI_Map_FlushStoredMission takes player whichPlayer, string key returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_FlushStoredMission",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}],
		"insertText": "DzAPI_Map_FlushStoredMission(whichPlayer, key)",
		"documentation": ""
	},
	"DzAPI_Map_Ladder_SubmitIntegerData": {
		"original": "    function DzAPI_Map_Ladder_SubmitIntegerData takes player whichPlayer, string key, integer value returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_Ladder_SubmitIntegerData",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}, {
			"type": "integer",
			"name": "value"
		}],
		"insertText": "DzAPI_Map_Ladder_SubmitIntegerData(whichPlayer, key, value)",
		"documentation": ""
	},
	"DzAPI_Map_Stat_SubmitUnitIdData": {
		"original": "    function DzAPI_Map_Stat_SubmitUnitIdData takes player whichPlayer, string key,integer value returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_Stat_SubmitUnitIdData",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}, {
			"type": "integer",
			"name": "value"
		}],
		"insertText": "DzAPI_Map_Stat_SubmitUnitIdData(whichPlayer, key, value)",
		"documentation": ""
	},
	"DzAPI_Map_Stat_SubmitUnitData": {
		"original": "    function DzAPI_Map_Stat_SubmitUnitData takes player whichPlayer, string key,unit value returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_Stat_SubmitUnitData",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}, {
			"type": "unit",
			"name": "value"
		}],
		"insertText": "DzAPI_Map_Stat_SubmitUnitData(whichPlayer, key, value)",
		"documentation": ""
	},
	"DzAPI_Map_Ladder_SubmitAblityIdData": {
		"original": "    function DzAPI_Map_Ladder_SubmitAblityIdData takes player whichPlayer, string key, integer value returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_Ladder_SubmitAblityIdData",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}, {
			"type": "integer",
			"name": "value"
		}],
		"insertText": "DzAPI_Map_Ladder_SubmitAblityIdData(whichPlayer, key, value)",
		"documentation": ""
	},
	"DzAPI_Map_Ladder_SubmitItemIdData": {
		"original": "    function DzAPI_Map_Ladder_SubmitItemIdData takes player whichPlayer, string key, integer value returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_Ladder_SubmitItemIdData",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}, {
			"type": "integer",
			"name": "value"
		}],
		"insertText": "DzAPI_Map_Ladder_SubmitItemIdData(whichPlayer, key, value)",
		"documentation": ""
	},
	"DzAPI_Map_Ladder_SubmitItemData": {
		"original": "    function DzAPI_Map_Ladder_SubmitItemData takes player whichPlayer, string key, item value returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_Ladder_SubmitItemData",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}, {
			"type": "item",
			"name": "value"
		}],
		"insertText": "DzAPI_Map_Ladder_SubmitItemData(whichPlayer, key, value)",
		"documentation": ""
	},
	"DzAPI_Map_Ladder_SubmitBooleanData": {
		"original": "    function DzAPI_Map_Ladder_SubmitBooleanData takes player whichPlayer, string key,boolean value  returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_Ladder_SubmitBooleanData",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "key"
		}, {
			"type": "boolean",
			"name": "value"
		}],
		"insertText": "DzAPI_Map_Ladder_SubmitBooleanData(whichPlayer, key, value)",
		"documentation": ""
	},
	"DzAPI_Map_Ladder_SubmitTitle": {
		"original": "    function DzAPI_Map_Ladder_SubmitTitle takes player whichPlayer, string value  returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_Ladder_SubmitTitle",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "string",
			"name": "value"
		}],
		"insertText": "DzAPI_Map_Ladder_SubmitTitle(whichPlayer, value)",
		"documentation": ""
	},
	"DzAPI_Map_Ladder_SubmitPlayerRank": {
		"original": "\tfunction DzAPI_Map_Ladder_SubmitPlayerRank takes player whichPlayer, integer value returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_Ladder_SubmitPlayerRank",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "integer",
			"name": "value"
		}],
		"insertText": "DzAPI_Map_Ladder_SubmitPlayerRank(whichPlayer, value)",
		"documentation": ""
	},
	"DzAPI_Map_Ladder_SubmitPlayerExtraExp": {
		"original": "\tfunction DzAPI_Map_Ladder_SubmitPlayerExtraExp takes player whichPlayer, integer value returns nothing",
		"fileName": "DzAPI.j",
		"name": "DzAPI_Map_Ladder_SubmitPlayerExtraExp",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "integer",
			"name": "value"
		}],
		"insertText": "DzAPI_Map_Ladder_SubmitPlayerExtraExp(whichPlayer, value)",
		"documentation": ""
	},
	"YDWEEnableCreepSleepBJNull": {
		"original": "function YDWEEnableCreepSleepBJNull takes boolean enable returns nothing",
		"fileName": "EnableCreepSleepBJ.j",
		"name": "YDWEEnableCreepSleepBJNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "enable"
		}],
		"insertText": "YDWEEnableCreepSleepBJNull(enable)",
		"documentation": ""
	},
	"YDWEEnumDestructablesInCircleBJNull": {
		"original": "function YDWEEnumDestructablesInCircleBJNull takes real radius, location loc, code actionFunc returns nothing",
		"fileName": "EnumDestructablesInCircleBJ.j",
		"name": "YDWEEnumDestructablesInCircleBJNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "radius"
		}, {
			"type": "location",
			"name": "loc"
		}, {
			"type": "code",
			"name": "actionFunc"
		}],
		"insertText": "YDWEEnumDestructablesInCircleBJNull(radius, loc, actionFunc)",
		"documentation": ""
	},
	"YDWEEnumDestructablesInCircleBJFilterNull": {
		"original": "function YDWEEnumDestructablesInCircleBJFilterNull takes nothing returns boolean",
		"fileName": "EnumDestructablesInCircleBJFilter.j",
		"name": "YDWEEnumDestructablesInCircleBJFilterNull",
		"isConstant": false,
		"isNative": false,
		"returnType": "boolean",
		"insertText": "YDWEEnumDestructablesInCircleBJFilterNull()",
		"documentation": ""
	},
	"YDWEEnumUnitsSelectedNull": {
		"original": "function YDWEEnumUnitsSelectedNull takes player whichPlayer, boolexpr enumFilter, code enumAction returns nothing",
		"fileName": "EnumUnitsSelected.j",
		"name": "YDWEEnumUnitsSelectedNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "boolexpr",
			"name": "enumFilter"
		}, {
			"type": "code",
			"name": "enumAction"
		}],
		"insertText": "YDWEEnumUnitsSelectedNull(whichPlayer, enumFilter, enumAction)",
		"documentation": ""
	},
	"YDWEGetCurrentCameraSetupNull": {
		"original": "function YDWEGetCurrentCameraSetupNull takes nothing returns camerasetup",
		"fileName": "GetCurrentCameraSetup.j",
		"name": "YDWEGetCurrentCameraSetupNull",
		"isConstant": false,
		"isNative": false,
		"returnType": "camerasetup",
		"insertText": "YDWEGetCurrentCameraSetupNull()",
		"documentation": ""
	},
	"YDWEGetForceOfPlayerNull": {
		"original": "function YDWEGetForceOfPlayerNull takes player whichPlayer returns force",
		"fileName": "GetForceOfPlayer.j",
		"name": "YDWEGetForceOfPlayerNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "force",
		"insertText": "YDWEGetForceOfPlayerNull(whichPlayer)",
		"documentation": ""
	},
	"YDWEGetInventoryIndexOfItemTypeBJNull": {
		"original": "function YDWEGetInventoryIndexOfItemTypeBJNull takes unit whichUnit, integer itemId returns integer",
		"fileName": "GetInventoryIndexOfItemTypeBJ.j",
		"name": "YDWEGetInventoryIndexOfItemTypeBJNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "itemId"
		}],
		"returnType": "integer",
		"insertText": "YDWEGetInventoryIndexOfItemTypeBJNull(whichUnit, itemId)",
		"documentation": ""
	},
	"YDWEGetItemOfTypeFromUnitBJNull": {
		"original": "function YDWEGetItemOfTypeFromUnitBJNull takes unit whichUnit, integer itemId returns item",
		"fileName": "GetItemOfTypeFromUnitBJ.j",
		"name": "YDWEGetItemOfTypeFromUnitBJNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "itemId"
		}],
		"returnType": "item",
		"insertText": "YDWEGetItemOfTypeFromUnitBJNull(whichUnit, itemId)",
		"documentation": ""
	},
	"YDWEGetPlayersAlliesNull": {
		"original": "function YDWEGetPlayersAlliesNull takes player whichPlayer returns force",
		"fileName": "GetPlayersAllies.j",
		"name": "YDWEGetPlayersAlliesNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "force",
		"insertText": "YDWEGetPlayersAlliesNull(whichPlayer)",
		"documentation": ""
	},
	"YDWEGetPlayersByMapControlNull": {
		"original": "function YDWEGetPlayersByMapControlNull takes mapcontrol whichControl returns force",
		"fileName": "GetPlayersByMapControl.j",
		"name": "YDWEGetPlayersByMapControlNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "mapcontrol",
			"name": "whichControl"
		}],
		"returnType": "force",
		"insertText": "YDWEGetPlayersByMapControlNull(whichControl)",
		"documentation": ""
	},
	"YDWEGetPlayersEnemiesNull": {
		"original": "function YDWEGetPlayersEnemiesNull takes player whichPlayer returns force",
		"fileName": "GetPlayersEnemies.j",
		"name": "YDWEGetPlayersEnemiesNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "force",
		"insertText": "YDWEGetPlayersEnemiesNull(whichPlayer)",
		"documentation": ""
	},
	"YDWEGetPlayersMatchingNull": {
		"original": "function YDWEGetPlayersMatchingNull takes boolexpr filter returns force",
		"fileName": "GetPlayersMatching.j",
		"name": "YDWEGetPlayersMatchingNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolexpr",
			"name": "filter"
		}],
		"returnType": "force",
		"insertText": "YDWEGetPlayersMatchingNull(filter)",
		"documentation": ""
	},
	"YDWEGetRandomSubGroupNull": {
		"original": "function YDWEGetRandomSubGroupNull takes integer count, group sourceGroup returns group",
		"fileName": "GetRandomSubGroup.j",
		"name": "YDWEGetRandomSubGroupNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "count"
		}, {
			"type": "group",
			"name": "sourceGroup"
		}],
		"returnType": "group",
		"insertText": "YDWEGetRandomSubGroupNull(count, sourceGroup)",
		"documentation": ""
	},
	"YDWEGetRandomSubGroupEnumNull": {
		"original": "function YDWEGetRandomSubGroupEnumNull takes nothing returns nothing",
		"fileName": "GetRandomSubGroupEnum.j",
		"name": "YDWEGetRandomSubGroupEnumNull",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEGetRandomSubGroupEnumNull()",
		"documentation": ""
	},
	"YDWEGetUnitsInRangeOfLocAllNull": {
		"original": "function YDWEGetUnitsInRangeOfLocAllNull takes real radius, location whichLocation returns group",
		"fileName": "GetUnitsInRangeOfLocAll.j",
		"name": "YDWEGetUnitsInRangeOfLocAllNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "radius"
		}, {
			"type": "location",
			"name": "whichLocation"
		}],
		"returnType": "group",
		"insertText": "YDWEGetUnitsInRangeOfLocAllNull(radius, whichLocation)",
		"documentation": ""
	},
	"YDWEGetUnitsInRangeOfLocMatchingNull": {
		"original": "function YDWEGetUnitsInRangeOfLocMatchingNull takes real radius, location whichLocation, boolexpr filter returns group",
		"fileName": "GetUnitsInRangeOfLocMatching.j",
		"name": "YDWEGetUnitsInRangeOfLocMatchingNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "radius"
		}, {
			"type": "location",
			"name": "whichLocation"
		}, {
			"type": "boolexpr",
			"name": "filter"
		}],
		"returnType": "group",
		"insertText": "YDWEGetUnitsInRangeOfLocMatchingNull(radius, whichLocation, filter)",
		"documentation": ""
	},
	"YDWEGetUnitsInRectAllNull": {
		"original": "function YDWEGetUnitsInRectAllNull takes rect r returns group",
		"fileName": "GetUnitsInRectAll.j",
		"name": "YDWEGetUnitsInRectAllNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "rect",
			"name": "r"
		}],
		"returnType": "group",
		"insertText": "YDWEGetUnitsInRectAllNull(r)",
		"documentation": ""
	},
	"YDWEGetUnitsInRectMatchingNull": {
		"original": "function YDWEGetUnitsInRectMatchingNull takes rect r, boolexpr filter returns group",
		"fileName": "GetUnitsInRectMatching.j",
		"name": "YDWEGetUnitsInRectMatchingNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "rect",
			"name": "r"
		}, {
			"type": "boolexpr",
			"name": "filter"
		}],
		"returnType": "group",
		"insertText": "YDWEGetUnitsInRectMatchingNull(r, filter)",
		"documentation": ""
	},
	"YDWEGetUnitsInRectOfPlayerNull": {
		"original": "function YDWEGetUnitsInRectOfPlayerNull takes rect r, player whichPlayer returns group",
		"fileName": "GetUnitsInRectOfPlayer.j",
		"name": "YDWEGetUnitsInRectOfPlayerNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "rect",
			"name": "r"
		}, {
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "group",
		"insertText": "YDWEGetUnitsInRectOfPlayerNull(r, whichPlayer)",
		"documentation": ""
	},
	"YDWEGetUnitsOfPlayerAllNull": {
		"original": "function YDWEGetUnitsOfPlayerAllNull takes player whichPlayer returns group",
		"fileName": "GetUnitsOfPlayerAll.j",
		"name": "YDWEGetUnitsOfPlayerAllNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "group",
		"insertText": "YDWEGetUnitsOfPlayerAllNull(whichPlayer)",
		"documentation": ""
	},
	"YDWEGetUnitsOfPlayerAndTypeIdNull": {
		"original": "function YDWEGetUnitsOfPlayerAndTypeIdNull takes player whichPlayer, integer unitid returns group",
		"fileName": "GetUnitsOfPlayerAndTypeId.j",
		"name": "YDWEGetUnitsOfPlayerAndTypeIdNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "integer",
			"name": "unitid"
		}],
		"returnType": "group",
		"insertText": "YDWEGetUnitsOfPlayerAndTypeIdNull(whichPlayer, unitid)",
		"documentation": ""
	},
	"YDWEGetUnitsOfPlayerMatchingNull": {
		"original": "function YDWEGetUnitsOfPlayerMatchingNull takes player whichPlayer, boolexpr filter returns group",
		"fileName": "GetUnitsOfPlayerMatching.j",
		"name": "YDWEGetUnitsOfPlayerMatchingNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "boolexpr",
			"name": "filter"
		}],
		"returnType": "group",
		"insertText": "YDWEGetUnitsOfPlayerMatchingNull(whichPlayer, filter)",
		"documentation": ""
	},
	"YDWEGetUnitsOfTypeIdAllNull": {
		"original": "function YDWEGetUnitsOfTypeIdAllNull takes integer unitid returns group",
		"fileName": "GetUnitsOfTypeIdAll.j",
		"name": "YDWEGetUnitsOfTypeIdAllNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "unitid"
		}],
		"returnType": "group",
		"insertText": "YDWEGetUnitsOfTypeIdAllNull(unitid)",
		"documentation": ""
	},
	"YDWEGetUnitsSelectedAllNull": {
		"original": "function YDWEGetUnitsSelectedAllNull takes player whichPlayer returns group",
		"fileName": "GetUnitsSelectedAll.j",
		"name": "YDWEGetUnitsSelectedAllNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"returnType": "group",
		"insertText": "YDWEGetUnitsSelectedAllNull(whichPlayer)",
		"documentation": ""
	},
	"YDWEInitRescuableBehaviorBJNull": {
		"original": "function YDWEInitRescuableBehaviorBJNull takes nothing returns nothing",
		"fileName": "InitRescuableBehaviorBJ.j",
		"name": "YDWEInitRescuableBehaviorBJNull",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEInitRescuableBehaviorBJNull()",
		"documentation": ""
	},
	"YDWEIssueBuildOrderByIdLocBJNull": {
		"original": "function YDWEIssueBuildOrderByIdLocBJNull takes unit whichPeon, integer unitId, location loc returns boolean",
		"fileName": "IssueBuildOrderByIdLocBJ.j",
		"name": "YDWEIssueBuildOrderByIdLocBJNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichPeon"
		}, {
			"type": "integer",
			"name": "unitId"
		}, {
			"type": "location",
			"name": "loc"
		}],
		"returnType": "boolean",
		"insertText": "YDWEIssueBuildOrderByIdLocBJNull(whichPeon, unitId, loc)",
		"documentation": ""
	},
	"YDWEIssueHauntOrderAtLocBJNull": {
		"original": "function YDWEIssueHauntOrderAtLocBJNull takes unit whichPeon, location loc returns boolean",
		"fileName": "IssueHauntOrderAtLocBJ.j",
		"name": "YDWEIssueHauntOrderAtLocBJNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichPeon"
		}, {
			"type": "location",
			"name": "loc"
		}],
		"returnType": "boolean",
		"insertText": "YDWEIssueHauntOrderAtLocBJNull(whichPeon, loc)",
		"documentation": ""
	},
	"YDWEMakeUnitRescuableToForceBJNull": {
		"original": "function YDWEMakeUnitRescuableToForceBJNull takes unit whichUnit, boolean isRescuable, force whichForce returns nothing",
		"fileName": "MakeUnitRescuableToForceBJ.j",
		"name": "YDWEMakeUnitRescuableToForceBJNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "boolean",
			"name": "isRescuable"
		}, {
			"type": "force",
			"name": "whichForce"
		}],
		"insertText": "YDWEMakeUnitRescuableToForceBJNull(whichUnit, isRescuable, whichForce)",
		"documentation": ""
	},
	"YDWEMakeUnitRescuableToForceBJEnumNull": {
		"original": "function YDWEMakeUnitRescuableToForceBJEnumNull takes nothing returns nothing",
		"fileName": "MakeUnitRescuableToForceBJEnum.j",
		"name": "YDWEMakeUnitRescuableToForceBJEnumNull",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEMakeUnitRescuableToForceBJEnumNull()",
		"documentation": ""
	},
	"YDWEMakeUnitsPassiveForPlayerNull": {
		"original": "function YDWEMakeUnitsPassiveForPlayerNull takes player whichPlayer returns nothing",
		"fileName": "MakeUnitsPassiveForPlayer.j",
		"name": "YDWEMakeUnitsPassiveForPlayerNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "YDWEMakeUnitsPassiveForPlayerNull(whichPlayer)",
		"documentation": ""
	},
	"YDWEMakeUnitsPassiveForTeamNull": {
		"original": "function YDWEMakeUnitsPassiveForTeamNull takes player whichPlayer returns nothing",
		"fileName": "MakeUnitsPassiveForTeam.j",
		"name": "YDWEMakeUnitsPassiveForTeamNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "YDWEMakeUnitsPassiveForTeamNull(whichPlayer)",
		"documentation": ""
	},
	"YDWEMultiboardSetItemColorBJNull": {
		"original": "function YDWEMultiboardSetItemColorBJNull takes multiboard mb, integer col, integer row, real red, real green, real blue, real transparency returns nothing",
		"fileName": "MultiboardSetItemColorBJ.j",
		"name": "YDWEMultiboardSetItemColorBJNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "multiboard",
			"name": "mb"
		}, {
			"type": "integer",
			"name": "col"
		}, {
			"type": "integer",
			"name": "row"
		}, {
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}, {
			"type": "real",
			"name": "transparency"
		}],
		"insertText": "YDWEMultiboardSetItemColorBJNull(mb, col, row, red, green, blue, transparency)",
		"documentation": ""
	},
	"YDWEMultiboardSetItemIconBJNull": {
		"original": "function YDWEMultiboardSetItemIconBJNull takes multiboard mb, integer col, integer row, string iconFileName returns nothing",
		"fileName": "MultiboardSetItemIconBJ.j",
		"name": "YDWEMultiboardSetItemIconBJNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "multiboard",
			"name": "mb"
		}, {
			"type": "integer",
			"name": "col"
		}, {
			"type": "integer",
			"name": "row"
		}, {
			"type": "string",
			"name": "iconFileName"
		}],
		"insertText": "YDWEMultiboardSetItemIconBJNull(mb, col, row, iconFileName)",
		"documentation": ""
	},
	"YDWEMultiboardSetItemStyleBJNull": {
		"original": "function YDWEMultiboardSetItemStyleBJNull takes multiboard mb, integer col, integer row, boolean showValue, boolean showIcon returns nothing",
		"fileName": "MultiboardSetItemStyleBJ.j",
		"name": "YDWEMultiboardSetItemStyleBJNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "multiboard",
			"name": "mb"
		}, {
			"type": "integer",
			"name": "col"
		}, {
			"type": "integer",
			"name": "row"
		}, {
			"type": "boolean",
			"name": "showValue"
		}, {
			"type": "boolean",
			"name": "showIcon"
		}],
		"insertText": "YDWEMultiboardSetItemStyleBJNull(mb, col, row, showValue, showIcon)",
		"documentation": ""
	},
	"YDWEMultiboardSetItemValueBJNull": {
		"original": "function YDWEMultiboardSetItemValueBJNull takes multiboard mb, integer col, integer row, string val returns nothing",
		"fileName": "MultiboardSetItemValueBJ.j",
		"name": "YDWEMultiboardSetItemValueBJNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "multiboard",
			"name": "mb"
		}, {
			"type": "integer",
			"name": "col"
		}, {
			"type": "integer",
			"name": "row"
		}, {
			"type": "string",
			"name": "val"
		}],
		"insertText": "YDWEMultiboardSetItemValueBJNull(mb, col, row, val)",
		"documentation": ""
	},
	"YDWEMultiboardSetItemWidthBJNull": {
		"original": "function YDWEMultiboardSetItemWidthBJNull takes multiboard mb, integer col, integer row, real width returns nothing",
		"fileName": "MultiboardSetItemWidthBJ.j",
		"name": "YDWEMultiboardSetItemWidthBJNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "multiboard",
			"name": "mb"
		}, {
			"type": "integer",
			"name": "col"
		}, {
			"type": "integer",
			"name": "row"
		}, {
			"type": "real",
			"name": "width"
		}],
		"insertText": "YDWEMultiboardSetItemWidthBJNull(mb, col, row, width)",
		"documentation": ""
	},
	"YDWENearbyElevatorExistsNull": {
		"original": "function YDWENearbyElevatorExistsNull takes real x, real y returns boolean",
		"fileName": "NearbyElevatorExists.j",
		"name": "YDWENearbyElevatorExistsNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}],
		"returnType": "boolean",
		"insertText": "YDWENearbyElevatorExistsNull(x, y)",
		"documentation": ""
	},
	"YDWENearbyElevatorExistsEnumNull": {
		"original": "function YDWENearbyElevatorExistsEnumNull takes nothing returns nothing",
		"fileName": "NearbyElevatorExistsEnum.j",
		"name": "YDWENearbyElevatorExistsEnumNull",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWENearbyElevatorExistsEnumNull()",
		"documentation": ""
	},
	"YDWENudgeItemsInRectEnumNull": {
		"original": "function YDWENudgeItemsInRectEnumNull takes nothing returns nothing",
		"fileName": "NudgeItemsInRectEnum.j",
		"name": "YDWENudgeItemsInRectEnumNull",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWENudgeItemsInRectEnumNull()",
		"documentation": ""
	},
	"YDWENudgeObjectsInRectNull": {
		"original": "function YDWENudgeObjectsInRectNull takes rect nudgeArea returns nothing",
		"fileName": "NudgeObjectsInRect.j",
		"name": "YDWENudgeObjectsInRectNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "rect",
			"name": "nudgeArea"
		}],
		"insertText": "YDWENudgeObjectsInRectNull(nudgeArea)",
		"documentation": ""
	},
	"YDWENudgeUnitsInRectEnumNull": {
		"original": "function YDWENudgeUnitsInRectEnumNull takes nothing returns nothing",
		"fileName": "NudgeUnitsInRectEnum.j",
		"name": "YDWENudgeUnitsInRectEnumNull",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWENudgeUnitsInRectEnumNull()",
		"documentation": ""
	},
	"YDWEPauseAllUnitsBJNull": {
		"original": "function YDWEPauseAllUnitsBJNull takes boolean pause returns nothing",
		"fileName": "PauseAllUnitsBJ.j",
		"name": "YDWEPauseAllUnitsBJNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "pause"
		}],
		"insertText": "YDWEPauseAllUnitsBJNull(pause)",
		"documentation": ""
	},
	"YDWEPlaySoundNull": {
		"original": "function YDWEPlaySoundNull takes string soundName returns nothing",
		"fileName": "PlaySound.j",
		"name": "YDWEPlaySoundNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "soundName"
		}],
		"insertText": "YDWEPlaySoundNull(soundName)",
		"documentation": ""
	},
	"YDWEPolledWaitNull": {
		"original": "function YDWEPolledWaitNull takes real duration returns nothing",
		"fileName": "PolledWait.j",
		"name": "YDWEPolledWaitNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "duration"
		}],
		"insertText": "YDWEPolledWaitNull(duration)",
		"documentation": ""
	},
	"YDWEReplaceUnitBJNull": {
		"original": "function YDWEReplaceUnitBJNull takes unit whichUnit, integer newUnitId, integer unitStateMethod returns unit",
		"fileName": "ReplaceUnitBJ.j",
		"name": "YDWEReplaceUnitBJNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "newUnitId"
		}, {
			"type": "integer",
			"name": "unitStateMethod"
		}],
		"returnType": "unit",
		"insertText": "YDWEReplaceUnitBJNull(whichUnit, newUnitId, unitStateMethod)",
		"documentation": ""
	},
	"YDWESetPlayerColorBJNull": {
		"original": "function YDWESetPlayerColorBJNull takes player whichPlayer, playercolor color, boolean changeExisting returns nothing",
		"fileName": "SetPlayerColorBJ.j",
		"name": "YDWESetPlayerColorBJNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "playercolor",
			"name": "color"
		}, {
			"type": "boolean",
			"name": "changeExisting"
		}],
		"insertText": "YDWESetPlayerColorBJNull(whichPlayer, color, changeExisting)",
		"documentation": ""
	},
	"YDWESetUnitFacingToFaceLocTimedNull": {
		"original": "function YDWESetUnitFacingToFaceLocTimedNull takes unit whichUnit, location target, real duration returns nothing",
		"fileName": "SetUnitFacingToFaceLocTimed.j",
		"name": "YDWESetUnitFacingToFaceLocTimedNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "location",
			"name": "target"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "YDWESetUnitFacingToFaceLocTimedNull(whichUnit, target, duration)",
		"documentation": ""
	},
	"YDWESetUnitFacingToFaceUnitTimedNull": {
		"original": "function YDWESetUnitFacingToFaceUnitTimedNull takes unit whichUnit, unit target, real duration returns nothing",
		"fileName": "SetUnitFacingToFaceUnitTimed.j",
		"name": "YDWESetUnitFacingToFaceUnitTimedNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "unit",
			"name": "target"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "YDWESetUnitFacingToFaceUnitTimedNull(whichUnit, target, duration)",
		"documentation": ""
	},
	"YDWESmartCameraPanBJNull": {
		"original": "function YDWESmartCameraPanBJNull takes player whichPlayer, location loc, real duration returns nothing",
		"fileName": "SmartCameraPanBJ.j",
		"name": "YDWESmartCameraPanBJNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}, {
			"type": "location",
			"name": "loc"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "YDWESmartCameraPanBJNull(whichPlayer, loc, duration)",
		"documentation": ""
	},
	"YDWETriggerActionUnitRescuedBJNull": {
		"original": "function YDWETriggerActionUnitRescuedBJNull takes nothing returns nothing",
		"fileName": "TriggerActionUnitRescuedBJ.j",
		"name": "YDWETriggerActionUnitRescuedBJNull",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWETriggerActionUnitRescuedBJNull()",
		"documentation": ""
	},
	"YDWETriggerRegisterEnterRectSimpleNull": {
		"original": "function YDWETriggerRegisterEnterRectSimpleNull takes trigger trig, rect r returns event",
		"fileName": "TriggerRegisterEnterRectSimple.j",
		"name": "YDWETriggerRegisterEnterRectSimpleNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "rect",
			"name": "r"
		}],
		"returnType": "event",
		"insertText": "YDWETriggerRegisterEnterRectSimpleNull(trig, r)",
		"documentation": ""
	},
	"YDWETriggerRegisterLeaveRectSimpleNull": {
		"original": "function YDWETriggerRegisterLeaveRectSimpleNull takes trigger trig, rect r returns event",
		"fileName": "TriggerRegisterLeaveRectSimple.j",
		"name": "YDWETriggerRegisterLeaveRectSimpleNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trig"
		}, {
			"type": "rect",
			"name": "r"
		}],
		"returnType": "event",
		"insertText": "YDWETriggerRegisterLeaveRectSimpleNull(trig, r)",
		"documentation": ""
	},
	"YDWETryInitRescuableTriggersBJNull": {
		"original": "function YDWETryInitRescuableTriggersBJNull takes nothing returns nothing",
		"fileName": "TryInitRescuableTriggersBJ.j",
		"name": "YDWETryInitRescuableTriggersBJNull",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWETryInitRescuableTriggersBJNull()",
		"documentation": ""
	},
	"YDWEUnitHasItemOfTypeBJNull": {
		"original": "function YDWEUnitHasItemOfTypeBJNull takes unit whichUnit, integer itemId returns boolean",
		"fileName": "UnitHasItemOfTypeBJ.j",
		"name": "YDWEUnitHasItemOfTypeBJNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}, {
			"type": "integer",
			"name": "itemId"
		}],
		"returnType": "boolean",
		"insertText": "YDWEUnitHasItemOfTypeBJNull(whichUnit, itemId)",
		"documentation": ""
	},
	"YDWEWakePlayerUnitsNull": {
		"original": "function YDWEWakePlayerUnitsNull takes player whichPlayer returns nothing",
		"fileName": "WakePlayerUnits.j",
		"name": "YDWEWakePlayerUnitsNull",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "whichPlayer"
		}],
		"insertText": "YDWEWakePlayerUnitsNull(whichPlayer)",
		"documentation": ""
	},
	"EXGetUnitAbility": {
		"original": "\tnative EXGetUnitAbility        takes unit u, integer abilcode returns ability",
		"fileName": "YDWEAbilityState.j",
		"name": "EXGetUnitAbility",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "u"
		}, {
			"type": "integer",
			"name": "abilcode"
		}],
		"returnType": "ability",
		"insertText": "EXGetUnitAbility(u, abilcode)",
		"documentation": ""
	},
	"EXGetUnitAbilityByIndex": {
		"original": "\tnative EXGetUnitAbilityByIndex takes unit u, integer index returns ability",
		"fileName": "YDWEAbilityState.j",
		"name": "EXGetUnitAbilityByIndex",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "u"
		}, {
			"type": "integer",
			"name": "index"
		}],
		"returnType": "ability",
		"insertText": "EXGetUnitAbilityByIndex(u, index)",
		"documentation": ""
	},
	"EXGetAbilityId": {
		"original": "\tnative EXGetAbilityId          takes ability abil returns integer",
		"fileName": "YDWEAbilityState.j",
		"name": "EXGetAbilityId",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "ability",
			"name": "abil"
		}],
		"returnType": "integer",
		"insertText": "EXGetAbilityId(abil)",
		"documentation": ""
	},
	"EXGetAbilityState": {
		"original": "\tnative EXGetAbilityState       takes ability abil, integer state_type returns real",
		"fileName": "YDWEAbilityState.j",
		"name": "EXGetAbilityState",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "ability",
			"name": "abil"
		}, {
			"type": "integer",
			"name": "state_type"
		}],
		"returnType": "real",
		"insertText": "EXGetAbilityState(abil, state_type)",
		"documentation": ""
	},
	"EXSetAbilityState": {
		"original": "\tnative EXSetAbilityState       takes ability abil, integer state_type, real value returns boolean",
		"fileName": "YDWEAbilityState.j",
		"name": "EXSetAbilityState",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "ability",
			"name": "abil"
		}, {
			"type": "integer",
			"name": "state_type"
		}, {
			"type": "real",
			"name": "value"
		}],
		"returnType": "boolean",
		"insertText": "EXSetAbilityState(abil, state_type, value)",
		"documentation": ""
	},
	"EXGetAbilityDataReal": {
		"original": "\tnative EXGetAbilityDataReal    takes ability abil, integer level, integer data_type returns real",
		"fileName": "YDWEAbilityState.j",
		"name": "EXGetAbilityDataReal",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "ability",
			"name": "abil"
		}, {
			"type": "integer",
			"name": "level"
		}, {
			"type": "integer",
			"name": "data_type"
		}],
		"returnType": "real",
		"insertText": "EXGetAbilityDataReal(abil, level, data_type)",
		"documentation": ""
	},
	"EXSetAbilityDataReal": {
		"original": "\tnative EXSetAbilityDataReal    takes ability abil, integer level, integer data_type, real value returns boolean",
		"fileName": "YDWEAbilityState.j",
		"name": "EXSetAbilityDataReal",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "ability",
			"name": "abil"
		}, {
			"type": "integer",
			"name": "level"
		}, {
			"type": "integer",
			"name": "data_type"
		}, {
			"type": "real",
			"name": "value"
		}],
		"returnType": "boolean",
		"insertText": "EXSetAbilityDataReal(abil, level, data_type, value)",
		"documentation": ""
	},
	"EXGetAbilityDataInteger": {
		"original": "\tnative EXGetAbilityDataInteger takes ability abil, integer level, integer data_type returns integer",
		"fileName": "YDWEAbilityState.j",
		"name": "EXGetAbilityDataInteger",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "ability",
			"name": "abil"
		}, {
			"type": "integer",
			"name": "level"
		}, {
			"type": "integer",
			"name": "data_type"
		}],
		"returnType": "integer",
		"insertText": "EXGetAbilityDataInteger(abil, level, data_type)",
		"documentation": ""
	},
	"EXSetAbilityDataInteger": {
		"original": "\tnative EXSetAbilityDataInteger takes ability abil, integer level, integer data_type, integer value returns boolean",
		"fileName": "YDWEAbilityState.j",
		"name": "EXSetAbilityDataInteger",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "ability",
			"name": "abil"
		}, {
			"type": "integer",
			"name": "level"
		}, {
			"type": "integer",
			"name": "data_type"
		}, {
			"type": "integer",
			"name": "value"
		}],
		"returnType": "boolean",
		"insertText": "EXSetAbilityDataInteger(abil, level, data_type, value)",
		"documentation": ""
	},
	"EXGetAbilityDataString": {
		"original": "\tnative EXGetAbilityDataString  takes ability abil, integer level, integer data_type returns string",
		"fileName": "YDWEAbilityState.j",
		"name": "EXGetAbilityDataString",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "ability",
			"name": "abil"
		}, {
			"type": "integer",
			"name": "level"
		}, {
			"type": "integer",
			"name": "data_type"
		}],
		"returnType": "string",
		"insertText": "EXGetAbilityDataString(abil, level, data_type)",
		"documentation": ""
	},
	"EXSetAbilityDataString": {
		"original": "\tnative EXSetAbilityDataString  takes ability abil, integer level, integer data_type, string value returns boolean",
		"fileName": "YDWEAbilityState.j",
		"name": "EXSetAbilityDataString",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "ability",
			"name": "abil"
		}, {
			"type": "integer",
			"name": "level"
		}, {
			"type": "integer",
			"name": "data_type"
		}, {
			"type": "string",
			"name": "value"
		}],
		"returnType": "boolean",
		"insertText": "EXSetAbilityDataString(abil, level, data_type, value)",
		"documentation": ""
	},
	"YDWEGetUnitAbilityState": {
		"original": "\tfunction YDWEGetUnitAbilityState takes unit u, integer abilcode, integer state_type returns real",
		"fileName": "YDWEAbilityState.j",
		"name": "YDWEGetUnitAbilityState",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}, {
			"type": "integer",
			"name": "abilcode"
		}, {
			"type": "integer",
			"name": "state_type"
		}],
		"returnType": "real",
		"insertText": "YDWEGetUnitAbilityState(u, abilcode, state_type)",
		"documentation": ""
	},
	"YDWEGetUnitAbilityDataInteger": {
		"original": "\tfunction YDWEGetUnitAbilityDataInteger takes unit u, integer abilcode, integer level, integer data_type returns integer",
		"fileName": "YDWEAbilityState.j",
		"name": "YDWEGetUnitAbilityDataInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}, {
			"type": "integer",
			"name": "abilcode"
		}, {
			"type": "integer",
			"name": "level"
		}, {
			"type": "integer",
			"name": "data_type"
		}],
		"returnType": "integer",
		"insertText": "YDWEGetUnitAbilityDataInteger(u, abilcode, level, data_type)",
		"documentation": ""
	},
	"YDWEGetUnitAbilityDataReal": {
		"original": "\tfunction YDWEGetUnitAbilityDataReal takes unit u, integer abilcode, integer level, integer data_type returns real",
		"fileName": "YDWEAbilityState.j",
		"name": "YDWEGetUnitAbilityDataReal",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}, {
			"type": "integer",
			"name": "abilcode"
		}, {
			"type": "integer",
			"name": "level"
		}, {
			"type": "integer",
			"name": "data_type"
		}],
		"returnType": "real",
		"insertText": "YDWEGetUnitAbilityDataReal(u, abilcode, level, data_type)",
		"documentation": ""
	},
	"YDWEGetUnitAbilityDataString": {
		"original": "\tfunction YDWEGetUnitAbilityDataString takes unit u, integer abilcode, integer level, integer data_type returns string",
		"fileName": "YDWEAbilityState.j",
		"name": "YDWEGetUnitAbilityDataString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}, {
			"type": "integer",
			"name": "abilcode"
		}, {
			"type": "integer",
			"name": "level"
		}, {
			"type": "integer",
			"name": "data_type"
		}],
		"returnType": "string",
		"insertText": "YDWEGetUnitAbilityDataString(u, abilcode, level, data_type)",
		"documentation": ""
	},
	"YDWESetUnitAbilityState": {
		"original": "\tfunction YDWESetUnitAbilityState takes unit u, integer abilcode, integer state_type, real value returns boolean",
		"fileName": "YDWEAbilityState.j",
		"name": "YDWESetUnitAbilityState",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}, {
			"type": "integer",
			"name": "abilcode"
		}, {
			"type": "integer",
			"name": "state_type"
		}, {
			"type": "real",
			"name": "value"
		}],
		"returnType": "boolean",
		"insertText": "YDWESetUnitAbilityState(u, abilcode, state_type, value)",
		"documentation": ""
	},
	"YDWESetUnitAbilityDataInteger": {
		"original": "\tfunction YDWESetUnitAbilityDataInteger takes unit u, integer abilcode, integer level, integer data_type, integer value returns boolean",
		"fileName": "YDWEAbilityState.j",
		"name": "YDWESetUnitAbilityDataInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}, {
			"type": "integer",
			"name": "abilcode"
		}, {
			"type": "integer",
			"name": "level"
		}, {
			"type": "integer",
			"name": "data_type"
		}, {
			"type": "integer",
			"name": "value"
		}],
		"returnType": "boolean",
		"insertText": "YDWESetUnitAbilityDataInteger(u, abilcode, level, data_type, value)",
		"documentation": ""
	},
	"YDWESetUnitAbilityDataReal": {
		"original": "\tfunction YDWESetUnitAbilityDataReal takes unit u, integer abilcode, integer level, integer data_type, real value returns boolean",
		"fileName": "YDWEAbilityState.j",
		"name": "YDWESetUnitAbilityDataReal",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}, {
			"type": "integer",
			"name": "abilcode"
		}, {
			"type": "integer",
			"name": "level"
		}, {
			"type": "integer",
			"name": "data_type"
		}, {
			"type": "real",
			"name": "value"
		}],
		"returnType": "boolean",
		"insertText": "YDWESetUnitAbilityDataReal(u, abilcode, level, data_type, value)",
		"documentation": ""
	},
	"YDWESetUnitAbilityDataString": {
		"original": "\tfunction YDWESetUnitAbilityDataString takes unit u, integer abilcode, integer level, integer data_type, string value returns boolean",
		"fileName": "YDWEAbilityState.j",
		"name": "YDWESetUnitAbilityDataString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}, {
			"type": "integer",
			"name": "abilcode"
		}, {
			"type": "integer",
			"name": "level"
		}, {
			"type": "integer",
			"name": "data_type"
		}, {
			"type": "string",
			"name": "value"
		}],
		"returnType": "boolean",
		"insertText": "YDWESetUnitAbilityDataString(u, abilcode, level, data_type, value)",
		"documentation": ""
	},
	"EXSetAbilityAEmeDataA": {
		"original": "\tnative EXSetAbilityAEmeDataA takes ability abil, integer unitid returns boolean",
		"fileName": "YDWEAbilityState.j",
		"name": "EXSetAbilityAEmeDataA",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "ability",
			"name": "abil"
		}, {
			"type": "integer",
			"name": "unitid"
		}],
		"returnType": "boolean",
		"insertText": "EXSetAbilityAEmeDataA(abil, unitid)",
		"documentation": ""
	},
	"EXPauseUnit": {
		"original": "\tnative EXPauseUnit takes unit u, boolean flag returns nothing",
		"fileName": "YDWEAbilityState.j",
		"name": "EXPauseUnit",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "unit",
			"name": "u"
		}, {
			"type": "boolean",
			"name": "flag"
		}],
		"insertText": "EXPauseUnit(u, flag)",
		"documentation": ""
	},
	"YDWEUnitTransform": {
		"original": "\tfunction YDWEUnitTransform takes unit u, integer abilcode, integer targetid returns nothing",
		"fileName": "YDWEAbilityState.j",
		"name": "YDWEUnitTransform",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}, {
			"type": "integer",
			"name": "abilcode"
		}, {
			"type": "integer",
			"name": "targetid"
		}],
		"insertText": "YDWEUnitTransform(u, abilcode, targetid)",
		"documentation": ""
	},
	"YDWEUnitAddStun": {
		"original": "\tfunction YDWEUnitAddStun takes unit u returns nothing",
		"fileName": "YDWEAbilityState.j",
		"name": "YDWEUnitAddStun",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}],
		"insertText": "YDWEUnitAddStun(u)",
		"documentation": ""
	},
	"YDWEUnitRemoveStun": {
		"original": "\tfunction YDWEUnitRemoveStun takes unit u returns nothing",
		"fileName": "YDWEAbilityState.j",
		"name": "YDWEUnitRemoveStun",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}],
		"insertText": "YDWEUnitRemoveStun(u)",
		"documentation": ""
	},
	"EXGetItemDataString": {
		"original": "\tnative EXGetItemDataString takes integer itemcode, integer data_type returns string",
		"fileName": "YDWEAbilityState.j",
		"name": "EXGetItemDataString",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "itemcode"
		}, {
			"type": "integer",
			"name": "data_type"
		}],
		"returnType": "string",
		"insertText": "EXGetItemDataString(itemcode, data_type)",
		"documentation": ""
	},
	"EXSetItemDataString": {
		"original": "\tnative EXSetItemDataString takes integer itemcode, integer data_type, string value returns boolean",
		"fileName": "YDWEAbilityState.j",
		"name": "EXSetItemDataString",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "itemcode"
		}, {
			"type": "integer",
			"name": "data_type"
		}, {
			"type": "string",
			"name": "value"
		}],
		"returnType": "boolean",
		"insertText": "EXSetItemDataString(itemcode, data_type, value)",
		"documentation": ""
	},
	"YDWEGetItemDataString": {
		"original": "\tfunction YDWEGetItemDataString takes integer itemcode, integer data_type returns string",
		"fileName": "YDWEAbilityState.j",
		"name": "YDWEGetItemDataString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "itemcode"
		}, {
			"type": "integer",
			"name": "data_type"
		}],
		"returnType": "string",
		"insertText": "YDWEGetItemDataString(itemcode, data_type)",
		"documentation": ""
	},
	"YDWESetItemDataString": {
		"original": "\tfunction YDWESetItemDataString takes integer itemcode, integer data_type, string value returns boolean",
		"fileName": "YDWEAbilityState.j",
		"name": "YDWESetItemDataString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "itemcode"
		}, {
			"type": "integer",
			"name": "data_type"
		}, {
			"type": "string",
			"name": "value"
		}],
		"returnType": "boolean",
		"insertText": "YDWESetItemDataString(itemcode, data_type, value)",
		"documentation": ""
	},
	"YDWEAddAIOrder": {
		"original": "function YDWEAddAIOrder takes unit u,integer N,integer index,string orderA,string orderB,string orderC,integer probability returns nothing",
		"fileName": "YDWEAddAIOrder.j",
		"name": "YDWEAddAIOrder",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}, {
			"type": "integer",
			"name": "N"
		}, {
			"type": "integer",
			"name": "index"
		}, {
			"type": "string",
			"name": "orderA"
		}, {
			"type": "string",
			"name": "orderB"
		}, {
			"type": "string",
			"name": "orderC"
		}, {
			"type": "integer",
			"name": "probability"
		}],
		"insertText": "YDWEAddAIOrder(u, N, index, orderA, orderB, orderC, probability)",
		"documentation": "AI-自动施放技能"
	},
	"YDWEFlushAIOrder": {
		"original": "function YDWEFlushAIOrder takes unit u returns nothing",
		"fileName": "YDWEAddAIOrder.j",
		"name": "YDWEFlushAIOrder",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}],
		"insertText": "YDWEFlushAIOrder(u)",
		"documentation": ""
	},
	"YDWEGetUnitGoldCost": {
		"original": "function YDWEGetUnitGoldCost takes integer unitid returns integer",
		"fileName": "YDWEAdvancedUnitDataSystem.j",
		"name": "YDWEGetUnitGoldCost",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "unitid"
		}],
		"returnType": "integer",
		"insertText": "YDWEGetUnitGoldCost(unitid)",
		"documentation": "获取 黄金消耗 (单位类型)"
	},
	"YDWEGetUnitWoodCost": {
		"original": "function YDWEGetUnitWoodCost takes integer unitid returns integer",
		"fileName": "YDWEAdvancedUnitDataSystem.j",
		"name": "YDWEGetUnitWoodCost",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "unitid"
		}],
		"returnType": "integer",
		"insertText": "YDWEGetUnitWoodCost(unitid)",
		"documentation": "获取 木头消耗 (单位类型)"
	},
	"YDWEGetUnitBuildTime": {
		"original": "function YDWEGetUnitBuildTime takes integer unitid returns integer",
		"fileName": "YDWEAdvancedUnitDataSystem.j",
		"name": "YDWEGetUnitBuildTime",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "unitid"
		}],
		"returnType": "integer",
		"insertText": "YDWEGetUnitBuildTime(unitid)",
		"documentation": "获取 建造时间 (单位类型)"
	},
	"YDWEGetUnitCountDone": {
		"original": "function YDWEGetUnitCountDone takes integer unitid returns integer",
		"fileName": "YDWEAdvancedUnitDataSystem.j",
		"name": "YDWEGetUnitCountDone",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "unitid"
		}],
		"returnType": "integer",
		"insertText": "YDWEGetUnitCountDone(unitid)",
		"documentation": ""
	},
	"YDWEGetUnitFoodUsed": {
		"original": "function YDWEGetUnitFoodUsed takes unit whichUnit returns integer",
		"fileName": "YDWEAdvancedUnitDataSystem.j",
		"name": "YDWEGetUnitFoodUsed",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "integer",
		"insertText": "YDWEGetUnitFoodUsed(whichUnit)",
		"documentation": "获取 消耗人口 (单位)"
	},
	"YDWEGetUnitFoodMade": {
		"original": "function YDWEGetUnitFoodMade takes unit whichUnit returns integer",
		"fileName": "YDWEAdvancedUnitDataSystem.j",
		"name": "YDWEGetUnitFoodMade",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "whichUnit"
		}],
		"returnType": "integer",
		"insertText": "YDWEGetUnitFoodMade(whichUnit)",
		"documentation": "获取 提供人口 (单位)"
	},
	"YDWEGetUnitArmor": {
		"original": "function YDWEGetUnitArmor takes unit u,integer aid returns real",
		"fileName": "YDWEAdvancedUnitDataSystem.j",
		"name": "YDWEGetUnitArmor",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}, {
			"type": "integer",
			"name": "aid"
		}],
		"returnType": "real",
		"insertText": "YDWEGetUnitArmor(u, aid)",
		"documentation": "获取单位护甲<Rising_Dusk制作>"
	},
	"YDWEAroundSystem": {
		"original": "    function YDWEAroundSystem takes unit satellite, unit star, real angleRate, real displacement, real riseRate,real timeout, real interval returns nothing",
		"fileName": "YDWEAroundSystem.j",
		"name": "YDWEAroundSystem",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "satellite"
		}, {
			"type": "unit",
			"name": "star"
		}, {
			"type": "real",
			"name": "angleRate"
		}, {
			"type": "real",
			"name": "displacement"
		}, {
			"type": "real",
			"name": "riseRate"
		}, {
			"type": "real",
			"name": "timeout"
		}, {
			"type": "real",
			"name": "interval"
		}],
		"insertText": "YDWEAroundSystem(satellite, star, angleRate, displacement, riseRate, timeout, interval)",
		"documentation": "万能环绕函数<Fetrix_sai制作>"
	},
	"YDWEAttackWaveTimer": {
		"original": "\tfunction YDWEAttackWaveTimer takes player p,integer N,integer unitid,location whichLocation,real face,location TargetLocation,real timeout returns nothing",
		"fileName": "YDWEAttackWaveTimer.j",
		"name": "YDWEAttackWaveTimer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "p"
		}, {
			"type": "integer",
			"name": "N"
		}, {
			"type": "integer",
			"name": "unitid"
		}, {
			"type": "location",
			"name": "whichLocation"
		}, {
			"type": "real",
			"name": "face"
		}, {
			"type": "location",
			"name": "TargetLocation"
		}, {
			"type": "real",
			"name": "timeout"
		}],
		"insertText": "YDWEAttackWaveTimer(p, N, unitid, whichLocation, face, TargetLocation, timeout)",
		"documentation": "刷兵系统"
	},
	"YDWERemoveAttackWaveByUnitID": {
		"original": "\tfunction YDWERemoveAttackWaveByUnitID takes integer unitid,location whichLocation,real timeout returns nothing",
		"fileName": "YDWEAttackWaveTimer.j",
		"name": "YDWERemoveAttackWaveByUnitID",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "unitid"
		}, {
			"type": "location",
			"name": "whichLocation"
		}, {
			"type": "real",
			"name": "timeout"
		}],
		"insertText": "YDWERemoveAttackWaveByUnitID(unitid, whichLocation, timeout)",
		"documentation": "取消刷兵(输入参数)"
	},
	"YDWERemoveAttackWaveByTimer": {
		"original": "\tfunction YDWERemoveAttackWaveByTimer takes timer t returns nothing",
		"fileName": "YDWEAttackWaveTimer.j",
		"name": "YDWERemoveAttackWaveByTimer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "timer",
			"name": "t"
		}],
		"insertText": "YDWERemoveAttackWaveByTimer(t)",
		"documentation": "取消刷兵(删除计时器)"
	},
	"YDWERemoveAttackWaveReturnTimer": {
		"original": "\tfunction YDWERemoveAttackWaveReturnTimer takes nothing returns timer",
		"fileName": "YDWEAttackWaveTimer.j",
		"name": "YDWERemoveAttackWaveReturnTimer",
		"isConstant": false,
		"isNative": false,
		"returnType": "timer",
		"insertText": "YDWERemoveAttackWaveReturnTimer()",
		"documentation": "最后创建的刷兵计时器[YDWE]"
	},
	"YDWECoordinateX": {
		"original": "function YDWECoordinateX takes real x returns real",
		"fileName": "YDWEBase_common.j",
		"name": "YDWECoordinateX",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "x"
		}],
		"returnType": "real",
		"insertText": "YDWECoordinateX(x)",
		"documentation": "修正X坐标 [YDWE]"
	},
	"YDWECoordinateY": {
		"original": "function YDWECoordinateY takes real y returns real",
		"fileName": "YDWEBase_common.j",
		"name": "YDWECoordinateY",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "y"
		}],
		"returnType": "real",
		"insertText": "YDWECoordinateY(y)",
		"documentation": "修正Y坐标 [YDWE]"
	},
	"YDWEDistanceBetweenUnits": {
		"original": "function YDWEDistanceBetweenUnits takes unit a,unit b returns real",
		"fileName": "YDWEBase_common.j",
		"name": "YDWEDistanceBetweenUnits",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "a"
		}, {
			"type": "unit",
			"name": "b"
		}],
		"returnType": "real",
		"insertText": "YDWEDistanceBetweenUnits(a, b)",
		"documentation": "两个单位之间的距离 [YDWE]"
	},
	"YDWEAngleBetweenUnits": {
		"original": "function YDWEAngleBetweenUnits takes unit fromUnit, unit toUnit returns real",
		"fileName": "YDWEBase_common.j",
		"name": "YDWEAngleBetweenUnits",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "fromUnit"
		}, {
			"type": "unit",
			"name": "toUnit"
		}],
		"returnType": "real",
		"insertText": "YDWEAngleBetweenUnits(fromUnit, toUnit)",
		"documentation": "两个单位之间的角度 [YDWE]"
	},
	"YDWEGetRect": {
		"original": "function YDWEGetRect takes real x,real y,real width, real height returns rect",
		"fileName": "YDWEBase_common.j",
		"name": "YDWEGetRect",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "width"
		}, {
			"type": "real",
			"name": "height"
		}],
		"returnType": "rect",
		"insertText": "YDWEGetRect(x, y, width, height)",
		"documentation": "新建矩形区域(指定中心坐标)[YDWE]"
	},
	"YDWEFlyEnable": {
		"original": "function YDWEFlyEnable takes unit u returns nothing",
		"fileName": "YDWEBase_common.j",
		"name": "YDWEFlyEnable",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}],
		"insertText": "YDWEFlyEnable(u)",
		"documentation": "设置单位可以飞行 [YDWE]"
	},
	"YDWEId2S": {
		"original": "function YDWEId2S takes integer value returns string",
		"fileName": "YDWEBase_common.j",
		"name": "YDWEId2S",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "value"
		}],
		"returnType": "string",
		"insertText": "YDWEId2S(value)",
		"documentation": "转换Id为字符串"
	},
	"YDWES2Id": {
		"original": "function YDWES2Id takes string targetstr returns integer",
		"fileName": "YDWEBase_common.j",
		"name": "YDWES2Id",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "targetstr"
		}],
		"returnType": "integer",
		"insertText": "YDWES2Id(targetstr)",
		"documentation": "转换字符串为Id [YDWE]"
	},
	"YDWES2UnitId": {
		"original": "function YDWES2UnitId takes string targetstr returns integer",
		"fileName": "YDWEBase_common.j",
		"name": "YDWES2UnitId",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "targetstr"
		}],
		"returnType": "integer",
		"insertText": "YDWES2UnitId(targetstr)",
		"documentation": "转换字符串为单位Id [YDWE]"
	},
	"YDWES2ItemId": {
		"original": "function YDWES2ItemId takes string targetstr returns integer",
		"fileName": "YDWEBase_common.j",
		"name": "YDWES2ItemId",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "targetstr"
		}],
		"returnType": "integer",
		"insertText": "YDWES2ItemId(targetstr)",
		"documentation": "转换字符串为物品Id [YDWE]"
	},
	"GetLastAbilityCastingUnit": {
		"original": "function GetLastAbilityCastingUnit takes nothing returns unit",
		"fileName": "YDWEBase_common.j",
		"name": "GetLastAbilityCastingUnit",
		"isConstant": false,
		"isNative": false,
		"returnType": "unit",
		"insertText": "GetLastAbilityCastingUnit()",
		"documentation": "获取最后结束施放特殊技能的单位"
	},
	"GetLastAbilityTargetUnit": {
		"original": "function GetLastAbilityTargetUnit takes nothing returns unit",
		"fileName": "YDWEBase_common.j",
		"name": "GetLastAbilityTargetUnit",
		"isConstant": false,
		"isNative": false,
		"returnType": "unit",
		"insertText": "GetLastAbilityTargetUnit()",
		"documentation": "获取最后被特殊技能命中的单位"
	},
	"YDWESetMapLimitCoordinate": {
		"original": "function YDWESetMapLimitCoordinate takes real MinX,real MaxX,real MinY,real MaxY returns nothing",
		"fileName": "YDWEBase_common.j",
		"name": "YDWESetMapLimitCoordinate",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "MinX"
		}, {
			"type": "real",
			"name": "MaxX"
		}, {
			"type": "real",
			"name": "MinY"
		}, {
			"type": "real",
			"name": "MaxY"
		}],
		"insertText": "YDWESetMapLimitCoordinate(MinX, MaxX, MinY, MaxY)",
		"documentation": "设置地图边界坐标 [YDWE]"
	},
	"YDWESyStemAbilityCastingOverTriggerAction": {
		"original": "function YDWESyStemAbilityCastingOverTriggerAction takes unit hero, integer index returns nothing",
		"fileName": "YDWEBase_common.j",
		"name": "YDWESyStemAbilityCastingOverTriggerAction",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "hero"
		}, {
			"type": "integer",
			"name": "index"
		}],
		"insertText": "YDWESyStemAbilityCastingOverTriggerAction(hero, index)",
		"documentation": ""
	},
	"YDWESyStemAbilityCastingOverRegistTrigger": {
		"original": "function YDWESyStemAbilityCastingOverRegistTrigger takes trigger trg,integer index returns nothing ",
		"fileName": "YDWEBase_common.j",
		"name": "YDWESyStemAbilityCastingOverRegistTrigger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trg"
		}, {
			"type": "integer",
			"name": "index"
		}],
		"insertText": "YDWESyStemAbilityCastingOverRegistTrigger(trg, index)",
		"documentation": "任意单位施放特殊技能结束"
	},
	"YDWECreateUnitPool": {
		"original": "function YDWECreateUnitPool takes nothing returns nothing",
		"fileName": "YDWEBase_common.j",
		"name": "YDWECreateUnitPool",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWECreateUnitPool()",
		"documentation": "创建单位池 [YDWE]"
	},
	"YDWEGetLastUnitPool": {
		"original": "function YDWEGetLastUnitPool takes nothing returns unitpool",
		"fileName": "YDWEBase_common.j",
		"name": "YDWEGetLastUnitPool",
		"isConstant": false,
		"isNative": false,
		"returnType": "unitpool",
		"insertText": "YDWEGetLastUnitPool()",
		"documentation": "最后创建的单位池 [YDWE]"
	},
	"YDWEGetLastPoolAbstractedUnit": {
		"original": "function YDWEGetLastPoolAbstractedUnit takes nothing returns unit",
		"fileName": "YDWEBase_common.j",
		"name": "YDWEGetLastPoolAbstractedUnit",
		"isConstant": false,
		"isNative": false,
		"returnType": "unit",
		"insertText": "YDWEGetLastPoolAbstractedUnit()",
		"documentation": "最后从单位池里取出的单位"
	},
	"YDWECreateItemPool": {
		"original": "function YDWECreateItemPool takes nothing returns nothing",
		"fileName": "YDWEBase_common.j",
		"name": "YDWECreateItemPool",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWECreateItemPool()",
		"documentation": "创建物品池 [YDWE]"
	},
	"YDWEGetLastItemPool": {
		"original": "function YDWEGetLastItemPool takes nothing returns itempool",
		"fileName": "YDWEBase_common.j",
		"name": "YDWEGetLastItemPool",
		"isConstant": false,
		"isNative": false,
		"returnType": "itempool",
		"insertText": "YDWEGetLastItemPool()",
		"documentation": "最后创建的物品池 [YDWE]"
	},
	"YDWEGetLastPoolAbstractedItem": {
		"original": "function YDWEGetLastPoolAbstractedItem takes nothing returns item",
		"fileName": "YDWEBase_common.j",
		"name": "YDWEGetLastPoolAbstractedItem",
		"isConstant": false,
		"isNative": false,
		"returnType": "item",
		"insertText": "YDWEGetLastPoolAbstractedItem()",
		"documentation": "最后从物品池里取出的物品[YDWE]"
	},
	"YDWESetAttackDamageWeaponType": {
		"original": "function YDWESetAttackDamageWeaponType takes attacktype at,damagetype dt,weapontype wt returns nothing",
		"fileName": "YDWEBase_common.j",
		"name": "YDWESetAttackDamageWeaponType",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "attacktype",
			"name": "at"
		}, {
			"type": "damagetype",
			"name": "dt"
		}, {
			"type": "weapontype",
			"name": "wt"
		}],
		"insertText": "YDWESetAttackDamageWeaponType(at, dt, wt)",
		"documentation": "设置默认攻击|伤害|武器类型 [YDWE]"
	},
	"YDWEGetPlayerColorString": {
		"original": "function YDWEGetPlayerColorString takes player p, string s returns string",
		"fileName": "YDWEBase_common.j",
		"name": "YDWEGetPlayerColorString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "p"
		}, {
			"type": "string",
			"name": "s"
		}],
		"returnType": "string",
		"insertText": "YDWEGetPlayerColorString(p, s)",
		"documentation": "附加上玩家颜色"
	},
	"YDWEGetUnitItemSoftId": {
		"original": "function YDWEGetUnitItemSoftId takes unit hero,item it returns integer",
		"fileName": "YDWEBase_common.j",
		"name": "YDWEGetUnitItemSoftId",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "hero"
		}, {
			"type": "item",
			"name": "it"
		}],
		"returnType": "integer",
		"insertText": "YDWEGetUnitItemSoftId(hero, it)",
		"documentation": "物品在物品栏中的位置[YDWE]"
	},
	"YDWEVersion_Display": {
		"original": "function YDWEVersion_Display takes nothing returns boolean",
		"fileName": "YDWEBase_common.j",
		"name": "YDWEVersion_Display",
		"isConstant": false,
		"isNative": false,
		"returnType": "boolean",
		"insertText": "YDWEVersion_Display()",
		"documentation": ""
	},
	"YDWEVersion_Init": {
		"original": "function YDWEVersion_Init takes nothing returns nothing",
		"fileName": "YDWEBase_common.j",
		"name": "YDWEVersion_Init",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEVersion_Init()",
		"documentation": ""
	},
	"InitializeYD": {
		"original": "function InitializeYD takes nothing returns nothing",
		"fileName": "YDWEBase_common.j",
		"name": "InitializeYD",
		"isConstant": false,
		"isNative": false,
		"insertText": "InitializeYD()",
		"documentation": ""
	},
	"YDWEH2I": {
		"original": "function YDWEH2I takes handle h returns integer",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEH2I",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "handle",
			"name": "h"
		}],
		"returnType": "integer",
		"insertText": "YDWEH2I(h)",
		"documentation": ""
	},
	"YDWEFlushAllData": {
		"original": "function YDWEFlushAllData takes nothing returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEFlushAllData",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEFlushAllData()",
		"documentation": ""
	},
	"YDWEFlushMissionByInteger": {
		"original": "function YDWEFlushMissionByInteger takes integer i returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEFlushMissionByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"insertText": "YDWEFlushMissionByInteger(i)",
		"documentation": "清空 目录 (整数路径)"
	},
	"YDWEFlushMissionByString": {
		"original": "function YDWEFlushMissionByString takes string s returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEFlushMissionByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}],
		"insertText": "YDWEFlushMissionByString(s)",
		"documentation": "清空 目录 (字符串路径)"
	},
	"YDWEFlushStoredIntegerByInteger": {
		"original": "function YDWEFlushStoredIntegerByInteger takes integer i,integer j returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEFlushStoredIntegerByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}, {
			"type": "integer",
			"name": "j"
		}],
		"insertText": "YDWEFlushStoredIntegerByInteger(i, j)",
		"documentation": ""
	},
	"YDWEFlushStoredIntegerByString": {
		"original": "function YDWEFlushStoredIntegerByString takes string s1,string s2 returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEFlushStoredIntegerByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s1"
		}, {
			"type": "string",
			"name": "s2"
		}],
		"insertText": "YDWEFlushStoredIntegerByString(s1, s2)",
		"documentation": ""
	},
	"YDWEHaveSavedIntegerByInteger": {
		"original": "function YDWEHaveSavedIntegerByInteger takes integer i,integer j returns boolean",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEHaveSavedIntegerByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}, {
			"type": "integer",
			"name": "j"
		}],
		"returnType": "boolean",
		"insertText": "YDWEHaveSavedIntegerByInteger(i, j)",
		"documentation": ""
	},
	"YDWEHaveSavedIntegerByString": {
		"original": "function YDWEHaveSavedIntegerByString takes string s1,string s2 returns boolean",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEHaveSavedIntegerByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s1"
		}, {
			"type": "string",
			"name": "s2"
		}],
		"returnType": "boolean",
		"insertText": "YDWEHaveSavedIntegerByString(s1, s2)",
		"documentation": ""
	},
	"YDWESaveIntegerByInteger": {
		"original": "function YDWESaveIntegerByInteger takes integer pTable,integer pKey,integer i returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveIntegerByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "integer",
			"name": "i"
		}],
		"insertText": "YDWESaveIntegerByInteger(pTable, pKey, i)",
		"documentation": "存储 整数 (整数路径)"
	},
	"YDWESaveIntegerByString": {
		"original": "function YDWESaveIntegerByString takes string pTable,string pKey,integer i returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveIntegerByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "integer",
			"name": "i"
		}],
		"insertText": "YDWESaveIntegerByString(pTable, pKey, i)",
		"documentation": "存储 整数 (字符串路径)"
	},
	"YDWEGetIntegerByInteger": {
		"original": "function YDWEGetIntegerByInteger takes integer pTable,integer pKey returns integer",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetIntegerByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "integer",
		"insertText": "YDWEGetIntegerByInteger(pTable, pKey)",
		"documentation": "获取 整数 (整数路径)"
	},
	"YDWEGetIntegerByString": {
		"original": "function YDWEGetIntegerByString takes string pTable,string pKey returns integer",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetIntegerByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "integer",
		"insertText": "YDWEGetIntegerByString(pTable, pKey)",
		"documentation": "获取 整数 (字符串路径)"
	},
	"YDWESaveRealByInteger": {
		"original": "function YDWESaveRealByInteger takes integer pTable,integer pKey,real r returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveRealByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "real",
			"name": "r"
		}],
		"insertText": "YDWESaveRealByInteger(pTable, pKey, r)",
		"documentation": "存储 实数 (整数路径)"
	},
	"YDWESaveRealByString": {
		"original": "function YDWESaveRealByString takes string pTable,string pKey,real r returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveRealByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "real",
			"name": "r"
		}],
		"insertText": "YDWESaveRealByString(pTable, pKey, r)",
		"documentation": "存储 实数 (字符串路径)"
	},
	"YDWEGetRealByInteger": {
		"original": "function YDWEGetRealByInteger takes integer pTable,integer pKey returns real",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetRealByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "real",
		"insertText": "YDWEGetRealByInteger(pTable, pKey)",
		"documentation": "获取 实数 (整数路径)"
	},
	"YDWEGetRealByString": {
		"original": "function YDWEGetRealByString takes string pTable,string pKey returns real",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetRealByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "real",
		"insertText": "YDWEGetRealByString(pTable, pKey)",
		"documentation": "获取 实数 (字符串路径)"
	},
	"YDWESaveStringByInteger": {
		"original": "function YDWESaveStringByInteger takes integer pTable,integer pKey,string s returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveStringByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "string",
			"name": "s"
		}],
		"insertText": "YDWESaveStringByInteger(pTable, pKey, s)",
		"documentation": "存储 字符串 (整数路径)"
	},
	"YDWESaveStringByString": {
		"original": "function YDWESaveStringByString takes string pTable,string pKey,string s returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveStringByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "string",
			"name": "s"
		}],
		"insertText": "YDWESaveStringByString(pTable, pKey, s)",
		"documentation": "存储 字符串 (字符串路径)"
	},
	"YDWEGetStringByInteger": {
		"original": "function YDWEGetStringByInteger takes integer pTable,integer pKey returns string",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetStringByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "string",
		"insertText": "YDWEGetStringByInteger(pTable, pKey)",
		"documentation": "获取 字符串 (整数路径)"
	},
	"YDWEGetStringByString": {
		"original": "function YDWEGetStringByString takes string pTable,string pKey returns string",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetStringByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "string",
		"insertText": "YDWEGetStringByString(pTable, pKey)",
		"documentation": "获取 字符串 (字符串路径)"
	},
	"YDWESaveBooleanByInteger": {
		"original": "function YDWESaveBooleanByInteger takes integer pTable,integer pKey,boolean b returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveBooleanByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "boolean",
			"name": "b"
		}],
		"insertText": "YDWESaveBooleanByInteger(pTable, pKey, b)",
		"documentation": "存储 真值 (整数路径)"
	},
	"YDWESaveBooleanByString": {
		"original": "function YDWESaveBooleanByString takes string pTable,string pKey,boolean b returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveBooleanByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "boolean",
			"name": "b"
		}],
		"insertText": "YDWESaveBooleanByString(pTable, pKey, b)",
		"documentation": "存储 真值 (字符串路径)"
	},
	"YDWEGetBooleanByInteger": {
		"original": "function YDWEGetBooleanByInteger takes integer pTable,integer pKey returns boolean",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetBooleanByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "boolean",
		"insertText": "YDWEGetBooleanByInteger(pTable, pKey)",
		"documentation": "获取 真值 (整数路径)"
	},
	"YDWEGetBooleanByString": {
		"original": "function YDWEGetBooleanByString takes string pTable,string pKey returns boolean",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetBooleanByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "boolean",
		"insertText": "YDWEGetBooleanByString(pTable, pKey)",
		"documentation": "获取 真值 (字符串路径)"
	},
	"YDWESaveUnitByInteger": {
		"original": "function YDWESaveUnitByInteger takes integer pTable,integer pKey,unit u returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveUnitByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "unit",
			"name": "u"
		}],
		"insertText": "YDWESaveUnitByInteger(pTable, pKey, u)",
		"documentation": "存储 单位 (整数路径)"
	},
	"YDWESaveUnitByString": {
		"original": "function YDWESaveUnitByString takes string pTable,string pKey,unit u returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveUnitByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "unit",
			"name": "u"
		}],
		"insertText": "YDWESaveUnitByString(pTable, pKey, u)",
		"documentation": "存储 单位 (字符串路径)"
	},
	"YDWEGetUnitByInteger": {
		"original": "function YDWEGetUnitByInteger takes integer pTable,integer pKey returns unit",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetUnitByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "unit",
		"insertText": "YDWEGetUnitByInteger(pTable, pKey)",
		"documentation": "获取 单位 (整数路径)"
	},
	"YDWEGetUnitByString": {
		"original": "function YDWEGetUnitByString takes string pTable,string pKey returns unit",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetUnitByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "unit",
		"insertText": "YDWEGetUnitByString(pTable, pKey)",
		"documentation": "获取 单位 (字符串路径)"
	},
	"YDWESaveUnitIDByInteger": {
		"original": "function YDWESaveUnitIDByInteger takes integer pTable,integer pKey,integer uid returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveUnitIDByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "integer",
			"name": "uid"
		}],
		"insertText": "YDWESaveUnitIDByInteger(pTable, pKey, uid)",
		"documentation": "存储 单位类型 (整数路径)"
	},
	"YDWESaveUnitIDByString": {
		"original": "function YDWESaveUnitIDByString takes string pTable,string pKey,integer uid returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveUnitIDByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "integer",
			"name": "uid"
		}],
		"insertText": "YDWESaveUnitIDByString(pTable, pKey, uid)",
		"documentation": "存储 单位类型 (字符串路径)"
	},
	"YDWEGetUnitIDByInteger": {
		"original": "function YDWEGetUnitIDByInteger takes integer pTable,integer pKey returns integer",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetUnitIDByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "integer",
		"insertText": "YDWEGetUnitIDByInteger(pTable, pKey)",
		"documentation": "获取 单位类型 (整数路径)"
	},
	"YDWEGetUnitIDByString": {
		"original": "function YDWEGetUnitIDByString takes string pTable,string pKey returns integer",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetUnitIDByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "integer",
		"insertText": "YDWEGetUnitIDByString(pTable, pKey)",
		"documentation": "获取 单位类型 (字符串路径)"
	},
	"YDWESaveAbilityIDByInteger": {
		"original": "function YDWESaveAbilityIDByInteger takes integer pTable,integer pKey,integer abid returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveAbilityIDByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "integer",
			"name": "abid"
		}],
		"insertText": "YDWESaveAbilityIDByInteger(pTable, pKey, abid)",
		"documentation": "存储 技能 (整数路径)"
	},
	"YDWESaveAbilityIDByString": {
		"original": "function YDWESaveAbilityIDByString takes string pTable,string pKey,integer abid returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveAbilityIDByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "integer",
			"name": "abid"
		}],
		"insertText": "YDWESaveAbilityIDByString(pTable, pKey, abid)",
		"documentation": "存储 技能 (字符串路径)"
	},
	"YDWEGetAbilityIDByInteger": {
		"original": "function YDWEGetAbilityIDByInteger takes integer pTable,integer pKey returns integer",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetAbilityIDByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "integer",
		"insertText": "YDWEGetAbilityIDByInteger(pTable, pKey)",
		"documentation": "获取 技能 (整数路径)"
	},
	"YDWEGetAbilityIDByString": {
		"original": "function YDWEGetAbilityIDByString takes string pTable,string pKey returns integer",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetAbilityIDByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "integer",
		"insertText": "YDWEGetAbilityIDByString(pTable, pKey)",
		"documentation": "获取 技能 (字符串路径)"
	},
	"YDWESavePlayerByInteger": {
		"original": "function YDWESavePlayerByInteger takes integer pTable,integer pKey,player p returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESavePlayerByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "player",
			"name": "p"
		}],
		"insertText": "YDWESavePlayerByInteger(pTable, pKey, p)",
		"documentation": "存储 玩家 (整数路径)"
	},
	"YDWESavePlayerByString": {
		"original": "function YDWESavePlayerByString takes string pTable,string pKey,player p returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESavePlayerByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "player",
			"name": "p"
		}],
		"insertText": "YDWESavePlayerByString(pTable, pKey, p)",
		"documentation": "存储 玩家 (字符串路径)"
	},
	"YDWEGetPlayerByInteger": {
		"original": "function YDWEGetPlayerByInteger takes integer pTable,integer pKey returns player",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetPlayerByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "player",
		"insertText": "YDWEGetPlayerByInteger(pTable, pKey)",
		"documentation": "获取 玩家 (整数路径)"
	},
	"YDWEGetPlayerByString": {
		"original": "function YDWEGetPlayerByString takes string pTable,string pKey returns player",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetPlayerByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "player",
		"insertText": "YDWEGetPlayerByString(pTable, pKey)",
		"documentation": "获取 玩家 (字符串路径)"
	},
	"YDWESaveItemByInteger": {
		"original": "function YDWESaveItemByInteger takes integer pTable,integer pKey,item it returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveItemByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "item",
			"name": "it"
		}],
		"insertText": "YDWESaveItemByInteger(pTable, pKey, it)",
		"documentation": "存储 物品 (整数路径)"
	},
	"YDWESaveItemByString": {
		"original": "function YDWESaveItemByString takes string pTable,string pKey,item it returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveItemByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "item",
			"name": "it"
		}],
		"insertText": "YDWESaveItemByString(pTable, pKey, it)",
		"documentation": "存储 物品 (字符串路径)"
	},
	"YDWEGetItemByInteger": {
		"original": "function YDWEGetItemByInteger takes integer pTable,integer pKey returns item",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetItemByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "item",
		"insertText": "YDWEGetItemByInteger(pTable, pKey)",
		"documentation": "获取 物品 (整数路径)"
	},
	"YDWEGetItemByString": {
		"original": "function YDWEGetItemByString takes string pTable,string pKey returns item",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetItemByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "item",
		"insertText": "YDWEGetItemByString(pTable, pKey)",
		"documentation": "获取 物品 (字符串路径)"
	},
	"YDWESaveItemIDByInteger": {
		"original": "function YDWESaveItemIDByInteger takes integer pTable,integer pKey,integer itid returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveItemIDByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "integer",
			"name": "itid"
		}],
		"insertText": "YDWESaveItemIDByInteger(pTable, pKey, itid)",
		"documentation": "存储 物品类型 (整数路径)"
	},
	"YDWESaveItemIDByString": {
		"original": "function YDWESaveItemIDByString takes string pTable,string pKey,integer itid returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveItemIDByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "integer",
			"name": "itid"
		}],
		"insertText": "YDWESaveItemIDByString(pTable, pKey, itid)",
		"documentation": "存储 物品类型 (字符串路径)"
	},
	"YDWEGetItemIDByInteger": {
		"original": "function YDWEGetItemIDByInteger takes integer pTable,integer pKey returns integer",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetItemIDByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "integer",
		"insertText": "YDWEGetItemIDByInteger(pTable, pKey)",
		"documentation": "获取 物品类型 (整数路径)"
	},
	"YDWEGetItemIDByString": {
		"original": "function YDWEGetItemIDByString takes string pTable,string pKey returns integer",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetItemIDByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "integer",
		"insertText": "YDWEGetItemIDByString(pTable, pKey)",
		"documentation": "获取 物品类型 (字符串路径)"
	},
	"YDWESaveTimerByInteger": {
		"original": "function YDWESaveTimerByInteger takes integer pTable,integer pKey,timer t returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveTimerByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "timer",
			"name": "t"
		}],
		"insertText": "YDWESaveTimerByInteger(pTable, pKey, t)",
		"documentation": "存储 计时器 (整数路径)"
	},
	"YDWESaveTimerByString": {
		"original": "function YDWESaveTimerByString takes string pTable,string pKey,timer t returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveTimerByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "timer",
			"name": "t"
		}],
		"insertText": "YDWESaveTimerByString(pTable, pKey, t)",
		"documentation": "存储 计时器 (字符串路径)"
	},
	"YDWEGetTimerByInteger": {
		"original": "function YDWEGetTimerByInteger takes integer pTable,integer pKey returns timer",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetTimerByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "timer",
		"insertText": "YDWEGetTimerByInteger(pTable, pKey)",
		"documentation": "获取 计时器 (整数路径)"
	},
	"YDWEGetTimerByString": {
		"original": "function YDWEGetTimerByString takes string pTable,string pKey returns timer",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetTimerByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "timer",
		"insertText": "YDWEGetTimerByString(pTable, pKey)",
		"documentation": "获取 计时器 (字符串路径)"
	},
	"YDWESaveTriggerByInteger": {
		"original": "function YDWESaveTriggerByInteger takes integer pTable,integer pKey,trigger trg returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveTriggerByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "trigger",
			"name": "trg"
		}],
		"insertText": "YDWESaveTriggerByInteger(pTable, pKey, trg)",
		"documentation": "存储 触发器 (整数路径)"
	},
	"YDWESaveTriggerByString": {
		"original": "function YDWESaveTriggerByString takes string pTable,string pKey,trigger trg returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveTriggerByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "trigger",
			"name": "trg"
		}],
		"insertText": "YDWESaveTriggerByString(pTable, pKey, trg)",
		"documentation": "存储 触发器 (字符串路径)"
	},
	"YDWEGetTriggerByInteger": {
		"original": "function YDWEGetTriggerByInteger takes integer pTable,integer pKey returns trigger",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetTriggerByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "trigger",
		"insertText": "YDWEGetTriggerByInteger(pTable, pKey)",
		"documentation": "获取 触发器 (整数路径)"
	},
	"YDWEGetTriggerByString": {
		"original": "function YDWEGetTriggerByString takes string pTable,string pKey returns trigger",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetTriggerByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "trigger",
		"insertText": "YDWEGetTriggerByString(pTable, pKey)",
		"documentation": "获取 触发器 (字符串路径)"
	},
	"YDWESaveLocationByInteger": {
		"original": "function YDWESaveLocationByInteger takes integer pTable,integer pKey,location pt returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveLocationByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "location",
			"name": "pt"
		}],
		"insertText": "YDWESaveLocationByInteger(pTable, pKey, pt)",
		"documentation": "存储 点 (整数路径)"
	},
	"YDWESaveLocationByString": {
		"original": "function YDWESaveLocationByString takes string pTable,string pKey,location pt returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveLocationByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "location",
			"name": "pt"
		}],
		"insertText": "YDWESaveLocationByString(pTable, pKey, pt)",
		"documentation": "存储 点 (字符串路径)"
	},
	"YDWEGetLocationByInteger": {
		"original": "function YDWEGetLocationByInteger takes integer pTable,integer pKey returns location",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetLocationByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "location",
		"insertText": "YDWEGetLocationByInteger(pTable, pKey)",
		"documentation": "获取 点 (整数路径)"
	},
	"YDWEGetLocationByString": {
		"original": "function YDWEGetLocationByString takes string pTable,string pKey returns location",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetLocationByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "location",
		"insertText": "YDWEGetLocationByString(pTable, pKey)",
		"documentation": "获取 点 (字符串路径)"
	},
	"YDWESaveGroupByInteger": {
		"original": "function YDWESaveGroupByInteger takes integer pTable,integer pKey,group g returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveGroupByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "group",
			"name": "g"
		}],
		"insertText": "YDWESaveGroupByInteger(pTable, pKey, g)",
		"documentation": "存储 单位组 (整数路径)"
	},
	"YDWESaveGroupByString": {
		"original": "function YDWESaveGroupByString takes string pTable,string pKey,group g returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveGroupByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "group",
			"name": "g"
		}],
		"insertText": "YDWESaveGroupByString(pTable, pKey, g)",
		"documentation": "存储 单位组 (字符串路径)"
	},
	"YDWEGetGroupByInteger": {
		"original": "function YDWEGetGroupByInteger takes integer pTable,integer pKey returns group",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetGroupByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "group",
		"insertText": "YDWEGetGroupByInteger(pTable, pKey)",
		"documentation": "获取 单位组 (整数路径)"
	},
	"YDWEGetGroupByString": {
		"original": "function YDWEGetGroupByString takes string pTable,string pKey returns group",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetGroupByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "group",
		"insertText": "YDWEGetGroupByString(pTable, pKey)",
		"documentation": "获取 单位组 (字符串路径)"
	},
	"YDWESaveMultiboardByInteger": {
		"original": "function YDWESaveMultiboardByInteger takes integer pTable,integer pKey,multiboard m returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveMultiboardByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "multiboard",
			"name": "m"
		}],
		"insertText": "YDWESaveMultiboardByInteger(pTable, pKey, m)",
		"documentation": "存储 多面板 (整数路径)"
	},
	"YDWESaveMultiboardByString": {
		"original": "function YDWESaveMultiboardByString takes string pTable,string pKey,multiboard m returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveMultiboardByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "multiboard",
			"name": "m"
		}],
		"insertText": "YDWESaveMultiboardByString(pTable, pKey, m)",
		"documentation": "存储 多面板 (字符串路径)"
	},
	"YDWEGetMultiboardByInteger": {
		"original": "function YDWEGetMultiboardByInteger takes integer pTable,integer pKey returns multiboard",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetMultiboardByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "multiboard",
		"insertText": "YDWEGetMultiboardByInteger(pTable, pKey)",
		"documentation": ""
	},
	"YDWEGetMultiboardByString": {
		"original": "function YDWEGetMultiboardByString takes string pTable,string pKey returns multiboard",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetMultiboardByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "multiboard",
		"insertText": "YDWEGetMultiboardByString(pTable, pKey)",
		"documentation": ""
	},
	"YDWESaveMultiboardItemByInteger": {
		"original": "function YDWESaveMultiboardItemByInteger takes integer pTable,integer pKey,multiboarditem mt returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveMultiboardItemByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "multiboarditem",
			"name": "mt"
		}],
		"insertText": "YDWESaveMultiboardItemByInteger(pTable, pKey, mt)",
		"documentation": "存储 多面板项目 (整数路径)"
	},
	"YDWESaveMultiboardItemByString": {
		"original": "function YDWESaveMultiboardItemByString takes string pTable,string pKey,multiboarditem mt returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveMultiboardItemByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "multiboarditem",
			"name": "mt"
		}],
		"insertText": "YDWESaveMultiboardItemByString(pTable, pKey, mt)",
		"documentation": "存储 多面板项目 (字符串路径)"
	},
	"YDWEGetMultiboardItemByInteger": {
		"original": "function YDWEGetMultiboardItemByInteger takes integer pTable,integer pKey returns multiboarditem",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetMultiboardItemByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "multiboarditem",
		"insertText": "YDWEGetMultiboardItemByInteger(pTable, pKey)",
		"documentation": ""
	},
	"YDWEGetMultiboardItemByString": {
		"original": "function YDWEGetMultiboardItemByString takes string pTable,string pKey returns multiboarditem",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetMultiboardItemByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "multiboarditem",
		"insertText": "YDWEGetMultiboardItemByString(pTable, pKey)",
		"documentation": ""
	},
	"YDWESaveTextTagByInteger": {
		"original": "function YDWESaveTextTagByInteger takes integer pTable,integer pKey,texttag tt returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveTextTagByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "texttag",
			"name": "tt"
		}],
		"insertText": "YDWESaveTextTagByInteger(pTable, pKey, tt)",
		"documentation": "存储 漂浮文字 (整数路径)"
	},
	"YDWESaveTextTagByString": {
		"original": "function YDWESaveTextTagByString takes string pTable,string pKey,texttag tt returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveTextTagByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "texttag",
			"name": "tt"
		}],
		"insertText": "YDWESaveTextTagByString(pTable, pKey, tt)",
		"documentation": "存储 漂浮文字 (字符串路径)"
	},
	"YDWEGetTextTagByInteger": {
		"original": "function YDWEGetTextTagByInteger takes integer pTable,integer pKey returns texttag",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetTextTagByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "texttag",
		"insertText": "YDWEGetTextTagByInteger(pTable, pKey)",
		"documentation": "获取 漂浮文字 (整数路径)"
	},
	"YDWEGetTextTagByString": {
		"original": "function YDWEGetTextTagByString takes string pTable,string pKey returns texttag",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetTextTagByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "texttag",
		"insertText": "YDWEGetTextTagByString(pTable, pKey)",
		"documentation": "获取 漂浮文字 (字符串路径)"
	},
	"YDWESaveLightningByInteger": {
		"original": "function YDWESaveLightningByInteger takes integer pTable,integer pKey,lightning ln returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveLightningByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "lightning",
			"name": "ln"
		}],
		"insertText": "YDWESaveLightningByInteger(pTable, pKey, ln)",
		"documentation": "存储 闪电 (整数路径)"
	},
	"YDWESaveLightningByString": {
		"original": "function YDWESaveLightningByString takes string pTable,string pKey,lightning ln returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveLightningByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "lightning",
			"name": "ln"
		}],
		"insertText": "YDWESaveLightningByString(pTable, pKey, ln)",
		"documentation": "存储 闪电 (字符串路径)"
	},
	"YDWEGetLightningByInteger": {
		"original": "function YDWEGetLightningByInteger takes integer pTable,integer pKey returns lightning",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetLightningByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "lightning",
		"insertText": "YDWEGetLightningByInteger(pTable, pKey)",
		"documentation": "获取 闪电 (整数路径)"
	},
	"YDWEGetLightningByString": {
		"original": "function YDWEGetLightningByString takes string pTable,string pKey returns lightning",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetLightningByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "lightning",
		"insertText": "YDWEGetLightningByString(pTable, pKey)",
		"documentation": "获取 闪电 (字符串路径)"
	},
	"YDWESaveRegionByInteger": {
		"original": "function YDWESaveRegionByInteger takes integer pTable,integer pKey,region rn returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveRegionByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "region",
			"name": "rn"
		}],
		"insertText": "YDWESaveRegionByInteger(pTable, pKey, rn)",
		"documentation": "存储 区域 (整数路径)"
	},
	"YDWESaveRegionByString": {
		"original": "function YDWESaveRegionByString takes string pTable,string pKey,region rn returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveRegionByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "region",
			"name": "rn"
		}],
		"insertText": "YDWESaveRegionByString(pTable, pKey, rn)",
		"documentation": "存储 区域 (字符串路径)"
	},
	"YDWEGetRegionByInteger": {
		"original": "function YDWEGetRegionByInteger takes integer pTable,integer pKey returns region",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetRegionByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "region",
		"insertText": "YDWEGetRegionByInteger(pTable, pKey)",
		"documentation": "获取 区域 (整数路径)"
	},
	"YDWEGetRegionByString": {
		"original": "function YDWEGetRegionByString takes string pTable,string pKey returns region",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetRegionByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "region",
		"insertText": "YDWEGetRegionByString(pTable, pKey)",
		"documentation": "获取 区域 (字符串路径)"
	},
	"YDWESaveRectByInteger": {
		"original": "function YDWESaveRectByInteger takes integer pTable,integer pKey,rect rt returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveRectByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "rect",
			"name": "rt"
		}],
		"insertText": "YDWESaveRectByInteger(pTable, pKey, rt)",
		"documentation": "存储 地区 (整数路径)"
	},
	"YDWESaveRectByString": {
		"original": "function YDWESaveRectByString takes string pTable,string pKey,rect rt returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveRectByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "rect",
			"name": "rt"
		}],
		"insertText": "YDWESaveRectByString(pTable, pKey, rt)",
		"documentation": "存储 地区 (字符串路径)"
	},
	"YDWEGetRectByInteger": {
		"original": "function YDWEGetRectByInteger takes integer pTable,integer pKey returns rect",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetRectByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "rect",
		"insertText": "YDWEGetRectByInteger(pTable, pKey)",
		"documentation": "获取 地区 (整数路径)"
	},
	"YDWEGetRectByString": {
		"original": "function YDWEGetRectByString takes string pTable,string pKey returns rect",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetRectByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "rect",
		"insertText": "YDWEGetRectByString(pTable, pKey)",
		"documentation": "获取 区域 (字符串路径)"
	},
	"YDWESaveLeaderboardByInteger": {
		"original": "function YDWESaveLeaderboardByInteger takes integer pTable,integer pKey,leaderboard lb returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveLeaderboardByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "leaderboard",
			"name": "lb"
		}],
		"insertText": "YDWESaveLeaderboardByInteger(pTable, pKey, lb)",
		"documentation": "存储 排行榜 (整数路径)"
	},
	"YDWESaveLeaderboardByString": {
		"original": "function YDWESaveLeaderboardByString takes string pTable,string pKey,leaderboard lb returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveLeaderboardByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "leaderboard",
			"name": "lb"
		}],
		"insertText": "YDWESaveLeaderboardByString(pTable, pKey, lb)",
		"documentation": "存储 排行榜 (字符串路径)"
	},
	"YDWEGetLeaderboardByInteger": {
		"original": "function YDWEGetLeaderboardByInteger takes integer pTable,integer pKey returns leaderboard",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetLeaderboardByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "leaderboard",
		"insertText": "YDWEGetLeaderboardByInteger(pTable, pKey)",
		"documentation": "获取 排行榜 (整数路径)"
	},
	"YDWEGetLeaderboardByString": {
		"original": "function YDWEGetLeaderboardByString takes string pTable,string pKey returns leaderboard",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetLeaderboardByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "leaderboard",
		"insertText": "YDWEGetLeaderboardByString(pTable, pKey)",
		"documentation": "获取 排行榜 (字符串路径)"
	},
	"YDWESaveEffectByInteger": {
		"original": "function YDWESaveEffectByInteger takes integer pTable,integer pKey,effect e returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveEffectByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "effect",
			"name": "e"
		}],
		"insertText": "YDWESaveEffectByInteger(pTable, pKey, e)",
		"documentation": "存储 特效 (整数路径)"
	},
	"YDWESaveEffectByString": {
		"original": "function YDWESaveEffectByString takes string pTable,string pKey,effect e returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveEffectByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "effect",
			"name": "e"
		}],
		"insertText": "YDWESaveEffectByString(pTable, pKey, e)",
		"documentation": "存储 特效 (字符串路径)"
	},
	"YDWEGetEffectByInteger": {
		"original": "function YDWEGetEffectByInteger takes integer pTable,integer pKey returns effect",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetEffectByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "effect",
		"insertText": "YDWEGetEffectByInteger(pTable, pKey)",
		"documentation": "获取 特效 (整数路径)"
	},
	"YDWEGetEffectByString": {
		"original": "function YDWEGetEffectByString takes string pTable,string pKey returns effect",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetEffectByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "effect",
		"insertText": "YDWEGetEffectByString(pTable, pKey)",
		"documentation": "获取 特效 (字符串路径)"
	},
	"YDWESaveDestructableByInteger": {
		"original": "function YDWESaveDestructableByInteger takes integer pTable,integer pKey,destructable da returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveDestructableByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "destructable",
			"name": "da"
		}],
		"insertText": "YDWESaveDestructableByInteger(pTable, pKey, da)",
		"documentation": "存储 可破坏物 (整数路径)"
	},
	"YDWESaveDestructableByString": {
		"original": "function YDWESaveDestructableByString takes string pTable,string pKey,destructable da returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveDestructableByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "destructable",
			"name": "da"
		}],
		"insertText": "YDWESaveDestructableByString(pTable, pKey, da)",
		"documentation": "存储 可破坏物 (字符串路径)"
	},
	"YDWEGetDestructableByInteger": {
		"original": "function YDWEGetDestructableByInteger takes integer pTable,integer pKey returns destructable",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetDestructableByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "destructable",
		"insertText": "YDWEGetDestructableByInteger(pTable, pKey)",
		"documentation": "获取 可破坏物 (整数路径)"
	},
	"YDWEGetDestructableByString": {
		"original": "function YDWEGetDestructableByString takes string pTable,string pKey returns destructable",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetDestructableByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "destructable",
		"insertText": "YDWEGetDestructableByString(pTable, pKey)",
		"documentation": "获取 可破坏物 (字符串路径)"
	},
	"YDWESaveTriggerConditionByInteger": {
		"original": "function YDWESaveTriggerConditionByInteger takes integer pTable,integer pKey,triggercondition tc returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveTriggerConditionByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "triggercondition",
			"name": "tc"
		}],
		"insertText": "YDWESaveTriggerConditionByInteger(pTable, pKey, tc)",
		"documentation": "存储 触发器条件 (整数路径)"
	},
	"YDWESaveTriggerConditionByString": {
		"original": "function YDWESaveTriggerConditionByString takes string pTable,string pKey,triggercondition tc returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveTriggerConditionByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "triggercondition",
			"name": "tc"
		}],
		"insertText": "YDWESaveTriggerConditionByString(pTable, pKey, tc)",
		"documentation": "存储 触发器条件 (字符串路径)"
	},
	"YDWEGetTriggerConditionByInteger": {
		"original": "function YDWEGetTriggerConditionByInteger takes integer pTable,integer pKey returns triggercondition",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetTriggerConditionByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "triggercondition",
		"insertText": "YDWEGetTriggerConditionByInteger(pTable, pKey)",
		"documentation": "获取 触发器条件 (整数路径)"
	},
	"YDWEGetTriggerConditionByString": {
		"original": "function YDWEGetTriggerConditionByString takes string pTable,string pKey returns triggercondition",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetTriggerConditionByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "triggercondition",
		"insertText": "YDWEGetTriggerConditionByString(pTable, pKey)",
		"documentation": "获取 触发器条件 (字符串路径)"
	},
	"YDWESaveTriggerActionByInteger": {
		"original": "function YDWESaveTriggerActionByInteger takes integer pTable,integer pKey,triggeraction ta returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveTriggerActionByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "triggeraction",
			"name": "ta"
		}],
		"insertText": "YDWESaveTriggerActionByInteger(pTable, pKey, ta)",
		"documentation": "存储 触发器动作 (整数路径)"
	},
	"YDWESaveTriggerActionByString": {
		"original": "function YDWESaveTriggerActionByString takes string pTable,string pKey,triggeraction ta returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveTriggerActionByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "triggeraction",
			"name": "ta"
		}],
		"insertText": "YDWESaveTriggerActionByString(pTable, pKey, ta)",
		"documentation": "存储 触发器动作 (字符串路径)"
	},
	"YDWEGetTriggerActionByInteger": {
		"original": "function YDWEGetTriggerActionByInteger takes integer pTable,integer pKey returns triggeraction",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetTriggerActionByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "triggeraction",
		"insertText": "YDWEGetTriggerActionByInteger(pTable, pKey)",
		"documentation": "获取 触发器动作 (整数路径)"
	},
	"YDWEGetTriggerActionByString": {
		"original": "function YDWEGetTriggerActionByString takes string pTable,string pKey returns triggeraction",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetTriggerActionByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "triggeraction",
		"insertText": "YDWEGetTriggerActionByString(pTable, pKey)",
		"documentation": "获取 触发器动作 (字符串路径)"
	},
	"YDWESaveTriggerEventByInteger": {
		"original": "function YDWESaveTriggerEventByInteger takes integer pTable,integer pKey,event et returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveTriggerEventByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "event",
			"name": "et"
		}],
		"insertText": "YDWESaveTriggerEventByInteger(pTable, pKey, et)",
		"documentation": "存储 事件 (整数路径)"
	},
	"YDWESaveTriggerEventByString": {
		"original": "function YDWESaveTriggerEventByString takes string pTable,string pKey,event et returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveTriggerEventByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "event",
			"name": "et"
		}],
		"insertText": "YDWESaveTriggerEventByString(pTable, pKey, et)",
		"documentation": "存储 事件 (字符串路径)"
	},
	"YDWEGetTriggerEventByInteger": {
		"original": "function YDWEGetTriggerEventByInteger takes integer pTable,integer pKey returns event",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetTriggerEventByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "event",
		"insertText": "YDWEGetTriggerEventByInteger(pTable, pKey)",
		"documentation": "获取 事件 (整数路径)"
	},
	"YDWEGetTriggerEventByString": {
		"original": "function YDWEGetTriggerEventByString takes string pTable,string pKey returns event",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetTriggerEventByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "event",
		"insertText": "YDWEGetTriggerEventByString(pTable, pKey)",
		"documentation": "获取 事件 (字符串路径)"
	},
	"YDWESaveForceByInteger": {
		"original": "function YDWESaveForceByInteger takes integer pTable,integer pKey,force fc returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveForceByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "force",
			"name": "fc"
		}],
		"insertText": "YDWESaveForceByInteger(pTable, pKey, fc)",
		"documentation": "存储 势力 (整数路径)"
	},
	"YDWESaveForceByString": {
		"original": "function YDWESaveForceByString takes string pTable,string pKey,force fc returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveForceByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "force",
			"name": "fc"
		}],
		"insertText": "YDWESaveForceByString(pTable, pKey, fc)",
		"documentation": "存储 势力 (字符串路径)"
	},
	"YDWEGetForceByInteger": {
		"original": "function YDWEGetForceByInteger takes integer pTable,integer pKey returns force",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetForceByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "force",
		"insertText": "YDWEGetForceByInteger(pTable, pKey)",
		"documentation": "获取 势力 (整数路径)"
	},
	"YDWEGetForceByString": {
		"original": "function YDWEGetForceByString takes string pTable,string pKey returns force",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetForceByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "force",
		"insertText": "YDWEGetForceByString(pTable, pKey)",
		"documentation": "获取 势力 (字符串路径)"
	},
	"YDWESaveBoolexprByInteger": {
		"original": "function YDWESaveBoolexprByInteger takes integer pTable,integer pKey,boolexpr be returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveBoolexprByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "boolexpr",
			"name": "be"
		}],
		"insertText": "YDWESaveBoolexprByInteger(pTable, pKey, be)",
		"documentation": "存储 布尔表达式 (整数路径)"
	},
	"YDWESaveBoolexprByString": {
		"original": "function YDWESaveBoolexprByString takes string pTable,string pKey,boolexpr be returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveBoolexprByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "boolexpr",
			"name": "be"
		}],
		"insertText": "YDWESaveBoolexprByString(pTable, pKey, be)",
		"documentation": "存储 布尔表达式 (字符串路径)"
	},
	"YDWEGetBoolexprByInteger": {
		"original": "function YDWEGetBoolexprByInteger takes integer pTable,integer pKey returns boolexpr",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetBoolexprByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "boolexpr",
		"insertText": "YDWEGetBoolexprByInteger(pTable, pKey)",
		"documentation": "获取 布尔表达式 (整数路径)"
	},
	"YDWEGetBoolexprByString": {
		"original": "function YDWEGetBoolexprByString takes string pTable,string pKey returns boolexpr",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetBoolexprByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "boolexpr",
		"insertText": "YDWEGetBoolexprByString(pTable, pKey)",
		"documentation": "获取 布尔表达式 (字符串路径)"
	},
	"YDWESaveSoundByInteger": {
		"original": "function YDWESaveSoundByInteger takes integer pTable,integer pKey,sound sd returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveSoundByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "sound",
			"name": "sd"
		}],
		"insertText": "YDWESaveSoundByInteger(pTable, pKey, sd)",
		"documentation": "存储 声音 (整数路径)"
	},
	"YDWESaveSoundByString": {
		"original": "function YDWESaveSoundByString takes string pTable,string pKey,sound sd returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveSoundByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "sound",
			"name": "sd"
		}],
		"insertText": "YDWESaveSoundByString(pTable, pKey, sd)",
		"documentation": "存储 声音 (字符串路径)"
	},
	"YDWEGetSoundByInteger": {
		"original": "function YDWEGetSoundByInteger takes integer pTable,integer pKey returns sound",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetSoundByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "sound",
		"insertText": "YDWEGetSoundByInteger(pTable, pKey)",
		"documentation": "获取 音效 (整数路径)"
	},
	"YDWEGetSoundByString": {
		"original": "function YDWEGetSoundByString takes string pTable,string pKey returns sound",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetSoundByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "sound",
		"insertText": "YDWEGetSoundByString(pTable, pKey)",
		"documentation": "获取 音效 (字符串路径)"
	},
	"YDWESaveTimerDialogByInteger": {
		"original": "function YDWESaveTimerDialogByInteger takes integer pTable,integer pKey,timerdialog td returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveTimerDialogByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "timerdialog",
			"name": "td"
		}],
		"insertText": "YDWESaveTimerDialogByInteger(pTable, pKey, td)",
		"documentation": "存储 计时器窗口 (整数路径)"
	},
	"YDWESaveTimerDialogByString": {
		"original": "function YDWESaveTimerDialogByString takes string pTable,string pKey,timerdialog td returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveTimerDialogByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "timerdialog",
			"name": "td"
		}],
		"insertText": "YDWESaveTimerDialogByString(pTable, pKey, td)",
		"documentation": "存储 计时器窗口 (字符串路径)"
	},
	"YDWEGetTimerDialogByInteger": {
		"original": "function YDWEGetTimerDialogByInteger takes integer pTable,integer pKey returns timerdialog",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetTimerDialogByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "timerdialog",
		"insertText": "YDWEGetTimerDialogByInteger(pTable, pKey)",
		"documentation": "获取 计时器窗口 (整数路径)"
	},
	"YDWEGetTimerDialogByString": {
		"original": "function YDWEGetTimerDialogByString takes string pTable,string pKey returns timerdialog",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetTimerDialogByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "timerdialog",
		"insertText": "YDWEGetTimerDialogByString(pTable, pKey)",
		"documentation": "获取 计时器窗口 (字符串路径)"
	},
	"YDWESaveTrackableByInteger": {
		"original": "function YDWESaveTrackableByInteger takes integer pTable,integer pKey,trackable ta returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveTrackableByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "trackable",
			"name": "ta"
		}],
		"insertText": "YDWESaveTrackableByInteger(pTable, pKey, ta)",
		"documentation": "存储 可追踪物 (整数路径)"
	},
	"YDWESaveTrackableByString": {
		"original": "function YDWESaveTrackableByString takes string pTable,string pKey,trackable ta returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveTrackableByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "trackable",
			"name": "ta"
		}],
		"insertText": "YDWESaveTrackableByString(pTable, pKey, ta)",
		"documentation": "存储 可追踪物 (字符串路径)"
	},
	"YDWEGetTrackableByInteger": {
		"original": "function YDWEGetTrackableByInteger takes integer pTable,integer pKey returns trackable",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetTrackableByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "trackable",
		"insertText": "YDWEGetTrackableByInteger(pTable, pKey)",
		"documentation": "获取 可追踪物 (整数路径)"
	},
	"YDWEGetTrackableByString": {
		"original": "function YDWEGetTrackableByString takes string pTable,string pKey returns trackable",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetTrackableByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "trackable",
		"insertText": "YDWEGetTrackableByString(pTable, pKey)",
		"documentation": "获取 可追踪物 (字符串路径)"
	},
	"YDWESaveDialogByInteger": {
		"original": "function YDWESaveDialogByInteger takes integer pTable,integer pKey,dialog d returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveDialogByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "dialog",
			"name": "d"
		}],
		"insertText": "YDWESaveDialogByInteger(pTable, pKey, d)",
		"documentation": "存储 对话框 (整数路径)"
	},
	"YDWESaveDialogByString": {
		"original": "function YDWESaveDialogByString takes string pTable,string pKey,dialog d returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveDialogByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "dialog",
			"name": "d"
		}],
		"insertText": "YDWESaveDialogByString(pTable, pKey, d)",
		"documentation": "存储 对话框 (字符串路径)"
	},
	"YDWEGetDialogByInteger": {
		"original": "function YDWEGetDialogByInteger takes integer pTable,integer pKey returns dialog",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetDialogByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "dialog",
		"insertText": "YDWEGetDialogByInteger(pTable, pKey)",
		"documentation": "获取 对话框 (整数路径)"
	},
	"YDWEGetDialogByString": {
		"original": "function YDWEGetDialogByString takes string pTable,string pKey returns dialog",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetDialogByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "dialog",
		"insertText": "YDWEGetDialogByString(pTable, pKey)",
		"documentation": "获取 对话框 (字符串路径)"
	},
	"YDWESaveButtonByInteger": {
		"original": "function YDWESaveButtonByInteger takes integer pTable,integer pKey,button bt returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveButtonByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "button",
			"name": "bt"
		}],
		"insertText": "YDWESaveButtonByInteger(pTable, pKey, bt)",
		"documentation": "存储 对话框按钮 (整数路径)"
	},
	"YDWESaveButtonByString": {
		"original": "function YDWESaveButtonByString takes string pTable,string pKey,button bt returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveButtonByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "button",
			"name": "bt"
		}],
		"insertText": "YDWESaveButtonByString(pTable, pKey, bt)",
		"documentation": "存储 对话框按钮 (字符串路径)"
	},
	"YDWEGetButtonByInteger": {
		"original": "function YDWEGetButtonByInteger takes integer pTable,integer pKey returns button",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetButtonByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "button",
		"insertText": "YDWEGetButtonByInteger(pTable, pKey)",
		"documentation": "获取 对话框按钮 (整数路径)"
	},
	"YDWEGetButtonByString": {
		"original": "function YDWEGetButtonByString takes string pTable,string pKey returns button",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetButtonByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "button",
		"insertText": "YDWEGetButtonByString(pTable, pKey)",
		"documentation": "获取 对话框按钮 (字符串路径)"
	},
	"YDWESaveQuestByInteger": {
		"original": "function YDWESaveQuestByInteger takes integer pTable,integer pKey,quest qt returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveQuestByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "quest",
			"name": "qt"
		}],
		"insertText": "YDWESaveQuestByInteger(pTable, pKey, qt)",
		"documentation": "存储 任务 (整数路径)"
	},
	"YDWESaveQuestByString": {
		"original": "function YDWESaveQuestByString takes string pTable,string pKey,quest qt returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveQuestByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "quest",
			"name": "qt"
		}],
		"insertText": "YDWESaveQuestByString(pTable, pKey, qt)",
		"documentation": "存储 任务 (字符串路径)"
	},
	"YDWEGetQuestByInteger": {
		"original": "function YDWEGetQuestByInteger takes integer pTable,integer pKey returns quest",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetQuestByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "quest",
		"insertText": "YDWEGetQuestByInteger(pTable, pKey)",
		"documentation": "获取 任务 (整数路径)"
	},
	"YDWEGetQuestByString": {
		"original": "function YDWEGetQuestByString takes string pTable,string pKey returns quest",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetQuestByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "quest",
		"insertText": "YDWEGetQuestByString(pTable, pKey)",
		"documentation": "获取 任务 (字符串路径)"
	},
	"YDWESaveQuestItemByInteger": {
		"original": "function YDWESaveQuestItemByInteger takes integer pTable,integer pKey,questitem qi returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveQuestItemByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}, {
			"type": "questitem",
			"name": "qi"
		}],
		"insertText": "YDWESaveQuestItemByInteger(pTable, pKey, qi)",
		"documentation": "存储 任务目标项 (整数路径)"
	},
	"YDWESaveQuestItemByString": {
		"original": "function YDWESaveQuestItemByString takes string pTable,string pKey,questitem qi returns nothing",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWESaveQuestItemByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}, {
			"type": "questitem",
			"name": "qi"
		}],
		"insertText": "YDWESaveQuestItemByString(pTable, pKey, qi)",
		"documentation": "存储 任务目标项 (字符串路径)"
	},
	"YDWEGetQuestItemByInteger": {
		"original": "function YDWEGetQuestItemByInteger takes integer pTable,integer pKey returns questitem",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetQuestItemByInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "pTable"
		}, {
			"type": "integer",
			"name": "pKey"
		}],
		"returnType": "questitem",
		"insertText": "YDWEGetQuestItemByInteger(pTable, pKey)",
		"documentation": "获取 任务目标项 (整数路径)"
	},
	"YDWEGetQuestItemByString": {
		"original": "function YDWEGetQuestItemByString takes string pTable,string pKey returns questitem",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEGetQuestItemByString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "pTable"
		}, {
			"type": "string",
			"name": "pKey"
		}],
		"returnType": "questitem",
		"insertText": "YDWEGetQuestItemByString(pTable, pKey)",
		"documentation": "获取 任务目标项 (字符串路径)"
	},
	"YDWES2I": {
		"original": "function YDWES2I takes string s returns integer",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWES2I",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}],
		"returnType": "integer",
		"insertText": "YDWES2I(s)",
		"documentation": ""
	},
	"YDWESaveAbilityHandleBJ": {
		"original": "function YDWESaveAbilityHandleBJ takes integer AbilityID, integer key, integer missionKey, hashtable table returns nothing",
		"fileName": "YDWEBase_hashtable.j",
		"name": "YDWESaveAbilityHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "AbilityID"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"insertText": "YDWESaveAbilityHandleBJ(AbilityID, key, missionKey, table)",
		"documentation": "<1.24> 保存技能"
	},
	"YDWESaveAbilityHandle": {
		"original": "function YDWESaveAbilityHandle takes hashtable table, integer parentKey, integer childKey, integer AbilityID returns nothing",
		"fileName": "YDWEBase_hashtable.j",
		"name": "YDWESaveAbilityHandle",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}, {
			"type": "integer",
			"name": "AbilityID"
		}],
		"insertText": "YDWESaveAbilityHandle(table, parentKey, childKey, AbilityID)",
		"documentation": "<1.24> 保存技能 [C]"
	},
	"YDWELoadAbilityHandleBJ": {
		"original": "function YDWELoadAbilityHandleBJ takes integer key, integer missionKey, hashtable table returns integer",
		"fileName": "YDWEBase_hashtable.j",
		"name": "YDWELoadAbilityHandleBJ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "missionKey"
		}, {
			"type": "hashtable",
			"name": "table"
		}],
		"returnType": "integer",
		"insertText": "YDWELoadAbilityHandleBJ(key, missionKey, table)",
		"documentation": "<1.24> 从哈希表提取技能"
	},
	"YDWELoadAbilityHandle": {
		"original": "function YDWELoadAbilityHandle takes hashtable table, integer parentKey, integer childKey returns integer",
		"fileName": "YDWEBase_hashtable.j",
		"name": "YDWELoadAbilityHandle",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "hashtable",
			"name": "table"
		}, {
			"type": "integer",
			"name": "parentKey"
		}, {
			"type": "integer",
			"name": "childKey"
		}],
		"returnType": "integer",
		"insertText": "YDWELoadAbilityHandle(table, parentKey, childKey)",
		"documentation": "<1.24> 从哈希表提取技能 [C]"
	},
	"YDWEI2U": {
		"original": "function YDWEI2U takes integer i returns unit",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEI2U",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "unit",
		"insertText": "YDWEI2U(i)",
		"documentation": ""
	},
	"YDWEI2It": {
		"original": "function YDWEI2It takes integer i returns item",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEI2It",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "item",
		"insertText": "YDWEI2It(i)",
		"documentation": ""
	},
	"YDWEI2P": {
		"original": "function YDWEI2P takes integer i returns player",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEI2P",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "player",
		"insertText": "YDWEI2P(i)",
		"documentation": ""
	},
	"YDWEI2Tm": {
		"original": "function YDWEI2Tm takes integer i returns timer",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEI2Tm",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "timer",
		"insertText": "YDWEI2Tm(i)",
		"documentation": ""
	},
	"YDWEI2T": {
		"original": "function YDWEI2T takes integer i returns trigger",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEI2T",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "trigger",
		"insertText": "YDWEI2T(i)",
		"documentation": ""
	},
	"YDWEI2Pt": {
		"original": "function YDWEI2Pt takes integer i returns location",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEI2Pt",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "location",
		"insertText": "YDWEI2Pt(i)",
		"documentation": ""
	},
	"YDWEI2G": {
		"original": "function YDWEI2G takes integer i returns group",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEI2G",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "group",
		"insertText": "YDWEI2G(i)",
		"documentation": ""
	},
	"YDWEI2M": {
		"original": "function YDWEI2M takes integer i returns multiboard",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEI2M",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "multiboard",
		"insertText": "YDWEI2M(i)",
		"documentation": ""
	},
	"YDWEI2Mt": {
		"original": "function YDWEI2Mt takes integer i returns multiboarditem",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEI2Mt",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "multiboarditem",
		"insertText": "YDWEI2Mt(i)",
		"documentation": ""
	},
	"YDWEI2Tt": {
		"original": "function YDWEI2Tt takes integer i returns texttag",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEI2Tt",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "texttag",
		"insertText": "YDWEI2Tt(i)",
		"documentation": ""
	},
	"YDWEI2Ln": {
		"original": "function YDWEI2Ln takes integer i returns lightning",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEI2Ln",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "lightning",
		"insertText": "YDWEI2Ln(i)",
		"documentation": ""
	},
	"YDWEI2Rn": {
		"original": "function YDWEI2Rn takes integer i returns region",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEI2Rn",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "region",
		"insertText": "YDWEI2Rn(i)",
		"documentation": ""
	},
	"YDWEI2Rt": {
		"original": "function YDWEI2Rt takes integer i returns rect",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEI2Rt",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "rect",
		"insertText": "YDWEI2Rt(i)",
		"documentation": ""
	},
	"YDWEI2Lb": {
		"original": "function YDWEI2Lb takes integer i returns leaderboard",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEI2Lb",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "leaderboard",
		"insertText": "YDWEI2Lb(i)",
		"documentation": ""
	},
	"YDWEI2E": {
		"original": "function YDWEI2E takes integer i returns effect",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEI2E",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "effect",
		"insertText": "YDWEI2E(i)",
		"documentation": ""
	},
	"YDWEI2Da": {
		"original": "function YDWEI2Da takes integer i returns destructable",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEI2Da",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "destructable",
		"insertText": "YDWEI2Da(i)",
		"documentation": ""
	},
	"YDWEI2TC": {
		"original": "function YDWEI2TC takes integer i returns triggercondition",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEI2TC",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "triggercondition",
		"insertText": "YDWEI2TC(i)",
		"documentation": ""
	},
	"YDWEI2TA": {
		"original": "function YDWEI2TA takes integer i returns triggeraction",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEI2TA",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "triggeraction",
		"insertText": "YDWEI2TA(i)",
		"documentation": ""
	},
	"YDWEI2Et": {
		"original": "function YDWEI2Et takes integer i returns event",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEI2Et",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "event",
		"insertText": "YDWEI2Et(i)",
		"documentation": ""
	},
	"YDWEI2Fc": {
		"original": "function YDWEI2Fc takes integer i returns force",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEI2Fc",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "force",
		"insertText": "YDWEI2Fc(i)",
		"documentation": ""
	},
	"YDWEI2BE": {
		"original": "function YDWEI2BE takes integer i returns boolexpr",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEI2BE",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "boolexpr",
		"insertText": "YDWEI2BE(i)",
		"documentation": ""
	},
	"YDWEI2Sd": {
		"original": "function YDWEI2Sd takes integer i returns sound",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEI2Sd",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "sound",
		"insertText": "YDWEI2Sd(i)",
		"documentation": ""
	},
	"YDWEI2TD": {
		"original": "function YDWEI2TD takes integer i returns timerdialog",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEI2TD",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "timerdialog",
		"insertText": "YDWEI2TD(i)",
		"documentation": ""
	},
	"YDWEI2Ta": {
		"original": "function YDWEI2Ta takes integer i returns trackable",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEI2Ta",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "trackable",
		"insertText": "YDWEI2Ta(i)",
		"documentation": ""
	},
	"YDWEI2D": {
		"original": "function YDWEI2D takes integer i returns dialog",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEI2D",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "dialog",
		"insertText": "YDWEI2D(i)",
		"documentation": ""
	},
	"YDWEI2Bt": {
		"original": "function YDWEI2Bt takes integer i returns button",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEI2Bt",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "button",
		"insertText": "YDWEI2Bt(i)",
		"documentation": ""
	},
	"YDWEI2Qt": {
		"original": "function YDWEI2Qt takes integer i returns quest",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEI2Qt",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "quest",
		"insertText": "YDWEI2Qt(i)",
		"documentation": ""
	},
	"YDWEI2QI": {
		"original": "function YDWEI2QI takes integer i returns questitem",
		"fileName": "YDWEBase_returnbug.j",
		"name": "YDWEI2QI",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "questitem",
		"insertText": "YDWEI2QI(i)",
		"documentation": ""
	},
	"YDWEScriptSystemPeriod": {
		"original": "function YDWEScriptSystemPeriod takes real timeout returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEScriptSystemPeriod",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "timeout"
		}],
		"insertText": "YDWEScriptSystemPeriod(timeout)",
		"documentation": "设置电影系统刷新周期<Anitarf制作>"
	},
	"YDWEParticlePeriod": {
		"original": "function YDWEParticlePeriod takes real timeout returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEParticlePeriod",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "timeout"
		}],
		"insertText": "YDWEParticlePeriod(timeout)",
		"documentation": "设置粒子系统刷新周期<Anitarf制作>"
	},
	"YDWECameraPeriod": {
		"original": "function YDWECameraPeriod takes real timeout returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWECameraPeriod",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "timeout"
		}],
		"insertText": "YDWECameraPeriod(timeout)",
		"documentation": "设置镜头系统刷新周期<Anitarf制作>"
	},
	"YDWEFadeFilterUnit": {
		"original": "function YDWEFadeFilterUnit takes integer uid returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEFadeFilterUnit",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "uid"
		}],
		"insertText": "YDWEFadeFilterUnit(uid)",
		"documentation": "设置滤镜单位<Anitarf制作>"
	},
	"YDWECinSInitTempPoint": {
		"original": "function YDWECinSInitTempPoint takes location point returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWECinSInitTempPoint",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "location",
			"name": "point"
		}],
		"insertText": "YDWECinSInitTempPoint(point)",
		"documentation": "设置演员出生点<Anitarf制作>"
	},
	"YDWECinSActor": {
		"original": "function YDWECinSActor takes integer i returns unit",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWECinSActor",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "i"
		}],
		"returnType": "unit",
		"insertText": "YDWECinSActor(i)",
		"documentation": "演员单位"
	},
	"YDWECameraSetupAssign": {
		"original": "function YDWECameraSetupAssign takes camerasetup cs, integer actID returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWECameraSetupAssign",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "camerasetup",
			"name": "cs"
		}, {
			"type": "integer",
			"name": "actID"
		}],
		"insertText": "YDWECameraSetupAssign(cs, actID)",
		"documentation": "设置镜头<Anitarf制作>"
	},
	"YDWEActorCreate": {
		"original": "function YDWEActorCreate takes player p, integer actID, integer unitType returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEActorCreate",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "p"
		}, {
			"type": "integer",
			"name": "actID"
		}, {
			"type": "integer",
			"name": "unitType"
		}],
		"insertText": "YDWEActorCreate(p, actID, unitType)",
		"documentation": "创建演员<Anitarf制作>"
	},
	"YDWECinematicCameraEnable": {
		"original": "function YDWECinematicCameraEnable takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWECinematicCameraEnable",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWECinematicCameraEnable()",
		"documentation": ""
	},
	"YDWECinematicCameraDisable": {
		"original": "function YDWECinematicCameraDisable takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWECinematicCameraDisable",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWECinematicCameraDisable()",
		"documentation": "关闭电影系统<Anitarf制作>"
	},
	"YDWESetCameraZ": {
		"original": "function YDWESetCameraZ takes real z returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWESetCameraZ",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "z"
		}],
		"insertText": "YDWESetCameraZ(z)",
		"documentation": ""
	},
	"YDWECameraMainLoop": {
		"original": "function YDWECameraMainLoop takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWECameraMainLoop",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWECameraMainLoop()",
		"documentation": ""
	},
	"YDWECameraStatChangeLin": {
		"original": "function YDWECameraStatChangeLin takes integer stat, real endvalue, real time returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWECameraStatChangeLin",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "stat"
		}, {
			"type": "real",
			"name": "endvalue"
		}, {
			"type": "real",
			"name": "time"
		}],
		"insertText": "YDWECameraStatChangeLin(stat, endvalue, time)",
		"documentation": ""
	},
	"YDWECameraStatChangeLinRad": {
		"original": "function YDWECameraStatChangeLinRad takes integer stat, real endvalue, real time returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWECameraStatChangeLinRad",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "stat"
		}, {
			"type": "real",
			"name": "endvalue"
		}, {
			"type": "real",
			"name": "time"
		}],
		"insertText": "YDWECameraStatChangeLinRad(stat, endvalue, time)",
		"documentation": ""
	},
	"YDWECameraStatChange": {
		"original": "function YDWECameraStatChange takes integer stat, real endvalue, real time returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWECameraStatChange",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "stat"
		}, {
			"type": "real",
			"name": "endvalue"
		}, {
			"type": "real",
			"name": "time"
		}],
		"insertText": "YDWECameraStatChange(stat, endvalue, time)",
		"documentation": ""
	},
	"YDWECameraStatChangeRad": {
		"original": "function YDWECameraStatChangeRad takes integer stat, real endvalue, real time returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWECameraStatChangeRad",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "stat"
		}, {
			"type": "real",
			"name": "endvalue"
		}, {
			"type": "real",
			"name": "time"
		}],
		"insertText": "YDWECameraStatChangeRad(stat, endvalue, time)",
		"documentation": ""
	},
	"YDWECameraStatChangeAdv": {
		"original": "function YDWECameraStatChangeAdv takes integer stat, real endvalue, real endvelocity, real time returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWECameraStatChangeAdv",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "stat"
		}, {
			"type": "real",
			"name": "endvalue"
		}, {
			"type": "real",
			"name": "endvelocity"
		}, {
			"type": "real",
			"name": "time"
		}],
		"insertText": "YDWECameraStatChangeAdv(stat, endvalue, endvelocity, time)",
		"documentation": ""
	},
	"YDWECameraStatChangeAdvRad": {
		"original": "function YDWECameraStatChangeAdvRad takes integer stat, real endvalue, real endvelocity, real time returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWECameraStatChangeAdvRad",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "stat"
		}, {
			"type": "real",
			"name": "endvalue"
		}, {
			"type": "real",
			"name": "endvelocity"
		}, {
			"type": "real",
			"name": "time"
		}],
		"insertText": "YDWECameraStatChangeAdvRad(stat, endvalue, endvelocity, time)",
		"documentation": ""
	},
	"YDWECameraLockToUnitOverride": {
		"original": "function YDWECameraLockToUnitOverride takes unit u, real xoff, real yoff, real zoff, boolean smooth, real duration returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWECameraLockToUnitOverride",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}, {
			"type": "real",
			"name": "xoff"
		}, {
			"type": "real",
			"name": "yoff"
		}, {
			"type": "real",
			"name": "zoff"
		}, {
			"type": "boolean",
			"name": "smooth"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "YDWECameraLockToUnitOverride(u, xoff, yoff, zoff, smooth, duration)",
		"documentation": ""
	},
	"YDWECameraLockToUnitReset": {
		"original": "function YDWECameraLockToUnitReset takes boolean smooth, real duration returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWECameraLockToUnitReset",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "smooth"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "YDWECameraLockToUnitReset(smooth, duration)",
		"documentation": ""
	},
	"YDWECameraFaceToUnitOverride": {
		"original": "function YDWECameraFaceToUnitOverride takes unit u, real xoff, real yoff, real zoff, boolean smooth, real duration returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWECameraFaceToUnitOverride",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}, {
			"type": "real",
			"name": "xoff"
		}, {
			"type": "real",
			"name": "yoff"
		}, {
			"type": "real",
			"name": "zoff"
		}, {
			"type": "boolean",
			"name": "smooth"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "YDWECameraFaceToUnitOverride(u, xoff, yoff, zoff, smooth, duration)",
		"documentation": ""
	},
	"YDWECameraFaceToUnitReset": {
		"original": "function YDWECameraFaceToUnitReset takes boolean smooth, real duration returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWECameraFaceToUnitReset",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "smooth"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "YDWECameraFaceToUnitReset(smooth, duration)",
		"documentation": ""
	},
	"YDWEApplyCameraInstantly": {
		"original": "function YDWEApplyCameraInstantly takes camerasetup whichSetup returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEApplyCameraInstantly",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "camerasetup",
			"name": "whichSetup"
		}],
		"insertText": "YDWEApplyCameraInstantly(whichSetup)",
		"documentation": ""
	},
	"YDWEApplyCameraLinear": {
		"original": "function YDWEApplyCameraLinear takes camerasetup whichSetup, real duration returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEApplyCameraLinear",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "camerasetup",
			"name": "whichSetup"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "YDWEApplyCameraLinear(whichSetup, duration)",
		"documentation": ""
	},
	"YDWEApplyCameraSmooth": {
		"original": "function YDWEApplyCameraSmooth takes camerasetup whichSetup, real duration returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEApplyCameraSmooth",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "camerasetup",
			"name": "whichSetup"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "YDWEApplyCameraSmooth(whichSetup, duration)",
		"documentation": ""
	},
	"YDWEApplyCameraSmoothStop": {
		"original": "function YDWEApplyCameraSmoothStop takes camerasetup whichSetup, real duration returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEApplyCameraSmoothStop",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "camerasetup",
			"name": "whichSetup"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "YDWEApplyCameraSmoothStop(whichSetup, duration)",
		"documentation": ""
	},
	"YDWEApplyFog": {
		"original": "function YDWEApplyFog takes real startZ, real endZ, real red, real green, real blue, real duration returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEApplyFog",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "startZ"
		}, {
			"type": "real",
			"name": "endZ"
		}, {
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "YDWEApplyFog(startZ, endZ, red, green, blue, duration)",
		"documentation": ""
	},
	"YDWEApplyFade": {
		"original": "function YDWEApplyFade takes real red, real green, real blue, real opacity, real duration returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEApplyFade",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}, {
			"type": "real",
			"name": "opacity"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "YDWEApplyFade(red, green, blue, opacity, duration)",
		"documentation": ""
	},
	"YDWECameraSystemInit": {
		"original": "function YDWECameraSystemInit takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWECameraSystemInit",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWECameraSystemInit()",
		"documentation": ""
	},
	"YDWEParticleMove": {
		"original": "function YDWEParticleMove takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEParticleMove",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEParticleMove()",
		"documentation": ""
	},
	"YDWEParticleTurn": {
		"original": "function YDWEParticleTurn takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEParticleTurn",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEParticleTurn()",
		"documentation": ""
	},
	"YDWEParticleColour": {
		"original": "function YDWEParticleColour takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEParticleColour",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEParticleColour()",
		"documentation": ""
	},
	"YDWEParticleSize": {
		"original": "function YDWEParticleSize takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEParticleSize",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEParticleSize()",
		"documentation": ""
	},
	"YDWEParticleMain": {
		"original": "function YDWEParticleMain takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEParticleMain",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEParticleMain()",
		"documentation": ""
	},
	"YDWEUnitMove": {
		"original": "function YDWEUnitMove takes unit u, real destX, real destY, real duration, real g returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEUnitMove",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}, {
			"type": "real",
			"name": "destX"
		}, {
			"type": "real",
			"name": "destY"
		}, {
			"type": "real",
			"name": "duration"
		}, {
			"type": "real",
			"name": "g"
		}],
		"insertText": "YDWEUnitMove(u, destX, destY, duration, g)",
		"documentation": ""
	},
	"YDWEUnitTurn": {
		"original": "function YDWEUnitTurn takes unit u, real destAng, real duration, integer clockwise returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEUnitTurn",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}, {
			"type": "real",
			"name": "destAng"
		}, {
			"type": "real",
			"name": "duration"
		}, {
			"type": "integer",
			"name": "clockwise"
		}],
		"insertText": "YDWEUnitTurn(u, destAng, duration, clockwise)",
		"documentation": ""
	},
	"YDWEUnitColour": {
		"original": "function YDWEUnitColour takes unit u, real red, real green, real blue, real opacity, real duration returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEUnitColour",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}, {
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}, {
			"type": "real",
			"name": "opacity"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "YDWEUnitColour(u, red, green, blue, opacity, duration)",
		"documentation": ""
	},
	"YDWEUnitSize": {
		"original": "function YDWEUnitSize takes unit u, real size, real duration returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEUnitSize",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}, {
			"type": "real",
			"name": "size"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "YDWEUnitSize(u, size, duration)",
		"documentation": ""
	},
	"YDWEParticleInit": {
		"original": "function YDWEParticleInit takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEParticleInit",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEParticleInit()",
		"documentation": ""
	},
	"DefaultCharWidth": {
		"original": "constant function DefaultCharWidth takes nothing returns real",
		"fileName": "YDWECinematicSystem.j",
		"name": "DefaultCharWidth",
		"isConstant": true,
		"isNative": false,
		"returnType": "real",
		"insertText": "DefaultCharWidth()",
		"documentation": ""
	},
	"YDWEDisplaySubtitle": {
		"original": "function YDWEDisplaySubtitle takes string line1 returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEDisplaySubtitle",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "line1"
		}],
		"insertText": "YDWEDisplaySubtitle(line1)",
		"documentation": ""
	},
	"YDWEClearSubtitles": {
		"original": "function YDWEClearSubtitles takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEClearSubtitles",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEClearSubtitles()",
		"documentation": ""
	},
	"YDWESubtitlesInit": {
		"original": "function YDWESubtitlesInit takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWESubtitlesInit",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWESubtitlesInit()",
		"documentation": ""
	},
	"YDWEAllocateSound": {
		"original": "function YDWEAllocateSound takes string path, integer id, integer volume, real pitch returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEAllocateSound",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "path"
		}, {
			"type": "integer",
			"name": "id"
		}, {
			"type": "integer",
			"name": "volume"
		}, {
			"type": "real",
			"name": "pitch"
		}],
		"insertText": "YDWEAllocateSound(path, id, volume, pitch)",
		"documentation": ""
	},
	"YDWEPlayScene": {
		"original": "function YDWEPlayScene takes integer scene returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEPlayScene",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "scene"
		}],
		"insertText": "YDWEPlayScene(scene)",
		"documentation": "播放场景<Anitarf制作>"
	},
	"YDWEPlaySceneFromTime": {
		"original": "function YDWEPlaySceneFromTime takes integer scene, real time returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEPlaySceneFromTime",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "scene"
		}, {
			"type": "real",
			"name": "time"
		}],
		"insertText": "YDWEPlaySceneFromTime(scene, time)",
		"documentation": ""
	},
	"YDWEScriptInterpreter": {
		"original": "function YDWEScriptInterpreter takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEScriptInterpreter",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEScriptInterpreter()",
		"documentation": ""
	},
	"YDWEWriteToScene": {
		"original": "function YDWEWriteToScene takes integer scene returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEWriteToScene",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "scene"
		}],
		"insertText": "YDWEWriteToScene(scene)",
		"documentation": "记录当前场景<Anitarf制作>"
	},
	"YDWEGetActionSpot": {
		"original": "function YDWEGetActionSpot takes integer scene, real time returns integer",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEGetActionSpot",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "scene"
		}, {
			"type": "real",
			"name": "time"
		}],
		"returnType": "integer",
		"insertText": "YDWEGetActionSpot(scene, time)",
		"documentation": ""
	},
	"YDWENextScene": {
		"original": "function YDWENextScene takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWENextScene",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWENextScene()",
		"documentation": ""
	},
	"YDWEScriptNextScene": {
		"original": "function YDWEScriptNextScene takes real time returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEScriptNextScene",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}],
		"insertText": "YDWEScriptNextScene(time)",
		"documentation": "设置下一幕场景播放时间<Anitarf制作>"
	},
	"YDWEScriptExternalFunc": {
		"original": "function YDWEScriptExternalFunc takes real time, string funcName returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEScriptExternalFunc",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "string",
			"name": "funcName"
		}],
		"insertText": "YDWEScriptExternalFunc(time, funcName)",
		"documentation": "运行外部函数<Anitarf制作>"
	},
	"YDWESpecialEffectDestroy": {
		"original": "function YDWESpecialEffectDestroy takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWESpecialEffectDestroy",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWESpecialEffectDestroy()",
		"documentation": ""
	},
	"YDWESpecialEffectDestroyOverTime": {
		"original": "function YDWESpecialEffectDestroyOverTime takes effect eff, real duration returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWESpecialEffectDestroyOverTime",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "effect",
			"name": "eff"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "YDWESpecialEffectDestroyOverTime(eff, duration)",
		"documentation": ""
	},
	"YDWESpecialEffectPoint": {
		"original": "function YDWESpecialEffectPoint takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWESpecialEffectPoint",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWESpecialEffectPoint()",
		"documentation": ""
	},
	"YDWEScriptPointEffect": {
		"original": "function YDWEScriptPointEffect takes real time, real x, real y, real z, string path, real duration returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEScriptPointEffect",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "z"
		}, {
			"type": "string",
			"name": "path"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "YDWEScriptPointEffect(time, x, y, z, path, duration)",
		"documentation": "创建特效(指定点)<Anitarf制作>"
	},
	"YDWESpecialEffectActor": {
		"original": "function YDWESpecialEffectActor takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWESpecialEffectActor",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWESpecialEffectActor()",
		"documentation": ""
	},
	"YDWEScriptActEffect": {
		"original": "function YDWEScriptActEffect takes real time, integer actor, string path, string attachpoint, real duration returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEScriptActEffect",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "integer",
			"name": "actor"
		}, {
			"type": "string",
			"name": "path"
		}, {
			"type": "string",
			"name": "attachpoint"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "YDWEScriptActEffect(time, actor, path, attachpoint, duration)",
		"documentation": "创建特效(绑定单位)<Anitarf制作>"
	},
	"YDWEPlaySoundPath": {
		"original": "function YDWEPlaySoundPath takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEPlaySoundPath",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEPlaySoundPath()",
		"documentation": ""
	},
	"YDWEPreloadSoundPath": {
		"original": "function YDWEPreloadSoundPath takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEPreloadSoundPath",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEPreloadSoundPath()",
		"documentation": ""
	},
	"YDWEScriptPlaySound": {
		"original": "function YDWEScriptPlaySound takes real time, string path, real pitch, integer volume returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEScriptPlaySound",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "string",
			"name": "path"
		}, {
			"type": "real",
			"name": "pitch"
		}, {
			"type": "integer",
			"name": "volume"
		}],
		"insertText": "YDWEScriptPlaySound(time, path, pitch, volume)",
		"documentation": "播放声音<Anitarf制作>"
	},
	"YDWEActorAbilityLevel": {
		"original": "function YDWEActorAbilityLevel takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEActorAbilityLevel",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEActorAbilityLevel()",
		"documentation": ""
	},
	"YDWEScriptActAbilityLvl": {
		"original": "function YDWEScriptActAbilityLvl takes real time, integer actor, integer abilityID, integer level returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEScriptActAbilityLvl",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "integer",
			"name": "actor"
		}, {
			"type": "integer",
			"name": "abilityID"
		}, {
			"type": "integer",
			"name": "level"
		}],
		"insertText": "YDWEScriptActAbilityLvl(time, actor, abilityID, level)",
		"documentation": "添加技能<Anitarf制作>"
	},
	"YDWEActorPlayAnimation": {
		"original": "function YDWEActorPlayAnimation takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEActorPlayAnimation",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEActorPlayAnimation()",
		"documentation": ""
	},
	"YDWEScriptActAnimPlay": {
		"original": "function YDWEScriptActAnimPlay takes real time, integer actor, integer animationID, real animationBlend returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEScriptActAnimPlay",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "integer",
			"name": "actor"
		}, {
			"type": "integer",
			"name": "animationID"
		}, {
			"type": "real",
			"name": "animationBlend"
		}],
		"insertText": "YDWEScriptActAnimPlay(time, actor, animationID, animationBlend)",
		"documentation": "播放动画<Anitarf制作>"
	},
	"YDWEActorResetAnimation": {
		"original": "function YDWEActorResetAnimation takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEActorResetAnimation",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEActorResetAnimation()",
		"documentation": ""
	},
	"YDWEScriptActAnimReset": {
		"original": "function YDWEScriptActAnimReset takes real time, integer actor returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEScriptActAnimReset",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "integer",
			"name": "actor"
		}],
		"insertText": "YDWEScriptActAnimReset(time, actor)",
		"documentation": "重置动画<Anitarf制作>"
	},
	"YDWEActorSpeedAnimation": {
		"original": "function YDWEActorSpeedAnimation takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEActorSpeedAnimation",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEActorSpeedAnimation()",
		"documentation": ""
	},
	"YDWEScriptActAnimSpeed": {
		"original": "function YDWEScriptActAnimSpeed takes real time, integer actor, real speed returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEScriptActAnimSpeed",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "integer",
			"name": "actor"
		}, {
			"type": "real",
			"name": "speed"
		}],
		"insertText": "YDWEScriptActAnimSpeed(time, actor, speed)",
		"documentation": "调整动画速度<Anitarf制作>"
	},
	"YDWEActorSlide": {
		"original": "function YDWEActorSlide takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEActorSlide",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEActorSlide()",
		"documentation": ""
	},
	"YDWEScriptActSlide": {
		"original": "function YDWEScriptActSlide takes real time, integer actor, real x, real y, real duration, real gr returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEScriptActSlide",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "integer",
			"name": "actor"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "duration"
		}, {
			"type": "real",
			"name": "gr"
		}],
		"insertText": "YDWEScriptActSlide(time, actor, x, y, duration, gr)",
		"documentation": "单位滑行<Anitarf制作>"
	},
	"YDWEActorWalkProperties": {
		"original": "function YDWEActorWalkProperties takes integer unitID, integer walkAnimID, real walkAnimDuration, real walkSpeed returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEActorWalkProperties",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "unitID"
		}, {
			"type": "integer",
			"name": "walkAnimID"
		}, {
			"type": "real",
			"name": "walkAnimDuration"
		}, {
			"type": "real",
			"name": "walkSpeed"
		}],
		"insertText": "YDWEActorWalkProperties(unitID, walkAnimID, walkAnimDuration, walkSpeed)",
		"documentation": "单位行走设置<Anitarf制作>"
	},
	"YDWEActorWalk": {
		"original": "function YDWEActorWalk takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEActorWalk",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEActorWalk()",
		"documentation": ""
	},
	"YDWEScriptActWalk": {
		"original": "function YDWEScriptActWalk takes real time, integer actor, real x, real y, real duration, real animationBlend returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEScriptActWalk",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "integer",
			"name": "actor"
		}, {
			"type": "real",
			"name": "x"
		}, {
			"type": "real",
			"name": "y"
		}, {
			"type": "real",
			"name": "duration"
		}, {
			"type": "real",
			"name": "animationBlend"
		}],
		"insertText": "YDWEScriptActWalk(time, actor, x, y, duration, animationBlend)",
		"documentation": "单位行走<Anitarf制作>"
	},
	"YDWEActorTurn": {
		"original": "function YDWEActorTurn takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEActorTurn",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEActorTurn()",
		"documentation": ""
	},
	"YDWEScriptActTurn": {
		"original": "function YDWEScriptActTurn takes real time, integer actor, real destAng, real duration, integer clockwise returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEScriptActTurn",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "integer",
			"name": "actor"
		}, {
			"type": "real",
			"name": "destAng"
		}, {
			"type": "real",
			"name": "duration"
		}, {
			"type": "integer",
			"name": "clockwise"
		}],
		"insertText": "YDWEScriptActTurn(time, actor, destAng, duration, clockwise)",
		"documentation": "单位转向<Anitarf制作>"
	},
	"YDWEActorFace": {
		"original": "function YDWEActorFace takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEActorFace",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEActorFace()",
		"documentation": ""
	},
	"YDWEScriptActFace": {
		"original": "function YDWEScriptActFace takes real time, integer actor, integer destActor, integer headORchest, real xoff, real yoff, real zoff, real animationBlend returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEScriptActFace",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "integer",
			"name": "actor"
		}, {
			"type": "integer",
			"name": "destActor"
		}, {
			"type": "integer",
			"name": "headORchest"
		}, {
			"type": "real",
			"name": "xoff"
		}, {
			"type": "real",
			"name": "yoff"
		}, {
			"type": "real",
			"name": "zoff"
		}, {
			"type": "real",
			"name": "animationBlend"
		}],
		"insertText": "YDWEScriptActFace(time, actor, destActor, headORchest, xoff, yoff, zoff, animationBlend)",
		"documentation": "锁定单位身体朝向<Anitarf制作>"
	},
	"YDWEActorFaceReset": {
		"original": "function YDWEActorFaceReset takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEActorFaceReset",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEActorFaceReset()",
		"documentation": ""
	},
	"YDWEScriptActFaceReset": {
		"original": "function YDWEScriptActFaceReset takes real time, integer actor, real animationBlend returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEScriptActFaceReset",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "integer",
			"name": "actor"
		}, {
			"type": "real",
			"name": "animationBlend"
		}],
		"insertText": "YDWEScriptActFaceReset(time, actor, animationBlend)",
		"documentation": "重置单位身体朝向<Anitarf制作>"
	},
	"YDWEActorColour": {
		"original": "function YDWEActorColour takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEActorColour",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEActorColour()",
		"documentation": ""
	},
	"YDWEScriptActColour": {
		"original": "function YDWEScriptActColour takes real time, integer actor, real red, real green, real blue, real opacity, real duration returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEScriptActColour",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "integer",
			"name": "actor"
		}, {
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}, {
			"type": "real",
			"name": "opacity"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "YDWEScriptActColour(time, actor, red, green, blue, opacity, duration)",
		"documentation": "改变单位颜色<Anitarf制作>"
	},
	"YDWEActorSize": {
		"original": "function YDWEActorSize takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEActorSize",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEActorSize()",
		"documentation": ""
	},
	"YDWEScriptActSize": {
		"original": "function YDWEScriptActSize takes real time, integer actor, real size, real duration returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEScriptActSize",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "integer",
			"name": "actor"
		}, {
			"type": "real",
			"name": "size"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "YDWEScriptActSize(time, actor, size, duration)",
		"documentation": "改变单位身体尺寸<Anitarf制作>"
	},
	"YDWECameraAction": {
		"original": "function YDWECameraAction takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWECameraAction",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWECameraAction()",
		"documentation": ""
	},
	"YDWEScriptCamera": {
		"original": "function YDWEScriptCamera takes real time, integer camera, real duration, integer changeType returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEScriptCamera",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "integer",
			"name": "camera"
		}, {
			"type": "real",
			"name": "duration"
		}, {
			"type": "integer",
			"name": "changeType"
		}],
		"insertText": "YDWEScriptCamera(time, camera, duration, changeType)",
		"documentation": "应用镜头<Anitarf制作>"
	},
	"YDWECameraStatChangeInst": {
		"original": "function YDWECameraStatChangeInst takes integer stat, real endvalue returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWECameraStatChangeInst",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "stat"
		}, {
			"type": "real",
			"name": "endvalue"
		}],
		"insertText": "YDWECameraStatChangeInst(stat, endvalue)",
		"documentation": ""
	},
	"YDWECameraStatAction": {
		"original": "function YDWECameraStatAction takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWECameraStatAction",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWECameraStatAction()",
		"documentation": ""
	},
	"YDWEScriptCameraStat": {
		"original": "function YDWEScriptCameraStat takes real time, integer statID, real duration, real endValue, real endSpeed, integer changeType returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEScriptCameraStat",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "integer",
			"name": "statID"
		}, {
			"type": "real",
			"name": "duration"
		}, {
			"type": "real",
			"name": "endValue"
		}, {
			"type": "real",
			"name": "endSpeed"
		}, {
			"type": "integer",
			"name": "changeType"
		}],
		"insertText": "YDWEScriptCameraStat(time, statID, duration, endValue, endSpeed, changeType)",
		"documentation": "改变镜头参数<Anitarf制作>"
	},
	"YDWECameraIgnoreTerrain": {
		"original": "function YDWECameraIgnoreTerrain takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWECameraIgnoreTerrain",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWECameraIgnoreTerrain()",
		"documentation": ""
	},
	"YDWECameraUnignoreTerrain": {
		"original": "function YDWECameraUnignoreTerrain takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWECameraUnignoreTerrain",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWECameraUnignoreTerrain()",
		"documentation": ""
	},
	"YDWEScriptCameraIgnoreTerrain": {
		"original": "function YDWEScriptCameraIgnoreTerrain takes real time, boolean ignore returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEScriptCameraIgnoreTerrain",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "boolean",
			"name": "ignore"
		}],
		"insertText": "YDWEScriptCameraIgnoreTerrain(time, ignore)",
		"documentation": "镜头忽略悬崖<Anitarf制作>"
	},
	"YDWEActorCameraLock": {
		"original": "function YDWEActorCameraLock takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEActorCameraLock",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEActorCameraLock()",
		"documentation": ""
	},
	"YDWEScriptActCameraLock": {
		"original": "function YDWEScriptActCameraLock takes real time, integer actor, real xoff, real yoff, real zoff, boolean smooth, real duration returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEScriptActCameraLock",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "integer",
			"name": "actor"
		}, {
			"type": "real",
			"name": "xoff"
		}, {
			"type": "real",
			"name": "yoff"
		}, {
			"type": "real",
			"name": "zoff"
		}, {
			"type": "boolean",
			"name": "smooth"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "YDWEScriptActCameraLock(time, actor, xoff, yoff, zoff, smooth, duration)",
		"documentation": "锁定镜头位置<Anitarf制作>"
	},
	"YDWEActorCameraLockReset": {
		"original": "function YDWEActorCameraLockReset takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEActorCameraLockReset",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEActorCameraLockReset()",
		"documentation": ""
	},
	"YDWEScriptActCameraLockReset": {
		"original": "function YDWEScriptActCameraLockReset takes real time, boolean smooth, real duration returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEScriptActCameraLockReset",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "boolean",
			"name": "smooth"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "YDWEScriptActCameraLockReset(time, smooth, duration)",
		"documentation": "重置镜头位置<Anitarf制作>"
	},
	"YDWEActorCameraFace": {
		"original": "function YDWEActorCameraFace takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEActorCameraFace",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEActorCameraFace()",
		"documentation": ""
	},
	"YDWEScriptActCameraFace": {
		"original": "function YDWEScriptActCameraFace takes real time, integer actor, real xoff, real yoff, real zoff, boolean smooth, real duration returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEScriptActCameraFace",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "integer",
			"name": "actor"
		}, {
			"type": "real",
			"name": "xoff"
		}, {
			"type": "real",
			"name": "yoff"
		}, {
			"type": "real",
			"name": "zoff"
		}, {
			"type": "boolean",
			"name": "smooth"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "YDWEScriptActCameraFace(time, actor, xoff, yoff, zoff, smooth, duration)",
		"documentation": "锁定镜头角度<Anitarf制作>"
	},
	"YDWEActorCameraFaceReset": {
		"original": "function YDWEActorCameraFaceReset takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEActorCameraFaceReset",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEActorCameraFaceReset()",
		"documentation": ""
	},
	"YDWEScriptActCameraFaceReset": {
		"original": "function YDWEScriptActCameraFaceReset takes real time, boolean smooth, real duration returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEScriptActCameraFaceReset",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "boolean",
			"name": "smooth"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "YDWEScriptActCameraFaceReset(time, smooth, duration)",
		"documentation": "重置镜头角度<Anitarf制作>"
	},
	"YDWEFogChange": {
		"original": "function YDWEFogChange takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEFogChange",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEFogChange()",
		"documentation": ""
	},
	"YDWEScriptFog": {
		"original": "function YDWEScriptFog takes real time, real startZ, real endZ, real red, real green, real blue, real duration returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEScriptFog",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "real",
			"name": "startZ"
		}, {
			"type": "real",
			"name": "endZ"
		}, {
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "YDWEScriptFog(time, startZ, endZ, red, green, blue, duration)",
		"documentation": "设置迷雾<Anitarf制作>"
	},
	"YDWEFadeChange": {
		"original": "function YDWEFadeChange takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEFadeChange",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEFadeChange()",
		"documentation": ""
	},
	"YDWEScriptFade": {
		"original": "function YDWEScriptFade takes real time, real red, real green, real blue, real opacity, real duration returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEScriptFade",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "real",
			"name": "red"
		}, {
			"type": "real",
			"name": "green"
		}, {
			"type": "real",
			"name": "blue"
		}, {
			"type": "real",
			"name": "opacity"
		}, {
			"type": "real",
			"name": "duration"
		}],
		"insertText": "YDWEScriptFade(time, red, green, blue, opacity, duration)",
		"documentation": "设置滤镜<Anitarf制作>"
	},
	"YDWESubtitleDisplay": {
		"original": "function YDWESubtitleDisplay takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWESubtitleDisplay",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWESubtitleDisplay()",
		"documentation": ""
	},
	"YDWEScriptSubtitleLine": {
		"original": "function YDWEScriptSubtitleLine takes real time, string line returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEScriptSubtitleLine",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "string",
			"name": "line"
		}],
		"insertText": "YDWEScriptSubtitleLine(time, line)",
		"documentation": "显示字幕线<Anitarf制作>"
	},
	"YDWESubtitleClear": {
		"original": "function YDWESubtitleClear takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWESubtitleClear",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWESubtitleClear()",
		"documentation": ""
	},
	"YDWEScriptSubtitleClear": {
		"original": "function YDWEScriptSubtitleClear takes real time returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEScriptSubtitleClear",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}],
		"insertText": "YDWEScriptSubtitleClear(time)",
		"documentation": "清除字幕线<Anitarf制作>"
	},
	"YDWEScriptSystemInit": {
		"original": "function YDWEScriptSystemInit takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEScriptSystemInit",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEScriptSystemInit()",
		"documentation": ""
	},
	"YDWEInitCinematicSystem": {
		"original": "function YDWEInitCinematicSystem takes nothing returns nothing",
		"fileName": "YDWECinematicSystem.j",
		"name": "YDWEInitCinematicSystem",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEInitCinematicSystem()",
		"documentation": "开启电影系统<Anitarf制作>"
	},
	"YDWECreateEwsp": {
		"original": "function YDWECreateEwsp takes unit Hero,integer ewsp,integer number,real radius,real lasttime,real interval,real speed returns nothing",
		"fileName": "YDWECreateEwsp.j",
		"name": "YDWECreateEwsp",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "Hero"
		}, {
			"type": "integer",
			"name": "ewsp"
		}, {
			"type": "integer",
			"name": "number"
		}, {
			"type": "real",
			"name": "radius"
		}, {
			"type": "real",
			"name": "lasttime"
		}, {
			"type": "real",
			"name": "interval"
		}, {
			"type": "real",
			"name": "speed"
		}],
		"insertText": "YDWECreateEwsp(Hero, ewsp, number, radius, lasttime, interval, speed)",
		"documentation": "创建环绕单位<wataloo添加>"
	},
	"YDWECreateLine": {
		"original": "function YDWECreateLine takes unit tru,integer ut,integer count,real angleadd,real distance,real lasttime,real eachtime,real heightstart,real heightadd,real sizestart,real sizeadd returns nothing",
		"fileName": "YDWECreateLine.j",
		"name": "YDWECreateLine",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "tru"
		}, {
			"type": "integer",
			"name": "ut"
		}, {
			"type": "integer",
			"name": "count"
		}, {
			"type": "real",
			"name": "angleadd"
		}, {
			"type": "real",
			"name": "distance"
		}, {
			"type": "real",
			"name": "lasttime"
		}, {
			"type": "real",
			"name": "eachtime"
		}, {
			"type": "real",
			"name": "heightstart"
		}, {
			"type": "real",
			"name": "heightadd"
		}, {
			"type": "real",
			"name": "sizestart"
		}, {
			"type": "real",
			"name": "sizeadd"
		}],
		"insertText": "YDWECreateLine(tru, ut, count, angleadd, distance, lasttime, eachtime, heightstart, heightadd, sizestart, sizeadd)",
		"documentation": "生成丝带<thody制作>"
	},
	"YDWEIsItemSwitch": {
		"original": "function YDWEIsItemSwitch takes unit u returns boolean    ",
		"fileName": "YDWEDoubleItemSlotByItem.j",
		"name": "YDWEIsItemSwitch",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}],
		"returnType": "boolean",
		"insertText": "YDWEIsItemSwitch(u)",
		"documentation": "单位切换背包[YDWE]"
	},
	"YDWEItemSwitch": {
		"original": "function YDWEItemSwitch takes unit Ua,unit Ub returns nothing",
		"fileName": "YDWEDoubleItemSlotByItem.j",
		"name": "YDWEItemSwitch",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "Ua"
		}, {
			"type": "unit",
			"name": "Ub"
		}],
		"insertText": "YDWEItemSwitch(Ua, Ub)",
		"documentation": ""
	},
	"YDWEDoubleItemSlotByAbility_CON": {
		"original": "function YDWEDoubleItemSlotByAbility_CON takes nothing returns boolean ",
		"fileName": "YDWEDoubleItemSlotByItem.j",
		"name": "YDWEDoubleItemSlotByAbility_CON",
		"isConstant": false,
		"isNative": false,
		"returnType": "boolean",
		"insertText": "YDWEDoubleItemSlotByAbility_CON()",
		"documentation": ""
	},
	"YDWEDoubleItemSlotByAbility": {
		"original": "function YDWEDoubleItemSlotByAbility takes unit hero,integer ab,integer uid,integer MaxItemSlot returns nothing ",
		"fileName": "YDWEDoubleItemSlotByItem.j",
		"name": "YDWEDoubleItemSlotByAbility",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "hero"
		}, {
			"type": "integer",
			"name": "ab"
		}, {
			"type": "integer",
			"name": "uid"
		}, {
			"type": "integer",
			"name": "MaxItemSlot"
		}],
		"insertText": "YDWEDoubleItemSlotByAbility(hero, ab, uid, MaxItemSlot)",
		"documentation": "多重物品栏(技能触发)"
	},
	"YDWEDoubleItemSlotByItem_CON": {
		"original": "function YDWEDoubleItemSlotByItem_CON takes nothing returns boolean ",
		"fileName": "YDWEDoubleItemSlotByItem.j",
		"name": "YDWEDoubleItemSlotByItem_CON",
		"isConstant": false,
		"isNative": false,
		"returnType": "boolean",
		"insertText": "YDWEDoubleItemSlotByItem_CON()",
		"documentation": ""
	},
	"YDWEDoubleItemSlotByItem": {
		"original": "function YDWEDoubleItemSlotByItem takes unit hero,integer ItemTypeId,integer uid,integer MaxItemSlot returns nothing ",
		"fileName": "YDWEDoubleItemSlotByItem.j",
		"name": "YDWEDoubleItemSlotByItem",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "hero"
		}, {
			"type": "integer",
			"name": "ItemTypeId"
		}, {
			"type": "integer",
			"name": "uid"
		}, {
			"type": "integer",
			"name": "MaxItemSlot"
		}],
		"insertText": "YDWEDoubleItemSlotByItem(hero, ItemTypeId, uid, MaxItemSlot)",
		"documentation": "多重物品栏(物品触发)"
	},
	"EXGetEventDamageData": {
		"original": "\tnative EXGetEventDamageData takes integer edd_type returns integer",
		"fileName": "YDWEEventDamageData.j",
		"name": "EXGetEventDamageData",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "integer",
			"name": "edd_type"
		}],
		"returnType": "integer",
		"insertText": "EXGetEventDamageData(edd_type)",
		"documentation": ""
	},
	"EXSetEventDamage": {
		"original": "\tnative EXSetEventDamage takes real amount returns boolean",
		"fileName": "YDWEEventDamageData.j",
		"name": "EXSetEventDamage",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "real",
			"name": "amount"
		}],
		"returnType": "boolean",
		"insertText": "EXSetEventDamage(amount)",
		"documentation": ""
	},
	"YDWEIsEventPhysicalDamage": {
		"original": "\tfunction YDWEIsEventPhysicalDamage takes nothing returns boolean",
		"fileName": "YDWEEventDamageData.j",
		"name": "YDWEIsEventPhysicalDamage",
		"isConstant": false,
		"isNative": false,
		"returnType": "boolean",
		"insertText": "YDWEIsEventPhysicalDamage()",
		"documentation": ""
	},
	"YDWEIsEventAttackDamage": {
		"original": "\tfunction YDWEIsEventAttackDamage takes nothing returns boolean",
		"fileName": "YDWEEventDamageData.j",
		"name": "YDWEIsEventAttackDamage",
		"isConstant": false,
		"isNative": false,
		"returnType": "boolean",
		"insertText": "YDWEIsEventAttackDamage()",
		"documentation": ""
	},
	"YDWEIsEventRangedDamage": {
		"original": "\tfunction YDWEIsEventRangedDamage takes nothing  returns boolean",
		"fileName": "YDWEEventDamageData.j",
		"name": "YDWEIsEventRangedDamage",
		"isConstant": false,
		"isNative": false,
		"returnType": "boolean",
		"insertText": "YDWEIsEventRangedDamage()",
		"documentation": ""
	},
	"YDWEIsEventDamageType": {
		"original": "\tfunction YDWEIsEventDamageType takes damagetype damageType returns boolean",
		"fileName": "YDWEEventDamageData.j",
		"name": "YDWEIsEventDamageType",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "damagetype",
			"name": "damageType"
		}],
		"returnType": "boolean",
		"insertText": "YDWEIsEventDamageType(damageType)",
		"documentation": ""
	},
	"YDWEIsEventWeaponType": {
		"original": "\tfunction YDWEIsEventWeaponType takes weapontype weaponType returns boolean",
		"fileName": "YDWEEventDamageData.j",
		"name": "YDWEIsEventWeaponType",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "weapontype",
			"name": "weaponType"
		}],
		"returnType": "boolean",
		"insertText": "YDWEIsEventWeaponType(weaponType)",
		"documentation": ""
	},
	"YDWEIsEventAttackType": {
		"original": "\tfunction YDWEIsEventAttackType takes attacktype attackType returns boolean",
		"fileName": "YDWEEventDamageData.j",
		"name": "YDWEIsEventAttackType",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "attacktype",
			"name": "attackType"
		}],
		"returnType": "boolean",
		"insertText": "YDWEIsEventAttackType(attackType)",
		"documentation": ""
	},
	"YDWESetEventDamage": {
		"original": "\tfunction YDWESetEventDamage takes real amount returns boolean",
		"fileName": "YDWEEventDamageData.j",
		"name": "YDWESetEventDamage",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "amount"
		}],
		"returnType": "boolean",
		"insertText": "YDWESetEventDamage(amount)",
		"documentation": ""
	},
	"YDWEUnitSetBonus": {
		"original": "function YDWEUnitSetBonus takes unit u, integer bonusType, integer ammount returns nothing",
		"fileName": "YDWEGeneralBounsSystem.j",
		"name": "YDWEUnitSetBonus",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}, {
			"type": "integer",
			"name": "bonusType"
		}, {
			"type": "integer",
			"name": "ammount"
		}],
		"insertText": "YDWEUnitSetBonus(u, bonusType, ammount)",
		"documentation": ""
	},
	"YDWEUnitAddBonus": {
		"original": "function YDWEUnitAddBonus takes unit u, integer bonusType, integer ammount returns nothing",
		"fileName": "YDWEGeneralBounsSystem.j",
		"name": "YDWEUnitAddBonus",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}, {
			"type": "integer",
			"name": "bonusType"
		}, {
			"type": "integer",
			"name": "ammount"
		}],
		"insertText": "YDWEUnitAddBonus(u, bonusType, ammount)",
		"documentation": ""
	},
	"YDWEGeneralBounsSystemUnitSetBonus": {
		"original": "function YDWEGeneralBounsSystemUnitSetBonus takes unit u,integer bonusType,integer mod,integer ammount returns nothing",
		"fileName": "YDWEGeneralBounsSystem.j",
		"name": "YDWEGeneralBounsSystemUnitSetBonus",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}, {
			"type": "integer",
			"name": "bonusType"
		}, {
			"type": "integer",
			"name": "mod"
		}, {
			"type": "integer",
			"name": "ammount"
		}],
		"insertText": "YDWEGeneralBounsSystemUnitSetBonus(u, bonusType, mod, ammount)",
		"documentation": "万能属性系统-设置属性<茄子制作>"
	},
	"YDWEGeneralBounsSystemUnitGetBonus": {
		"original": "function YDWEGeneralBounsSystemUnitGetBonus takes unit u,integer bonusType returns integer",
		"fileName": "YDWEGeneralBounsSystem.j",
		"name": "YDWEGeneralBounsSystemUnitGetBonus",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}, {
			"type": "integer",
			"name": "bonusType"
		}],
		"returnType": "integer",
		"insertText": "YDWEGeneralBounsSystemUnitGetBonus(u, bonusType)",
		"documentation": "万能属性系统-获取属性<茄子制作>"
	},
	"YDWELifeChange": {
		"original": "function YDWELifeChange takes unit u,integer mod,integer ch,integer id returns nothing",
		"fileName": "YDWEGeneralBounsSystem.j",
		"name": "YDWELifeChange",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}, {
			"type": "integer",
			"name": "mod"
		}, {
			"type": "integer",
			"name": "ch"
		}, {
			"type": "integer",
			"name": "id"
		}],
		"insertText": "YDWELifeChange(u, mod, ch, id)",
		"documentation": "设置单位生命上限 [YDWE]"
	},
	"YDWEManaChange": {
		"original": "function YDWEManaChange takes unit u,integer mod,integer ch,integer id returns nothing",
		"fileName": "YDWEGeneralBounsSystem.j",
		"name": "YDWEManaChange",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}, {
			"type": "integer",
			"name": "mod"
		}, {
			"type": "integer",
			"name": "ch"
		}, {
			"type": "integer",
			"name": "id"
		}],
		"insertText": "YDWEManaChange(u, mod, ch, id)",
		"documentation": "设置单位魔法上限 [YDWE]"
	},
	"YDWEGetGameTime": {
		"original": "function YDWEGetGameTime takes nothing returns real",
		"fileName": "YDWEGetGameTime.j",
		"name": "YDWEGetGameTime",
		"isConstant": false,
		"isNative": false,
		"returnType": "real",
		"insertText": "YDWEGetGameTime()",
		"documentation": ""
	},
	"YDWEGetGameCurrentTime": {
		"original": "function YDWEGetGameCurrentTime takes nothing returns integer",
		"fileName": "YDWEGetGameTime.j",
		"name": "YDWEGetGameCurrentTime",
		"isConstant": false,
		"isNative": false,
		"returnType": "integer",
		"insertText": "YDWEGetGameCurrentTime()",
		"documentation": "计时器系统-获取游戏当前时间"
	},
	"YDWEGetGameTimeInit": {
		"original": "function YDWEGetGameTimeInit takes nothing returns nothing",
		"fileName": "YDWEGetGameTime.j",
		"name": "YDWEGetGameTimeInit",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEGetGameTimeInit()",
		"documentation": ""
	},
	"YDWEAIRecordAbility": {
		"original": "function YDWEAIRecordAbility takes integer uid,integer ab1,integer ab2,integer ab3,integer ab4,integer ab5 returns nothing",
		"fileName": "YDWEHeroLearnSkillAI.j",
		"name": "YDWEAIRecordAbility",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "uid"
		}, {
			"type": "integer",
			"name": "ab1"
		}, {
			"type": "integer",
			"name": "ab2"
		}, {
			"type": "integer",
			"name": "ab3"
		}, {
			"type": "integer",
			"name": "ab4"
		}, {
			"type": "integer",
			"name": "ab5"
		}],
		"insertText": "YDWEAIRecordAbility(uid, ab1, ab2, ab3, ab4, ab5)",
		"documentation": "AI-技能绑定英雄<GreedWind制作>"
	},
	"YDWEAIRecordLearn_sequence": {
		"original": "function YDWEAIRecordLearn_sequence takes integer uid,string ls1,string ls2,string ls3,string ls4,string ls5 returns nothing",
		"fileName": "YDWEHeroLearnSkillAI.j",
		"name": "YDWEAIRecordLearn_sequence",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "uid"
		}, {
			"type": "string",
			"name": "ls1"
		}, {
			"type": "string",
			"name": "ls2"
		}, {
			"type": "string",
			"name": "ls3"
		}, {
			"type": "string",
			"name": "ls4"
		}, {
			"type": "string",
			"name": "ls5"
		}],
		"insertText": "YDWEAIRecordLearn_sequence(uid, ls1, ls2, ls3, ls4, ls5)",
		"documentation": "AI-技能学习顺序绑定英雄<GreedWind制作>"
	},
	"YDWEHeroLearnSkillAI": {
		"original": "function YDWEHeroLearnSkillAI takes unit hero,integer level returns integer",
		"fileName": "YDWEHeroLearnSkillAI.j",
		"name": "YDWEHeroLearnSkillAI",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "hero"
		}, {
			"type": "integer",
			"name": "level"
		}],
		"returnType": "integer",
		"insertText": "YDWEHeroLearnSkillAI(hero, level)",
		"documentation": "AI-自动学习对应技能<GreedWind制作>"
	},
	"YDWEHeroMaxSkillAI": {
		"original": "function YDWEHeroMaxSkillAI takes unit hero returns nothing",
		"fileName": "YDWEHeroLearnSkillAI.j",
		"name": "YDWEHeroMaxSkillAI",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "hero"
		}],
		"insertText": "YDWEHeroMaxSkillAI(hero)",
		"documentation": "AI-自动学习全部技能<GreedWind制作>"
	},
	"YDWEItemAbilityStorage": {
		"original": "function YDWEItemAbilityStorage takes integer itid,integer ab returns nothing",
		"fileName": "YDWEItemAbilityStorage.j",
		"name": "YDWEItemAbilityStorage",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "itid"
		}, {
			"type": "integer",
			"name": "ab"
		}],
		"insertText": "YDWEItemAbilityStorage(itid, ab)",
		"documentation": "物品属性系统-添加技能给物品[YDWE]"
	},
	"YDWEItemAbilitySystemByAbility_CON": {
		"original": "function YDWEItemAbilitySystemByAbility_CON takes nothing returns boolean",
		"fileName": "YDWEItemAbilityStorage.j",
		"name": "YDWEItemAbilitySystemByAbility_CON",
		"isConstant": false,
		"isNative": false,
		"returnType": "boolean",
		"insertText": "YDWEItemAbilitySystemByAbility_CON()",
		"documentation": ""
	},
	"YDWEItemAbilitySystemInit": {
		"original": " function YDWEItemAbilitySystemInit takes nothing returns nothing",
		"fileName": "YDWEItemAbilityStorage.j",
		"name": "YDWEItemAbilitySystemInit",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEItemAbilitySystemInit()",
		"documentation": ""
	},
	"EXDisplayChat": {
		"original": "\tnative EXDisplayChat     takes player p, integer chat_recipient, string message returns nothing",
		"fileName": "YDWEJapiOther.j",
		"name": "EXDisplayChat",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "player",
			"name": "p"
		}, {
			"type": "integer",
			"name": "chat_recipient"
		}, {
			"type": "string",
			"name": "message"
		}],
		"insertText": "EXDisplayChat(p, chat_recipient, message)",
		"documentation": ""
	},
	"YDWEDisplayChat": {
		"original": "\tfunction YDWEDisplayChat takes player p, integer chat_recipient, string message returns nothing",
		"fileName": "YDWEJapiOther.j",
		"name": "YDWEDisplayChat",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "p"
		}, {
			"type": "integer",
			"name": "chat_recipient"
		}, {
			"type": "string",
			"name": "message"
		}],
		"insertText": "YDWEDisplayChat(p, chat_recipient, message)",
		"documentation": ""
	},
	"EXExecuteScript": {
		"original": "\tnative EXExecuteScript     takes string script returns string",
		"fileName": "YDWEJapiScript.j",
		"name": "EXExecuteScript",
		"isConstant": false,
		"isNative": true,
		"args": [{
			"type": "string",
			"name": "script"
		}],
		"returnType": "string",
		"insertText": "EXExecuteScript(script)",
		"documentation": ""
	},
	"YDWEJumpTimerLoop": {
		"original": "function YDWEJumpTimerLoop takes nothing returns nothing",
		"fileName": "YDWEJumpTimer.j",
		"name": "YDWEJumpTimerLoop",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEJumpTimerLoop()",
		"documentation": ""
	},
	"YDWEJumpTimer": {
		"original": "function YDWEJumpTimer takes unit hero,real angle,real distance,real lasttime,real timeout,real heightMax returns nothing",
		"fileName": "YDWEJumpTimer.j",
		"name": "YDWEJumpTimer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "hero"
		}, {
			"type": "real",
			"name": "angle"
		}, {
			"type": "real",
			"name": "distance"
		}, {
			"type": "real",
			"name": "lasttime"
		}, {
			"type": "real",
			"name": "timeout"
		}, {
			"type": "real",
			"name": "heightMax"
		}],
		"insertText": "YDWEJumpTimer(hero, angle, distance, lasttime, timeout, heightMax)",
		"documentation": "跳跃函数"
	},
	"YDWELocalVariableInitiliation": {
		"original": "function YDWELocalVariableInitiliation takes nothing returns nothing",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWELocalVariableInitiliation",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWELocalVariableInitiliation()",
		"documentation": "开启局部变量功能"
	},
	"YDWEWaitForLocalVariable": {
		"original": "function YDWEWaitForLocalVariable takes real time returns nothing",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWEWaitForLocalVariable",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}],
		"insertText": "YDWEWaitForLocalVariable(time)",
		"documentation": "等待(局部变量专用)[YDWE]"
	},
	"YDWELocalVariableEnd": {
		"original": "function YDWELocalVariableEnd takes nothing returns nothing",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWELocalVariableEnd",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWELocalVariableEnd()",
		"documentation": "清空局部变量"
	},
	"YDWESetLocalVariableInteger": {
		"original": "function YDWESetLocalVariableInteger takes string s,integer i returns nothing",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWESetLocalVariableInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "i"
		}],
		"insertText": "YDWESetLocalVariableInteger(s, i)",
		"documentation": "设置 整数 局部变量"
	},
	"YDWEGetLocalVariableInteger": {
		"original": "function YDWEGetLocalVariableInteger takes string s returns integer",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWEGetLocalVariableInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}],
		"returnType": "integer",
		"insertText": "YDWEGetLocalVariableInteger(s)",
		"documentation": "局部变量"
	},
	"YDWESetLocalVariableIntegerArray": {
		"original": "function YDWESetLocalVariableIntegerArray takes string s,integer index,integer i returns nothing",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWESetLocalVariableIntegerArray",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "index"
		}, {
			"type": "integer",
			"name": "i"
		}],
		"insertText": "YDWESetLocalVariableIntegerArray(s, index, i)",
		"documentation": "设置 整数 局部变量数组"
	},
	"YDWEGetLocalVariableIntegerArray": {
		"original": "function YDWEGetLocalVariableIntegerArray takes string s,integer index returns integer",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWEGetLocalVariableIntegerArray",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "index"
		}],
		"returnType": "integer",
		"insertText": "YDWEGetLocalVariableIntegerArray(s, index)",
		"documentation": "局部变量数组"
	},
	"YDWESetLocalVariableReal": {
		"original": "function YDWESetLocalVariableReal takes string s,real R returns nothing",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWESetLocalVariableReal",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "real",
			"name": "R"
		}],
		"insertText": "YDWESetLocalVariableReal(s, R)",
		"documentation": "设置 实数 局部变量"
	},
	"YDWEGetLocalVariableReal": {
		"original": "function YDWEGetLocalVariableReal takes string s returns real",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWEGetLocalVariableReal",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}],
		"returnType": "real",
		"insertText": "YDWEGetLocalVariableReal(s)",
		"documentation": "局部变量"
	},
	"YDWESetLocalVariableRealArray": {
		"original": "function YDWESetLocalVariableRealArray takes string s,integer index,real R returns nothing",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWESetLocalVariableRealArray",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "index"
		}, {
			"type": "real",
			"name": "R"
		}],
		"insertText": "YDWESetLocalVariableRealArray(s, index, R)",
		"documentation": "设置 实数 局部变量数组"
	},
	"YDWEGetLocalVariableRealArray": {
		"original": "function YDWEGetLocalVariableRealArray  takes string s,integer index returns real",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWEGetLocalVariableRealArray",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "index"
		}],
		"returnType": "real",
		"insertText": "YDWEGetLocalVariableRealArray(s, index)",
		"documentation": "局部变量数组"
	},
	"YDWESetLocalVariableString": {
		"original": "function YDWESetLocalVariableString takes string s,string str returns nothing",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWESetLocalVariableString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "string",
			"name": "str"
		}],
		"insertText": "YDWESetLocalVariableString(s, str)",
		"documentation": "设置 字符串 局部变量"
	},
	"YDWEGetLocalVariableString": {
		"original": "function YDWEGetLocalVariableString takes string s returns string",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWEGetLocalVariableString",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}],
		"returnType": "string",
		"insertText": "YDWEGetLocalVariableString(s)",
		"documentation": "局部变量"
	},
	"YDWESetLocalVariableStringArray": {
		"original": "function YDWESetLocalVariableStringArray takes string s,integer index,string str returns nothing",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWESetLocalVariableStringArray",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "index"
		}, {
			"type": "string",
			"name": "str"
		}],
		"insertText": "YDWESetLocalVariableStringArray(s, index, str)",
		"documentation": "设置 字符串 局部变量数组"
	},
	"YDWEGetLocalVariableStringArray": {
		"original": "function YDWEGetLocalVariableStringArray takes string s,integer index returns string",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWEGetLocalVariableStringArray",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "index"
		}],
		"returnType": "string",
		"insertText": "YDWEGetLocalVariableStringArray(s, index)",
		"documentation": "局部变量数组"
	},
	"YDWESetLocalVariableBoolean": {
		"original": "function YDWESetLocalVariableBoolean takes string s,boolean bl returns nothing",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWESetLocalVariableBoolean",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "boolean",
			"name": "bl"
		}],
		"insertText": "YDWESetLocalVariableBoolean(s, bl)",
		"documentation": "设置 真值 局部变量"
	},
	"YDWEGetLocalVariableBoolean": {
		"original": "function YDWEGetLocalVariableBoolean takes string s returns boolean",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWEGetLocalVariableBoolean",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}],
		"returnType": "boolean",
		"insertText": "YDWEGetLocalVariableBoolean(s)",
		"documentation": "局部变量"
	},
	"YDWESetLocalVariableBooleanArray": {
		"original": "function YDWESetLocalVariableBooleanArray takes string s,integer index,boolean bl returns nothing",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWESetLocalVariableBooleanArray",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "index"
		}, {
			"type": "boolean",
			"name": "bl"
		}],
		"insertText": "YDWESetLocalVariableBooleanArray(s, index, bl)",
		"documentation": "设置 真值 局部变量数组"
	},
	"YDWEGetLocalVariableBooleanArray": {
		"original": "function YDWEGetLocalVariableBooleanArray takes string s,integer index returns boolean",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWEGetLocalVariableBooleanArray",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "index"
		}],
		"returnType": "boolean",
		"insertText": "YDWEGetLocalVariableBooleanArray(s, index)",
		"documentation": "局部变量数组"
	},
	"YDWESetLocalVariableUnit": {
		"original": "function YDWESetLocalVariableUnit takes string s,unit u returns nothing",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWESetLocalVariableUnit",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "unit",
			"name": "u"
		}],
		"insertText": "YDWESetLocalVariableUnit(s, u)",
		"documentation": "设置 单位 局部变量"
	},
	"YDWEGetLocalVariableUnit": {
		"original": "function YDWEGetLocalVariableUnit takes string s returns unit",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWEGetLocalVariableUnit",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}],
		"returnType": "unit",
		"insertText": "YDWEGetLocalVariableUnit(s)",
		"documentation": "局部变量"
	},
	"YDWESetLocalVariableUnitArray": {
		"original": "function YDWESetLocalVariableUnitArray takes string s,integer index,unit u returns nothing",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWESetLocalVariableUnitArray",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "index"
		}, {
			"type": "unit",
			"name": "u"
		}],
		"insertText": "YDWESetLocalVariableUnitArray(s, index, u)",
		"documentation": "设置 单位 局部变量数组"
	},
	"YDWEGetLocalVariableUnitArray": {
		"original": "function YDWEGetLocalVariableUnitArray takes string s,integer index returns unit",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWEGetLocalVariableUnitArray",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "index"
		}],
		"returnType": "unit",
		"insertText": "YDWEGetLocalVariableUnitArray(s, index)",
		"documentation": "局部变量数组"
	},
	"YDWESetLocalVariableUnitID": {
		"original": "function YDWESetLocalVariableUnitID takes string s,integer uid returns nothing",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWESetLocalVariableUnitID",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "uid"
		}],
		"insertText": "YDWESetLocalVariableUnitID(s, uid)",
		"documentation": "设置 单位类型 局部变量"
	},
	"YDWEGetLocalVariableUnitID": {
		"original": "function YDWEGetLocalVariableUnitID takes string s returns integer",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWEGetLocalVariableUnitID",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}],
		"returnType": "integer",
		"insertText": "YDWEGetLocalVariableUnitID(s)",
		"documentation": "局部变量"
	},
	"YDWESetLocalVariableUnitIDArray": {
		"original": "function YDWESetLocalVariableUnitIDArray takes string s,integer index,integer uid returns nothing",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWESetLocalVariableUnitIDArray",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "index"
		}, {
			"type": "integer",
			"name": "uid"
		}],
		"insertText": "YDWESetLocalVariableUnitIDArray(s, index, uid)",
		"documentation": "设置 单位类型 局部变量数组"
	},
	"YDWEGetLocalVariableUnitIDArray": {
		"original": "function YDWEGetLocalVariableUnitIDArray takes string s,integer index returns integer",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWEGetLocalVariableUnitIDArray",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "index"
		}],
		"returnType": "integer",
		"insertText": "YDWEGetLocalVariableUnitIDArray(s, index)",
		"documentation": "局部变量数组"
	},
	"YDWESetLocalVariableAbilityID": {
		"original": "function YDWESetLocalVariableAbilityID takes string s,integer abid returns nothing",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWESetLocalVariableAbilityID",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "abid"
		}],
		"insertText": "YDWESetLocalVariableAbilityID(s, abid)",
		"documentation": "设置 技能类型 局部变量"
	},
	"YDWEGetLocalVariableAbilityID": {
		"original": "function YDWEGetLocalVariableAbilityID takes string s returns integer",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWEGetLocalVariableAbilityID",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}],
		"returnType": "integer",
		"insertText": "YDWEGetLocalVariableAbilityID(s)",
		"documentation": "局部变量"
	},
	"YDWESetLocalVariableAbilityIDArray": {
		"original": "function YDWESetLocalVariableAbilityIDArray takes string s,integer index,integer abid returns nothing",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWESetLocalVariableAbilityIDArray",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "index"
		}, {
			"type": "integer",
			"name": "abid"
		}],
		"insertText": "YDWESetLocalVariableAbilityIDArray(s, index, abid)",
		"documentation": "设置 技能类型 局部变量数组"
	},
	"YDWEGetLocalVariableAbilityIDArray": {
		"original": "function YDWEGetLocalVariableAbilityIDArray takes string s,integer index returns integer",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWEGetLocalVariableAbilityIDArray",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "index"
		}],
		"returnType": "integer",
		"insertText": "YDWEGetLocalVariableAbilityIDArray(s, index)",
		"documentation": "局部变量数组"
	},
	"YDWESetLocalVariableItem": {
		"original": "function YDWESetLocalVariableItem takes string s,item it returns nothing",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWESetLocalVariableItem",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "item",
			"name": "it"
		}],
		"insertText": "YDWESetLocalVariableItem(s, it)",
		"documentation": "设置 物品 局部变量"
	},
	"YDWEGetLocalVariableItem": {
		"original": "function YDWEGetLocalVariableItem takes string s returns item",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWEGetLocalVariableItem",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}],
		"returnType": "item",
		"insertText": "YDWEGetLocalVariableItem(s)",
		"documentation": "局部变量"
	},
	"YDWESetLocalVariableItemArray": {
		"original": "function YDWESetLocalVariableItemArray takes string s,integer index,item it returns nothing",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWESetLocalVariableItemArray",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "index"
		}, {
			"type": "item",
			"name": "it"
		}],
		"insertText": "YDWESetLocalVariableItemArray(s, index, it)",
		"documentation": "设置 物品 局部变量数组"
	},
	"YDWEGetLocalVariableItemArray": {
		"original": "function YDWEGetLocalVariableItemArray takes string s,integer index returns item",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWEGetLocalVariableItemArray",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "index"
		}],
		"returnType": "item",
		"insertText": "YDWEGetLocalVariableItemArray(s, index)",
		"documentation": "局部变量数组"
	},
	"YDWESetLocalVariableItemID": {
		"original": "function YDWESetLocalVariableItemID takes string s,integer itid returns nothing",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWESetLocalVariableItemID",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "itid"
		}],
		"insertText": "YDWESetLocalVariableItemID(s, itid)",
		"documentation": "设置 物品类型 局部变量"
	},
	"YDWEGetLocalVariableItemID": {
		"original": "function YDWEGetLocalVariableItemID takes string s returns integer",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWEGetLocalVariableItemID",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}],
		"returnType": "integer",
		"insertText": "YDWEGetLocalVariableItemID(s)",
		"documentation": "局部变量"
	},
	"YDWESetLocalVariableItemIDArray": {
		"original": "function YDWESetLocalVariableItemIDArray takes string s,integer index,integer itid returns nothing",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWESetLocalVariableItemIDArray",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "index"
		}, {
			"type": "integer",
			"name": "itid"
		}],
		"insertText": "YDWESetLocalVariableItemIDArray(s, index, itid)",
		"documentation": "设置 物品类型 局部变量数组"
	},
	"YDWEGetLocalVariableItemIDArray": {
		"original": "function YDWEGetLocalVariableItemIDArray takes string s,integer index returns integer",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWEGetLocalVariableItemIDArray",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "index"
		}],
		"returnType": "integer",
		"insertText": "YDWEGetLocalVariableItemIDArray(s, index)",
		"documentation": "局部变量数组"
	},
	"YDWESetLocalVariableLocation": {
		"original": "function YDWESetLocalVariableLocation takes string s,location point returns nothing",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWESetLocalVariableLocation",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "location",
			"name": "point"
		}],
		"insertText": "YDWESetLocalVariableLocation(s, point)",
		"documentation": "设置 点 局部变量"
	},
	"YDWEGetLocalVariableLocation": {
		"original": "function YDWEGetLocalVariableLocation takes string s returns location",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWEGetLocalVariableLocation",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}],
		"returnType": "location",
		"insertText": "YDWEGetLocalVariableLocation(s)",
		"documentation": "局部变量"
	},
	"YDWESetLocalVariableLocationArray": {
		"original": "function YDWESetLocalVariableLocationArray takes string s,integer index,location point returns nothing",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWESetLocalVariableLocationArray",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "index"
		}, {
			"type": "location",
			"name": "point"
		}],
		"insertText": "YDWESetLocalVariableLocationArray(s, index, point)",
		"documentation": "设置 点 局部变量数组"
	},
	"YDWEGetLocalVariableLocationArray": {
		"original": "function YDWEGetLocalVariableLocationArray takes string s,integer index returns location",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWEGetLocalVariableLocationArray",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "index"
		}],
		"returnType": "location",
		"insertText": "YDWEGetLocalVariableLocationArray(s, index)",
		"documentation": "局部变量数组"
	},
	"YDWESetLocalVariableGroup": {
		"original": "function YDWESetLocalVariableGroup takes string s,group g returns nothing",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWESetLocalVariableGroup",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "group",
			"name": "g"
		}],
		"insertText": "YDWESetLocalVariableGroup(s, g)",
		"documentation": "设置 单位组 局部变量"
	},
	"YDWEGetLocalVariableGroup": {
		"original": "function YDWEGetLocalVariableGroup takes string s returns group",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWEGetLocalVariableGroup",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}],
		"returnType": "group",
		"insertText": "YDWEGetLocalVariableGroup(s)",
		"documentation": "局部变量"
	},
	"YDWESetLocalVariableGroupArray": {
		"original": "function YDWESetLocalVariableGroupArray takes string s,integer index,group g returns nothing",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWESetLocalVariableGroupArray",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "index"
		}, {
			"type": "group",
			"name": "g"
		}],
		"insertText": "YDWESetLocalVariableGroupArray(s, index, g)",
		"documentation": "设置 单位组 局部变量数组"
	},
	"YDWEGetLocalVariableGroupArray": {
		"original": "function YDWEGetLocalVariableGroupArray takes string s,integer index returns group",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWEGetLocalVariableGroupArray",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "index"
		}],
		"returnType": "group",
		"insertText": "YDWEGetLocalVariableGroupArray(s, index)",
		"documentation": "局部变量数组"
	},
	"YDWESetLocalVariableEffect": {
		"original": "function YDWESetLocalVariableEffect takes string s,effect e returns nothing",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWESetLocalVariableEffect",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "effect",
			"name": "e"
		}],
		"insertText": "YDWESetLocalVariableEffect(s, e)",
		"documentation": "设置 特效 局部变量"
	},
	"YDWEGetLocalVariableEffect": {
		"original": "function YDWEGetLocalVariableEffect takes string s returns effect",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWEGetLocalVariableEffect",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}],
		"returnType": "effect",
		"insertText": "YDWEGetLocalVariableEffect(s)",
		"documentation": "局部变量"
	},
	"YDWESetLocalVariableEffectArray": {
		"original": "function YDWESetLocalVariableEffectArray takes string s,integer index,effect e returns nothing",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWESetLocalVariableEffectArray",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "index"
		}, {
			"type": "effect",
			"name": "e"
		}],
		"insertText": "YDWESetLocalVariableEffectArray(s, index, e)",
		"documentation": "设置 特效 局部变量数组"
	},
	"YDWEGetLocalVariableEffectArray": {
		"original": "function YDWEGetLocalVariableEffectArray takes string s,integer index returns effect",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWEGetLocalVariableEffectArray",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "index"
		}],
		"returnType": "effect",
		"insertText": "YDWEGetLocalVariableEffectArray(s, index)",
		"documentation": "局部变量数组"
	},
	"YDWESetLocalVariableRect": {
		"original": "function YDWESetLocalVariableRect takes string s,rect rt returns nothing",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWESetLocalVariableRect",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "rect",
			"name": "rt"
		}],
		"insertText": "YDWESetLocalVariableRect(s, rt)",
		"documentation": "设置 地区 局部变量"
	},
	"YDWEGetLocalVariableRect": {
		"original": "function YDWEGetLocalVariableRect takes string s returns rect",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWEGetLocalVariableRect",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}],
		"returnType": "rect",
		"insertText": "YDWEGetLocalVariableRect(s)",
		"documentation": "局部变量"
	},
	"YDWESetLocalVariableRectArray": {
		"original": "function YDWESetLocalVariableRectArray takes string s,integer index,rect rt returns nothing",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWESetLocalVariableRectArray",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "index"
		}, {
			"type": "rect",
			"name": "rt"
		}],
		"insertText": "YDWESetLocalVariableRectArray(s, index, rt)",
		"documentation": "设置 地区 局部变量数组"
	},
	"YDWEGetLocalVariableRectArray": {
		"original": "function YDWEGetLocalVariableRectArray takes string s,integer index returns rect",
		"fileName": "YDWELocalVariable.j",
		"name": "YDWEGetLocalVariableRectArray",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "index"
		}],
		"returnType": "rect",
		"insertText": "YDWEGetLocalVariableRectArray(s, index)",
		"documentation": "局部变量数组"
	},
	"YDWELogarithmLg": {
		"original": "function YDWELogarithmLg takes real x returns real",
		"fileName": "YDWELogarithm.j",
		"name": "YDWELogarithmLg",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "x"
		}],
		"returnType": "real",
		"insertText": "YDWELogarithmLg(x)",
		"documentation": "对数函数(10为底)<c kuhn制作>"
	},
	"YDWELogarithmLn": {
		"original": "function YDWELogarithmLn takes real x returns real",
		"fileName": "YDWELogarithm.j",
		"name": "YDWELogarithmLn",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "x"
		}],
		"returnType": "real",
		"insertText": "YDWELogarithmLn(x)",
		"documentation": "对数函数(e为底)<c kuhn制作>"
	},
	"YDWELogarithmLog": {
		"original": "function YDWELogarithmLog takes real a,real x returns real",
		"fileName": "YDWELogarithm.j",
		"name": "YDWELogarithmLog",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "a"
		}, {
			"type": "real",
			"name": "x"
		}],
		"returnType": "real",
		"insertText": "YDWELogarithmLog(a, x)",
		"documentation": "对数函数(任意底)<c kuhn制作>"
	},
	"YDWEMeatHook": {
		"original": "    function YDWEMeatHook takes unit pudge, location point, integer headid, integer chainid, real length, real distance, real damage, real timeout returns nothing",
		"fileName": "YDWEMeatHook.j",
		"name": "YDWEMeatHook",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "pudge"
		}, {
			"type": "location",
			"name": "point"
		}, {
			"type": "integer",
			"name": "headid"
		}, {
			"type": "integer",
			"name": "chainid"
		}, {
			"type": "real",
			"name": "length"
		}, {
			"type": "real",
			"name": "distance"
		}, {
			"type": "real",
			"name": "damage"
		}, {
			"type": "real",
			"name": "timeout"
		}],
		"insertText": "YDWEMeatHook(pudge, point, headid, chainid, length, distance, damage, timeout)",
		"documentation": "肉钩<钩肥大战>"
	},
	"YDWEMemoryLeakHelperGetLastCaughtHandle": {
		"original": "    function YDWEMemoryLeakHelperGetLastCaughtHandle takes nothing returns handle",
		"fileName": "YDWEMemoryLeakHelper.j",
		"name": "YDWEMemoryLeakHelperGetLastCaughtHandle",
		"isConstant": false,
		"isNative": false,
		"returnType": "handle",
		"insertText": "YDWEMemoryLeakHelperGetLastCaughtHandle()",
		"documentation": ""
	},
	"YDWEMemoryLeakHelperProtectHandle": {
		"original": "    function YDWEMemoryLeakHelperProtectHandle takes handle h returns nothing",
		"fileName": "YDWEMemoryLeakHelper.j",
		"name": "YDWEMemoryLeakHelperProtectHandle",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "handle",
			"name": "h"
		}],
		"insertText": "YDWEMemoryLeakHelperProtectHandle(h)",
		"documentation": ""
	},
	"YDWEMemoryLeakHelperProtectVariable": {
		"original": "    function YDWEMemoryLeakHelperProtectVariable takes handle h returns nothing",
		"fileName": "YDWEMemoryLeakHelper.j",
		"name": "YDWEMemoryLeakHelperProtectVariable",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "handle",
			"name": "h"
		}],
		"insertText": "YDWEMemoryLeakHelperProtectVariable(h)",
		"documentation": ""
	},
	"YDWEMemoryLeakHelperDelayMMH": {
		"original": "    function YDWEMemoryLeakHelperDelayMMH takes nothing returns nothing",
		"fileName": "YDWEMemoryLeakHelper.j",
		"name": "YDWEMemoryLeakHelperDelayMMH",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEMemoryLeakHelperDelayMMH()",
		"documentation": ""
	},
	"YDWEMemoryLeakHelperDisplayLeaks": {
		"original": "    function YDWEMemoryLeakHelperDisplayLeaks takes nothing returns nothing",
		"fileName": "YDWEMemoryLeakHelper.j",
		"name": "YDWEMemoryLeakHelperDisplayLeaks",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEMemoryLeakHelperDisplayLeaks()",
		"documentation": "自动排泄系统-显示泄露<Mr.Malte制作>"
	},
	"YDWEMemoryLeakStartPassTimer": {
		"original": "    function YDWEMemoryLeakStartPassTimer takes nothing returns nothing",
		"fileName": "YDWEMemoryLeakHelper.j",
		"name": "YDWEMemoryLeakStartPassTimer",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEMemoryLeakStartPassTimer()",
		"documentation": ""
	},
	"YDWEMemoryLeakHelperMapIsOpenMemoryLeakHelper": {
		"original": "    function YDWEMemoryLeakHelperMapIsOpenMemoryLeakHelper takes boolean IsOpenMemoryLeak returns nothing",
		"fileName": "YDWEMemoryLeakHelper.j",
		"name": "YDWEMemoryLeakHelperMapIsOpenMemoryLeakHelper",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "boolean",
			"name": "IsOpenMemoryLeak"
		}],
		"insertText": "YDWEMemoryLeakHelperMapIsOpenMemoryLeakHelper(IsOpenMemoryLeak)",
		"documentation": "自动排泄系统-开启系统自动排泄功能<Mr.Malte制作>"
	},
	"YDWEMemoryLeakHelperProtectLastCaughtHandle": {
		"original": "    function YDWEMemoryLeakHelperProtectLastCaughtHandle takes nothing returns nothing",
		"fileName": "YDWEMemoryLeakHelper.j",
		"name": "YDWEMemoryLeakHelperProtectLastCaughtHandle",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEMemoryLeakHelperProtectLastCaughtHandle()",
		"documentation": "自动排泄系统-保护最后生成的句柄<Mr.Malte制作>"
	},
	"YDWEMemoryLeakHelperProtectLocation": {
		"original": "    function YDWEMemoryLeakHelperProtectLocation takes location loc returns nothing",
		"fileName": "YDWEMemoryLeakHelper.j",
		"name": "YDWEMemoryLeakHelperProtectLocation",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "location",
			"name": "loc"
		}],
		"insertText": "YDWEMemoryLeakHelperProtectLocation(loc)",
		"documentation": "自动排泄系统-保护-点<Mr.Malte制作>"
	},
	"YDWEMemoryLeakHelperProtectGroup": {
		"original": "    function YDWEMemoryLeakHelperProtectGroup takes group g returns nothing",
		"fileName": "YDWEMemoryLeakHelper.j",
		"name": "YDWEMemoryLeakHelperProtectGroup",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "group",
			"name": "g"
		}],
		"insertText": "YDWEMemoryLeakHelperProtectGroup(g)",
		"documentation": "自动排泄系统-保护-单位组<Mr.Malte制作>"
	},
	"YDWEMemoryLeakHelperProtectEffect": {
		"original": "    function YDWEMemoryLeakHelperProtectEffect takes effect e returns nothing",
		"fileName": "YDWEMemoryLeakHelper.j",
		"name": "YDWEMemoryLeakHelperProtectEffect",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "effect",
			"name": "e"
		}],
		"insertText": "YDWEMemoryLeakHelperProtectEffect(e)",
		"documentation": "自动排泄系统-保护-特效<Mr.Malte制作>"
	},
	"GetLastCombinedItem": {
		"original": "function GetLastCombinedItem takes nothing returns item",
		"fileName": "YDWENewItemsFormula.j",
		"name": "GetLastCombinedItem",
		"isConstant": false,
		"isNative": false,
		"returnType": "item",
		"insertText": "GetLastCombinedItem()",
		"documentation": "最后被合成的物品 [YDWE]"
	},
	"YDWESyStemItemCombineTriggerAction": {
		"original": "function YDWESyStemItemCombineTriggerAction takes nothing returns nothing",
		"fileName": "YDWENewItemsFormula.j",
		"name": "YDWESyStemItemCombineTriggerAction",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWESyStemItemCombineTriggerAction()",
		"documentation": ""
	},
	"YDWESyStemItemCombineRegistTrigger": {
		"original": "function YDWESyStemItemCombineRegistTrigger takes trigger trg returns nothing",
		"fileName": "YDWENewItemsFormula.j",
		"name": "YDWESyStemItemCombineRegistTrigger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trg"
		}],
		"insertText": "YDWESyStemItemCombineRegistTrigger(trg)",
		"documentation": "任意单位合成物品事件"
	},
	"YDWERecordGetI": {
		"original": "\tfunction YDWERecordGetI takes player p,string kid returns integer",
		"fileName": "YDWERecordSystem.j",
		"name": "YDWERecordGetI",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "p"
		}, {
			"type": "string",
			"name": "kid"
		}],
		"returnType": "integer",
		"insertText": "YDWERecordGetI(p, kid)",
		"documentation": ""
	},
	"YDWERecordSetI": {
		"original": "\tfunction YDWERecordSetI takes player p,string kid,integer data returns nothing",
		"fileName": "YDWERecordSystem.j",
		"name": "YDWERecordSetI",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "p"
		}, {
			"type": "string",
			"name": "kid"
		}, {
			"type": "integer",
			"name": "data"
		}],
		"insertText": "YDWERecordSetI(p, kid, data)",
		"documentation": ""
	},
	"YDWERecordSetTitle": {
		"original": "\tfunction YDWERecordSetTitle takes integer id,string kid returns nothing",
		"fileName": "YDWERecordSystem.j",
		"name": "YDWERecordSetTitle",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "id"
		}, {
			"type": "string",
			"name": "kid"
		}],
		"insertText": "YDWERecordSetTitle(id, kid)",
		"documentation": ""
	},
	"YDWERecordSave": {
		"original": "\tfunction YDWERecordSave takes player p returns nothing",
		"fileName": "YDWERecordSystem.j",
		"name": "YDWERecordSave",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "p"
		}],
		"insertText": "YDWERecordSave(p)",
		"documentation": ""
	},
	"YDWERecordClear": {
		"original": "\tfunction YDWERecordClear takes player p returns nothing",
		"fileName": "YDWERecordSystem.j",
		"name": "YDWERecordClear",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "p"
		}],
		"insertText": "YDWERecordClear(p)",
		"documentation": ""
	},
	"YDWEPlatformIsInRoom": {
		"original": "\tfunction YDWEPlatformIsInRoom takes nothing returns boolean",
		"fileName": "YDWERecordSystem.j",
		"name": "YDWEPlatformIsInRoom",
		"isConstant": false,
		"isNative": false,
		"returnType": "boolean",
		"insertText": "YDWEPlatformIsInRoom()",
		"documentation": ""
	},
	"YDWEPlatformIsInPlatform": {
		"original": "\tfunction YDWEPlatformIsInPlatform takes nothing returns boolean",
		"fileName": "YDWERecordSystem.j",
		"name": "YDWEPlatformIsInPlatform",
		"isConstant": false,
		"isNative": false,
		"returnType": "boolean",
		"insertText": "YDWEPlatformIsInPlatform()",
		"documentation": ""
	},
	"YDWERemoveGuard": {
		"original": "function YDWERemoveGuard takes unit pet returns nothing",
		"fileName": "YDWESetGuard.j",
		"name": "YDWERemoveGuard",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "pet"
		}],
		"insertText": "YDWERemoveGuard(pet)",
		"documentation": "取消佣兵<Red_Wolf制作>"
	},
	"SetGuardTimer": {
		"original": "function SetGuardTimer takes nothing returns nothing",
		"fileName": "YDWESetGuard.j",
		"name": "SetGuardTimer",
		"isConstant": false,
		"isNative": false,
		"insertText": "SetGuardTimer()",
		"documentation": ""
	},
	"YDWESetGuard": {
		"original": "function YDWESetGuard takes unit pet, unit captain, real timeout, real guardRanger, real returnRanger, real outRanger,integer percent returns nothing",
		"fileName": "YDWESetGuard.j",
		"name": "YDWESetGuard",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "pet"
		}, {
			"type": "unit",
			"name": "captain"
		}, {
			"type": "real",
			"name": "timeout"
		}, {
			"type": "real",
			"name": "guardRanger"
		}, {
			"type": "real",
			"name": "returnRanger"
		}, {
			"type": "real",
			"name": "outRanger"
		}, {
			"type": "integer",
			"name": "percent"
		}],
		"insertText": "YDWESetGuard(pet, captain, timeout, guardRanger, returnRanger, outRanger, percent)",
		"documentation": "佣兵系统<Red_Wolf制作>"
	},
	"YDWETimerPatternJumpAttack": {
		"original": "    function YDWETimerPatternJumpAttack takes unit u, real face, real dis, real lasttime, real timeout, real high, real damage, string part, string dsfx returns nothing",
		"fileName": "YDWETimerPattern.j",
		"name": "YDWETimerPatternJumpAttack",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}, {
			"type": "real",
			"name": "face"
		}, {
			"type": "real",
			"name": "dis"
		}, {
			"type": "real",
			"name": "lasttime"
		}, {
			"type": "real",
			"name": "timeout"
		}, {
			"type": "real",
			"name": "high"
		}, {
			"type": "real",
			"name": "damage"
		}, {
			"type": "string",
			"name": "part"
		}, {
			"type": "string",
			"name": "dsfx"
		}],
		"insertText": "YDWETimerPatternJumpAttack(u, face, dis, lasttime, timeout, high, damage, part, dsfx)",
		"documentation": "跳劈函数<Warft_TigerCN制作>"
	},
	"YDWETimerPatternMoonPriestessArrow": {
		"original": "    function YDWETimerPatternMoonPriestessArrow takes unit u, real face, real dis, real lasttime, real timeout, integer lv, integer aid, integer uid, string order, string part, string dsfx returns nothing",
		"fileName": "YDWETimerPattern.j",
		"name": "YDWETimerPatternMoonPriestessArrow",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}, {
			"type": "real",
			"name": "face"
		}, {
			"type": "real",
			"name": "dis"
		}, {
			"type": "real",
			"name": "lasttime"
		}, {
			"type": "real",
			"name": "timeout"
		}, {
			"type": "integer",
			"name": "lv"
		}, {
			"type": "integer",
			"name": "aid"
		}, {
			"type": "integer",
			"name": "uid"
		}, {
			"type": "string",
			"name": "order"
		}, {
			"type": "string",
			"name": "part"
		}, {
			"type": "string",
			"name": "dsfx"
		}],
		"insertText": "YDWETimerPatternMoonPriestessArrow(u, face, dis, lasttime, timeout, lv, aid, uid, order, part, dsfx)",
		"documentation": "月神箭<Warft_TigerCN制作>"
	},
	"YDWETimerPatternRushSlide": {
		"original": "    function YDWETimerPatternRushSlide takes unit u, real face, real dis, real lasttime, real timeout, real damage, boolean killtrees, boolean cycle, boolean path, string part, string gsfx, string wsfx returns nothing",
		"fileName": "YDWETimerPattern.j",
		"name": "YDWETimerPatternRushSlide",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "unit",
			"name": "u"
		}, {
			"type": "real",
			"name": "face"
		}, {
			"type": "real",
			"name": "dis"
		}, {
			"type": "real",
			"name": "lasttime"
		}, {
			"type": "real",
			"name": "timeout"
		}, {
			"type": "real",
			"name": "damage"
		}, {
			"type": "boolean",
			"name": "killtrees"
		}, {
			"type": "boolean",
			"name": "cycle"
		}, {
			"type": "boolean",
			"name": "path"
		}, {
			"type": "string",
			"name": "part"
		}, {
			"type": "string",
			"name": "gsfx"
		}, {
			"type": "string",
			"name": "wsfx"
		}],
		"insertText": "YDWETimerPatternRushSlide(u, face, dis, lasttime, timeout, damage, killtrees, cycle, path, part, gsfx, wsfx)",
		"documentation": "冲锋<Warft_TigerCN制作>"
	},
	"YDWETimerSystemNewTask": {
		"original": "function YDWETimerSystemNewTask takes real time, trigger proc returns integer",
		"fileName": "YDWETimerSystem.j",
		"name": "YDWETimerSystemNewTask",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "trigger",
			"name": "proc"
		}],
		"returnType": "integer",
		"insertText": "YDWETimerSystemNewTask(time, proc)",
		"documentation": ""
	},
	"YDWETimerSystemGetCurrentTask": {
		"original": "function YDWETimerSystemGetCurrentTask takes nothing returns integer",
		"fileName": "YDWETimerSystem.j",
		"name": "YDWETimerSystemGetCurrentTask",
		"isConstant": false,
		"isNative": false,
		"returnType": "integer",
		"insertText": "YDWETimerSystemGetCurrentTask()",
		"documentation": ""
	},
	"YDWETimerRemoveUnit": {
		"original": "function YDWETimerRemoveUnit takes real time, unit u returns nothing",
		"fileName": "YDWETimerSystem.j",
		"name": "YDWETimerRemoveUnit",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "unit",
			"name": "u"
		}],
		"insertText": "YDWETimerRemoveUnit(time, u)",
		"documentation": "计时器系统-删除单位[YDWE]"
	},
	"YDWETimerDestroyTimer": {
		"original": "function YDWETimerDestroyTimer takes real time, timer t returns nothing",
		"fileName": "YDWETimerSystem.j",
		"name": "YDWETimerDestroyTimer",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "timer",
			"name": "t"
		}],
		"insertText": "YDWETimerDestroyTimer(time, t)",
		"documentation": "计时器系统-删除计时器[YDWE]"
	},
	"YDWETimerRemoveItem": {
		"original": "function YDWETimerRemoveItem takes real time, item it returns nothing",
		"fileName": "YDWETimerSystem.j",
		"name": "YDWETimerRemoveItem",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "item",
			"name": "it"
		}],
		"insertText": "YDWETimerRemoveItem(time, it)",
		"documentation": "计时器系统-删除物品[YDWE]"
	},
	"YDWETimerDestroyEffect": {
		"original": "function YDWETimerDestroyEffect takes real time, effect e returns nothing",
		"fileName": "YDWETimerSystem.j",
		"name": "YDWETimerDestroyEffect",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "effect",
			"name": "e"
		}],
		"insertText": "YDWETimerDestroyEffect(time, e)",
		"documentation": "计时器系统-删除特效[YDWE]"
	},
	"YDWETimerDestroyLightning": {
		"original": "function YDWETimerDestroyLightning takes real time, lightning lt returns nothing",
		"fileName": "YDWETimerSystem.j",
		"name": "YDWETimerDestroyLightning",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "lightning",
			"name": "lt"
		}],
		"insertText": "YDWETimerDestroyLightning(time, lt)",
		"documentation": "计时器系统-删除闪电效果[YDWE]"
	},
	"YDWETimerRunTrigger": {
		"original": "function YDWETimerRunTrigger takes real time, trigger trg returns nothing",
		"fileName": "YDWETimerSystem.j",
		"name": "YDWETimerRunTrigger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "trigger",
			"name": "trg"
		}],
		"insertText": "YDWETimerRunTrigger(time, trg)",
		"documentation": "计时器系统-运行触发器"
	},
	"YDWETimerDestroyTextTag": {
		"original": "function YDWETimerDestroyTextTag takes real time, texttag tt returns nothing",
		"fileName": "YDWETimerSystem.j",
		"name": "YDWETimerDestroyTextTag",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "time"
		}, {
			"type": "texttag",
			"name": "tt"
		}],
		"insertText": "YDWETimerDestroyTextTag(time, tt)",
		"documentation": "计时器系统-删除漂浮文字[YDWE]"
	},
	"YDWETimerSystemGetRunIndex": {
		"original": "function YDWETimerSystemGetRunIndex takes nothing returns integer",
		"fileName": "YDWETimerSystem.j",
		"name": "YDWETimerSystemGetRunIndex",
		"isConstant": false,
		"isNative": false,
		"returnType": "integer",
		"insertText": "YDWETimerSystemGetRunIndex()",
		"documentation": "计时器系统-获取中心计时器当前执行索引"
	},
	"YDWETimerRunPeriodicTrigger": {
		"original": "function YDWETimerRunPeriodicTrigger takes real timeout, trigger trg, boolean b, integer times, integer data returns nothing",
		"fileName": "YDWETimerSystem.j",
		"name": "YDWETimerRunPeriodicTrigger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "timeout"
		}, {
			"type": "trigger",
			"name": "trg"
		}, {
			"type": "boolean",
			"name": "b"
		}, {
			"type": "integer",
			"name": "times"
		}, {
			"type": "integer",
			"name": "data"
		}],
		"insertText": "YDWETimerRunPeriodicTrigger(timeout, trg, b, times, data)",
		"documentation": "计时器系统-循环运行触发器"
	},
	"YDWETimerRunPeriodicTriggerOver": {
		"original": "function YDWETimerRunPeriodicTriggerOver takes trigger trg, integer data returns nothing",
		"fileName": "YDWETimerSystem.j",
		"name": "YDWETimerRunPeriodicTriggerOver",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trg"
		}, {
			"type": "integer",
			"name": "data"
		}],
		"insertText": "YDWETimerRunPeriodicTriggerOver(trg, data)",
		"documentation": "计时器系统-终止运行触发器"
	},
	"YDWE_TP_GetElapsedTime": {
		"original": "    function YDWE_TP_GetElapsedTime takes TimerData data returns real",
		"fileName": "YDWETPNewTimerPeriodic.j",
		"name": "YDWE_TP_GetElapsedTime",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "TimerData",
			"name": "data"
		}],
		"returnType": "real",
		"insertText": "YDWE_TP_GetElapsedTime(data)",
		"documentation": "获取中心计时器逝去时间<Fetrix_sai制作>"
	},
	"YDWE_TP_GetRemainingTime": {
		"original": "    function YDWE_TP_GetRemainingTime takes TimerData data returns real",
		"fileName": "YDWETPNewTimerPeriodic.j",
		"name": "YDWE_TP_GetRemainingTime",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "TimerData",
			"name": "data"
		}],
		"returnType": "real",
		"insertText": "YDWE_TP_GetRemainingTime(data)",
		"documentation": "获取中心计时器剩余时间<Fetrix_sai制作>"
	},
	"YDWE_TP_GetTimeout": {
		"original": "    function YDWE_TP_GetTimeout takes TimerData data returns real",
		"fileName": "YDWETPNewTimerPeriodic.j",
		"name": "YDWE_TP_GetTimeout",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "TimerData",
			"name": "data"
		}],
		"returnType": "real",
		"insertText": "YDWE_TP_GetTimeout(data)",
		"documentation": "获取中心计时器刷新周期<Fetrix_sai制作>"
	},
	"YDWE_TP_PauseTimerPeriodic": {
		"original": "    function YDWE_TP_PauseTimerPeriodic takes TimerData data returns nothing",
		"fileName": "YDWETPNewTimerPeriodic.j",
		"name": "YDWE_TP_PauseTimerPeriodic",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "TimerData",
			"name": "data"
		}],
		"insertText": "YDWE_TP_PauseTimerPeriodic(data)",
		"documentation": "新中心计时器-终止运行<Fetrix_sai制作>"
	},
	"YDWE_TP_SetTimeInterval": {
		"original": "    function YDWE_TP_SetTimeInterval takes TimerData data, real interval returns nothing",
		"fileName": "YDWETPNewTimerPeriodic.j",
		"name": "YDWE_TP_SetTimeInterval",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "TimerData",
			"name": "data"
		}, {
			"type": "real",
			"name": "interval"
		}],
		"insertText": "YDWE_TP_SetTimeInterval(data, interval)",
		"documentation": "新中心计时器-修改运行间隔<Fetrix_sai制作>"
	},
	"YDWE_TP_GetExpiredTimerIndex": {
		"original": "    function YDWE_TP_GetExpiredTimerIndex takes nothing returns TimerData",
		"fileName": "YDWETPNewTimerPeriodic.j",
		"name": "YDWE_TP_GetExpiredTimerIndex",
		"isConstant": false,
		"isNative": false,
		"returnType": "TimerData",
		"insertText": "YDWE_TP_GetExpiredTimerIndex()",
		"documentation": "新中心计时器-获取当前到期计时器运行索引<Fetrix_sai制作>"
	},
	"YDWE_TP_NewTimerPeriodic": {
		"original": "    function YDWE_TP_NewTimerPeriodic takes real timeout, boolean periodic, trigger trig returns TimerData",
		"fileName": "YDWETPNewTimerPeriodic.j",
		"name": "YDWE_TP_NewTimerPeriodic",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "real",
			"name": "timeout"
		}, {
			"type": "boolean",
			"name": "periodic"
		}, {
			"type": "trigger",
			"name": "trig"
		}],
		"returnType": "TimerData",
		"insertText": "YDWE_TP_NewTimerPeriodic(timeout, periodic, trig)",
		"documentation": "新中心计时器-开启新的运行索引<Fetrix_sai制作>"
	},
	"YDWEAnyUnitDamagedTriggerAction": {
		"original": "function YDWEAnyUnitDamagedTriggerAction takes nothing returns nothing",
		"fileName": "YDWETriggerEvent.j",
		"name": "YDWEAnyUnitDamagedTriggerAction",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEAnyUnitDamagedTriggerAction()",
		"documentation": ""
	},
	"YDWEAnyUnitDamagedFilter": {
		"original": "function YDWEAnyUnitDamagedFilter takes nothing returns boolean     ",
		"fileName": "YDWETriggerEvent.j",
		"name": "YDWEAnyUnitDamagedFilter",
		"isConstant": false,
		"isNative": false,
		"returnType": "boolean",
		"insertText": "YDWEAnyUnitDamagedFilter()",
		"documentation": ""
	},
	"YDWEAnyUnitDamagedEnumUnit": {
		"original": "function YDWEAnyUnitDamagedEnumUnit takes nothing returns nothing   ",
		"fileName": "YDWETriggerEvent.j",
		"name": "YDWEAnyUnitDamagedEnumUnit",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWEAnyUnitDamagedEnumUnit()",
		"documentation": ""
	},
	"YDWESyStemAnyUnitDamagedRegistTrigger": {
		"original": "function YDWESyStemAnyUnitDamagedRegistTrigger takes trigger trg returns nothing",
		"fileName": "YDWETriggerEvent.j",
		"name": "YDWESyStemAnyUnitDamagedRegistTrigger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trg"
		}],
		"insertText": "YDWESyStemAnyUnitDamagedRegistTrigger(trg)",
		"documentation": "任意单位伤害事件"
	},
	"YDWESyStemItemUnmovableTriggerAction": {
		"original": "function YDWESyStemItemUnmovableTriggerAction takes nothing returns nothing",
		"fileName": "YDWETriggerEvent.j",
		"name": "YDWESyStemItemUnmovableTriggerAction",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWESyStemItemUnmovableTriggerAction()",
		"documentation": ""
	},
	"YDWESyStemItemUnmovableRegistTrigger": {
		"original": "function YDWESyStemItemUnmovableRegistTrigger takes trigger trg returns nothing",
		"fileName": "YDWETriggerEvent.j",
		"name": "YDWESyStemItemUnmovableRegistTrigger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "trigger",
			"name": "trg"
		}],
		"insertText": "YDWESyStemItemUnmovableRegistTrigger(trg)",
		"documentation": "任意单位移动物品事件"
	},
	"GetLastMovedItemInItemSlot": {
		"original": "function GetLastMovedItemInItemSlot takes nothing returns item",
		"fileName": "YDWETriggerEvent.j",
		"name": "GetLastMovedItemInItemSlot",
		"isConstant": false,
		"isNative": false,
		"returnType": "item",
		"insertText": "GetLastMovedItemInItemSlot()",
		"documentation": "最后在物品栏中移动的物品 [YDWE]"
	},
	"YDWE_PreloadSL_SetFile": {
		"original": "function YDWE_PreloadSL_SetFile takes player p, string dir, string value, integer n returns nothing",
		"fileName": "YDWE_PreloadSL_Manager.j",
		"name": "YDWE_PreloadSL_SetFile",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "p"
		}, {
			"type": "string",
			"name": "dir"
		}, {
			"type": "string",
			"name": "value"
		}, {
			"type": "integer",
			"name": "n"
		}],
		"insertText": "YDWE_PreloadSL_SetFile(p, dir, value, n)",
		"documentation": "设置存档索引(存档名单)"
	},
	"YDWE_PreloadSL_GetFile": {
		"original": "function YDWE_PreloadSL_GetFile takes player p, string dir, integer n returns string",
		"fileName": "YDWE_PreloadSL_Manager.j",
		"name": "YDWE_PreloadSL_GetFile",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "p"
		}, {
			"type": "string",
			"name": "dir"
		}, {
			"type": "integer",
			"name": "n"
		}],
		"returnType": "string",
		"insertText": "YDWE_PreloadSL_GetFile(p, dir, n)",
		"documentation": "获取存档名(存档名单)[YDWE]"
	},
	"YDWE_PreloadSL_Load": {
		"original": "function YDWE_PreloadSL_Load takes player p, string dir, string file, integer n returns boolean",
		"fileName": "YDWE_PreloadSL_Code.j",
		"name": "YDWE_PreloadSL_Load",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "p"
		}, {
			"type": "string",
			"name": "dir"
		}, {
			"type": "string",
			"name": "file"
		}, {
			"type": "integer",
			"name": "n"
		}],
		"returnType": "boolean",
		"insertText": "YDWE_PreloadSL_Load(p, dir, file, n)",
		"documentation": "读取玩家存档"
	},
	"YDWE_PreloadSL_Save": {
		"original": "function YDWE_PreloadSL_Save takes player p, string dir, string file, integer n returns nothing",
		"fileName": "YDWE_PreloadSL_Code.j",
		"name": "YDWE_PreloadSL_Save",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "p"
		}, {
			"type": "string",
			"name": "dir"
		}, {
			"type": "string",
			"name": "file"
		}, {
			"type": "integer",
			"name": "n"
		}],
		"insertText": "YDWE_PreloadSL_Save(p, dir, file, n)",
		"documentation": "保存玩家存档"
	},
	"YDWE_PreloadSL_Set": {
		"original": "function YDWE_PreloadSL_Set takes player p, string s, integer n, integer value returns nothing",
		"fileName": "YDWE_PreloadSL_Code.j",
		"name": "YDWE_PreloadSL_Set",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "p"
		}, {
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "n"
		}, {
			"type": "integer",
			"name": "value"
		}],
		"insertText": "YDWE_PreloadSL_Set(p, s, n, value)",
		"documentation": "添加存档数据"
	},
	"YDWE_PreloadSL_Get": {
		"original": "function YDWE_PreloadSL_Get takes player p, string s, integer n returns integer",
		"fileName": "YDWE_PreloadSL_Code.j",
		"name": "YDWE_PreloadSL_Get",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "p"
		}, {
			"type": "string",
			"name": "s"
		}, {
			"type": "integer",
			"name": "n"
		}],
		"returnType": "integer",
		"insertText": "YDWE_PreloadSL_Get(p, s, n)",
		"documentation": "获取存档数据"
	},
	"YDWE_PreloadSL_GetMask": {
		"original": "function YDWE_PreloadSL_GetMask takes player p returns integer",
		"fileName": "YDWE_PreloadSL_Code.j",
		"name": "YDWE_PreloadSL_GetMask",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "p"
		}],
		"returnType": "integer",
		"insertText": "YDWE_PreloadSL_GetMask(p)",
		"documentation": ""
	},
	"YDWE_PreloadSL_Unmove": {
		"original": "function YDWE_PreloadSL_Unmove takes integer beg, integer n, integer key returns nothing ",
		"fileName": "YDWE_PreloadSL_Code.j",
		"name": "YDWE_PreloadSL_Unmove",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "beg"
		}, {
			"type": "integer",
			"name": "n"
		}, {
			"type": "integer",
			"name": "key"
		}],
		"insertText": "YDWE_PreloadSL_Unmove(beg, n, key)",
		"documentation": ""
	},
	"YDWE_PreloadSL_GetCode": {
		"original": "function YDWE_PreloadSL_GetCode takes integer beg, integer n, integer key, integer mask returns boolean ",
		"fileName": "YDWE_PreloadSL_Code.j",
		"name": "YDWE_PreloadSL_GetCode",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "beg"
		}, {
			"type": "integer",
			"name": "n"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "mask"
		}],
		"returnType": "boolean",
		"insertText": "YDWE_PreloadSL_GetCode(beg, n, key, mask)",
		"documentation": ""
	},
	"YDWE_PreloadSL_Decode": {
		"original": "function YDWE_PreloadSL_Decode takes player p, integer n returns boolean",
		"fileName": "YDWE_PreloadSL_Code.j",
		"name": "YDWE_PreloadSL_Decode",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "p"
		}, {
			"type": "integer",
			"name": "n"
		}],
		"returnType": "boolean",
		"insertText": "YDWE_PreloadSL_Decode(p, n)",
		"documentation": ""
	},
	"YDWE_PreloadSL_SetMask": {
		"original": "function YDWE_PreloadSL_SetMask takes player p, integer mask returns nothing    ",
		"fileName": "YDWE_PreloadSL_Code.j",
		"name": "YDWE_PreloadSL_SetMask",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "p"
		}, {
			"type": "integer",
			"name": "mask"
		}],
		"insertText": "YDWE_PreloadSL_SetMask(p, mask)",
		"documentation": ""
	},
	"YDWE_PreloadSL_SetCode": {
		"original": "function YDWE_PreloadSL_SetCode takes integer beg, integer n, integer key, integer mask returns nothing ",
		"fileName": "YDWE_PreloadSL_Code.j",
		"name": "YDWE_PreloadSL_SetCode",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "beg"
		}, {
			"type": "integer",
			"name": "n"
		}, {
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "mask"
		}],
		"insertText": "YDWE_PreloadSL_SetCode(beg, n, key, mask)",
		"documentation": ""
	},
	"YDWE_PreloadSL_Move": {
		"original": "function YDWE_PreloadSL_Move takes integer beg, integer n, integer key returns nothing ",
		"fileName": "YDWE_PreloadSL_Code.j",
		"name": "YDWE_PreloadSL_Move",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "beg"
		}, {
			"type": "integer",
			"name": "n"
		}, {
			"type": "integer",
			"name": "key"
		}],
		"insertText": "YDWE_PreloadSL_Move(beg, n, key)",
		"documentation": ""
	},
	"YDWE_PreloadSL_Encode": {
		"original": "function YDWE_PreloadSL_Encode takes player p, integer n, integer mask returns nothing",
		"fileName": "YDWE_PreloadSL_Code.j",
		"name": "YDWE_PreloadSL_Encode",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "p"
		}, {
			"type": "integer",
			"name": "n"
		}, {
			"type": "integer",
			"name": "mask"
		}],
		"insertText": "YDWE_PreloadSL_Encode(p, n, mask)",
		"documentation": ""
	},
	"YDWE_PreloadSL_Sync": {
		"original": "function YDWE_PreloadSL_Sync takes player p, integer n returns nothing",
		"fileName": "YDWE_PreloadSL_Code.j",
		"name": "YDWE_PreloadSL_Sync",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "p"
		}, {
			"type": "integer",
			"name": "n"
		}],
		"insertText": "YDWE_PreloadSL_Sync(p, n)",
		"documentation": ""
	},
	"YDWE_PreloadSL_OpenDir": {
		"original": "function YDWE_PreloadSL_OpenDir takes string dir returns nothing ",
		"fileName": "YDWE_PreloadSL_Manager.j",
		"name": "YDWE_PreloadSL_OpenDir",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "dir"
		}],
		"insertText": "YDWE_PreloadSL_OpenDir(dir)",
		"documentation": ""
	},
	"YDWE_PreloadSL_CloseDir": {
		"original": "function YDWE_PreloadSL_CloseDir takes string dir returns nothing",
		"fileName": "YDWE_PreloadSL_Manager.j",
		"name": "YDWE_PreloadSL_CloseDir",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "string",
			"name": "dir"
		}],
		"insertText": "YDWE_PreloadSL_CloseDir(dir)",
		"documentation": ""
	},
	"YDWE_PreloadSL_ListFile": {
		"original": "function YDWE_PreloadSL_ListFile takes nothing returns nothing",
		"fileName": "YDWE_PreloadSL_Manager.j",
		"name": "YDWE_PreloadSL_ListFile",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWE_PreloadSL_ListFile()",
		"documentation": ""
	},
	"YDWE_PreloadSL_SaveInteger": {
		"original": "function YDWE_PreloadSL_SaveInteger takes integer key, integer value returns nothing",
		"fileName": "YDWE_PreloadSL_Pre.j",
		"name": "YDWE_PreloadSL_SaveInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}, {
			"type": "integer",
			"name": "value"
		}],
		"insertText": "YDWE_PreloadSL_SaveInteger(key, value)",
		"documentation": ""
	},
	"YDWE_PreloadSL_LoadInteger": {
		"original": "function YDWE_PreloadSL_LoadInteger takes integer key returns integer",
		"fileName": "YDWE_PreloadSL_Pre.j",
		"name": "YDWE_PreloadSL_LoadInteger",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "integer",
			"name": "key"
		}],
		"returnType": "integer",
		"insertText": "YDWE_PreloadSL_LoadInteger(key)",
		"documentation": ""
	},
	"YDWE_PreloadSL_LoadPreFile": {
		"original": "function YDWE_PreloadSL_LoadPreFile takes player p, integer n, string strFilePath returns nothing",
		"fileName": "YDWE_PreloadSL_Pre.j",
		"name": "YDWE_PreloadSL_LoadPreFile",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "p"
		}, {
			"type": "integer",
			"name": "n"
		}, {
			"type": "string",
			"name": "strFilePath"
		}],
		"insertText": "YDWE_PreloadSL_LoadPreFile(p, n, strFilePath)",
		"documentation": ""
	},
	"YDWE_PreloadSL_SavePreFile": {
		"original": "function YDWE_PreloadSL_SavePreFile takes player p, integer n, string strFilePath returns nothing",
		"fileName": "YDWE_PreloadSL_Pre.j",
		"name": "YDWE_PreloadSL_SavePreFile",
		"isConstant": false,
		"isNative": false,
		"args": [{
			"type": "player",
			"name": "p"
		}, {
			"type": "integer",
			"name": "n"
		}, {
			"type": "string",
			"name": "strFilePath"
		}],
		"insertText": "YDWE_PreloadSL_SavePreFile(p, n, strFilePath)",
		"documentation": ""
	},
	"YDWE_PreloadSL_DataFile": {
		"original": "function YDWE_PreloadSL_DataFile takes nothing returns nothing",
		"fileName": "YDWE_PreloadSL_Pre.j",
		"name": "YDWE_PreloadSL_DataFile",
		"isConstant": false,
		"isNative": false,
		"insertText": "YDWE_PreloadSL_DataFile()",
		"documentation": ""
	}
}